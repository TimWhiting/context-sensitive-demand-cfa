#lang racket/base
(require "demand.rkt" "simple-examples.rkt" racket/match)

(define (hash-num-keys h) (foldl (lambda (_ acc) (add1 acc)) 0 (hash-keys h)))

(module+ main
  (require racket/pretty)
  (let ([basic-cost 0][hybrid-cost 0])
    (for ([exp all-simple-examples])
      (displayln "")
      (displayln "")
      (pretty-display "Using expression: ")
      (pretty-print exp)
      (displayln "")
      ; TODO: Is it okay for the continuations to escape and be reused later?
      (for ([q (gen-queries (cons `(top) exp) (list))])
        (let ([h1 (hash)]
              [h2 (hash)])
          (match-let ([(list c p) q])
            (define evalq (eval c p))
            (pretty-display "Running query ")
            (pretty-print q)

            (demand-kind 'basic)
            (set! h1 (run-get-hash evalq h1))
            (set! basic-cost (+ basic-cost (hash-num-keys h1)))
            ; (pretty-result (from-hash evalq h1))

            (demand-kind 'hybrid)
            (set! h2 (run-get-hash evalq h2))
            (set! hybrid-cost (+ hybrid-cost (hash-num-keys h2)))
            (pretty-result (from-hash evalq h2))
            ; (pretty-print h2)
            (if (equal? (from-hash evalq h1) (from-hash evalq h2))
                '() ; (pretty-print "Results match")
                (begin
                  (pretty-print "ERROR: Hybrid and Basic results differ")
                  (displayln "")
                  (pretty-display "Basic result: ")
                  (pretty-print (from-hash evalq h1))
                  (displayln "")
                  (pretty-display "Hybrid result: ")
                  (pretty-print (from-hash evalq h2))
                  (displayln "")
                  )
                )
            )
          )
        )
      )
    (pretty-print `(basic-cost ,basic-cost))
    (pretty-print `(hybrid-cost ,hybrid-cost))
    )
  )