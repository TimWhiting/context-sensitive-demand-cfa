"app-num", 0, "(list 'eval '(top) (menv '()))", 12, 0.11499999999978172
"app-num", 0, "(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))", 1, 0.010000000000218279
"app-num", 0, "(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))", 7, 0.05900000000019645
"app-num", 0, "(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))", 11, 0.09400000000005093
"app-num", 0, "(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))", 10, 0.09899999999970532
"app-num", 0, "(list 'eval '(app x (-> 1 <-)) (menv '()))", 1, 0.008000000000265572
"app-num", 0, "(list 'eval '(app (-> x <-) 1) (menv '()))", 2, 0.022000000000389264
"app-num", 0, "(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))", 10, 0.09400000000005093
"app-num", 0, "(list 'eval '(app x (-> 2 <-)) (menv '()))", 1, 0.01099999999951251
"app-num", 0, "(list 'eval '(app (-> x <-) 2) (menv '()))", 2, 0.03000000000020009
"constr", 0, "(list 'eval '(top) (menv '()))", 9, 0.09900000000016007
"constr", 0, "(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))", 2, 0.018000000000029104
"constr", 0, "(list 'eval '(app cons 1 (-> nil <-)) (menv '()))", 1, 0.013000000000374712
"constr", 0, "(list 'eval '(app cons (-> 1 <-) nil) (menv '()))", 1, 0.011000000000422006
"constr", 0, "(list 'eval '(app (-> cons <-) 1 nil) (menv '()))", 1, 0.014000000000123691
"constr", 0, "(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))", 8, 0.08799999999973807
"constr", 0, "(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))", 3, 0.028999999999541615
"constr", 0, "(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))", 6, 0.04800000000022919
"constr", 0, "(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))", 3, 0.02500000000009095
"err", 0, "(list 'eval '(top) (menv '()))", 7, 0.047000000000025466
"err", 0, "(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))", 1, 0.006999999999607098
"err", 0, "(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))", 1, 0.007999999999810825
"err", 0, "(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))", 5, 0.0340000000001055
"err", 0, "(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))", 4, 0.02500000000009095
"err", 0, "(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))", 4, 0.023999999999887223
"id", 0, "(list 'eval '(top) (menv '()))", 6, 0.0409999999997126
"id", 0, "(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))", 1, 0.011000000000422006
"id", 0, "(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))", 8, 0.037000000000261934
"id", 0, "(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))", 1, 0.01099999999951251
"id", 0, "(list 'eval '(λ (x) (-> x <-)) (menv '((□? (x)))))", 4, 0.027000000000043656
"let-num", 0, "(list 'eval '(top) (menv '()))", 9, 0.058999999999741704
"let-num", 0, "(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))", 1, 0.010000000000218279
"let-num", 0, "(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))", 5, 0.0340000000001055
"let-num", 0, "(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))", 8, 0.04999999999972715
"let-num", 0, "(list 'eval '(app x (-> 1 <-)) (menv '()))", 1, 0.009999999999763531
"let-num", 0, "(list 'eval '(app (-> x <-) 1) (menv '()))", 2, 0.01599999999962165
"let", 0, "(list 'eval '(top) (menv '()))", 3, 0.022000000000389264
"let", 0, "(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))", 1, 0.008000000000265572
"let", 0, "(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))", 5, 0.023999999999887223
"let", 0, "(list 'eval '(let (x) (-> x <-)) (menv '()))", 2, 0.013999999999668944
"multi-param", 0, "(list 'eval '(top) (menv '()))", 13, 0.1319999999996071
"multi-param", 0, "(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))", 1, 0.007000000000061846
"multi-param", 0, "(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))", 1, 0.009000000000014552
"multi-param", 0, "(list 'eval '(λ (z) (-> z <-)) (menv '((□? (z)))))", 9, 0.06399999999985084
"multi-param", 0, "(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))", 1, 0.009000000000014552
"multi-param", 0, "(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '((□? (x y)))))", 12, 0.08799999999973807
"multi-param", 0, "(list 'eval '(app x (-> y <-)) (menv '((□? (x y)))))", 4, 0.02599999999983993
"multi-param", 0, "(list 'eval '(app (-> x <-) y) (menv '((□? (x y)))))", 4, 0.02599999999983993
"ack", 0, "(list 'eval '(top) (menv '()))", 46, 1.2010000000000218
"ack", 0, "(list
 'eval
 '(let ((->
         ack
         =
         (λ (m n)
           (match
            (app = m 0)
            (#t (app + n 1))
            (#f
             (match
              (app = n 0)
              (#t (app ack (app - m 1) 1))
              (#f (app ack (app - m 1) (app ack m (app - n 1))))))))
         <-))
    bod)
 (menv '()))", 1, 0.018000000000029104
"ack", 0, "(list
 'eval
 '(λ (m n)
    (->
     (match
      (app = m 0)
      (#t (app + n 1))
      (#f
       (match
        (app = n 0)
        (#t (app ack (app - m 1) 1))
        (#f (app ack (app - m 1) (app ack m (app - n 1)))))))
     <-))
 (menv '((□? (m n)))))", 43, 1.1419999999998254
"ack", 0, "(list
 'eval
 '(match
   (app = m 0)
   (#t (app + n 1))
   (->
    #f
    (match
     (app = n 0)
     (#t (app ack (app - m 1) 1))
     (#f (app ack (app - m 1) (app ack m (app - n 1)))))
    <-))
 (menv '((□? (m n)))))", 43, 1.680000000000291
"ack", 0, "(list
 'eval
 '(match
   (app = n 0)
   (#t (app ack (app - m 1) 1))
   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-))
 (menv '((□? (m n)))))", 43, 1.1269999999999527
"ack", 0, "(list
 'eval
 '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))
 (menv '((□? (m n)))))", 43, 1.194999999999709
"ack", 0, "(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '((□? (m n)))))", 43, 1.0779999999999745
"ack", 0, "(list 'eval '(app - n (-> 1 <-)) (menv '((□? (m n)))))", 2, 0.021999999999934516
"ack", 0, "(list 'eval '(app - (-> n <-) 1) (menv '((□? (m n)))))", 43, 1.3589999999999236
"ack", 0, "(list 'eval '(app (-> - <-) n 1) (menv '((□? (m n)))))", 2, 0.01999999999998181
"ack", 0, "(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '((□? (m n)))))", 16, 0.41600000000016735
"ack", 0, "(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '((□? (m n)))))", 3, 0.03500000000030923
"ack", 0, "(list
 'eval
 '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))
 (menv '((□? (m n)))))", 16, 0.4110000000000582
"ack", 0, "(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))", 2, 0.01900000000023283
"ack", 0, "(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))", 16, 0.41800000000012005
"ack", 0, "(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))", 2, 0.01999999999998181
"ack", 0, "(list
 'eval
 '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))
 (menv '((□? (m n)))))", 3, 0.032999999999901775
"ack", 0, "(list
 'eval
 '(match
   (app = n 0)
   (-> #t (app ack (app - m 1) 1) <-)
   (#f (app ack (app - m 1) (app ack m (app - n 1)))))
 (menv '((□? (m n)))))", 43, 1.1769999999996799
"ack", 0, "(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '((□? (m n)))))", 2, 0.018000000000029104
"ack", 0, "(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '((□? (m n)))))", 16, 0.4339999999997417
"ack", 0, "(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))", 2, 0.01499999999987267
"ack", 0, "(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))", 16, 0.4519999999997708
"ack", 0, "(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))", 2, 0.02099999999973079
"ack", 0, "(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '((□? (m n)))))", 3, 0.06900000000041473
"ack", 0, "(list
 'eval
 '(match
   (-> (app = n 0) <-)
   (#t (app ack (app - m 1) 1))
   (#f (app ack (app - m 1) (app ack m (app - n 1)))))
 (menv '((□? (m n)))))", 43, 1.1230000000000473
"ack", 0, "(list 'eval '(app = n (-> 0 <-)) (menv '((□? (m n)))))", 2, 0.016000000000076398
"ack", 0, "(list 'eval '(app = (-> n <-) 0) (menv '((□? (m n)))))", 43, 1.1210000000000946
"ack", 0, "(list 'eval '(app (-> = <-) n 0) (menv '((□? (m n)))))", 2, 0.01999999999998181
"ack", 0, "(list
 'eval
 '(match
   (app = m 0)
   (-> #t (app + n 1) <-)
   (#f
    (match
     (app = n 0)
     (#t (app ack (app - m 1) 1))
     (#f (app ack (app - m 1) (app ack m (app - n 1)))))))
 (menv '((□? (m n)))))", 43, 1.168999999999869
"ack", 0, "(list 'eval '(app + n (-> 1 <-)) (menv '((□? (m n)))))", 2, 0.015000000000327418
"ack", 0, "(list 'eval '(app + (-> n <-) 1) (menv '((□? (m n)))))", 43, 1.0740000000000691
"ack", 0, "(list 'eval '(app (-> + <-) n 1) (menv '((□? (m n)))))", 2, 0.018000000000029104
"ack", 0, "(list
 'eval
 '(match
   (-> (app = m 0) <-)
   (#t (app + n 1))
   (#f
    (match
     (app = n 0)
     (#t (app ack (app - m 1) 1))
     (#f (app ack (app - m 1) (app ack m (app - n 1)))))))
 (menv '((□? (m n)))))", 20, 0.54300000000012
"ack", 0, "(list 'eval '(app = m (-> 0 <-)) (menv '((□? (m n)))))", 2, 0.016000000000076398
"ack", 0, "(list 'eval '(app = (-> m <-) 0) (menv '((□? (m n)))))", 17, 0.47000000000025466
"ack", 0, "(list 'eval '(app (-> = <-) m 0) (menv '((□? (m n)))))", 2, 0.018000000000029104
"ack", 0, "(list 'eval '(let (ack) (-> (app ack 3 12) <-)) (menv '()))", 45, 1.2439999999996871
"ack", 0, "(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))", 1, 0.01499999999987267
"ack", 0, "(list 'eval '(app ack (-> 3 <-) 12) (menv '()))", 1, 0.011999999999716238
"ack", 0, "(list 'eval '(app (-> ack <-) 3 12) (menv '()))", 2, 0.03600000000005821
"kcfa-2", 0, "(list 'eval '(top) (menv '()))", 35, 0.581000000000131
"kcfa-2", 0, "(list
 'eval
 '(app
   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))
   (->
    (λ (x1)
      (app
       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))
    <-))
 (menv '()))", 1, 0.016999999999825377
"kcfa-2", 0, "(list
 'eval
 '(λ (x1)
    (->
     (app
      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
     <-))
 (menv '((□? (x1)))))", 29, 0.4410000000002583
"kcfa-2", 0, "(list
 'eval
 '(app
   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))
 (menv '((□? (x1)))))", 2, 0.018000000000029104
"kcfa-2", 0, "(list
 'eval
 '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
 (menv '((□? (x2)) (□? (x1)))))", 21, 0.3289999999997235
"kcfa-2", 0, "(list
 'eval
 '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
 (menv '((□? (x2)) (□? (x1)))))", 3, 0.01999999999998181
"kcfa-2", 0, "(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))", 16, 0.1999999999998181
"kcfa-2", 0, "(list
 'eval
 '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
 (menv '((□? (x2)) (□? (x1)))))", 3, 0.018000000000029104
"kcfa-2", 0, "(list
 'eval
 '(λ (z) (-> (app z x1 x2) <-))
 (menv '((□? (z)) (□? (x2)) (□? (x1)))))", 20, 0.2660000000000764
"kcfa-2", 0, "(list 'eval '(app z x1 (-> x2 <-)) (menv '((□? (z)) (□? (x2)) (□? (x1)))))", 11, 0.12599999999974898
"kcfa-2", 0, "(list 'eval '(app z (-> x1 <-) x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))", 11, 0.11200000000008004
"kcfa-2", 0, "(list 'eval '(app (-> z <-) x1 x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))", 6, 0.0500000000001819
"kcfa-2", 0, "(list
 'eval
 '(app
   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)
   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
 (menv '((□? (x1)))))", 2, 0.01900000000023283
"kcfa-2", 0, "(list
 'eval
 '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))
 (menv '((□? (f2)) (□? (x1)))))", 27, 0.3580000000001746
"kcfa-2", 0, "(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '((□? (f2)) (□? (x1)))))", 26, 0.32999999999992724
"kcfa-2", 0, "(list 'eval '(app f2 (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))", 3, 0.017000000000280124
"kcfa-2", 0, "(list 'eval '(app (-> f2 <-) #t) (menv '((□? (f2)) (□? (x1)))))", 5, 0.04400000000032378
"kcfa-2", 0, "(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '((□? (f2)) (□? (x1)))))", 26, 0.40200000000004366
"kcfa-2", 0, "(list 'eval '(app f2 (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))", 3, 0.016000000000076398
"kcfa-2", 0, "(list 'eval '(app (-> f2 <-) #f) (menv '((□? (f2)) (□? (x1)))))", 5, 0.046000000000276486
"kcfa-2", 0, "(list
 'eval
 '(app
   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)
   (λ (x1)
     (app
      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))
 (menv '()))", 1, 0.012999999999919964
"kcfa-2", 0, "(list
 'eval
 '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-))
 (menv '((□? (f1)))))", 34, 0.4830000000001746
"kcfa-2", 0, "(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '((□? (f1)))))", 33, 0.4299999999998363
"kcfa-2", 0, "(list 'eval '(app f1 (-> #t <-)) (menv '((□? (f1)))))", 2, 0.01900000000023283
"kcfa-2", 0, "(list 'eval '(app (-> f1 <-) #t) (menv '((□? (f1)))))", 4, 0.041999999999916326
"kcfa-2", 0, "(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '((□? (f1)))))", 33, 0.45299999999997453
"kcfa-2", 0, "(list 'eval '(app f1 (-> #f <-)) (menv '((□? (f1)))))", 2, 0.015000000000327418
"kcfa-2", 0, "(list 'eval '(app (-> f1 <-) #f) (menv '((□? (f1)))))", 4, 0.03900000000021464
"structural-rec", 0, "(list 'eval '(top) (menv '()))", 17, 0.18200000000024374
"structural-rec", 0, "(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))", 1, 0.007999999999810825
"structural-rec", 0, "(list 'eval '(λ (y) (-> (app y y) <-)) (menv '((□? (y)))))", 15, 0.15000000000009095
"structural-rec", 0, "(list 'eval '(app y (-> y <-)) (menv '((□? (y)))))", 14, 0.13400000000001455
"structural-rec", 0, "(list 'eval '(app (-> y <-) y) (menv '((□? (y)))))", 14, 0.13599999999996726
"structural-rec", 0, "(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))", 1, 0.007999999999810825
"structural-rec", 0, "(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))", 16, 0.15300000000024738
"structural-rec", 0, "(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))", 4, 0.023000000000138243
"structural-rec", 0, "(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))", 4, 0.021999999999934516
"app-num", 1, "(list 'eval '(top) (menv '()))", 10, 0.08100000000013097
"app-num", 1, "(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))", 1, 0.009000000000014552
"app-num", 1, "(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))", 9, 0.11200000000008004
"app-num", 1, "(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))", 9, 0.06499999999959982
"app-num", 1, "(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))", 8, 0.06399999999985084
"app-num", 1, "(list 'eval '(app x (-> 1 <-)) (menv '()))", 1, 0.005999999999858119
"app-num", 1, "(list 'eval '(app (-> x <-) 1) (menv '()))", 2, 0.018000000000029104
"app-num", 1, "(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))", 8, 0.07000000000016371
"app-num", 1, "(list 'eval '(app x (-> 2 <-)) (menv '()))", 1, 0.006999999999607098
"app-num", 1, "(list 'eval '(app (-> x <-) 2) (menv '()))", 2, 0.021999999999934516
"constr", 1, "(list 'eval '(top) (menv '()))", 9, 0.08800000000019281
"constr", 1, "(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))", 2, 0.016999999999825377
"constr", 1, "(list 'eval '(app cons 1 (-> nil <-)) (menv '()))", 1, 0.011999999999716238
"constr", 1, "(list 'eval '(app cons (-> 1 <-) nil) (menv '()))", 1, 0.047000000000025466
"constr", 1, "(list 'eval '(app (-> cons <-) 1 nil) (menv '()))", 1, 0.012999999999919964
"constr", 1, "(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))", 8, 0.07600000000002183
"constr", 1, "(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))", 3, 0.032000000000152795
"constr", 1, "(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))", 6, 0.057999999999992724
"constr", 1, "(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))", 3, 0.024999999999636202
"err", 1, "(list 'eval '(top) (menv '()))", 6, 0.0500000000001819
"err", 1, "(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))", 1, 0.007000000000061846
"err", 1, "(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))", 1, 0.009000000000014552
"err", 1, "(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))", 7, 0.068000000000211
"err", 1, "(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))", 5, 0.05600000000004002
"err", 1, "(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))", 5, 0.04100000000016735
"id", 1, "(list 'eval '(top) (menv '()))", 5, 0.041999999999916326
"id", 1, "(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))", 1, 0.010000000000218279
"id", 1, "(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))", 7, 0.03600000000005821
"id", 1, "(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))", 1, 0.009999999999763531
"id", 1, "(list 'eval '(λ (x) (-> x <-)) (menv '((□? (x)))))", 5, 0.052000000000134605
"let-num", 1, "(list 'eval '(top) (menv '()))", 8, 0.068000000000211
"let-num", 1, "(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))", 1, 0.016000000000076398
"let-num", 1, "(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))", 6, 0.05600000000004002
"let-num", 1, "(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))", 7, 0.052999999999883585
"let-num", 1, "(list 'eval '(app x (-> 1 <-)) (menv '()))", 1, 0.037000000000261934
"let-num", 1, "(list 'eval '(app (-> x <-) 1) (menv '()))", 2, 0.01499999999987267
"let", 1, "(list 'eval '(top) (menv '()))", 3, 0.023999999999887223
"let", 1, "(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))", 1, 0.07399999999961437
"let", 1, "(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))", 5, 0.02500000000009095
"let", 1, "(list 'eval '(let (x) (-> x <-)) (menv '()))", 2, 0.01499999999987267
"multi-param", 1, "(list 'eval '(top) (menv '()))", 11, 0.15100000000029468
"multi-param", 1, "(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))", 1, 0.011000000000422006
"multi-param", 1, "(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))", 1, 0.010000000000218279
"multi-param", 1, "(list 'eval '(λ (z) (-> z <-)) (menv '((□? (z)))))", 9, 0.08499999999958163
"multi-param", 1, "(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))", 1, 0.01499999999987267
"multi-param", 1, "(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '((□? (x y)))))", 13, 0.1910000000002583
"multi-param", 1, "(list 'eval '(app x (-> y <-)) (menv '((□? (x y)))))", 5, 0.04999999999972715
"multi-param", 1, "(list 'eval '(app (-> x <-) y) (menv '((□? (x y)))))", 5, 0.0749999999998181
"ack", 1, "(list 'eval '(top) (menv '()))", 176, 6.6020000000003165
"ack", 1, "(list
 'eval
 '(let ((->
         ack
         =
         (λ (m n)
           (match
            (app = m 0)
            (#t (app + n 1))
            (#f
             (match
              (app = n 0)
              (#t (app ack (app - m 1) 1))
              (#f (app ack (app - m 1) (app ack m (app - n 1))))))))
         <-))
    bod)
 (menv '()))", 1, 0.02599999999983993
"ack", 1, "(list
 'eval
 '(λ (m n)
    (->
     (match
      (app = m 0)
      (#t (app + n 1))
      (#f
       (match
        (app = n 0)
        (#t (app ack (app - m 1) 1))
        (#f (app ack (app - m 1) (app ack m (app - n 1)))))))
     <-))
 (menv '((□? (m n)))))", 191, 8.702999999999975
"ack", 1, "(list
 'eval
 '(match
   (app = m 0)
   (#t (app + n 1))
   (->
    #f
    (match
     (app = n 0)
     (#t (app ack (app - m 1) 1))
     (#f (app ack (app - m 1) (app ack m (app - n 1)))))
    <-))
 (menv '((□? (m n)))))", 173, 7.221000000000458
"ack", 1, "(list
 'eval
 '(match
   (app = n 0)
   (#t (app ack (app - m 1) 1))
   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-))
 (menv '((□? (m n)))))", 159, 6.976999999999862
"ack", 1, "(list
 'eval
 '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))
 (menv '((□? (m n)))))", 155, 6.360999999999876
"ack", 1, "(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '((□? (m n)))))", 155, 6.063000000000102
"ack", 1, "(list 'eval '(app - n (-> 1 <-)) (menv '((□? (m n)))))", 2, 0.023000000000138243
"ack", 1, "(list 'eval '(app - (-> n <-) 1) (menv '((□? (m n)))))", 155, 6.187000000000353
"ack", 1, "(list 'eval '(app (-> - <-) n 1) (menv '((□? (m n)))))", 2, 0.028999999999996362
"ack", 1, "(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '((□? (m n)))))", 64, 2.668999999999869
"ack", 1, "(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '((□? (m n)))))", 3, 0.0430000000005748
"ack", 1, "(list
 'eval
 '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))
 (menv '((□? (m n)))))", 64, 2.757999999999811
"ack", 1, "(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))", 2, 0.019999999999527063
"ack", 1, "(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))", 64, 2.76299999999992
"ack", 1, "(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))", 2, 0.028000000000247383
"ack", 1, "(list
 'eval
 '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))
 (menv '((□? (m n)))))", 3, 0.030000000000654836
"ack", 1, "(list
 'eval
 '(match
   (app = n 0)
   (-> #t (app ack (app - m 1) 1) <-)
   (#f (app ack (app - m 1) (app ack m (app - n 1)))))
 (menv '((□? (m n)))))", 159, 6.453000000000429
"ack", 1, "(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '((□? (m n)))))", 2, 0.024999999999636202
"ack", 1, "(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '((□? (m n)))))", 64, 3.0090000000000146
"ack", 1, "(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))", 2, 0.02299999999922875
"ack", 1, "(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))", 64, 2.786000000000058
"ack", 1, "(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))", 2, 0.032000000000152795
"ack", 1, "(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '((□? (m n)))))", 3, 0.03099999999994907
"ack", 1, "(list
 'eval
 '(match
   (-> (app = n 0) <-)
   (#t (app ack (app - m 1) 1))
   (#f (app ack (app - m 1) (app ack m (app - n 1)))))
 (menv '((□? (m n)))))", 163, 6.689000000000306
"ack", 1, "(list 'eval '(app = n (-> 0 <-)) (menv '((□? (m n)))))", 2, 0.025000000000545697
"ack", 1, "(list 'eval '(app = (-> n <-) 0) (menv '((□? (m n)))))", 157, 6.462999999999738
"ack", 1, "(list 'eval '(app (-> = <-) n 0) (menv '((□? (m n)))))", 2, 0.033999999999650754
"ack", 1, "(list
 'eval
 '(match
   (app = m 0)
   (-> #t (app + n 1) <-)
   (#f
    (match
     (app = n 0)
     (#t (app ack (app - m 1) 1))
     (#f (app ack (app - m 1) (app ack m (app - n 1)))))))
 (menv '((□? (m n)))))", 163, 6.902999999999338
"ack", 1, "(list 'eval '(app + n (-> 1 <-)) (menv '((□? (m n)))))", 2, 0.02099999999973079
"ack", 1, "(list 'eval '(app + (-> n <-) 1) (menv '((□? (m n)))))", 157, 6.337000000000444
"ack", 1, "(list 'eval '(app (-> + <-) n 1) (menv '((□? (m n)))))", 2, 0.02900000000045111
"ack", 1, "(list
 'eval
 '(match
   (-> (app = m 0) <-)
   (#t (app + n 1))
   (#f
    (match
     (app = n 0)
     (#t (app ack (app - m 1) 1))
     (#f (app ack (app - m 1) (app ack m (app - n 1)))))))
 (menv '((□? (m n)))))", 84, 3.7030000000004293
"ack", 1, "(list 'eval '(app = m (-> 0 <-)) (menv '((□? (m n)))))", 2, 0.025000000000545697
"ack", 1, "(list 'eval '(app = (-> m <-) 0) (menv '((□? (m n)))))", 69, 3.5559999999995853
"ack", 1, "(list 'eval '(app (-> = <-) m 0) (menv '((□? (m n)))))", 2, 0.028999999999541615
"ack", 1, "(list 'eval '(let (ack) (-> (app ack 3 12) <-)) (menv '()))", 175, 6.970000000000255
"ack", 1, "(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))", 1, 0.018000000000029104
"ack", 1, "(list 'eval '(app ack (-> 3 <-) 12) (menv '()))", 1, 0.010000000000218279
"ack", 1, "(list 'eval '(app (-> ack <-) 3 12) (menv '()))", 2, 0.028999999999541615
"kcfa-2", 1, "(list 'eval '(top) (menv '()))", 28, 0.5489999999999782
"kcfa-2", 1, "(list
 'eval
 '(app
   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))
   (->
    (λ (x1)
      (app
       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))
    <-))
 (menv '()))", 1, 0.01900000000023283
"kcfa-2", 1, "(list
 'eval
 '(λ (x1)
    (->
     (app
      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
     <-))
 (menv '((□? (x1)))))", 58, 2.520999999999731
"kcfa-2", 1, "(list
 'eval
 '(app
   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))
 (menv '((□? (x1)))))", 2, 0.021999999999934516
"kcfa-2", 1, "(list
 'eval
 '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
 (menv '((□? (x2)) (□? (x1)))))", 40, 1.5929999999998472
"kcfa-2", 1, "(list
 'eval
 '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
 (menv '((□? (x2)) (□? (x1)))))", 3, 0.02299999999922875
"kcfa-2", 1, "(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))", 31, 0.9909999999999854
"kcfa-2", 1, "(list
 'eval
 '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
 (menv '((□? (x2)) (□? (x1)))))", 3, 0.02599999999983993
"kcfa-2", 1, "(list
 'eval
 '(λ (z) (-> (app z x1 x2) <-))
 (menv '((□? (z)) (□? (x2)) (□? (x1)))))", 46, 1.8670000000001892
"kcfa-2", 1, "(list 'eval '(app z x1 (-> x2 <-)) (menv '((□? (z)) (□? (x2)) (□? (x1)))))", 14, 0.24399999999968713
"kcfa-2", 1, "(list 'eval '(app z (-> x1 <-) x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))", 16, 0.2430000000003929
"kcfa-2", 1, "(list 'eval '(app (-> z <-) x1 x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))", 7, 0.2029999999995198
"kcfa-2", 1, "(list
 'eval
 '(app
   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)
   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
 (menv '((□? (x1)))))", 2, 0.02400000000034197
"kcfa-2", 1, "(list
 'eval
 '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))
 (menv '((□? (f2)) (□? (x1)))))", 64, 3.503000000000611
"kcfa-2", 1, "(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '((□? (f2)) (□? (x1)))))", 58, 3.41399999999976
"kcfa-2", 1, "(list 'eval '(app f2 (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))", 3, 0.02599999999983993
"kcfa-2", 1, "(list 'eval '(app (-> f2 <-) #t) (menv '((□? (f2)) (□? (x1)))))", 6, 0.08799999999973807
"kcfa-2", 1, "(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '((□? (f2)) (□? (x1)))))", 58, 3.0869999999995343
"kcfa-2", 1, "(list 'eval '(app f2 (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))", 3, 0.027000000000043656
"kcfa-2", 1, "(list 'eval '(app (-> f2 <-) #f) (menv '((□? (f2)) (□? (x1)))))", 6, 0.08500000000003638
"kcfa-2", 1, "(list
 'eval
 '(app
   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)
   (λ (x1)
     (app
      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))
 (menv '()))", 1, 0.014000000000123691
"kcfa-2", 1, "(list
 'eval
 '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-))
 (menv '((□? (f1)))))", 31, 0.5889999999999418
"kcfa-2", 1, "(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '((□? (f1)))))", 29, 0.5739999999996144
"kcfa-2", 1, "(list 'eval '(app f1 (-> #t <-)) (menv '((□? (f1)))))", 2, 0.023000000000138243
"kcfa-2", 1, "(list 'eval '(app (-> f1 <-) #t) (menv '((□? (f1)))))", 5, 0.07700000000022555
"kcfa-2", 1, "(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '((□? (f1)))))", 29, 0.543999999999869
"kcfa-2", 1, "(list 'eval '(app f1 (-> #f <-)) (menv '((□? (f1)))))", 2, 0.02099999999973079
"kcfa-2", 1, "(list 'eval '(app (-> f1 <-) #f) (menv '((□? (f1)))))", 5, 0.07100000000082218
"structural-rec", 1, "(list 'eval '(top) (menv '()))", 20, 0.2510000000002037
"structural-rec", 1, "(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))", 1, 0.009000000000014552
"structural-rec", 1, "(list 'eval '(λ (y) (-> (app y y) <-)) (menv '((□? (y)))))", 21, 0.27999999999974534
"structural-rec", 1, "(list 'eval '(app y (-> y <-)) (menv '((□? (y)))))", 18, 0.26299999999991996
"structural-rec", 1, "(list 'eval '(app (-> y <-) y) (menv '((□? (y)))))", 18, 0.2510000000002037
"structural-rec", 1, "(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))", 1, 0.009000000000014552
"structural-rec", 1, "(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))", 22, 0.26900000000023283
"structural-rec", 1, "(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))", 5, 0.042000000000371074
"structural-rec", 1, "(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))", 5, 0.03899999999975989
"app-num", 2, "(list 'eval '(top) (menv '()))", 10, 0.07700000000022555
"app-num", 2, "(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))", 1, 0.009000000000014552
"app-num", 2, "(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))", 9, 0.07999999999992724
"app-num", 2, "(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))", 9, 0.0749999999998181
"app-num", 2, "(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))", 8, 0.07899999999972351
"app-num", 2, "(list 'eval '(app x (-> 1 <-)) (menv '()))", 1, 0.006999999999607098
"app-num", 2, "(list 'eval '(app (-> x <-) 1) (menv '()))", 2, 0.018000000000029104
"app-num", 2, "(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))", 8, 0.06099999999969441
"app-num", 2, "(list 'eval '(app x (-> 2 <-)) (menv '()))", 1, 0.007999999999810825
"app-num", 2, "(list 'eval '(app (-> x <-) 2) (menv '()))", 2, 0.016999999999825377
"constr", 2, "(list 'eval '(top) (menv '()))", 9, 0.16300000000046566
"constr", 2, "(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))", 2, 0.01599999999962165
"constr", 2, "(list 'eval '(app cons 1 (-> nil <-)) (menv '()))", 1, 0.01099999999951251
"constr", 2, "(list 'eval '(app cons (-> 1 <-) nil) (menv '()))", 1, 0.009000000000014552
"constr", 2, "(list 'eval '(app (-> cons <-) 1 nil) (menv '()))", 1, 0.009999999999308784
"constr", 2, "(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))", 8, 0.06700000000000728
"constr", 2, "(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))", 3, 0.06199999999989814
"constr", 2, "(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))", 6, 0.03799999999955617
"constr", 2, "(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))", 3, 0.020000000000436557
"err", 2, "(list 'eval '(top) (menv '()))", 6, 0.046000000000276486
"err", 2, "(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))", 1, 0.009000000000014552
"err", 2, "(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))", 1, 0.007999999999810825
"err", 2, "(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))", 7, 0.06000000000040018
"err", 2, "(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))", 5, 0.042000000000371074
"err", 2, "(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))", 5, 0.03799999999955617
"id", 2, "(list 'eval '(top) (menv '()))", 5, 0.06900000000041473
"id", 2, "(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))", 1, 0.010000000000218279
"id", 2, "(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))", 7, 0.03600000000005821
"id", 2, "(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))", 1, 0.01099999999951251
"id", 2, "(list 'eval '(λ (x) (-> x <-)) (menv '((□? (x)))))", 5, 0.04899999999997817
"let-num", 2, "(list 'eval '(top) (menv '()))", 8, 0.06700000000000728
"let-num", 2, "(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))", 1, 0.011000000000422006
"let-num", 2, "(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))", 6, 0.052999999999883585
"let-num", 2, "(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))", 7, 0.05300000000079308
"let-num", 2, "(list 'eval '(app x (-> 1 <-)) (menv '()))", 1, 0.007999999999810825
"let-num", 2, "(list 'eval '(app (-> x <-) 1) (menv '()))", 2, 0.016999999999825377
"let", 2, "(list 'eval '(top) (menv '()))", 3, 0.021999999999934516
"let", 2, "(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))", 1, 0.007999999999810825
"let", 2, "(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))", 5, 0.023999999999432475
"let", 2, "(list 'eval '(let (x) (-> x <-)) (menv '()))", 2, 0.014000000000123691
"multi-param", 2, "(list 'eval '(top) (menv '()))", 11, 0.11700000000018917
"multi-param", 2, "(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))", 1, 0.00800000000072032
"multi-param", 2, "(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))", 1, 0.009000000000014552
"multi-param", 2, "(list 'eval '(λ (z) (-> z <-)) (menv '((□? (z)))))", 9, 0.08399999999983265
"multi-param", 2, "(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))", 1, 0.009000000000014552
"multi-param", 2, "(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '((□? (x y)))))", 15, 0.14400000000023283
"multi-param", 2, "(list 'eval '(app x (-> y <-)) (menv '((□? (x y)))))", 5, 0.04399999999986903
"multi-param", 2, "(list 'eval '(app (-> x <-) y) (menv '((□? (x y)))))", 5, 0.03800000000046566
"ack", 2, "(list 'eval '(top) (menv '()))", 38, 0.6630000000004657
"ack", 2, "(list
 'eval
 '(let ((->
         ack
         =
         (λ (m n)
           (match
            (app = m 0)
            (#t (app + n 1))
            (#f
             (match
              (app = n 0)
              (#t (app ack (app - m 1) 1))
              (#f (app ack (app - m 1) (app ack m (app - n 1))))))))
         <-))
    bod)
 (menv '()))", 1, 0.021999999999934516
"ack", 2, "(list
 'eval
 '(λ (m n)
    (->
     (match
      (app = m 0)
      (#t (app + n 1))
      (#f
       (match
        (app = n 0)
        (#t (app ack (app - m 1) 1))
        (#f (app ack (app - m 1) (app ack m (app - n 1)))))))
     <-))
 (menv '((□? (m n)))))", 638, 58.06299999999919
"ack", 2, "(list
 'eval
 '(match
   (app = m 0)
   (#t (app + n 1))
   (->
    #f
    (match
     (app = n 0)
     (#t (app ack (app - m 1) 1))
     (#f (app ack (app - m 1) (app ack m (app - n 1)))))
    <-))
 (menv '((□? (m n)))))", 620, 51.90400000000045
"ack", 2, "(list
 'eval
 '(match
   (app = n 0)
   (#t (app ack (app - m 1) 1))
   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-))
 (menv '((□? (m n)))))", 574, 44.53700000000026
"ack", 2, "(list
 'eval
 '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))
 (menv '((□? (m n)))))", 530, 38.70999999999913
"ack", 2, "(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '((□? (m n)))))", 530, 39.180999999998676
"ack", 2, "(list 'eval '(app - n (-> 1 <-)) (menv '((□? (m n)))))", 2, 0.02299999999922875
"ack", 2, "(list 'eval '(app - (-> n <-) 1) (menv '((□? (m n)))))", 530, 40.29099999999926
"ack", 2, "(list 'eval '(app (-> - <-) n 1) (menv '((□? (m n)))))", 2, 0.030000000000654836
"ack", 2, "(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '((□? (m n)))))", 211, 17.851999999998952
"ack", 2, "(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '((□? (m n)))))", 3, 0.04099999999925785
"ack", 2, "(list
 'eval
 '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))
 (menv '((□? (m n)))))", 211, 17.76599999999962
"ack", 2, "(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))", 2, 0.023000000001047738
"ack", 2, "(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))", 211, 17.945999999999913
"ack", 2, "(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))", 2, 0.02899999999863212
"ack", 2, "(list
 'eval
 '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))
 (menv '((□? (m n)))))", 3, 0.030000000000654836
"ack", 2, "(list
 'eval
 '(match
   (app = n 0)
   (-> #t (app ack (app - m 1) 1) <-)
   (#f (app ack (app - m 1) (app ack m (app - n 1)))))
 (menv '((□? (m n)))))", 574, 49.06499999999869
"ack", 2, "(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '((□? (m n)))))", 2, 0.02500000000145519
"ack", 2, "(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '((□? (m n)))))", 211, 20.528000000000247
"ack", 2, "(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))", 2, 0.023000000001047738
"ack", 2, "(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))", 211, 20.594999999999345
"ack", 2, "(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))", 2, 0.029999999998835847
"ack", 2, "(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '((□? (m n)))))", 3, 0.030999999999039574
"ack", 2, "(list
 'eval
 '(match
   (-> (app = n 0) <-)
   (#t (app ack (app - m 1) 1))
   (#f (app ack (app - m 1) (app ack m (app - n 1)))))
 (menv '((□? (m n)))))", 554, 43.80500000000029
"ack", 2, "(list 'eval '(app = n (-> 0 <-)) (menv '((□? (m n)))))", 2, 0.030999999999039574
"ack", 2, "(list 'eval '(app = (-> n <-) 0) (menv '((□? (m n)))))", 536, 52.602999999999156
"ack", 2, "(list 'eval '(app (-> = <-) n 0) (menv '((□? (m n)))))", 2, 0.027999999998428393
"ack", 2, "(list
 'eval
 '(match
   (app = m 0)
   (-> #t (app + n 1) <-)
   (#f
    (match
     (app = n 0)
     (#t (app ack (app - m 1) 1))
     (#f (app ack (app - m 1) (app ack m (app - n 1)))))))
 (menv '((□? (m n)))))", 554, 43.45299999999952
"ack", 2, "(list 'eval '(app + n (-> 1 <-)) (menv '((□? (m n)))))", 2, 0.024999999999636202
"ack", 2, "(list 'eval '(app + (-> n <-) 1) (menv '((□? (m n)))))", 536, 51.284999999999854
"ack", 2, "(list 'eval '(app (-> + <-) n 1) (menv '((□? (m n)))))", 2, 0.04200000000128057
"ack", 2, "(list
 'eval
 '(match
   (-> (app = m 0) <-)
   (#t (app + n 1))
   (#f
    (match
     (app = n 0)
     (#t (app ack (app - m 1) 1))
     (#f (app ack (app - m 1) (app ack m (app - n 1)))))))
 (menv '((□? (m n)))))", 279, 33.56999999999971
"ack", 2, "(list 'eval '(app = m (-> 0 <-)) (menv '((□? (m n)))))", 2, 0.033999999999650754
"ack", 2, "(list 'eval '(app = (-> m <-) 0) (menv '((□? (m n)))))", 228, 30.288000000000466
"ack", 2, "(list 'eval '(app (-> = <-) m 0) (menv '((□? (m n)))))", 2, 0.03499999999985448
"ack", 2, "(list 'eval '(let (ack) (-> (app ack 3 12) <-)) (menv '()))", 37, 0.7989999999990687
"ack", 2, "(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))", 1, 0.02200000000084401
"ack", 2, "(list 'eval '(app ack (-> 3 <-) 12) (menv '()))", 1, 0.014999999999417923
"ack", 2, "(list 'eval '(app (-> ack <-) 3 12) (menv '()))", 2, 0.037000000000261934
"kcfa-2", 2, "(list 'eval '(top) (menv '()))", 28, 0.5610000000015134
"kcfa-2", 2, "(list
 'eval
 '(app
   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))
   (->
    (λ (x1)
      (app
       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))
    <-))
 (menv '()))", 1, 0.02200000000084401
"kcfa-2", 2, "(list
 'eval
 '(λ (x1)
    (->
     (app
      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
     <-))
 (menv '((□? (x1)))))", 79, 3.911000000000058
"kcfa-2", 2, "(list
 'eval
 '(app
   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))
 (menv '((□? (x1)))))", 2, 0.03299999999944703
"kcfa-2", 2, "(list
 'eval
 '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
 (menv '((□? (x2)) (□? (x1)))))", 43, 2.1750000000029104
"kcfa-2", 2, "(list
 'eval
 '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
 (menv '((□? (x2)) (□? (x1)))))", 3, 0.03499999999985448
"kcfa-2", 2, "(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))", 34, 1.3770000000004075
"kcfa-2", 2, "(list
 'eval
 '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
 (menv '((□? (x2)) (□? (x1)))))", 3, 0.03600000000005821
"kcfa-2", 2, "(list
 'eval
 '(λ (z) (-> (app z x1 x2) <-))
 (menv '((□? (z)) (□? (x2)) (□? (x1)))))", 55, 3.120999999999185
"kcfa-2", 2, "(list 'eval '(app z x1 (-> x2 <-)) (menv '((□? (z)) (□? (x2)) (□? (x1)))))", 15, 0.3430000000007567
"kcfa-2", 2, "(list 'eval '(app z (-> x1 <-) x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))", 16, 0.2989999999990687
"kcfa-2", 2, "(list 'eval '(app (-> z <-) x1 x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))", 8, 0.1099999999969441
"kcfa-2", 2, "(list
 'eval
 '(app
   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)
   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
 (menv '((□? (x1)))))", 2, 0.01599999999962165
"kcfa-2", 2, "(list
 'eval
 '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))
 (menv '((□? (f2)) (□? (x1)))))", 118, 7.638999999999214
"kcfa-2", 2, "(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '((□? (f2)) (□? (x1)))))", 106, 11.298999999999069
"kcfa-2", 2, "(list 'eval '(app f2 (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))", 3, 0.031000000002677552
"kcfa-2", 2, "(list 'eval '(app (-> f2 <-) #t) (menv '((□? (f2)) (□? (x1)))))", 7, 0.11999999999898137
"kcfa-2", 2, "(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '((□? (f2)) (□? (x1)))))", 106, 6.898000000001048
"kcfa-2", 2, "(list 'eval '(app f2 (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))", 3, 0.026999999998224666
"kcfa-2", 2, "(list 'eval '(app (-> f2 <-) #f) (menv '((□? (f2)) (□? (x1)))))", 7, 0.08899999999994179
"kcfa-2", 2, "(list
 'eval
 '(app
   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)
   (λ (x1)
     (app
      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))
 (menv '()))", 1, 0.05400000000008731
"kcfa-2", 2, "(list
 'eval
 '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-))
 (menv '((□? (f1)))))", 49, 2.2010000000009313
"kcfa-2", 2, "(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '((□? (f1)))))", 47, 1.962999999999738
"kcfa-2", 2, "(list 'eval '(app f1 (-> #t <-)) (menv '((□? (f1)))))", 2, 0.02600000000165892
"kcfa-2", 2, "(list 'eval '(app (-> f1 <-) #t) (menv '((□? (f1)))))", 5, 0.07600000000093132
"kcfa-2", 2, "(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '((□? (f1)))))", 47, 2.0789999999979045
"kcfa-2", 2, "(list 'eval '(app f1 (-> #f <-)) (menv '((□? (f1)))))", 2, 0.02600000000165892
"kcfa-2", 2, "(list 'eval '(app (-> f1 <-) #f) (menv '((□? (f1)))))", 5, 0.07399999999688589
"structural-rec", 2, "(list 'eval '(top) (menv '()))", 25, 0.4029999999984284
"structural-rec", 2, "(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))", 1, 0.027000000001862645
"structural-rec", 2, "(list 'eval '(λ (y) (-> (app y y) <-)) (menv '((□? (y)))))", 29, 0.672999999998865
"structural-rec", 2, "(list 'eval '(app y (-> y <-)) (menv '((□? (y)))))", 22, 0.38799999999901047
"structural-rec", 2, "(list 'eval '(app (-> y <-) y) (menv '((□? (y)))))", 22, 0.3899999999994179
"structural-rec", 2, "(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))", 1, 0.013999999999214197
"structural-rec", 2, "(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))", 30, 0.4470000000001164
"structural-rec", 2, "(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))", 5, 0.056000000000494765
"structural-rec", 2, "(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))", 5, 0.037000000000261934
"app-num", 3, "(list 'eval '(top) (menv '()))", 10, 0.08099999999831198
"app-num", 3, "(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))", 1, 0.010000000002037268
"app-num", 3, "(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))", 9, 0.09899999999834108
"app-num", 3, "(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))", 9, 0.07200000000011642
"app-num", 3, "(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))", 8, 0.07400000000052387
"app-num", 3, "(list 'eval '(app x (-> 1 <-)) (menv '()))", 1, 0.006999999997788109
"app-num", 3, "(list 'eval '(app (-> x <-) 1) (menv '()))", 2, 0.016999999999825377
"app-num", 3, "(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))", 8, 0.06099999999787542
"app-num", 3, "(list 'eval '(app x (-> 2 <-)) (menv '()))", 1, 0.006999999997788109
"app-num", 3, "(list 'eval '(app (-> x <-) 2) (menv '()))", 2, 0.015000000003055902
"constr", 3, "(list 'eval '(top) (menv '()))", 9, 0.07400000000052387
"constr", 3, "(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))", 2, 0.01599999999962165
"constr", 3, "(list 'eval '(app cons 1 (-> nil <-)) (menv '()))", 1, 0.010999999998603016
"constr", 3, "(list 'eval '(app cons (-> 1 <-) nil) (menv '()))", 1, 0.009000000001833541
"constr", 3, "(list 'eval '(app (-> cons <-) 1 nil) (menv '()))", 1, 0.009000000001833541
"constr", 3, "(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))", 8, 0.06400000000212458
"constr", 3, "(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))", 3, 0.023999999997613486
"constr", 3, "(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))", 6, 0.03899999999703141
"constr", 3, "(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))", 3, 0.021000000000640284
"err", 3, "(list 'eval '(top) (menv '()))", 6, 0.04199999999764259
"err", 3, "(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))", 1, 0.006999999997788109
"err", 3, "(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))", 1, 0.008000000001629815
"err", 3, "(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))", 7, 0.049000000002706656
"err", 3, "(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))", 5, 0.03299999999944703
"err", 3, "(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))", 5, 0.03499999999985448
"id", 3, "(list 'eval '(top) (menv '()))", 5, 0.03600000000005821
"id", 3, "(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))", 1, 0.010000000002037268
"id", 3, "(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))", 7, 0.029999999998835847
"id", 3, "(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))", 1, 0.008000000001629815
"id", 3, "(list 'eval '(λ (x) (-> x <-)) (menv '((□? (x)))))", 5, 0.037000000000261934
"let-num", 3, "(list 'eval '(top) (menv '()))", 8, 0.07400000000052387
"let-num", 3, "(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))", 1, 0.01299999999901047
"let-num", 3, "(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))", 6, 0.05500000000029104
"let-num", 3, "(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))", 7, 0.0459999999984575
"let-num", 3, "(list 'eval '(app x (-> 1 <-)) (menv '()))", 1, 0.008000000001629815
"let-num", 3, "(list 'eval '(app (-> x <-) 1) (menv '()))", 2, 0.013999999999214197
"let", 3, "(list 'eval '(top) (menv '()))", 3, 0.01900000000023283
"let", 3, "(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))", 1, 0.007000000001426088
"let", 3, "(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))", 5, 0.01900000000023283
"let", 3, "(list 'eval '(let (x) (-> x <-)) (menv '()))", 2, 0.012000000002444722
"multi-param", 3, "(list 'eval '(top) (menv '()))", 11, 0.0930000000007567
"multi-param", 3, "(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))", 1, 0.007999999997991836
"multi-param", 3, "(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))", 1, 0.010000000002037268
"multi-param", 3, "(list 'eval '(λ (z) (-> z <-)) (menv '((□? (z)))))", 9, 0.07400000000052387
"multi-param", 3, "(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))", 1, 0.008000000001629815
"multi-param", 3, "(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '((□? (x y)))))", 15, 0.1319999999977881
"multi-param", 3, "(list 'eval '(app x (-> y <-)) (menv '((□? (x y)))))", 5, 0.04400000000168802
"multi-param", 3, "(list 'eval '(app (-> x <-) y) (menv '((□? (x y)))))", 5, 0.03900000000066939
"ack", 3, "(list 'eval '(top) (menv '()))", 38, 1.143000000000029
"ack", 3, "(list
 'eval
 '(let ((->
         ack
         =
         (λ (m n)
           (match
            (app = m 0)
            (#t (app + n 1))
            (#f
             (match
              (app = n 0)
              (#t (app ack (app - m 1) 1))
              (#f (app ack (app - m 1) (app ack m (app - n 1))))))))
         <-))
    bod)
 (menv '()))", 1, 0.02200000000084401
"ack", 3, "(list
 'eval
 '(λ (m n)
    (->
     (match
      (app = m 0)
      (#t (app + n 1))
      (#f
       (match
        (app = n 0)
        (#t (app ack (app - m 1) 1))
        (#f (app ack (app - m 1) (app ack m (app - n 1)))))))
     <-))
 (menv '((□? (m n)))))", 1979, 339.64400000000023
"ack", 3, "(list
 'eval
 '(match
   (app = m 0)
   (#t (app + n 1))
   (->
    #f
    (match
     (app = n 0)
     (#t (app ack (app - m 1) 1))
     (#f (app ack (app - m 1) (app ack m (app - n 1)))))
    <-))
 (menv '((□? (m n)))))", 1961, 328.54299999999785
"ack", 3, "(list
 'eval
 '(match
   (app = n 0)
   (#t (app ack (app - m 1) 1))
   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-))
 (menv '((□? (m n)))))", 1883, 266.39300000000003
"ack", 3, "(list
 'eval
 '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))
 (menv '((□? (m n)))))", 1727, 296.2170000000042
"ack", 3, "(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '((□? (m n)))))", 1727, 238.36300000000483
"ack", 3, "(list 'eval '(app - n (-> 1 <-)) (menv '((□? (m n)))))", 2, 0.024000000004889444
"ack", 3, "(list 'eval '(app - (-> n <-) 1) (menv '((□? (m n)))))", 1727, 240.8139999999985
"ack", 3, "(list 'eval '(app (-> - <-) n 1) (menv '((□? (m n)))))", 2, 0.029999999998835847
"ack", 3, "(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '((□? (m n)))))", 652, 108.36900000000605
"ack", 3, "(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '((□? (m n)))))", 3, 0.046999999998661224
"ack", 3, "(list
 'eval
 '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))
 (menv '((□? (m n)))))", 652, 104.18000000000029
"ack", 3, "(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))", 2, 0.02500000000145519
"ack", 3, "(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))", 652, 103.3289999999979
"ack", 3, "(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))", 2, 0.029999999998835847
"ack", 3, "(list
 'eval
 '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))
 (menv '((□? (m n)))))", 3, 0.03299999999580905
"ack", 3, "(list
 'eval
 '(match
   (app = n 0)
   (-> #t (app ack (app - m 1) 1) <-)
   (#f (app ack (app - m 1) (app ack m (app - n 1)))))
 (menv '((□? (m n)))))", 1883, 269.5390000000043
"ack", 3, "(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '((□? (m n)))))", 2, 0.023000000001047738
"ack", 3, "(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '((□? (m n)))))", 652, 103.28299999999581
"ack", 3, "(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))", 2, 0.024999999994179234
"ack", 3, "(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))", 652, 102.8859999999986
"ack", 3, "(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))", 2, 0.03600000000005821
"ack", 3, "(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '((□? (m n)))))", 3, 0.029999999998835847
"ack", 3, "(list
 'eval
 '(match
   (-> (app = n 0) <-)
   (#t (app ack (app - m 1) 1))
   (#f (app ack (app - m 1) (app ack m (app - n 1)))))
 (menv '((□? (m n)))))", 1783, 288.7980000000025
"ack", 3, "(list 'eval '(app = n (-> 0 <-)) (menv '((□? (m n)))))", 2, 0.030999999995401595
"ack", 3, "(list 'eval '(app = (-> n <-) 0) (menv '((□? (m n)))))", 1741, 247.7430000000022
"ack", 3, "(list 'eval '(app (-> = <-) n 0) (menv '((□? (m n)))))", 2, 0.03700000000389991
"ack", 3, "(list
 'eval
 '(match
   (app = m 0)
   (-> #t (app + n 1) <-)
   (#f
    (match
     (app = n 0)
     (#t (app ack (app - m 1) 1))
     (#f (app ack (app - m 1) (app ack m (app - n 1)))))))
 (menv '((□? (m n)))))", 1783, 255.15099999999802
"ack", 3, "(list 'eval '(app + n (-> 1 <-)) (menv '((□? (m n)))))", 2, 0.027000000001862645
"ack", 3, "(list 'eval '(app + (-> n <-) 1) (menv '((□? (m n)))))", 1741, 298.95100000000093
"ack", 3, "(list 'eval '(app (-> + <-) n 1) (menv '((□? (m n)))))", 2, 0.034999999988940544
"ack", 3, "(list
 'eval
 '(match
   (-> (app = m 0) <-)
   (#t (app + n 1))
   (#f
    (match
     (app = n 0)
     (#t (app ack (app - m 1) 1))
     (#f (app ack (app - m 1) (app ack m (app - n 1)))))))
 (menv '((□? (m n)))))", 864, 207.80100000000675
"ack", 3, "(list 'eval '(app = m (-> 0 <-)) (menv '((□? (m n)))))", 2, 0.029999999998835847
"ack", 3, "(list 'eval '(app = (-> m <-) 0) (menv '((□? (m n)))))", 705, 124.99300000000221
"ack", 3, "(list 'eval '(app (-> = <-) m 0) (menv '((□? (m n)))))", 2, 0.029999999998835847
"ack", 3, "(list 'eval '(let (ack) (-> (app ack 3 12) <-)) (menv '()))", 37, 0.6600000000034925
"ack", 3, "(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))", 1, 0.017999999996391125
"ack", 3, "(list 'eval '(app ack (-> 3 <-) 12) (menv '()))", 1, 0.010999999998603016
"ack", 3, "(list 'eval '(app (-> ack <-) 3 12) (menv '()))", 2, 0.033999999999650754
"kcfa-2", 3, "(list 'eval '(top) (menv '()))", 28, 0.7140000000072177
"kcfa-2", 3, "(list
 'eval
 '(app
   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))
   (->
    (λ (x1)
      (app
       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))
    <-))
 (menv '()))", 1, 0.031000000002677552
"kcfa-2", 3, "(list
 'eval
 '(λ (x1)
    (->
     (app
      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
     <-))
 (menv '((□? (x1)))))", 102, 7.155999999988126
"kcfa-2", 3, "(list
 'eval
 '(app
   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))
 (menv '((□? (x1)))))", 2, 0.03800000000046566
"kcfa-2", 3, "(list
 'eval
 '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
 (menv '((□? (x2)) (□? (x1)))))", 46, 2.209000000002561
"kcfa-2", 3, "(list
 'eval
 '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
 (menv '((□? (x2)) (□? (x1)))))", 3, 0.04800000000977889
"kcfa-2", 3, "(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))", 37, 2.1489999999903375
"kcfa-2", 3, "(list
 'eval
 '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
 (menv '((□? (x2)) (□? (x1)))))", 3, 0.02800000000570435
"kcfa-2", 3, "(list
 'eval
 '(λ (z) (-> (app z x1 x2) <-))
 (menv '((□? (z)) (□? (x2)) (□? (x1)))))", 58, 2.5859999999956926
"kcfa-2", 3, "(list 'eval '(app z x1 (-> x2 <-)) (menv '((□? (z)) (□? (x2)) (□? (x1)))))", 17, 0.3000000000029104
"kcfa-2", 3, "(list 'eval '(app z (-> x1 <-) x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))", 16, 0.23200000000360887
"kcfa-2", 3, "(list 'eval '(app (-> z <-) x1 x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))", 8, 0.09000000001105946
"kcfa-2", 3, "(list
 'eval
 '(app
   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)
   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
 (menv '((□? (x1)))))", 2, 0.01900000000023283
"kcfa-2", 3, "(list
 'eval
 '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))
 (menv '((□? (f2)) (□? (x1)))))", 144, 9.369999999995343
"kcfa-2", 3, "(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '((□? (f2)) (□? (x1)))))", 132, 11.529999999998836
"kcfa-2", 3, "(list 'eval '(app f2 (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))", 3, 0.027000000001862645
"kcfa-2", 3, "(list 'eval '(app (-> f2 <-) #t) (menv '((□? (f2)) (□? (x1)))))", 7, 0.09500000000116415
"kcfa-2", 3, "(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '((□? (f2)) (□? (x1)))))", 132, 8.69100000000617
"kcfa-2", 3, "(list 'eval '(app f2 (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))", 3, 0.043999999994412065
"kcfa-2", 3, "(list 'eval '(app (-> f2 <-) #f) (menv '((□? (f2)) (□? (x1)))))", 7, 0.09200000000419095
"kcfa-2", 3, "(list
 'eval
 '(app
   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)
   (λ (x1)
     (app
      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))
 (menv '()))", 1, 0.01699999999254942
"kcfa-2", 3, "(list
 'eval
 '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-))
 (menv '((□? (f1)))))", 57, 2.572999999989406
"kcfa-2", 3, "(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '((□? (f1)))))", 55, 2.5540000000037253
"kcfa-2", 3, "(list 'eval '(app f1 (-> #t <-)) (menv '((□? (f1)))))", 2, 0.034999999988940544
"kcfa-2", 3, "(list 'eval '(app (-> f1 <-) #t) (menv '((□? (f1)))))", 5, 0.07899999999790452
"kcfa-2", 3, "(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '((□? (f1)))))", 55, 2.486000000004424
"kcfa-2", 3, "(list 'eval '(app f1 (-> #f <-)) (menv '((□? (f1)))))", 2, 0.033000000010360964
"kcfa-2", 3, "(list 'eval '(app (-> f1 <-) #f) (menv '((□? (f1)))))", 5, 0.07400000000779983
"structural-rec", 3, "(list 'eval '(top) (menv '()))", 30, 0.5679999999993015
"structural-rec", 3, "(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))", 1, 0.017000000007101335
"structural-rec", 3, "(list 'eval '(λ (y) (-> (app y y) <-)) (menv '((□? (y)))))", 37, 1.187000000005355
"structural-rec", 3, "(list 'eval '(app y (-> y <-)) (menv '((□? (y)))))", 26, 0.6670000000012806
"structural-rec", 3, "(list 'eval '(app (-> y <-) y) (menv '((□? (y)))))", 26, 0.5529999999998836
"structural-rec", 3, "(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))", 1, 0.015999999988707714
"structural-rec", 3, "(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))", 38, 0.7090000000025611
"structural-rec", 3, "(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))", 5, 0.059999999997671694
"structural-rec", 3, "(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))", 5, 0.04499999999825377
