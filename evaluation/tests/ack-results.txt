'(expression:
  (let ((ack
         (λ (m n)
           (match
            (app = m 0)
            (#t (app + n 1))
            (#f
             (match
              (app = n 0)
              (#t (app ack (app - m 1) 1))
              (#f (app ack (app - m 1) (app ack m (app - n 1))))))))))
    (app ack 3 12)))
'(query:
  (((match-clause
     #t
     (app = n 0)
     ()
     ((#f (app ack (app - m 1) (app ack m (app - n 1)))))
     (match-clause
      #f
      (app = m 0)
      ((#t (app + n 1)))
      ()
      (bod (m n) (let-bin ack (app ack 3 12) (top)))))
    app
    ack
    (app - m 1)
    1)
   ((□? (m n)))))
