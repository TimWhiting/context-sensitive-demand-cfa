'(clean-cache
  facehugger
  1
  5
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  103
  84
  13
  6
  76
  11
  87
  1
  133/141
  32
  #f
  31/7
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  facehugger
  1
  5
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  50
  39
  8
  3
  32
  7
  39
  1
  49/57
  13
  #f
  173/39
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  1
  5
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  42
  31
  8
  3
  27
  7
  34
  1
  35/38
  11
  #f
  137/31
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  1
  5
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  41
  30
  8
  3
  24
  7
  31
  1
  101/114
  11
  #f
  133/30
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  1
  5
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  25
  15
  8
  2
  11
  7
  18
  1
  17/21
  5
  #f
  13/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  5
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  22
  12
  8
  2
  11
  7
  18
  1
  20/21
  4
  #f
  13/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  5
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  22
  12
  8
  2
  11
  7
  18
  1
  7/8
  4
  #f
  13/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  5
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  31
  21
  8
  2
  17
  7
  24
  1
  9/11
  7
  #f
  31/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  5
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  22
  12
  8
  2
  11
  7
  18
  1
  7/8
  4
  #f
  13/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  5
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  50
  39
  8
  3
  32
  7
  39
  1
  49/57
  13
  #f
  173/39
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  1
  5
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  42
  31
  8
  3
  27
  7
  34
  1
  35/38
  11
  #f
  137/31
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  1
  5
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  41
  30
  8
  3
  24
  7
  31
  1
  101/114
  11
  #f
  133/30
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  1
  5
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  25
  15
  8
  2
  11
  7
  18
  1
  17/21
  5
  #f
  13/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  5
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  22
  12
  8
  2
  11
  7
  18
  1
  20/21
  4
  #f
  13/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  5
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  22
  12
  8
  2
  11
  7
  18
  1
  7/8
  4
  #f
  13/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  5
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  31
  21
  8
  2
  17
  7
  24
  1
  9/11
  7
  #f
  31/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  5
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  22
  12
  8
  2
  11
  7
  18
  1
  7/8
  4
  #f
  13/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  5
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  9
  5
  3
  1
  4
  3
  7
  1
  4/5
  4
  #f
  26/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  5
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  102
  83
  13
  6
  75
  11
  86
  1
  65/69
  32
  #f
  368/83
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  facehugger
  1
  5
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  53
  41
  8
  4
  37
  7
  44
  1
  65/69
  16
  #f
  182/41
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  1
  5
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  10
  6
  3
  1
  6
  3
  9
  1
  1
  6
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  5
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  53
  41
  8
  4
  37
  7
  44
  1
  65/69
  16
  #f
  182/41
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  1
  5
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  10
  6
  3
  1
  6
  3
  9
  1
  1
  6
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  5
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  50
  39
  8
  3
  32
  7
  39
  1
  49/57
  13
  #f
  173/39
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  facehugger
  1
  5
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  67
  50
  13
  4
  42
  11
  53
  1
  22/25
  16
  #f
  22/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  5
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  103
  84
  13
  6
  76
  11
  87
  1
  265/282
  31
  #f
  373/84
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  facehugger
  1
  5
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  104
  85
  13
  6
  76
  11
  87
  1
  263/282
  31
  #f
  377/85
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  5
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  105
  86
  13
  6
  76
  11
  87
  1
  87/94
  31
  #f
  381/86
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  5
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  106
  87
  13
  6
  76
  11
  87
  1
  259/282
  31
  #f
  385/87
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  5
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  106
  87
  13
  6
  76
  11
  87
  1
  259/282
  31
  #f
  385/87
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  5
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  106
  87
  13
  6
  76
  11
  87
  1
  259/282
  31
  #f
  385/87
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  5
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  107
  88
  13
  6
  76
  11
  87
  1
  257/282
  31
  #f
  389/88
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  5
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  108
  89
  13
  6
  76
  11
  87
  1
  85/94
  31
  #f
  393/89
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  5
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  108
  89
  13
  6
  76
  11
  87
  1
  85/94
  31
  #f
  393/89
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  5
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  109
  90
  13
  6
  76
  11
  87
  1
  253/282
  31
  #f
  133/30
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  5
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  110
  91
  13
  6
  76
  11
  87
  1
  251/282
  31
  #f
  31/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  5
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  111
  92
  13
  6
  76
  11
  87
  1
  83/94
  31
  #f
  407/92
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  5
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  112
  93
  13
  6
  76
  11
  87
  1
  247/282
  31
  #f
  137/31
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  5
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  113
  94
  13
  6
  76
  11
  87
  1
  245/282
  31
  #f
  415/94
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  5
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  113
  94
  13
  6
  76
  11
  87
  1
  245/282
  31
  #f
  415/94
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  5
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  113
  94
  13
  6
  76
  11
  87
  1
  245/282
  31
  #f
  415/94
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  5
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  113
  94
  13
  6
  76
  11
  87
  1
  245/282
  31
  #f
  415/94
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  5
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  113
  94
  13
  6
  76
  11
  87
  1
  245/282
  31
  #t
  415/94
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  5
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  113
  94
  13
  6
  76
  11
  87
  1
  245/282
  31
  #t
  415/94
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  5
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  114
  95
  13
  6
  76
  11
  87
  1
  81/94
  31
  #f
  419/95
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  5
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  115
  96
  13
  6
  76
  11
  87
  1
  241/282
  31
  #f
  425/96
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  5
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  22
  12
  8
  2
  11
  7
  18
  1
  7/8
  4
  #f
  13/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  5
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  27
  16
  8
  3
  15
  7
  22
  1
  11/12
  8
  #t
  9/2
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  5
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  63
  45
  13
  5
  38
  11
  49
  1
  161/180
  18
  #f
  40/9
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  facehugger
  1
  5
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  85
  66
  13
  6
  58
  11
  69
  1
  37/40
  25
  #f
  293/66
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  5
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  87
  68
  13
  6
  59
  11
  70
  1
  75/82
  26
  #f
  76/17
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  5
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  88
  69
  13
  6
  59
  11
  70
  1
  223/246
  26
  #f
  308/69
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  5
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  90
  71
  13
  6
  61
  11
  72
  1
  115/126
  26
  #f
  316/71
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  5
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  91
  72
  13
  6
  61
  11
  72
  1
  19/21
  26
  #f
  40/9
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  5
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  91
  72
  13
  6
  61
  11
  72
  1
  19/21
  26
  #f
  40/9
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  5
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  106
  87
  13
  6
  76
  11
  87
  1
  130/141
  32
  #f
  386/87
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  5
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  107
  88
  13
  6
  76
  11
  87
  1
  43/47
  32
  #f
  195/44
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  5
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  108
  89
  13
  6
  76
  11
  87
  1
  128/141
  32
  #f
  394/89
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  5
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  108
  89
  13
  6
  76
  11
  87
  1
  128/141
  32
  #f
  394/89
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  5
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  109
  90
  13
  6
  76
  11
  87
  1
  127/141
  32
  #f
  199/45
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  5
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  110
  91
  13
  6
  76
  11
  87
  1
  42/47
  32
  #f
  402/91
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  5
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  111
  92
  13
  6
  76
  11
  87
  1
  125/141
  32
  #f
  203/46
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  5
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  111
  92
  13
  6
  76
  11
  87
  1
  125/141
  32
  #t
  203/46
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  5
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  112
  93
  13
  6
  76
  11
  87
  1
  124/141
  32
  #f
  412/93
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  5
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  112
  93
  13
  6
  76
  11
  87
  1
  124/141
  32
  #f
  412/93
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  5
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  113
  94
  13
  6
  76
  11
  87
  1
  41/47
  32
  #f
  208/47
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  5
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  114
  95
  13
  6
  76
  11
  87
  1
  122/141
  32
  #f
  84/19
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  5
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  114
  95
  13
  6
  76
  11
  87
  1
  122/141
  32
  #f
  84/19
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  5
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  115
  96
  13
  6
  76
  11
  87
  1
  121/141
  32
  #f
  71/16
  ((0 0 0) (0 0 0) (0 0 0)))
