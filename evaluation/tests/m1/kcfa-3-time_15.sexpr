'(clean-cache
  kcfa-3
  1
  15
  31
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  46
  27
  9
  10
  27
  9
  36
  1
  1
  27
  #t
  5
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  101
  60
  18
  23
  41
  13
  54
  1
  17/24
  50
  #f
  82/15
  ((9 9 0) (17/2 9 0) (9 9 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (f3) ...) (λ (x3) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  77
  42
  15
  20
  5
  3
  8
  1
  5/18
  35
  #f
  229/42
  ((17/2 17/2 0) (17/2 9 0) (8 8 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  app
  "\"'(eval\n  (λ (x3) (-> (app (λ (z) ...) (λ (y1 y2 y3) ...)) <-))\n  (env ((□? (x3)) (□? (x2)) (□? (x1)))))\""
  53
  24
  12
  17
  5
  3
  8
  1
  5/12
  20
  #f
  65/12
  ((11/2 6 0) (11/2 6 0) (6 6 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval\n  (λ (y1 y2 y3) (-> y1 <-))\n  (env ((□? (y1 y2 y3)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  35
  12
  9
  14
  5
  3
  8
  1
  5/8
  10
  #f
  16/3
  ((3 3 0) (5/2 3 0) (3 3 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  app
  "\"'(eval\n  (λ (z) (-> (app z x1 x2 x3) <-))\n  (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  48
  22
  12
  14
  5
  3
  8
  1
  5/11
  19
  #f
  11/2
  ((11/2 11/2 0) (11/2 6 0) (6 6 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval (app z x1 x2 (-> x3 <-)) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  14
  6
  3
  5
  0
  0
  0
  1
  0
  5
  #f
  31/6
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-) x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  14
  6
  3
  5
  0
  0
  0
  1
  0
  5
  #f
  31/6
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  14
  6
  3
  5
  5
  3
  8
  1
  5/6
  5
  #f
  31/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  7
  2
  1
  4
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  let
  "\"'(eval (λ (f3) (-> (let (_) ...) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  75
  40
  15
  20
  5
  3
  8
  1
  5/16
  33
  #f
  219/40
  ((19/2 19/2 0) (9 9 0) (9 9 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f3 (app #t)) <-)) () ...) ...)\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  69
  34
  15
  20
  5
  3
  8
  1
  1/3
  29
  #f
  11/2
  ((8 8 0) (8 8 0) (17/2 17/2 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  app
  "\"'(eval (app f3 (-> (app #t) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  5
  2
  0
  3
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #t)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  6
  2
  1
  3
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  app
  "\"'(eval\n  (let (_) (-> (app f3 (app #f)) <-))\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  69
  34
  15
  20
  5
  3
  8
  1
  1/3
  29
  #f
  11/2
  ((8 8 0) (15/2 8 0) (8 8 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  app
  "\"'(eval (app f3 (-> (app #f) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  5
  2
  0
  3
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #f)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  6
  2
  1
  3
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  99
  58
  18
  23
  35
  13
  48
  1
  2/3
  48
  #f
  159/29
  ((12 12 0) (12 12 0) (12 12 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  93
  52
  18
  23
  33
  13
  46
  1
  43/63
  44
  #f
  11/2
  ((11 23/2 0) (11 23/2 0) (11 23/2 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  4
  2
  0
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  5
  2
  1
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  93
  52
  18
  23
  33
  13
  46
  1
  43/63
  44
  #f
  11/2
  ((11 23/2 0) (23/2 23/2 0) (11 11 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  4
  2
  0
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  5
  2
  1
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  46
  28
  9
  9
  25
  9
  34
  1
  12/13
  28
  #t
  5
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  44
  26
  9
  9
  24
  9
  33
  1
  47/50
  26
  #t
  5
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  4
  2
  1
  1
  1
  1
  2
  1
  1/2
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  44
  26
  9
  9
  24
  9
  33
  1
  47/50
  26
  #t
  5
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  4
  2
  1
  1
  1
  1
  2
  1
  1/2
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  31
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  0
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  102
  60
  19
  23
  36
  14
  50
  1
  47/72
  50
  #t
  82/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  106
  61
  19
  26
  36
  14
  50
  1
  31/48
  50
  #f
  334/61
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  15
  31
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  115
  68
  19
  28
  42
  14
  56
  1
  197/280
  57
  #t
  369/68
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  15
  31
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  118
  70
  19
  29
  44
  14
  58
  1
  106/145
  59
  #t
  379/70
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  15
  31
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  122
  74
  19
  29
  44
  14
  58
  1
  106/155
  63
  #t
  399/74
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  15
  31
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  122
  74
  19
  29
  44
  14
  58
  1
  106/155
  63
  #f
  399/74
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  15
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  129
  80
  19
  30
  49
  14
  63
  1
  15/22
  69
  #t
  429/80
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  15
  31
  app
  "\"'(eval (app f3 (-> (app #t) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  138
  84
  19
  35
  49
  14
  63
  1
  9/14
  73
  #t
  449/84
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  149
  88
  22
  39
  49
  14
  63
  1
  22/35
  77
  #t
  43/8
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  15
  31
  app
  "\"'(eval\n  (λ (z) (-> (app z x1 x2 x3) <-))\n  (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  171
  101
  28
  42
  49
  14
  63
  1
  871/1470
  87
  #f
  545/101
  ((8 8 0) (17/2 17/2 0) (8 8 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  172
  102
  28
  42
  49
  14
  63
  1
  85/147
  88
  #t
  275/51
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  31
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-) x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  0
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #f)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  6
  2
  1
  3
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  15
  31
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  9
  4
  1
  4
  0
  0
  0
  1
  0
  4
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval\n  (λ (y1 y2 y3) (-> y1 <-))\n  (env ((□? (y1 y2 y3)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  47
  18
  12
  17
  5
  3
  8
  1
  2/5
  16
  #f
  49/9
  ((3 3 0) (3 3 0) (7/2 7/2 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  56
  21
  15
  20
  7
  5
  12
  1
  5/12
  19
  #t
  38/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  15
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f3 (app #t)) <-)) () ...) ...)\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  103
  47
  24
  32
  7
  5
  12
  1
  5/18
  40
  #f
  259/47
  ((17/2 9 0) (9 9 0) (9 9 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  15
  31
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  107
  51
  24
  32
  7
  5
  12
  1
  1/4
  44
  #t
  93/17
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  15
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  157
  81
  32
  44
  33
  13
  46
  1
  25/52
  73
  #f
  431/81
  ((15/2 15/2 0) (7 15/2 0) (15/2 15/2 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  31
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (f3) ...) (λ (x3) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  0
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval (app z x1 x2 (-> x3 <-)) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  14
  6
  3
  5
  0
  0
  0
  1
  0
  5
  #f
  31/6
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  15
  31
  let
  "\"'(eval (λ (f3) (-> (let (_) ...) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  104
  56
  24
  24
  5
  3
  8
  1
  5/22
  48
  #f
  151/28
  ((13 27/2 0) (25/2 25/2 0) (25/2 25/2 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  113
  59
  27
  27
  7
  5
  12
  1
  1/4
  51
  #t
  318/59
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  15
  31
  app
  "\"'(eval (app f3 (-> (app #f) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  117
  63
  27
  27
  7
  5
  12
  1
  1/4
  55
  #t
  338/63
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  15
  31
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  118
  64
  27
  27
  7
  5
  12
  1
  11/48
  56
  #t
  343/64
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  31
  app
  "\"'(eval\n  (λ (x3) (-> (app (λ (z) ...) (λ (y1 y2 y3) ...)) <-))\n  (env ((□? (x3)) (□? (x2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  0
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #t)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  6
  2
  1
  3
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  15
  31
  app
  "\"'(eval\n  (let (_) (-> (app f3 (app #f)) <-))\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  70
  35
  15
  20
  5
  3
  8
  1
  5/16
  30
  #f
  194/35
  ((8 17/2 0) (8 8 0) (17/2 17/2 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  15
  31
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  106
  57
  21
  28
  26
  9
  35
  1
  187/280
  52
  #t
  16/3
  ((11/2 11/2 0) (11/2 11/2 0) (6 13/2 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  15
  31
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  137
  76
  26
  35
  44
  14
  58
  1
  197/280
  70
  #f
  100/19
  ((7 15/2 0) (7 7 0) (13/2 13/2 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  15
  31
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (f3) ...) (λ (x3) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  77
  42
  15
  20
  5
  3
  8
  1
  5/18
  35
  #f
  229/42
  ((17/2 17/2 0) (9 19/2 0) (9 9 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  15
  31
  app
  "\"'(eval (app f3 (-> (app #f) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  84
  46
  15
  23
  5
  3
  8
  1
  1/4
  39
  #t
  249/46
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #t)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  86
  48
  15
  23
  5
  3
  8
  1
  5/21
  41
  #t
  87/16
  ((0 0 0) (0 0 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  15
  31
  app
  "\"'(eval\n  (λ (x3) (-> (app (λ (z) ...) (λ (y1 y2 y3) ...)) <-))\n  (env ((□? (x3)) (□? (x2)) (□? (x1)))))\""
  126
  67
  24
  35
  5
  3
  8
  1
  5/21
  56
  #f
  366/67
  ((19/2 19/2 0) (17/2 9 0) (17/2 17/2 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  15
  31
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  185
  100
  35
  50
  33
  13
  46
  1
  7/16
  88
  #f
  267/50
  ((12 12 0) (25/2 13 0) (13 13 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  15
  31
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  199
  110
  36
  53
  43
  14
  57
  1
  3/5
  98
  #t
  292/55
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  15
  31
  app
  "\"'(eval\n  (let (_) (-> (app f3 (app #f)) <-))\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  203
  114
  36
  53
  43
  14
  57
  1
  1139/1920
  101
  #f
  607/114
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  15
  31
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  209
  119
  36
  54
  47
  14
  61
  1
  1127/1920
  105
  #f
  633/119
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  31
  ref-or-constructor
  "\"'(eval (app z x1 x2 (-> x3 <-)) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  1
  kcfa-3
  1
  15
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  93
  52
  18
  23
  33
  13
  46
  1
  43/63
  44
  #f
  11/2
  ((14 29/2 0) (12 12 0) (27/2 14 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  15
  31
  app
  "\"'(eval (app f3 (-> (app #t) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  103
  56
  18
  29
  33
  13
  46
  1
  43/69
  48
  #t
  153/28
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  106
  57
  18
  31
  33
  13
  46
  1
  85/138
  48
  #f
  104/19
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #f)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  114
  62
  21
  31
  33
  13
  46
  1
  41/69
  53
  #t
  11/2
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  15
  31
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  115
  63
  21
  31
  33
  13
  46
  1
  79/138
  54
  #t
  346/63
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval\n  (λ (y1 y2 y3) (-> y1 <-))\n  (env ((□? (y1 y2 y3)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  135
  70
  27
  38
  33
  13
  46
  1
  523/966
  59
  #f
  11/2
  ((7/2 7/2 0) (7/2 4 0) (4 4 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  31
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  1
  kcfa-3
  1
  15
  31
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  44
  26
  9
  9
  24
  9
  33
  1
  47/50
  26
  #t
  5
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  15
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  79
  49
  14
  16
  46
  14
  60
  1
  53/58
  49
  #t
  5
  ((7/2 7/2 0) (7/2 7/2 0) (7/2 7/2 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  15
  31
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  83
  51
  14
  18
  46
  14
  60
  1
  53/62
  51
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  15
  31
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  85
  53
  14
  18
  47
  14
  61
  1
  27/32
  53
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  85
  53
  14
  18
  47
  14
  61
  1
  27/32
  53
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  15
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f3 (app #t)) <-)) () ...) ...)\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  148
  84
  26
  38
  47
  14
  61
  1
  111/170
  79
  #f
  437/84
  ((13 13 0) (25/2 13 0) (25/2 13 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  31
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-) x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  1
  kcfa-3
  1
  15
  31
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  8
  4
  1
  3
  0
  0
  0
  1
  0
  4
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  15
  31
  let
  "\"'(eval (λ (f3) (-> (let (_) ...) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  87
  46
  18
  23
  7
  5
  12
  1
  7/27
  39
  #f
  11/2
  ((10 10 0) (11 23/2 0) (10 10 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  88
  47
  18
  23
  7
  5
  12
  1
  14/57
  40
  #t
  260/47
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  15
  31
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  92
  51
  18
  23
  7
  5
  12
  1
  2/9
  44
  #t
  280/51
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  105
  55
  21
  29
  7
  5
  12
  1
  2/9
  48
  #t
  304/55
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  15
  31
  app
  "\"'(eval\n  (λ (z) (-> (app z x1 x2 x3) <-))\n  (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  127
  68
  27
  32
  7
  5
  12
  1
  2/9
  58
  #f
  94/17
  ((13/2 13/2 0) (13/2 7 0) (13/2 13/2 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  130
  70
  28
  32
  8
  6
  14
  1
  17/69
  60
  #t
  193/35
  ((0 0 0) (0 0 0) (0 0 0)))
