'(clean-cache
  kcfa-2
  1
  25
  22
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  37
  21
  8
  8
  21
  8
  29
  1
  1
  21
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  74
  42
  15
  17
  29
  11
  40
  1
  13/18
  35
  #f
  229/42
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (z) ...) (λ (y1 y2) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  50
  24
  12
  14
  5
  3
  8
  1
  5/12
  20
  #f
  65/12
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (λ (y1 y2) (-> y1 <-)) (env ((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  32
  12
  9
  11
  5
  3
  8
  1
  5/8
  10
  #f
  16/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (λ (z) (-> (app z x1 x2) <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  45
  22
  12
  11
  5
  3
  8
  1
  5/11
  19
  #f
  11/2
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  13
  6
  3
  4
  0
  0
  0
  1
  0
  5
  #f
  31/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  13
  6
  3
  4
  5
  3
  8
  1
  5/6
  5
  #f
  31/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  6
  2
  1
  3
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  72
  40
  15
  17
  23
  11
  34
  1
  2/3
  33
  #f
  219/40
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  66
  34
  15
  17
  21
  11
  32
  1
  31/45
  29
  #f
  11/2
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  4
  2
  0
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  5
  2
  1
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  66
  34
  15
  17
  21
  11
  32
  1
  31/45
  29
  #f
  11/2
  ((2 2 0) (3/2 3/2 0) (2 2 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  4
  2
  0
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  5
  2
  1
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  37
  22
  8
  7
  19
  8
  27
  1
  9/10
  22
  #t
  5
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  35
  20
  8
  7
  18
  8
  26
  1
  35/38
  20
  #t
  5
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  4
  2
  1
  1
  1
  1
  2
  1
  1/2
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  35
  20
  8
  7
  18
  8
  26
  1
  35/38
  20
  #t
  5
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  4
  2
  1
  1
  1
  1
  2
  1
  1/2
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (z) ...) (λ (y1 y2) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  50
  24
  12
  14
  5
  3
  8
  1
  5/12
  20
  #f
  65/12
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  57
  28
  12
  17
  5
  3
  8
  1
  5/14
  24
  #t
  75/14
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  87
  46
  17
  24
  23
  8
  31
  1
  18/25
  42
  #t
  120/23
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  92
  49
  19
  24
  24
  9
  33
  1
  9/13
  45
  #t
  256/49
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  93
  50
  19
  24
  24
  9
  33
  1
  359/520
  46
  #t
  263/50
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  97
  54
  19
  24
  24
  9
  33
  1
  359/560
  50
  #t
  283/54
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  119
  68
  22
  29
  37
  12
  49
  1
  2/3
  64
  #t
  353/68
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (λ (y1 y2) (-> y1 <-)) (env ((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  123
  69
  22
  32
  37
  12
  49
  1
  299/450
  64
  #f
  359/69
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  124
  70
  22
  32
  37
  12
  49
  1
  583/900
  65
  #t
  26/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  125
  71
  22
  32
  37
  12
  49
  1
  191/300
  65
  #f
  370/71
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  126
  72
  22
  32
  37
  12
  49
  1
  31/50
  66
  #t
  125/24
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  130
  76
  22
  32
  37
  12
  49
  1
  53/90
  69
  #f
  397/76
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  131
  77
  22
  32
  37
  12
  49
  1
  44/75
  69
  #f
  403/77
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  197
  110
  41
  46
  57
  24
  81
  1
  20/31
  95
  #f
  123/22
  ((8 8 0) (8 8 0) (8 8 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  198
  111
  41
  46
  57
  24
  81
  1
  39/62
  96
  #t
  620/111
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  199
  112
  41
  46
  57
  24
  81
  1
  19/31
  97
  #t
  625/112
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  200
  113
  41
  46
  57
  24
  81
  1
  284/465
  98
  #t
  631/113
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  201
  114
  41
  46
  57
  24
  81
  1
  553/930
  99
  #t
  106/19
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  207
  120
  41
  46
  59
  24
  83
  1
  557/960
  104
  #f
  167/30
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  208
  121
  41
  46
  59
  24
  83
  1
  271/480
  105
  #t
  673/121
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  212
  125
  41
  46
  59
  24
  83
  1
  87/160
  107
  #f
  139/25
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (λ (z) (-> (app z x1 x2) <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  217
  130
  41
  46
  59
  24
  83
  1
  5431/10080
  111
  #f
  729/130
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (z) ...) (λ (y1 y2) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  50
  24
  12
  14
  5
  3
  8
  1
  5/12
  20
  #f
  65/12
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  80
  42
  17
  21
  23
  8
  31
  1
  18/23
  38
  #t
  110/21
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  81
  43
  17
  21
  23
  8
  31
  1
  35/46
  39
  #t
  225/43
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  160
  83
  39
  38
  50
  23
  73
  1
  17/21
  72
  #f
  466/83
  ((15/2 15/2 0) (15/2 15/2 0) (15/2 15/2 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  161
  84
  39
  38
  50
  23
  73
  1
  19/24
  73
  #t
  157/28
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (λ (z) (-> (app z x1 x2) <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  166
  89
  39
  38
  50
  23
  73
  1
  25723/32760
  77
  #f
  505/89
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  171
  93
  39
  39
  50
  23
  73
  1
  24631/32760
  81
  #t
  175/31
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  176
  96
  41
  39
  51
  24
  75
  1
  428/585
  84
  #t
  541/96
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  185
  103
  41
  41
  57
  24
  81
  1
  6382/8775
  91
  #t
  576/103
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  189
  107
  41
  41
  57
  24
  81
  1
  6187/8775
  94
  #f
  598/107
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  190
  108
  41
  41
  57
  24
  81
  1
  12179/17550
  94
  #f
  151/27
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  194
  112
  41
  41
  57
  24
  81
  1
  11633/17550
  98
  #t
  39/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  195
  113
  41
  41
  57
  24
  81
  1
  11633/18135
  99
  #t
  630/113
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  196
  114
  41
  41
  57
  24
  81
  1
  22681/36270
  100
  #t
  635/114
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  197
  115
  41
  41
  57
  24
  81
  1
  11048/18135
  101
  #t
  128/23
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  203
  121
  41
  41
  59
  24
  83
  1
  5563/9360
  106
  #f
  672/121
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  204
  122
  41
  41
  59
  24
  83
  1
  21667/37440
  107
  #t
  677/122
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (λ (y1 y2) (-> y1 <-)) (env ((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  210
  123
  41
  46
  59
  24
  83
  1
  1441/2496
  107
  #f
  683/123
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  211
  124
  41
  46
  59
  24
  83
  1
  701/1248
  108
  #t
  172/31
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  212
  125
  41
  46
  59
  24
  83
  1
  377/672
  109
  #t
  701/125
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  216
  129
  41
  46
  59
  24
  83
  1
  121/224
  111
  #f
  241/43
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  217
  130
  41
  46
  59
  24
  83
  1
  5431/10080
  111
  #f
  729/130
  ((0 0 0) (0 0 0) (0 0 0)))
