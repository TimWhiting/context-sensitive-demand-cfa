'(clean-cache
  kcfa-2
  1
  25
  22
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  37
  21
  8
  8
  21
  8
  29
  1
  1
  21
  #t
  5
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  74
  42
  15
  17
  29
  11
  40
  1
  13/18
  35
  #f
  229/42
  ((5 5 0) (5 5 0) (5 5 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (z) ...) (λ (y1 y2) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  50
  24
  12
  14
  5
  3
  8
  1
  5/12
  20
  #f
  65/12
  ((7/2 4 0) (4 4 0) (4 4 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (λ (y1 y2) (-> y1 <-)) (env ((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  32
  12
  9
  11
  5
  3
  8
  1
  5/8
  10
  #f
  16/3
  ((2 2 0) (3/2 2 0) (2 2 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (λ (z) (-> (app z x1 x2) <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  45
  22
  12
  11
  5
  3
  8
  1
  5/11
  19
  #f
  11/2
  ((4 4 0) (7/2 7/2 0) (7/2 7/2 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  13
  6
  3
  4
  0
  0
  0
  1
  0
  5
  #f
  31/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  13
  6
  3
  4
  5
  3
  8
  1
  5/6
  5
  #f
  31/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  6
  2
  1
  3
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  72
  40
  15
  17
  23
  11
  34
  1
  2/3
  33
  #f
  219/40
  ((11/2 11/2 0) (11/2 11/2 0) (11/2 11/2 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  66
  34
  15
  17
  21
  11
  32
  1
  31/45
  29
  #f
  11/2
  ((5 5 0) (5 5 0) (5 5 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  4
  2
  0
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  5
  2
  1
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  66
  34
  15
  17
  21
  11
  32
  1
  31/45
  29
  #f
  11/2
  ((5 5 0) (5 5 0) (5 5 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  4
  2
  0
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  5
  2
  1
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  37
  22
  8
  7
  19
  8
  27
  1
  9/10
  22
  #t
  5
  ((3/2 3/2 0) (3/2 3/2 0) (1 1 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  35
  20
  8
  7
  18
  8
  26
  1
  35/38
  20
  #t
  5
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  4
  2
  1
  1
  1
  1
  2
  1
  1/2
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  35
  20
  8
  7
  18
  8
  26
  1
  35/38
  20
  #t
  5
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  4
  2
  1
  1
  1
  1
  2
  1
  1/2
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  74
  42
  15
  17
  29
  11
  40
  1
  13/18
  35
  #f
  229/42
  ((5 5 0) (5 5 0) (5 11/2 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  81
  46
  15
  20
  29
  11
  40
  1
  13/20
  39
  #t
  249/46
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (λ (y1 y2) (-> y1 <-)) (env ((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  103
  53
  21
  29
  29
  11
  40
  1
  73/120
  44
  #f
  288/53
  ((2 2 0) (2 5/2 0) (2 5/2 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  134
  68
  32
  34
  41
  19
  60
  1
  1391/2070
  57
  #f
  373/68
  ((11/2 11/2 0) (13/2 13/2 0) (6 6 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  142
  76
  32
  34
  41
  19
  60
  1
  131/207
  63
  #f
  417/76
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  143
  77
  32
  34
  41
  19
  60
  1
  131/216
  64
  #t
  424/77
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  144
  78
  32
  34
  41
  19
  60
  1
  253/432
  65
  #t
  11/2
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (z) ...) (λ (y1 y2) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  182
  99
  39
  44
  49
  23
  72
  1
  5/9
  83
  #f
  61/11
  ((17/2 17/2 0) (10 10 0) (9 9 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  183
  100
  39
  44
  49
  23
  72
  1
  77/144
  84
  #t
  277/50
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  190
  107
  39
  44
  51
  23
  74
  1
  271/525
  89
  #f
  593/107
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  190
  107
  39
  44
  51
  23
  74
  1
  271/525
  89
  #t
  593/107
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  196
  111
  40
  45
  54
  24
  78
  1
  647/1176
  93
  #t
  613/111
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  196
  111
  40
  45
  54
  24
  78
  1
  647/1176
  93
  #f
  613/111
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  198
  112
  41
  45
  54
  24
  78
  1
  967/1764
  94
  #t
  625/112
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  200
  114
  41
  45
  55
  24
  79
  1
  1997/3654
  96
  #t
  635/114
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  201
  115
  41
  45
  55
  24
  79
  1
  3319/6090
  96
  #f
  641/115
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  202
  116
  41
  45
  55
  24
  79
  1
  3319/6300
  97
  #t
  323/58
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  203
  117
  41
  45
  55
  24
  79
  1
  1607/3150
  98
  #t
  217/39
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  206
  120
  41
  45
  57
  24
  81
  1
  559/1085
  101
  #t
  111/20
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  209
  122
  41
  46
  59
  24
  83
  1
  1223/2240
  103
  #t
  338/61
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  213
  126
  41
  46
  59
  24
  83
  1
  3473/6720
  107
  #t
  116/21
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (λ (z) (-> (app z x1 x2) <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  219
  132
  41
  46
  59
  24
  83
  1
  857/1680
  112
  #f
  371/66
  ((5 5 0) (9/2 9/2 0) (7/2 7/2 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  37
  22
  8
  7
  18
  8
  26
  1
  33/38
  22
  #t
  5
  ((1 3/2 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  42
  24
  9
  9
  18
  8
  26
  1
  31/38
  24
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (λ (z) (-> (app z x1 x2) <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  83
  44
  19
  20
  21
  9
  30
  1
  401/630
  41
  #f
  235/44
  ((11/2 6 0) (5 5 0) (9/2 5 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  128
  69
  28
  31
  35
  15
  50
  1
  11849/19320
  61
  #f
  373/69
  ((17/2 9 0) (9 9 0) (17/2 9 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  132
  73
  28
  31
  35
  15
  50
  1
  11849/21000
  65
  #t
  393/73
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  166
  95
  34
  37
  43
  18
  61
  1
  15959/31500
  81
  #f
  517/95
  ((8 17/2 0) (9 19/2 0) (8 8 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  167
  96
  34
  37
  43
  18
  61
  1
  15959/31500
  82
  #t
  131/24
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (λ (y1 y2) (-> y1 <-)) (env ((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  171
  97
  34
  40
  43
  18
  61
  1
  1767/3500
  82
  #f
  530/97
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  181
  105
  34
  42
  51
  18
  69
  1
  3557/6090
  90
  #t
  38/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  182
  106
  34
  42
  51
  18
  69
  1
  1726/3045
  91
  #t
  575/106
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  183
  107
  34
  42
  51
  18
  69
  1
  1691/3045
  91
  #f
  581/107
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  183
  107
  34
  42
  51
  18
  69
  1
  1691/3045
  91
  #t
  581/107
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (z) ...) (λ (y1 y2) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  192
  113
  34
  45
  51
  18
  69
  1
  552/1015
  95
  #f
  613/113
  ((5/2 5/2 0) (5/2 5/2 0) (5/2 5/2 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  192
  113
  34
  45
  51
  18
  69
  1
  552/1015
  95
  #t
  613/113
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  193
  114
  34
  45
  51
  18
  69
  1
  1069/2030
  96
  #t
  103/19
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  194
  115
  34
  45
  51
  18
  69
  1
  517/1015
  97
  #t
  623/115
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  195
  116
  34
  45
  51
  18
  69
  1
  4639/9135
  97
  #f
  629/116
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  215
  127
  41
  47
  59
  24
  83
  1
  559/1008
  107
  #f
  721/127
  ((37/2 19 0) (20 41/2 0) (41/2 21 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  216
  128
  41
  47
  59
  24
  83
  1
  5569/10080
  107
  #f
  727/128
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  217
  129
  41
  47
  59
  24
  83
  1
  10823/20160
  108
  #t
  244/43
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  25
  22
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  221
  133
  41
  47
  59
  24
  83
  1
  2047/4032
  112
  #t
  752/133
  ((0 0 0) (0 0 0) (0 0 0)))
