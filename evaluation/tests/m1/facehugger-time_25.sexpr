'(clean-cache
  facehugger
  1
  25
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  103
  84
  13
  6
  76
  11
  87
  1
  133/141
  54
  #f
  19/14
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  facehugger
  1
  25
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  50
  39
  8
  3
  32
  7
  39
  1
  49/57
  25
  #f
  53/39
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  1
  25
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  42
  31
  8
  3
  27
  7
  34
  1
  35/38
  19
  #f
  43/31
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  1
  25
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  41
  30
  8
  3
  24
  7
  31
  1
  101/114
  19
  #f
  41/30
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  1
  25
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  25
  15
  8
  2
  11
  7
  18
  1
  17/21
  11
  #f
  19/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  22
  12
  8
  2
  11
  7
  18
  1
  20/21
  9
  #f
  5/4
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  25
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  22
  12
  8
  2
  11
  7
  18
  1
  7/8
  9
  #f
  5/4
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  31
  21
  8
  2
  17
  7
  24
  1
  9/11
  16
  #f
  26/21
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  22
  12
  8
  2
  11
  7
  18
  1
  7/8
  9
  #f
  5/4
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  25
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  50
  39
  8
  3
  32
  7
  39
  1
  49/57
  25
  #f
  53/39
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  1
  25
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  42
  31
  8
  3
  27
  7
  34
  1
  35/38
  19
  #f
  43/31
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  1
  25
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  41
  30
  8
  3
  24
  7
  31
  1
  101/114
  19
  #f
  41/30
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  1
  25
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  25
  15
  8
  2
  11
  7
  18
  1
  17/21
  11
  #f
  19/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  22
  12
  8
  2
  11
  7
  18
  1
  20/21
  9
  #f
  5/4
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  25
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  22
  12
  8
  2
  11
  7
  18
  1
  7/8
  9
  #f
  5/4
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  31
  21
  8
  2
  17
  7
  24
  1
  9/11
  16
  #f
  26/21
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  22
  12
  8
  2
  11
  7
  18
  1
  7/8
  9
  #f
  5/4
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  25
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  9
  5
  3
  1
  4
  3
  7
  1
  4/5
  4
  #f
  6/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  25
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  102
  83
  13
  6
  75
  11
  86
  1
  65/69
  54
  #f
  112/83
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  facehugger
  1
  25
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  53
  41
  8
  4
  37
  7
  44
  1
  65/69
  27
  #f
  55/41
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  1
  25
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  10
  6
  3
  1
  6
  3
  9
  1
  1
  6
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  25
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  53
  41
  8
  4
  37
  7
  44
  1
  65/69
  27
  #f
  55/41
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  1
  25
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  10
  6
  3
  1
  6
  3
  9
  1
  1
  6
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  31
  21
  8
  2
  17
  7
  24
  1
  9/11
  16
  #f
  26/21
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  25
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  46
  35
  8
  3
  30
  7
  37
  1
  17/19
  23
  #f
  47/35
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  47
  36
  8
  3
  30
  7
  37
  1
  50/57
  23
  #f
  49/36
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  64
  47
  13
  4
  40
  11
  51
  1
  34/39
  31
  #f
  63/47
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  25
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  67
  50
  13
  4
  42
  11
  53
  1
  45/52
  32
  #f
  34/25
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  25
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  68
  51
  13
  4
  42
  11
  53
  1
  133/156
  32
  #f
  70/51
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  25
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  72
  55
  13
  4
  45
  11
  56
  1
  151/180
  35
  #f
  15/11
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  73
  56
  13
  4
  45
  11
  56
  1
  149/180
  35
  #f
  11/8
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  25
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  74
  57
  13
  4
  45
  11
  56
  1
  49/60
  35
  #f
  79/57
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  74
  57
  13
  4
  45
  11
  56
  1
  49/60
  35
  #f
  79/57
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  25
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  77
  59
  13
  5
  47
  11
  58
  1
  26/31
  37
  #t
  81/59
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  25
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  78
  60
  13
  5
  47
  11
  58
  1
  77/93
  37
  #f
  83/60
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  85
  67
  13
  5
  53
  11
  64
  1
  5/6
  42
  #f
  92/67
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  25
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  104
  85
  13
  6
  71
  11
  82
  1
  229/258
  51
  #f
  7/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  25
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  105
  86
  13
  6
  71
  11
  82
  1
  227/258
  51
  #f
  121/86
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  25
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  110
  91
  13
  6
  76
  11
  87
  1
  42/47
  52
  #f
  10/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  25
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  110
  91
  13
  6
  76
  11
  87
  1
  42/47
  52
  #f
  10/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  25
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  110
  91
  13
  6
  76
  11
  87
  1
  42/47
  52
  #t
  10/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  25
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  110
  91
  13
  6
  76
  11
  87
  1
  42/47
  52
  #f
  10/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  25
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  111
  92
  13
  6
  76
  11
  87
  1
  125/141
  52
  #f
  33/23
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  25
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  112
  93
  13
  6
  76
  11
  87
  1
  124/141
  52
  #f
  134/93
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  25
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  113
  94
  13
  6
  76
  11
  87
  1
  41/47
  52
  #f
  68/47
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  25
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  114
  95
  13
  6
  76
  11
  87
  1
  122/141
  52
  #f
  138/95
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  25
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  41
  30
  8
  3
  24
  7
  31
  1
  101/114
  19
  #f
  41/30
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  facehugger
  1
  25
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  77
  59
  13
  5
  47
  11
  58
  1
  98/111
  37
  #f
  81/59
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  facehugger
  1
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  77
  59
  13
  5
  47
  11
  58
  1
  98/111
  37
  #f
  81/59
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  25
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  81
  63
  13
  5
  50
  11
  61
  1
  97/111
  39
  #f
  29/21
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  81
  63
  13
  5
  50
  11
  61
  1
  97/111
  39
  #f
  29/21
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  82
  64
  13
  5
  50
  11
  61
  1
  191/222
  39
  #f
  89/64
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  25
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  86
  67
  13
  6
  53
  11
  64
  1
  209/240
  42
  #t
  92/67
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  25
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  109
  90
  13
  6
  76
  11
  87
  1
  127/141
  56
  #f
  62/45
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  25
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  109
  90
  13
  6
  76
  11
  87
  1
  127/141
  56
  #f
  62/45
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  25
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  110
  91
  13
  6
  76
  11
  87
  1
  42/47
  56
  #f
  18/13
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  25
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  110
  91
  13
  6
  76
  11
  87
  1
  42/47
  56
  #t
  18/13
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  25
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  110
  91
  13
  6
  76
  11
  87
  1
  42/47
  56
  #f
  18/13
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  25
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  110
  91
  13
  6
  76
  11
  87
  1
  42/47
  56
  #f
  18/13
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  111
  92
  13
  6
  76
  11
  87
  1
  125/141
  56
  #f
  32/23
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  25
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  112
  93
  13
  6
  76
  11
  87
  1
  124/141
  56
  #f
  130/93
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  25
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  113
  94
  13
  6
  76
  11
  87
  1
  41/47
  56
  #f
  66/47
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  25
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  114
  95
  13
  6
  76
  11
  87
  1
  122/141
  56
  #f
  134/95
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  115
  96
  13
  6
  76
  11
  87
  1
  121/141
  56
  #f
  17/12
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  25
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  116
  97
  13
  6
  76
  11
  87
  1
  40/47
  56
  #f
  138/97
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  25
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  117
  98
  13
  6
  76
  11
  87
  1
  119/141
  56
  #f
  10/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  25
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  117
  98
  13
  6
  76
  11
  87
  1
  119/141
  56
  #f
  10/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  118
  99
  13
  6
  76
  11
  87
  1
  118/141
  56
  #f
  142/99
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  25
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  118
  99
  13
  6
  76
  11
  87
  1
  118/141
  56
  #f
  142/99
  ((0 0 0) (0 0 0) (0 0 0)))
