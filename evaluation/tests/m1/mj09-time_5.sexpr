'(clean-cache
  mj09
  1
  5
  21
  let
  "\"'(eval ((top) let (h) ...) (env ()))\""
  41
  26
  10
  5
  26
  10
  36
  1
  1
  11
  #f
  115/26
  ((3/2 3/2 0) (1 1 0) (1 1 0)))
'(clean-cache
  mj09
  1
  21
  let
  "\"'(eval (λ (b) (-> (let (g) ...) <-)) (env ((□? (b)))))\""
  #f)
'(clean-cache
  mj09
  1
  21
  ref-or-constructor
  "\"'(eval (λ (z) (-> z <-)) (env ((□? (z)) (□? (b)))))\""
  #f)
'(clean-cache
  mj09
  1
  21
  let
  "\"'(eval (let (g) (-> (let (f) ...) <-)) (env ((□? (b)))))\""
  #f)
'(clean-cache
  mj09
  1
  5
  21
  match
  "\"'(eval (λ (k) (-> (match b ...) <-)) (env ((□? (k)) (□? (b)))))\""
  60
  40
  14
  6
  22
  13
  35
  1
  161/240
  23
  #f
  19/4
  ((9/2 9/2 0) (9/2 9/2 0) (9/2 9/2 0)))
'(clean-cache
  mj09
  1
  5
  21
  app
  "\"'(eval (match b (#f) (_ (-> (app k 1) <-))) (env ((□? (k)) (□? (b)))))\""
  16
  8
  5
  3
  0
  0
  0
  1
  0
  5
  #f
  37/8
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  mj09
  1
  5
  21
  ref-or-constructor
  "\"'(eval (app (-> k <-) 1) (env ((□? (k)) (□? (b)))))\""
  6
  2
  2
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  mj09
  1
  5
  21
  app
  "\"'(eval (match b ((#f) (-> (app k 2) <-)) _) (env ((□? (k)) (□? (b)))))\""
  16
  8
  5
  3
  0
  0
  0
  1
  0
  5
  #f
  37/8
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  mj09
  1
  5
  21
  ref-or-constructor
  "\"'(eval (app (-> k <-) 2) (env ((□? (k)) (□? (b)))))\""
  6
  2
  2
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  mj09
  1
  5
  21
  ref-or-constructor
  "\"'(eval (match (-> b <-) (#f) _) (env ((□? (k)) (□? (b)))))\""
  10
  5
  3
  2
  4
  3
  7
  1
  4/5
  4
  #f
  26/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  mj09
  1
  21
  let
  "\"'(eval (let (f) (-> (let (y) ...) <-)) (env ((□? (b)))))\""
  #f)
'(clean-cache
  mj09
  1
  5
  21
  app
  "\"'(eval\n  (let (... () (y (-> (app f (λ (x) ...)) <-)) () ...) ...)\n  (env ((□? (b)))))\""
  59
  37
  14
  8
  28
  13
  41
  1
  13/17
  20
  #f
  176/37
  ((4 4 0) (4 4 0) (7/2 4 0)))
'(clean-cache
  mj09
  1
  5
  21
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)) (□? (b)))))\""
  11
  5
  3
  3
  0
  0
  0
  1
  0
  2
  #f
  22/5
  ((1/2 1/2 0) (0 0 0) (0 0 0)))
'(clean-cache
  mj09
  1
  21
  app
  "\"'(eval (let (y) (-> (app g y) <-)) (env ((□? (b)))))\""
  #f)
'(clean-cache
  mj09
  1
  5
  21
  ref-or-constructor
  "\"'(eval (app g (-> y <-)) (env ((□? (b)))))\""
  62
  40
  14
  8
  30
  13
  43
  1
  41/54
  20
  #f
  47/10
  ((4 9/2 0) (4 9/2 0) (4 4 0)))
'(clean-cache
  mj09
  1
  5
  21
  let
  "\"'(eval (let (h) (-> (let (x ... y) ...) <-)) (env ()))\""
  40
  25
  10
  5
  25
  10
  35
  1
  1
  11
  #f
  111/25
  ((3/2 3/2 0) (1 1 0) (1 1 0)))
'(clean-cache
  mj09
  1
  5
  21
  app
  "\"'(eval (let (... x (y (-> (app h (app #f)) <-)) () ...) ...) (env ()))\""
  38
  23
  10
  5
  23
  10
  33
  1
  1
  11
  #f
  103/23
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  mj09
  1
  5
  21
  app
  "\"'(eval (app h (-> (app #f) <-)) (env ()))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  mj09
  1
  5
  21
  app
  "\"'(eval (let (... () (x (-> (app h (app #t)) <-)) y ...) ...) (env ()))\""
  38
  23
  10
  5
  23
  10
  33
  1
  1
  11
  #f
  103/23
  ((1 3/2 0) (1 1 0) (1 1 0)))
'(clean-cache
  mj09
  1
  5
  21
  app
  "\"'(eval (app h (-> (app #t) <-)) (env ()))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  mj09
  1
  5
  21
  ref-or-constructor
  "\"'(eval (let (x ... y) (-> y <-)) (env ()))\""
  39
  24
  10
  5
  24
  10
  34
  1
  1
  11
  #f
  107/24
  ((1 1 0) (1 1 0) (1 3/2 0)))
'(shuffled-cache
  0
  mj09
  1
  5
  21
  ref-or-constructor
  "\"'(eval (app g (-> y <-)) (env ((□? (b)))))\""
  62
  40
  14
  8
  30
  13
  43
  1
  41/54
  20
  #f
  47/10
  ((4 9/2 0) (4 4 0) (4 4 0)))
'(shuffled-cache
  0
  mj09
  1
  5
  21
  let
  "\"'(eval ((top) let (h) ...) (env ()))\""
  80
  54
  16
  10
  44
  15
  59
  1
  163/186
  24
  #f
  124/27
  ((1/2 1/2 0) (1/2 1/2 0) (0 0 0)))
'(shuffled-cache
  0
  mj09
  1
  5
  21
  ref-or-constructor
  "\"'(eval (λ (z) (-> z <-)) (env ((□? (z)) (□? (b)))))\""
  88
  56
  19
  13
  45
  17
  62
  1
  161/186
  24
  #f
  32/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  mj09
  1
  5
  21
  app
  "\"'(eval (let (... x (y (-> (app h (app #f)) <-)) () ...) ...) (env ()))\""
  88
  56
  19
  13
  45
  17
  62
  1
  161/186
  24
  #f
  32/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  mj09
  1
  5
  21
  ref-or-constructor
  "\"'(eval (app (-> k <-) 1) (env ((□? (k)) (□? (b)))))\""
  90
  57
  19
  14
  45
  17
  62
  1
  80/93
  25
  #t
  262/57
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  mj09
  1
  5
  21
  ref-or-constructor
  "\"'(eval (let (x ... y) (-> y <-)) (env ()))\""
  90
  57
  19
  14
  45
  17
  62
  1
  80/93
  25
  #f
  262/57
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  mj09
  1
  5
  21
  app
  "\"'(eval (app h (-> (app #f) <-)) (env ()))\""
  90
  57
  19
  14
  45
  17
  62
  1
  80/93
  25
  #t
  262/57
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  mj09
  1
  5
  21
  app
  "\"'(eval (let (... () (x (-> (app h (app #t)) <-)) y ...) ...) (env ()))\""
  100
  66
  19
  15
  54
  17
  71
  1
  173/198
  28
  #f
  301/66
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  mj09
  1
  5
  21
  let
  "\"'(eval (let (g) (-> (let (f) ...) <-)) (env ((□? (b)))))\""
  101
  67
  19
  15
  54
  17
  71
  1
  19/22
  28
  #f
  305/67
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  mj09
  1
  5
  21
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)) (□? (b)))))\""
  106
  68
  20
  18
  54
  17
  71
  1
  283/330
  28
  #f
  309/68
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  mj09
  1
  5
  21
  app
  "\"'(eval (app h (-> (app #t) <-)) (env ()))\""
  106
  68
  20
  18
  54
  17
  71
  1
  283/330
  28
  #t
  309/68
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  mj09
  1
  5
  21
  let
  "\"'(eval (let (h) (-> (let (x ... y) ...) <-)) (env ()))\""
  106
  68
  20
  18
  54
  17
  71
  1
  283/330
  28
  #f
  309/68
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  mj09
  1
  5
  21
  let
  "\"'(eval (λ (b) (-> (let (g) ...) <-)) (env ((□? (b)))))\""
  107
  69
  20
  18
  54
  17
  71
  1
  839/990
  28
  #f
  313/69
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  mj09
  1
  5
  21
  let
  "\"'(eval (let (f) (-> (let (y) ...) <-)) (env ((□? (b)))))\""
  108
  70
  20
  18
  54
  17
  71
  1
  829/990
  28
  #f
  317/70
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  mj09
  1
  5
  21
  ref-or-constructor
  "\"'(eval (app (-> k <-) 2) (env ((□? (k)) (□? (b)))))\""
  109
  71
  20
  18
  54
  17
  71
  1
  412/495
  29
  #t
  323/71
  ((0 0 0) (0 0 0) (0 1/2 0)))
'(shuffled-cache
  0
  mj09
  1
  5
  21
  app
  "\"'(eval (match b (#f) (_ (-> (app k 1) <-))) (env ((□? (k)) (□? (b)))))\""
  112
  74
  20
  18
  54
  17
  71
  1
  37/45
  31
  #f
  337/74
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  mj09
  1
  5
  21
  ref-or-constructor
  "\"'(eval (match (-> b <-) (#f) _) (env ((□? (k)) (□? (b)))))\""
  113
  75
  20
  18
  54
  17
  71
  1
  809/990
  31
  #f
  343/75
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  mj09
  1
  5
  21
  app
  "\"'(eval (match b ((#f) (-> (app k 2) <-)) _) (env ((□? (k)) (□? (b)))))\""
  116
  78
  20
  18
  54
  17
  71
  1
  799/990
  33
  #f
  119/26
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  mj09
  1
  5
  21
  app
  "\"'(eval (let (y) (-> (app g y) <-)) (env ((□? (b)))))\""
  117
  79
  20
  18
  54
  17
  71
  1
  263/330
  33
  #f
  361/79
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  mj09
  1
  5
  21
  match
  "\"'(eval (λ (k) (-> (match b ...) <-)) (env ((□? (k)) (□? (b)))))\""
  122
  84
  20
  18
  54
  17
  71
  1
  43/55
  35
  #f
  383/84
  ((1/2 1/2 0) (1/2 1 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  mj09
  1
  5
  21
  app
  "\"'(eval\n  (let (... () (y (-> (app f (λ (x) ...)) <-)) () ...) ...)\n  (env ((□? (b)))))\""
  122
  84
  20
  18
  54
  17
  71
  1
  43/55
  35
  #f
  383/84
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  mj09
  1
  21
  app
  "\"'(eval (let (y) (-> (app g y) <-)) (env ((□? (b)))))\""
  #f)
'(shuffled-cache
  1
  mj09
  1
  5
  21
  app
  "\"'(eval (let (... () (x (-> (app h (app #t)) <-)) y ...) ...) (env ()))\""
  91
  59
  20
  12
  45
  17
  62
  1
  137/168
  28
  #f
  276/59
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  mj09
  1
  5
  21
  let
  "\"'(eval (λ (b) (-> (let (g) ...) <-)) (env ((□? (b)))))\""
  95
  63
  20
  12
  48
  17
  65
  1
  45/56
  28
  #f
  292/63
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  mj09
  1
  5
  21
  let
  "\"'(eval (let (f) (-> (let (y) ...) <-)) (env ((□? (b)))))\""
  96
  64
  20
  12
  48
  17
  65
  1
  19/24
  28
  #f
  37/8
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  mj09
  1
  5
  21
  app
  "\"'(eval (match b (#f) (_ (-> (app k 1) <-))) (env ((□? (k)) (□? (b)))))\""
  101
  68
  20
  13
  48
  17
  65
  1
  65/84
  31
  #f
  79/17
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  mj09
  1
  5
  21
  let
  "\"'(eval (let (h) (-> (let (x ... y) ...) <-)) (env ()))\""
  106
  73
  20
  13
  53
  17
  70
  1
  155/192
  32
  #f
  337/73
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  mj09
  1
  5
  21
  ref-or-constructor
  "\"'(eval (λ (z) (-> z <-)) (env ((□? (z)) (□? (b)))))\""
  110
  74
  20
  16
  53
  17
  70
  1
  77/96
  32
  #f
  341/74
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  mj09
  1
  5
  21
  let
  "\"'(eval ((top) let (h) ...) (env ()))\""
  111
  75
  20
  16
  54
  17
  71
  1
  80/99
  32
  #f
  23/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  mj09
  1
  5
  21
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)) (□? (b)))))\""
  116
  76
  21
  19
  54
  17
  71
  1
  397/495
  32
  #f
  349/76
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  mj09
  1
  5
  21
  app
  "\"'(eval (app h (-> (app #f) <-)) (env ()))\""
  116
  76
  21
  19
  54
  17
  71
  1
  397/495
  32
  #t
  349/76
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  mj09
  1
  5
  21
  app
  "\"'(eval\n  (let (... () (y (-> (app f (λ (x) ...)) <-)) () ...) ...)\n  (env ((□? (b)))))\""
  116
  76
  21
  19
  54
  17
  71
  1
  397/495
  32
  #f
  349/76
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  mj09
  1
  5
  21
  app
  "\"'(eval (app h (-> (app #t) <-)) (env ()))\""
  116
  76
  21
  19
  54
  17
  71
  1
  397/495
  32
  #t
  349/76
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  mj09
  1
  5
  21
  ref-or-constructor
  "\"'(eval (match (-> b <-) (#f) _) (env ((□? (k)) (□? (b)))))\""
  117
  77
  21
  19
  54
  17
  71
  1
  263/330
  32
  #f
  355/77
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  mj09
  1
  5
  21
  app
  "\"'(eval (let (... x (y (-> (app h (app #f)) <-)) () ...) ...) (env ()))\""
  117
  77
  21
  19
  54
  17
  71
  1
  263/330
  32
  #f
  355/77
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  mj09
  1
  5
  21
  match
  "\"'(eval (λ (k) (-> (match b ...) <-)) (env ((□? (k)) (□? (b)))))\""
  123
  83
  21
  19
  54
  17
  71
  1
  511/660
  35
  #f
  382/83
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  mj09
  1
  5
  21
  app
  "\"'(eval (match b ((#f) (-> (app k 2) <-)) _) (env ((□? (k)) (□? (b)))))\""
  125
  85
  21
  19
  54
  17
  71
  1
  761/990
  36
  #f
  23/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  mj09
  1
  5
  21
  ref-or-constructor
  "\"'(eval (let (x ... y) (-> y <-)) (env ()))\""
  125
  85
  21
  19
  54
  17
  71
  1
  761/990
  36
  #f
  23/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  mj09
  1
  5
  21
  ref-or-constructor
  "\"'(eval (app g (-> y <-)) (env ((□? (b)))))\""
  125
  85
  21
  19
  54
  17
  71
  1
  761/990
  36
  #f
  23/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  mj09
  1
  5
  21
  let
  "\"'(eval (let (g) (-> (let (f) ...) <-)) (env ((□? (b)))))\""
  126
  86
  21
  19
  54
  17
  71
  1
  751/990
  36
  #f
  395/86
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  mj09
  1
  5
  21
  ref-or-constructor
  "\"'(eval (app (-> k <-) 1) (env ((□? (k)) (□? (b)))))\""
  126
  86
  21
  19
  54
  17
  71
  1
  751/990
  36
  #t
  395/86
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  mj09
  1
  5
  21
  ref-or-constructor
  "\"'(eval (app (-> k <-) 2) (env ((□? (k)) (□? (b)))))\""
  127
  87
  21
  19
  54
  17
  71
  1
  749/990
  37
  #t
  401/87
  ((0 0 0) (0 0 0) (0 0 0)))
