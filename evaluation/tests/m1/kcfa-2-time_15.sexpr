'(clean-cache
  kcfa-2
  1
  15
  22
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  37
  21
  8
  8
  21
  8
  29
  1
  1
  21
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  15
  22
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  74
  42
  15
  17
  29
  11
  40
  1
  13/18
  35
  #f
  61/42
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  kcfa-2
  1
  15
  22
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (z) ...) (λ (y1 y2) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  50
  24
  12
  14
  5
  3
  8
  1
  5/12
  20
  #f
  17/12
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  kcfa-2
  1
  15
  22
  ref-or-constructor
  "\"'(eval (λ (y1 y2) (-> y1 <-)) (env ((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  32
  12
  9
  11
  5
  3
  8
  1
  5/8
  10
  #f
  4/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  kcfa-2
  1
  15
  22
  app
  "\"'(eval (λ (z) (-> (app z x1 x2) <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  45
  22
  12
  11
  5
  3
  8
  1
  5/11
  19
  #f
  3/2
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  kcfa-2
  1
  15
  22
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  13
  6
  3
  4
  0
  0
  0
  1
  0
  5
  #f
  7/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  15
  22
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  13
  6
  3
  4
  5
  3
  8
  1
  5/6
  5
  #f
  7/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  15
  22
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  6
  2
  1
  3
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  15
  22
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  72
  40
  15
  17
  23
  11
  34
  1
  2/3
  33
  #f
  59/40
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  kcfa-2
  1
  15
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  66
  34
  15
  17
  21
  11
  32
  1
  31/45
  29
  #f
  3/2
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  kcfa-2
  1
  15
  22
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  4
  2
  0
  2
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  15
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  5
  2
  1
  2
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  15
  22
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  66
  34
  15
  17
  21
  11
  32
  1
  31/45
  29
  #f
  3/2
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  kcfa-2
  1
  15
  22
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  4
  2
  0
  2
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  15
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  5
  2
  1
  2
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  15
  22
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  37
  22
  8
  7
  19
  8
  27
  1
  9/10
  22
  #t
  1
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  kcfa-2
  1
  15
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  35
  20
  8
  7
  18
  8
  26
  1
  35/38
  20
  #t
  1
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  kcfa-2
  1
  15
  22
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  15
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  4
  2
  1
  1
  1
  1
  2
  1
  1/2
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  15
  22
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  35
  20
  8
  7
  18
  8
  26
  1
  35/38
  20
  #t
  1
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  kcfa-2
  1
  15
  22
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  15
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  4
  2
  1
  1
  1
  1
  2
  1
  1/2
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  15
  22
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  13
  6
  3
  4
  0
  0
  0
  1
  0
  5
  #f
  7/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  15
  22
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  48
  26
  11
  11
  18
  8
  26
  1
  17/24
  25
  #t
  27/26
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  15
  22
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  57
  30
  14
  13
  18
  8
  26
  1
  21/32
  29
  #t
  7/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  15
  22
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  59
  32
  14
  13
  19
  8
  27
  1
  67/104
  31
  #t
  37/32
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  15
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  62
  34
  15
  13
  19
  8
  27
  1
  65/108
  33
  #t
  39/34
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  15
  22
  ref-or-constructor
  "\"'(eval (λ (y1 y2) (-> y1 <-)) (env ((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  128
  64
  37
  27
  36
  18
  54
  1
  325/486
  59
  #f
  107/64
  ((4 4 0) (4 4 0) (4 4 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  15
  22
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (z) ...) (λ (y1 y2) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  173
  89
  43
  41
  48
  24
  72
  1
  155/243
  79
  #f
  145/89
  ((4 4 0) (4 4 0) (4 4 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  15
  22
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  176
  92
  43
  41
  48
  24
  72
  1
  1511/2430
  82
  #t
  37/23
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  15
  22
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  177
  93
  43
  41
  48
  24
  72
  1
  1507/2430
  82
  #f
  50/31
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  15
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  178
  94
  43
  41
  48
  24
  72
  1
  1507/2520
  83
  #t
  151/94
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  15
  22
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  185
  99
  43
  43
  52
  24
  76
  1
  211/360
  87
  #f
  157/99
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  15
  22
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  188
  102
  43
  43
  52
  24
  76
  1
  719/1260
  90
  #t
  80/51
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  15
  22
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  189
  103
  43
  43
  52
  24
  76
  1
  199/360
  91
  #t
  161/103
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  15
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  192
  106
  43
  43
  54
  24
  78
  1
  1453/2610
  94
  #t
  82/53
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  15
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  193
  107
  43
  43
  54
  24
  78
  1
  1423/2610
  95
  #t
  167/107
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  15
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  193
  107
  43
  43
  54
  24
  78
  1
  1423/2610
  95
  #t
  167/107
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  15
  22
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  199
  112
  43
  44
  54
  24
  78
  1
  674/1305
  98
  #f
  11/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  15
  22
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  203
  115
  43
  45
  57
  24
  81
  1
  1573/2790
  101
  #t
  179/115
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  15
  22
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  204
  116
  43
  45
  57
  24
  81
  1
  764/1395
  102
  #t
  45/29
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  15
  22
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  208
  120
  43
  45
  57
  24
  81
  1
  734/1395
  104
  #f
  31/20
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  15
  22
  app
  "\"'(eval (λ (z) (-> (app z x1 x2) <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  216
  127
  43
  46
  57
  24
  81
  1
  3371/6510
  109
  #f
  211/127
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  15
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  223
  134
  43
  46
  59
  24
  83
  1
  1693/3360
  114
  #f
  111/67
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  15
  22
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  13
  6
  3
  4
  0
  0
  0
  1
  0
  5
  #f
  7/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  15
  22
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  103
  55
  24
  24
  37
  17
  54
  1
  47/69
  47
  #f
  15/11
  ((3 3 0) (3 3 0) (3 3 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  15
  22
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  114
  59
  28
  27
  37
  17
  54
  1
  91/138
  51
  #t
  92/59
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  15
  22
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  115
  60
  28
  27
  37
  17
  54
  1
  44/69
  52
  #t
  31/20
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  15
  22
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  116
  61
  28
  27
  37
  17
  54
  1
  29/46
  52
  #f
  95/61
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  15
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  117
  62
  28
  27
  37
  17
  54
  1
  29/48
  53
  #t
  49/31
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  15
  22
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  120
  65
  28
  27
  37
  17
  54
  1
  211/360
  56
  #t
  101/65
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  15
  22
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  123
  68
  28
  27
  37
  17
  54
  1
  409/720
  58
  #f
  105/68
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  15
  22
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  126
  71
  28
  27
  37
  17
  54
  1
  11/20
  61
  #t
  108/71
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  15
  22
  app
  "\"'(eval (λ (z) (-> (app z x1 x2) <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  168
  94
  40
  34
  45
  23
  68
  1
  47/90
  81
  #f
  155/94
  ((4 4 0) (4 4 0) (4 4 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  15
  22
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  174
  98
  41
  35
  48
  24
  72
  1
  451/810
  85
  #t
  159/98
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  15
  22
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  178
  101
  41
  36
  51
  24
  75
  1
  263/435
  88
  #t
  162/101
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  15
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  194
  114
  41
  39
  57
  24
  81
  1
  11161/18900
  98
  #f
  91/57
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  15
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  195
  115
  41
  39
  57
  24
  81
  1
  5423/9450
  99
  #t
  183/115
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  15
  22
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  198
  118
  41
  39
  57
  24
  81
  1
  2659/4725
  101
  #f
  187/118
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  15
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  201
  121
  41
  39
  59
  24
  83
  1
  11371/20160
  104
  #t
  190/121
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  15
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  202
  122
  41
  39
  59
  24
  83
  1
  691/1260
  105
  #t
  191/122
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  15
  22
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (z) ...) (λ (y1 y2) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  209
  127
  41
  41
  59
  24
  83
  1
  5443/10080
  109
  #f
  201/127
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  15
  22
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  210
  128
  41
  41
  59
  24
  83
  1
  10571/20160
  110
  #t
  101/64
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  15
  22
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  211
  129
  41
  41
  59
  24
  83
  1
  641/1260
  111
  #t
  203/129
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  15
  22
  ref-or-constructor
  "\"'(eval (λ (y1 y2) (-> y1 <-)) (env ((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  218
  130
  42
  46
  59
  24
  83
  1
  3407/6720
  111
  #f
  41/26
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  15
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  219
  131
  42
  46
  59
  24
  83
  1
  1131/2240
  112
  #t
  208/131
  ((0 0 0) (0 0 0) (0 0 0)))
