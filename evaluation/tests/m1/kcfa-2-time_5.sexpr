'(clean-cache
  kcfa-2
  1
  5
  22
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  37
  21
  8
  8
  21
  8
  29
  1
  1
  21
  #t
  5
  ((1 1 0) (1 3/2 0) (1 1 0)))
'(clean-cache
  kcfa-2
  1
  22
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  #f)
'(clean-cache
  kcfa-2
  1
  5
  22
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (z) ...) (λ (y1 y2) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  50
  24
  12
  14
  5
  3
  8
  1
  5/12
  20
  #f
  65/12
  ((9/2 9/2 0) (4 4 0) (4 4 0)))
'(clean-cache
  kcfa-2
  1
  5
  22
  ref-or-constructor
  "\"'(eval (λ (y1 y2) (-> y1 <-)) (env ((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  32
  12
  9
  11
  5
  3
  8
  1
  5/8
  10
  #f
  16/3
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  kcfa-2
  1
  5
  22
  app
  "\"'(eval (λ (z) (-> (app z x1 x2) <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  45
  22
  12
  11
  5
  3
  8
  1
  5/11
  19
  #f
  11/2
  ((9/2 5 0) (4 4 0) (4 4 0)))
'(clean-cache
  kcfa-2
  1
  5
  22
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  13
  6
  3
  4
  0
  0
  0
  1
  0
  5
  #f
  31/6
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  kcfa-2
  1
  5
  22
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  13
  6
  3
  4
  5
  3
  8
  1
  5/6
  5
  #f
  31/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  5
  22
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  6
  2
  1
  3
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  22
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  #f)
'(clean-cache
  kcfa-2
  1
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  #f)
'(clean-cache
  kcfa-2
  1
  5
  22
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  4
  2
  0
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  5
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  5
  2
  1
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  22
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  #f)
'(clean-cache
  kcfa-2
  1
  5
  22
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  4
  2
  0
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  5
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  5
  2
  1
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  5
  22
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  37
  22
  8
  7
  19
  8
  27
  1
  9/10
  22
  #t
  5
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  kcfa-2
  1
  5
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  35
  20
  8
  7
  18
  8
  26
  1
  35/38
  20
  #t
  5
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  kcfa-2
  1
  5
  22
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  5
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  4
  2
  1
  1
  1
  1
  2
  1
  1/2
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  5
  22
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  35
  20
  8
  7
  18
  8
  26
  1
  35/38
  20
  #t
  5
  ((1 3/2 0) (3/2 3/2 0) (1 1 0)))
'(clean-cache
  kcfa-2
  1
  5
  22
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  1
  5
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  4
  2
  1
  1
  1
  1
  2
  1
  1/2
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  5
  22
  app
  "\"'(eval (λ (z) (-> (app z x1 x2) <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  45
  22
  12
  11
  5
  3
  8
  1
  5/11
  19
  #f
  11/2
  ((4 4 0) (4 4 0) (4 9/2 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  22
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  0
  kcfa-2
  1
  5
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  35
  20
  8
  7
  18
  8
  26
  1
  35/38
  20
  #t
  5
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  5
  22
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  41
  22
  9
  10
  18
  8
  26
  1
  33/38
  22
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  22
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (z) ...) (λ (y1 y2) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  0
  kcfa-2
  1
  22
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  0
  kcfa-2
  1
  5
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  4
  2
  1
  1
  1
  1
  2
  1
  1/2
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  5
  22
  ref-or-constructor
  "\"'(eval (λ (y1 y2) (-> y1 <-)) (env ((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  35
  14
  10
  11
  6
  4
  10
  1
  3/5
  12
  #f
  37/7
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  5
  22
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  36
  15
  10
  11
  6
  4
  10
  1
  3/5
  12
  #f
  16/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  5
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  45
  18
  13
  14
  8
  6
  14
  1
  7/12
  15
  #t
  16/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  5
  22
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  84
  41
  19
  24
  30
  12
  42
  1
  241/300
  37
  #f
  212/41
  ((3 3 0) (3 3 0) (3 3 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  5
  22
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  85
  42
  19
  24
  30
  12
  42
  1
  467/600
  38
  #t
  31/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  5
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  115
  60
  25
  30
  44
  18
  62
  1
  842/1155
  55
  #f
  103/20
  ((3 7/2 0) (3 3 0) (3 3 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  5
  22
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  122
  67
  25
  30
  44
  18
  62
  1
  47/70
  60
  #f
  347/67
  ((1 1 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  5
  22
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  129
  72
  25
  32
  49
  18
  67
  1
  1349/1820
  65
  #t
  31/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  5
  22
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  133
  76
  25
  32
  49
  18
  67
  1
  1349/1960
  69
  #t
  98/19
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  5
  22
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  134
  77
  25
  32
  49
  18
  67
  1
  657/980
  70
  #t
  397/77
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  5
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  135
  78
  25
  32
  49
  18
  67
  1
  657/980
  71
  #t
  31/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  5
  22
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  136
  79
  25
  32
  49
  18
  67
  1
  1279/1960
  72
  #t
  408/79
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  5
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  137
  80
  25
  32
  49
  18
  67
  1
  311/490
  73
  #t
  413/80
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  5
  22
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  138
  81
  25
  32
  49
  18
  67
  1
  1209/1960
  74
  #t
  418/81
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  1
  5
  22
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  142
  85
  25
  32
  49
  18
  67
  1
  403/700
  78
  #t
  438/85
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  5
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  35
  20
  8
  7
  18
  8
  26
  1
  35/38
  20
  #t
  5
  ((3/2 3/2 0) (1 1 0) (1 3/2 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  5
  22
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  61
  37
  12
  12
  34
  12
  46
  1
  41/46
  37
  #t
  5
  ((3/2 3/2 0) (2 5/2 0) (3/2 3/2 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  5
  22
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  62
  38
  12
  12
  34
  12
  46
  1
  20/23
  38
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  5
  22
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  66
  40
  12
  14
  34
  12
  46
  1
  4/5
  40
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  5
  22
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  71
  42
  13
  16
  34
  12
  46
  1
  58/75
  42
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  5
  22
  ref-or-constructor
  "\"'(eval (λ (y1 y2) (-> y1 <-)) (env ((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  99
  53
  21
  25
  34
  12
  46
  1
  263/375
  51
  #f
  273/53
  ((7/2 4 0) (7/2 7/2 0) (7/2 7/2 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  5
  22
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  100
  54
  21
  25
  34
  12
  46
  1
  262/375
  51
  #f
  31/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  22
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  1
  kcfa-2
  1
  5
  22
  app
  "\"'(eval (λ (z) (-> (app z x1 x2) <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  45
  22
  12
  11
  5
  3
  8
  1
  5/11
  19
  #f
  11/2
  ((4 9/2 0) (4 9/2 0) (7/2 7/2 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  5
  22
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  86
  43
  21
  22
  21
  11
  32
  1
  16/25
  39
  #f
  229/43
  ((7/2 7/2 0) (7/2 7/2 0) (7/2 4 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  5
  22
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  90
  47
  21
  22
  21
  11
  32
  1
  48/85
  43
  #t
  249/47
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  5
  22
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  102
  56
  22
  24
  29
  12
  41
  1
  163/240
  52
  #t
  21/4
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  5
  22
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  108
  61
  22
  25
  33
  12
  45
  1
  161/240
  56
  #f
  320/61
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  5
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  109
  62
  22
  25
  33
  12
  45
  1
  161/250
  57
  #t
  163/31
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  5
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  110
  63
  22
  25
  33
  12
  45
  1
  161/260
  58
  #t
  331/63
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  5
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  140
  81
  28
  31
  47
  18
  65
  1
  598/945
  75
  #f
  47/9
  ((7/2 7/2 0) (7/2 4 0) (7/2 7/2 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  5
  22
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (z) ...) (λ (y1 y2) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  149
  87
  28
  34
  47
  18
  65
  1
  577/945
  79
  #f
  455/87
  ((2 2 0) (2 2 0) (2 5/2 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  5
  22
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  152
  89
  28
  35
  49
  18
  67
  1
  1259/1960
  81
  #t
  465/89
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  5
  22
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  156
  93
  28
  35
  49
  18
  67
  1
  3637/5880
  83
  #f
  487/93
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  5
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  156
  93
  28
  35
  49
  18
  67
  1
  3637/5880
  83
  #t
  487/93
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  5
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  157
  94
  28
  35
  49
  18
  67
  1
  883/1470
  84
  #t
  246/47
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  1
  5
  22
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  158
  95
  28
  35
  49
  18
  67
  1
  3427/5880
  85
  #t
  497/95
  ((0 0 0) (0 0 0) (0 0 0)))
