'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  46
  27
  9
  10
  27
  9
  36
  1
  1
  27
  #t
  5
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  101
  60
  18
  23
  41
  13
  54
  1
  17/24
  50
  #f
  82/15
  ((10 21/2 0) (10 10 0) (9 9 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (f3) ...) (λ (x3) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  77
  42
  15
  20
  5
  3
  8
  1
  5/18
  35
  #f
  229/42
  ((8 8 0) (17/2 17/2 0) (19/2 10 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (λ (x3) (-> (app (λ (z) ...) (λ (y1 y2 y3) ...)) <-))\n  (env ((□? (x3)) (□? (x2)) (□? (x1)))))\""
  53
  24
  12
  17
  5
  3
  8
  1
  5/12
  20
  #f
  65/12
  ((13/2 13/2 0) (11/2 6 0) (6 6 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval\n  (λ (y1 y2 y3) (-> y1 <-))\n  (env ((□? (y1 y2 y3)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  35
  12
  9
  14
  5
  3
  8
  1
  5/8
  10
  #f
  16/3
  ((5/2 5/2 0) (5/2 5/2 0) (3 3 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (λ (z) (-> (app z x1 x2 x3) <-))\n  (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  48
  22
  12
  14
  5
  3
  8
  1
  5/11
  19
  #f
  11/2
  ((11/2 6 0) (6 13/2 0) (11/2 11/2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app z x1 x2 (-> x3 <-)) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  14
  6
  3
  5
  0
  0
  0
  1
  0
  5
  #f
  31/6
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-) x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  14
  6
  3
  5
  0
  0
  0
  1
  0
  5
  #f
  31/6
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  14
  6
  3
  5
  5
  3
  8
  1
  5/6
  5
  #f
  31/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  7
  2
  1
  4
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  let
  "\"'(eval (λ (f3) (-> (let (_) ...) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  75
  40
  15
  20
  5
  3
  8
  1
  5/16
  33
  #f
  219/40
  ((9 9 0) (9 9 0) (19/2 19/2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f3 (app #t)) <-)) () ...) ...)\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  69
  34
  15
  20
  5
  3
  8
  1
  1/3
  29
  #f
  11/2
  ((17/2 17/2 0) (17/2 17/2 0) (8 17/2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f3 (-> (app #t) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  5
  2
  0
  3
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #t)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  6
  2
  1
  3
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (_) (-> (app f3 (app #f)) <-))\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  69
  34
  15
  20
  5
  3
  8
  1
  1/3
  29
  #f
  11/2
  ((8 8 0) (8 8 0) (8 8 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f3 (-> (app #f) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  5
  2
  0
  3
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #f)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  6
  2
  1
  3
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  99
  58
  18
  23
  35
  13
  48
  1
  2/3
  48
  #f
  159/29
  ((27/2 27/2 0) (13 13 0) (12 12 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  93
  52
  18
  23
  33
  13
  46
  1
  43/63
  44
  #f
  11/2
  ((11 23/2 0) (11 11 0) (13 13 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  4
  2
  0
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  5
  2
  1
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  93
  52
  18
  23
  33
  13
  46
  1
  43/63
  44
  #f
  11/2
  ((13 13 0) (25/2 25/2 0) (23/2 23/2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  4
  2
  0
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  5
  2
  1
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  46
  28
  9
  9
  25
  9
  34
  1
  12/13
  28
  #t
  5
  ((2 2 0) (2 2 0) (5/2 5/2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  44
  26
  9
  9
  24
  9
  33
  1
  47/50
  26
  #t
  5
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  4
  2
  1
  1
  1
  1
  2
  1
  1/2
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  44
  26
  9
  9
  24
  9
  33
  1
  47/50
  26
  #t
  5
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  4
  2
  1
  1
  1
  1
  2
  1
  1/2
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f3 (-> (app #t) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  5
  2
  0
  3
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  let
  "\"'(eval (λ (f3) (-> (let (_) ...) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  80
  45
  15
  20
  5
  3
  8
  1
  5/18
  38
  #f
  244/45
  ((19/2 10 0) (19/2 19/2 0) (19/2 19/2 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (λ (x3) (-> (app (λ (z) ...) (λ (y1 y2 y3) ...)) <-))\n  (env ((□? (x3)) (□? (x2)) (□? (x1)))))\""
  120
  64
  24
  32
  5
  3
  8
  1
  5/18
  53
  #f
  349/64
  ((17/2 17/2 0) (19/2 19/2 0) (17/2 17/2 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f3 (-> (app #f) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  125
  69
  24
  32
  5
  3
  8
  1
  1/4
  58
  #t
  374/69
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  126
  70
  24
  32
  5
  3
  8
  1
  9/40
  59
  #t
  379/70
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (f3) ...) (λ (x3) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  138
  79
  24
  35
  5
  3
  8
  1
  9/44
  66
  #f
  428/79
  ((1 1 0) (1 1 0) (3/2 3/2 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  174
  101
  30
  43
  26
  9
  35
  1
  1053/2170
  88
  #t
  538/101
  ((13/2 13/2 0) (8 8 0) (13/2 13/2 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (_) (-> (app f3 (app #f)) <-))\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  174
  101
  30
  43
  26
  9
  35
  1
  1053/2170
  88
  #f
  538/101
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  175
  102
  30
  43
  26
  9
  35
  1
  1053/2240
  89
  #t
  181/34
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #f)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  175
  102
  30
  43
  26
  9
  35
  1
  1053/2240
  89
  #t
  181/34
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  206
  121
  35
  50
  44
  14
  58
  1
  121/240
  107
  #f
  639/121
  ((15/2 15/2 0) (17/2 17/2 0) (15/2 15/2 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval\n  (λ (y1 y2 y3) (-> y1 <-))\n  (env ((□? (y1 y2 y3)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  210
  122
  35
  53
  44
  14
  58
  1
  2899/5760
  107
  #f
  645/122
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  215
  123
  36
  56
  44
  14
  58
  1
  2839/5760
  108
  #t
  217/41
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  219
  127
  36
  56
  44
  14
  58
  1
  167/360
  112
  #t
  671/127
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  220
  128
  36
  56
  44
  14
  58
  1
  1417/3060
  113
  #t
  339/64
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  221
  129
  36
  56
  44
  14
  58
  1
  943/2040
  113
  #f
  228/43
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (λ (z) (-> (app z x1 x2 x3) <-))\n  (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  224
  132
  36
  56
  44
  14
  58
  1
  1291/2805
  115
  #f
  175/33
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  227
  135
  36
  56
  46
  14
  60
  1
  2692/5775
  118
  #t
  143/27
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  229
  137
  36
  56
  47
  14
  61
  1
  5549/11880
  120
  #t
  725/137
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  31
  ref-or-constructor
  "\"'(eval (app z x1 x2 (-> x3 <-)) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-) x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  14
  6
  3
  5
  0
  0
  0
  1
  0
  5
  #f
  31/6
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  122
  67
  27
  28
  43
  19
  62
  1
  53/81
  58
  #f
  362/67
  ((10 21/2 0) (10 21/2 0) (21/2 11 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  123
  68
  27
  28
  43
  19
  62
  1
  53/84
  59
  #t
  369/68
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  126
  70
  28
  28
  44
  20
  64
  1
  28/45
  61
  #t
  379/70
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  132
  76
  28
  28
  46
  20
  66
  1
  286/465
  65
  #f
  411/76
  ((1/2 1/2 0) (1 1 0) (1/2 1 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  202
  119
  40
  43
  72
  28
  100
  1
  143/240
  100
  #f
  648/119
  ((35/2 35/2 0) (35/2 18 0) (19 19 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  203
  120
  40
  43
  72
  28
  100
  1
  557/960
  101
  #t
  653/120
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  206
  123
  40
  43
  72
  28
  100
  1
  17/30
  104
  #t
  668/123
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  216
  130
  40
  46
  79
  28
  107
  1
  35/54
  111
  #t
  703/130
  ((0 1/2 0) (0 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #t)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  227
  133
  43
  51
  79
  28
  107
  1
  139/222
  114
  #t
  729/133
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f3 (app #t)) <-)) () ...) ...)\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  14
  6
  3
  5
  5
  3
  8
  1
  5/6
  5
  #f
  31/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  51
  29
  9
  13
  27
  9
  36
  1
  53/56
  28
  #t
  146/29
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f3 (-> (app #f) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  60
  33
  9
  18
  27
  9
  36
  1
  53/60
  32
  #t
  166/33
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app z x1 x2 (-> x3 <-)) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  87
  49
  18
  20
  27
  9
  36
  1
  103/132
  47
  #f
  249/49
  ((3 3 0) (3 3 0) (3 3 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  94
  51
  20
  23
  28
  10
  38
  1
  101/132
  49
  #t
  260/51
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  125
  71
  24
  30
  47
  14
  61
  1
  401/525
  69
  #t
  360/71
  ((4 4 0) (4 4 0) (7/2 7/2 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-) x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  193
  110
  45
  38
  73
  28
  101
  1
  3397/4200
  107
  #f
  283/55
  ((16 16 0) (17 35/2 0) (18 18 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  194
  111
  45
  38
  73
  28
  101
  1
  6689/8400
  108
  #t
  571/111
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  31
  let
  "\"'(eval (λ (f3) (-> (let (_) ...) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  4
  2
  0
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  50
  29
  9
  12
  27
  9
  36
  1
  27/29
  29
  #t
  5
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  56
  31
  10
  15
  27
  9
  36
  1
  26/29
  31
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f3 (-> (app #t) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  59
  33
  10
  16
  27
  9
  36
  1
  26/31
  33
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (f3) ...) (λ (x3) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  143
  78
  24
  41
  29
  9
  38
  1
  677/1155
  71
  #f
  413/78
  ((14 14 0) (14 29/2 0) (14 14 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval\n  (λ (y1 y2 y3) (-> y1 <-))\n  (env ((□? (y1 y2 y3)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  159
  85
  30
  44
  29
  9
  38
  1
  2671/4620
  76
  #f
  452/85
  ((7/2 4 0) (7/2 7/2 0) (7/2 7/2 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  160
  86
  30
  44
  29
  9
  38
  1
  867/1540
  77
  #t
  457/86
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  161
  87
  30
  44
  29
  9
  38
  1
  2531/4620
  78
  #t
  154/29
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  215
  120
  40
  55
  56
  18
  74
  1
  591/980
  110
  #f
  21/4
  ((29/2 29/2 0) (29/2 29/2 0) (15 15 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  216
  121
  40
  55
  56
  18
  74
  1
  577/980
  111
  #t
  635/121
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (λ (x3) (-> (app (λ (z) ...) (λ (y1 y2 y3) ...)) <-))\n  (env ((□? (x3)) (□? (x2)) (□? (x1)))))\""
  232
  131
  40
  61
  56
  18
  74
  1
  8447/14700
  118
  #f
  690/131
  ((19/2 10 0) (19/2 10 0) (10 10 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  232
  131
  40
  61
  56
  18
  74
  1
  8447/14700
  118
  #t
  690/131
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #f)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  234
  133
  40
  61
  56
  18
  74
  1
  8417/14700
  120
  #t
  702/133
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  260
  150
  44
  66
  69
  22
  91
  1
  30281/53900
  136
  #f
  263/50
  ((11 23/2 0) (19/2 10 0) (19/2 10 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  264
  154
  44
  66
  69
  22
  91
  1
  30281/56980
  140
  #t
  809/154
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f3 (app #t)) <-)) () ...) ...)\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  308
  180
  53
  75
  69
  22
  91
  1
  380411/780780
  161
  #f
  53/10
  ((37/2 19 0) (41/2 21 0) (19 39/2 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (_) (-> (app f3 (app #f)) <-))\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  311
  183
  53
  75
  69
  22
  91
  1
  376979/780780
  163
  #f
  970/183
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (λ (z) (-> (app z x1 x2 x3) <-))\n  (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  314
  186
  53
  75
  69
  22
  91
  1
  93956/195195
  165
  #f
  493/93
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  320
  191
  53
  76
  73
  22
  95
  1
  1116461/2342340
  169
  #f
  1012/191
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  324
  195
  53
  76
  73
  22
  95
  1
  358807/780780
  171
  #f
  1034/195
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  325
  196
  53
  76
  73
  22
  95
  1
  348797/780780
  172
  #t
  1039/196
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #t)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  325
  196
  53
  76
  73
  22
  95
  1
  348797/780780
  172
  #t
  1039/196
  ((0 0 0) (0 0 0) (0 0 0)))
