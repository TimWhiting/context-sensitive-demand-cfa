'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  46
  27
  9
  10
  27
  9
  36
  1
  1
  27
  #t
  1
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  101
  60
  18
  23
  41
  13
  54
  1
  17/24
  50
  #f
  22/15
  ((7/2 7/2 0) (7/2 7/2 0) (7/2 7/2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (f3) ...) (λ (x3) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  77
  42
  15
  20
  5
  3
  8
  1
  5/18
  35
  #f
  61/42
  ((3 3 0) (3 3 0) (3 3 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (λ (x3) (-> (app (λ (z) ...) (λ (y1 y2 y3) ...)) <-))\n  (env ((□? (x3)) (□? (x2)) (□? (x1)))))\""
  53
  24
  12
  17
  5
  3
  8
  1
  5/12
  20
  #f
  17/12
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval\n  (λ (y1 y2 y3) (-> y1 <-))\n  (env ((□? (y1 y2 y3)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  35
  12
  9
  14
  5
  3
  8
  1
  5/8
  10
  #f
  4/3
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (λ (z) (-> (app z x1 x2 x3) <-))\n  (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  48
  22
  12
  14
  5
  3
  8
  1
  5/11
  19
  #f
  3/2
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app z x1 x2 (-> x3 <-)) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  14
  6
  3
  5
  0
  0
  0
  1
  0
  5
  #f
  7/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-) x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  14
  6
  3
  5
  0
  0
  0
  1
  0
  5
  #f
  7/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  14
  6
  3
  5
  5
  3
  8
  1
  5/6
  5
  #f
  7/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  7
  2
  1
  4
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  let
  "\"'(eval (λ (f3) (-> (let (_) ...) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  75
  40
  15
  20
  5
  3
  8
  1
  5/16
  33
  #f
  59/40
  ((7/2 7/2 0) (7/2 7/2 0) (7/2 7/2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f3 (app #t)) <-)) () ...) ...)\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  69
  34
  15
  20
  5
  3
  8
  1
  1/3
  29
  #f
  3/2
  ((3 3 0) (3 3 0) (3 3 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f3 (-> (app #t) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  5
  2
  0
  3
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #t)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  6
  2
  1
  3
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (_) (-> (app f3 (app #f)) <-))\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  69
  34
  15
  20
  5
  3
  8
  1
  1/3
  29
  #f
  3/2
  ((3 3 0) (3 3 0) (3 3 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f3 (-> (app #f) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  5
  2
  0
  3
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #f)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  6
  2
  1
  3
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  99
  58
  18
  23
  35
  13
  48
  1
  2/3
  48
  #f
  43/29
  ((5 5 0) (5 5 0) (5 5 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  93
  52
  18
  23
  33
  13
  46
  1
  43/63
  44
  #f
  3/2
  ((9/2 9/2 0) (9/2 9/2 0) (9/2 9/2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  4
  2
  0
  2
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  5
  2
  1
  2
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  93
  52
  18
  23
  33
  13
  46
  1
  43/63
  44
  #f
  3/2
  ((9/2 9/2 0) (9/2 9/2 0) (9/2 9/2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  4
  2
  0
  2
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  5
  2
  1
  2
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  46
  28
  9
  9
  25
  9
  34
  1
  12/13
  28
  #t
  1
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  44
  26
  9
  9
  24
  9
  33
  1
  47/50
  26
  #t
  1
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  4
  2
  1
  1
  1
  1
  2
  1
  1/2
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  44
  26
  9
  9
  24
  9
  33
  1
  47/50
  26
  #t
  1
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  4
  2
  1
  1
  1
  1
  2
  1
  1/2
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  93
  52
  18
  23
  33
  13
  46
  1
  43/63
  44
  #f
  3/2
  ((9/2 9/2 0) (9/2 9/2 0) (9/2 9/2 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (f3) ...) (λ (x3) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  160
  89
  30
  41
  33
  13
  46
  1
  61/126
  74
  #f
  134/89
  ((17/2 17/2 0) (17/2 17/2 0) (17/2 17/2 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f3 (-> (app #t) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  167
  93
  30
  44
  33
  13
  46
  1
  61/138
  78
  #t
  46/31
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  167
  93
  30
  44
  33
  13
  46
  1
  61/138
  78
  #t
  46/31
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  242
  141
  42
  59
  61
  21
  82
  1
  419/910
  117
  #f
  209/141
  ((13 13 0) (13 13 0) (13 13 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-) x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  266
  154
  49
  63
  71
  27
  98
  1
  297/560
  129
  #f
  267/154
  ((16 16 0) (33/2 33/2 0) (16 16 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  285
  160
  54
  71
  71
  27
  98
  1
  2641/5040
  135
  #t
  293/160
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #f)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  287
  162
  54
  71
  71
  27
  98
  1
  439/840
  137
  #t
  101/54
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  288
  163
  54
  71
  71
  27
  98
  1
  439/840
  137
  #f
  305/163
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f3 (app #t)) <-)) () ...) ...)\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (λ (z) (-> (app z x1 x2 x3) <-))\n  (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  48
  22
  12
  14
  5
  3
  8
  1
  5/11
  19
  #f
  3/2
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  85
  45
  18
  22
  27
  9
  36
  1
  227/280
  42
  #t
  56/45
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f3 (-> (app #f) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  92
  49
  18
  25
  27
  9
  36
  1
  227/300
  46
  #t
  60/49
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #t)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  100
  54
  21
  25
  27
  9
  36
  1
  439/620
  51
  #t
  23/18
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval\n  (λ (y1 y2 y3) (-> y1 <-))\n  (env ((□? (y1 y2 y3)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  104
  55
  21
  28
  27
  9
  36
  1
  219/310
  51
  #f
  71/55
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (λ (x3) (-> (app (λ (z) ...) (λ (y1 y2 y3) ...)) <-))\n  (env ((□? (x3)) (□? (x2)) (□? (x1)))))\""
  113
  61
  21
  31
  27
  9
  36
  1
  1473/2170
  55
  #f
  79/61
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  146
  82
  26
  38
  47
  14
  61
  1
  1391/1980
  76
  #t
  50/41
  ((2 2 0) (2 2 0) (3/2 3/2 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app z x1 x2 (-> x3 <-)) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  246
  135
  53
  58
  47
  14
  61
  1
  3149/5280
  122
  #f
  14/9
  ((23 23 0) (23 23 0) (23 23 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  247
  136
  53
  58
  47
  14
  61
  1
  28321/47520
  122
  #f
  53/34
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (_) (-> (app f3 (app #f)) <-))\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  258
  144
  53
  61
  47
  14
  61
  1
  26561/47520
  128
  #f
  113/72
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  let
  "\"'(eval (λ (f3) (-> (let (_) ...) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  264
  150
  53
  61
  47
  14
  61
  1
  25571/47520
  132
  #f
  39/25
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  271
  154
  53
  64
  47
  14
  61
  1
  25571/50160
  136
  #t
  17/11
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  275
  158
  53
  64
  47
  14
  61
  1
  25571/52800
  140
  #t
  121/79
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  278
  160
  53
  65
  49
  14
  63
  1
  27551/54120
  142
  #t
  61/40
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  279
  161
  53
  65
  49
  14
  63
  1
  26891/54120
  143
  #t
  35/23
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  280
  162
  53
  65
  49
  14
  63
  1
  8817/18040
  143
  #f
  247/162
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  281
  163
  53
  65
  49
  14
  63
  1
  8597/18040
  144
  #t
  248/163
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  285
  166
  54
  65
  49
  14
  63
  1
  25351/54120
  147
  #t
  126/83
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  286
  167
  54
  65
  49
  14
  63
  1
  24691/54120
  148
  #t
  253/167
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  287
  168
  54
  65
  49
  14
  63
  1
  24031/54120
  149
  #t
  127/84
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  288
  169
  54
  65
  49
  14
  63
  1
  23371/54120
  150
  #t
  255/169
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  4
  2
  0
  2
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval\n  (λ (y1 y2 y3) (-> y1 <-))\n  (env ((□? (y1 y2 y3)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  42
  16
  9
  17
  5
  3
  8
  1
  1/2
  14
  #f
  5/4
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  99
  50
  20
  29
  33
  13
  46
  1
  262/345
  47
  #f
  57/50
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  100
  51
  20
  29
  33
  13
  46
  1
  509/690
  48
  #t
  58/51
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (λ (x3) (-> (app (λ (z) ...) (λ (y1 y2 y3) ...)) <-))\n  (env ((□? (x3)) (□? (x2)) (□? (x1)))))\""
  122
  64
  23
  35
  33
  13
  46
  1
  29/46
  58
  #f
  39/32
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-) x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  220
  111
  48
  61
  43
  19
  62
  1
  569/891
  98
  #f
  166/111
  ((35/2 35/2 0) (17 17 0) (17 17 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  223
  113
  49
  61
  44
  20
  64
  1
  602/957
  100
  #t
  168/113
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  232
  120
  49
  63
  50
  20
  70
  1
  668/1023
  106
  #f
  22/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (_) (-> (app f3 (app #f)) <-))\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  345
  175
  74
  96
  66
  28
  94
  1
  3827/6324
  152
  #f
  42/25
  ((47/2 47/2 0) (47/2 47/2 0) (23 23 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  352
  180
  74
  98
  71
  28
  99
  1
  4643/6936
  157
  #t
  299/180
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  353
  181
  74
  98
  71
  28
  99
  1
  4541/6936
  158
  #t
  300/181
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  354
  182
  74
  98
  71
  28
  99
  1
  4541/7140
  159
  #t
  43/26
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (λ (z) (-> (app z x1 x2 x3) <-))\n  (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  360
  188
  74
  98
  71
  28
  99
  1
  29881/47124
  164
  #f
  81/47
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  363
  191
  74
  98
  73
  28
  101
  1
  153893/242352
  167
  #t
  327/191
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f3 (-> (app #t) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  369
  197
  74
  98
  73
  28
  101
  1
  153893/255816
  173
  #t
  333/197
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  let
  "\"'(eval (λ (f3) (-> (let (_) ...) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  383
  211
  74
  98
  73
  28
  101
  1
  296005/511632
  183
  #f
  359/211
  ((5/2 5/2 0) (5/2 5/2 0) (5/2 5/2 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  384
  212
  74
  98
  73
  28
  101
  1
  289273/511632
  184
  #t
  90/53
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  31
  ref-or-constructor
  "\"'(eval (app z x1 x2 (-> x3 <-)) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f3 (-> (app #f) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  5
  2
  0
  3
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  23
  10
  3
  10
  5
  3
  8
  1
  5/8
  9
  #f
  11/10
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (f3) ...) (λ (x3) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  87
  47
  15
  25
  5
  3
  8
  1
  1/4
  39
  #f
  67/47
  ((3 3 0) (3 3 0) (3 3 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #t)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  89
  49
  15
  25
  5
  3
  8
  1
  5/21
  41
  #t
  71/49
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  98
  52
  18
  28
  7
  5
  12
  1
  6/23
  44
  #t
  75/52
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  99
  53
  18
  28
  7
  5
  12
  1
  1/4
  45
  #t
  77/53
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  103
  57
  18
  28
  7
  5
  12
  1
  3/13
  49
  #t
  27/19
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  158
  92
  26
  40
  35
  13
  48
  1
  44/105
  82
  #f
  119/92
  ((4 4 0) (4 4 0) (4 4 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  169
  96
  29
  44
  35
  13
  48
  1
  691/1680
  86
  #t
  127/96
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  217
  126
  37
  54
  61
  21
  82
  1
  1436/3045
  115
  #f
  53/42
  ((5 5 0) (5 5 0) (5 5 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #f)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  218
  127
  37
  54
  61
  21
  82
  1
  2857/6090
  116
  #t
  162/127
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f3 (app #t)) <-)) () ...) ...)\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  261
  152
  46
  63
  61
  21
  82
  1
  376997/900900
  136
  #f
  25/19
  ((6 6 0) (6 6 0) (6 6 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  262
  153
  46
  63
  61
  21
  82
  1
  180991/450450
  137
  #t
  67/51
  ((0 0 0) (0 0 0) (0 0 0)))
