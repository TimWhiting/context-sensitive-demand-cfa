'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  46
  27
  9
  10
  27
  9
  36
  1
  1
  27
  #t
  5
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  101
  60
  18
  23
  41
  13
  54
  1
  17/24
  50
  #f
  82/15
  ((7/2 7/2 0) (7/2 7/2 0) (7/2 7/2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (f3) ...) (λ (x3) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  77
  42
  15
  20
  5
  3
  8
  1
  5/18
  35
  #f
  229/42
  ((3 3 0) (3 3 0) (3 3 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (λ (x3) (-> (app (λ (z) ...) (λ (y1 y2 y3) ...)) <-))\n  (env ((□? (x3)) (□? (x2)) (□? (x1)))))\""
  53
  24
  12
  17
  5
  3
  8
  1
  5/12
  20
  #f
  65/12
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval\n  (λ (y1 y2 y3) (-> y1 <-))\n  (env ((□? (y1 y2 y3)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  35
  12
  9
  14
  5
  3
  8
  1
  5/8
  10
  #f
  16/3
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (λ (z) (-> (app z x1 x2 x3) <-))\n  (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  48
  22
  12
  14
  5
  3
  8
  1
  5/11
  19
  #f
  11/2
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app z x1 x2 (-> x3 <-)) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  14
  6
  3
  5
  0
  0
  0
  1
  0
  5
  #f
  31/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-) x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  14
  6
  3
  5
  0
  0
  0
  1
  0
  5
  #f
  31/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  14
  6
  3
  5
  5
  3
  8
  1
  5/6
  5
  #f
  31/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  7
  2
  1
  4
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  let
  "\"'(eval (λ (f3) (-> (let (_) ...) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  75
  40
  15
  20
  5
  3
  8
  1
  5/16
  33
  #f
  219/40
  ((7/2 7/2 0) (7/2 7/2 0) (7/2 7/2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f3 (app #t)) <-)) () ...) ...)\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  69
  34
  15
  20
  5
  3
  8
  1
  1/3
  29
  #f
  11/2
  ((3 3 0) (3 3 0) (3 3 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f3 (-> (app #t) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  5
  2
  0
  3
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #t)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  6
  2
  1
  3
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (_) (-> (app f3 (app #f)) <-))\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  69
  34
  15
  20
  5
  3
  8
  1
  1/3
  29
  #f
  11/2
  ((3 3 0) (3 3 0) (3 3 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f3 (-> (app #f) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  5
  2
  0
  3
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #f)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  6
  2
  1
  3
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  99
  58
  18
  23
  35
  13
  48
  1
  2/3
  48
  #f
  159/29
  ((5 5 0) (5 5 0) (5 5 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  93
  52
  18
  23
  33
  13
  46
  1
  43/63
  44
  #f
  11/2
  ((9/2 9/2 0) (9/2 9/2 0) (9/2 9/2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  4
  2
  0
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  5
  2
  1
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  93
  52
  18
  23
  33
  13
  46
  1
  43/63
  44
  #f
  11/2
  ((9/2 9/2 0) (9/2 9/2 0) (9/2 9/2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  4
  2
  0
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  5
  2
  1
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  46
  28
  9
  9
  25
  9
  34
  1
  12/13
  28
  #t
  5
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  44
  26
  9
  9
  24
  9
  33
  1
  47/50
  26
  #t
  5
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  4
  2
  1
  1
  1
  1
  2
  1
  1/2
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  44
  26
  9
  9
  24
  9
  33
  1
  47/50
  26
  #t
  5
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  4
  2
  1
  1
  1
  1
  2
  1
  1/2
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  7
  2
  1
  4
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  10
  4
  1
  5
  0
  0
  0
  1
  0
  4
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (λ (z) (-> (app z x1 x2 x3) <-))\n  (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  55
  26
  12
  17
  5
  3
  8
  1
  5/13
  23
  #f
  141/26
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (f3) ...) (λ (x3) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  119
  63
  24
  32
  5
  3
  8
  1
  1/4
  53
  #f
  115/21
  ((4 4 0) (4 4 0) (4 4 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  155
  85
  30
  40
  26
  9
  35
  1
  4451/8120
  75
  #t
  91/17
  ((5/2 5/2 0) (5/2 5/2 0) (5/2 5/2 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  189
  107
  35
  47
  47
  14
  61
  1
  883/1440
  97
  #t
  565/107
  ((3 3 0) (7/2 7/2 0) (7/2 7/2 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (_) (-> (app f3 (app #f)) <-))\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  196
  111
  35
  50
  47
  14
  61
  1
  3493/5760
  100
  #f
  196/37
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f3 (app #t)) <-)) () ...) ...)\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  240
  137
  44
  59
  47
  14
  61
  1
  4657/8415
  121
  #f
  733/137
  ((6 6 0) (6 6 0) (6 6 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  241
  138
  44
  59
  47
  14
  61
  1
  18613/33660
  121
  #f
  739/138
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #f)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  241
  138
  44
  59
  47
  14
  61
  1
  18613/33660
  121
  #t
  739/138
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  242
  139
  44
  59
  47
  14
  61
  1
  9059/16830
  122
  #t
  744/139
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  246
  143
  44
  59
  47
  14
  61
  1
  9059/17820
  126
  #t
  764/143
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (λ (x3) (-> (app (λ (z) ...) (λ (y1 y2 y3) ...)) <-))\n  (env ((□? (x3)) (□? (x2)) (□? (x1)))))\""
  255
  149
  44
  62
  47
  14
  61
  1
  252167/498960
  130
  #f
  796/149
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  256
  150
  44
  62
  47
  14
  61
  1
  247547/498960
  130
  #f
  401/75
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f3 (-> (app #f) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  261
  155
  44
  62
  47
  14
  61
  1
  247547/526680
  135
  #t
  827/155
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  265
  158
  45
  62
  47
  14
  61
  1
  242927/526680
  138
  #t
  843/158
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  272
  165
  45
  62
  47
  14
  61
  1
  225371/526680
  143
  #f
  881/165
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  273
  166
  45
  62
  47
  14
  61
  1
  218441/526680
  144
  #t
  443/83
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  274
  167
  45
  62
  47
  14
  61
  1
  211511/526680
  145
  #t
  891/167
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  275
  168
  45
  62
  47
  14
  61
  1
  210587/526680
  145
  #f
  299/56
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #t)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  275
  168
  45
  62
  47
  14
  61
  1
  210587/526680
  145
  #t
  299/56
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  276
  169
  45
  62
  47
  14
  61
  1
  203657/526680
  146
  #t
  902/169
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  324
  199
  53
  72
  73
  22
  95
  1
  330779/800800
  175
  #f
  1054/199
  ((9 9 0) (9 9 0) (9 9 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f3 (-> (app #t) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  329
  204
  53
  72
  73
  22
  95
  1
  330779/840840
  180
  #t
  1079/204
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app z x1 x2 (-> x3 <-)) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  351
  217
  62
  72
  73
  22
  95
  1
  1486003/3873870
  192
  #f
  1181/217
  ((11 11 0) (11 11 0) (21/2 21/2 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  31
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-) x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  5
  2
  1
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  8
  4
  1
  3
  0
  0
  0
  1
  0
  4
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  let
  "\"'(eval (λ (f3) (-> (let (_) ...) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  87
  46
  18
  23
  7
  5
  12
  1
  7/27
  39
  #f
  11/2
  ((7/2 7/2 0) (7/2 7/2 0) (7/2 7/2 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval\n  (λ (y1 y2 y3) (-> y1 <-))\n  (env ((□? (y1 y2 y3)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  109
  53
  24
  32
  7
  5
  12
  1
  7/27
  44
  #f
  292/53
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  kcfa-3
  1
  25
  31
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  146
  76
  29
  41
  30
  10
  40
  1
  8083/12600
  67
  #t
  407/76
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-) x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  14
  6
  3
  5
  0
  0
  0
  1
  0
  5
  #f
  31/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  16
  8
  3
  5
  0
  0
  0
  1
  0
  7
  #t
  41/8
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  19
  10
  3
  6
  0
  0
  0
  1
  0
  9
  #t
  51/10
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (f3) ...) (λ (x3) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  214
  120
  44
  50
  59
  25
  84
  1
  37/72
  106
  #f
  83/15
  ((37/2 37/2 0) (37/2 37/2 0) (18 18 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  229
  130
  46
  53
  68
  27
  95
  1
  601/960
  116
  #t
  357/65
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f3 (-> (app #f) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  240
  136
  46
  58
  68
  27
  95
  1
  601/1020
  122
  #t
  93/17
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  250
  143
  48
  59
  71
  28
  99
  1
  229/408
  128
  #f
  71/13
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #f)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  253
  145
  49
  59
  71
  28
  99
  1
  685/1224
  130
  #t
  798/145
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (λ (z) (-> (app z x1 x2 x3) <-))\n  (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  348
  188
  76
  84
  71
  28
  99
  1
  75823/145656
  166
  #f
  267/47
  ((37/2 37/2 0) (37/2 37/2 0) (37/2 37/2 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f3 (app #t)) <-)) () ...) ...)\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  5
  2
  1
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval\n  (λ (y1 y2 y3) (-> y1 <-))\n  (env ((□? (y1 y2 y3)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  45
  16
  12
  17
  7
  5
  12
  1
  17/30
  14
  #f
  11/2
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  118
  59
  24
  35
  33
  13
  46
  1
  9/14
  49
  #f
  325/59
  ((9/2 9/2 0) (9/2 9/2 0) (9/2 9/2 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (λ (x3) (-> (app (λ (z) ...) (λ (y1 y2 y3) ...)) <-))\n  (env ((□? (x3)) (□? (x2)) (□? (x1)))))\""
  140
  72
  27
  41
  33
  13
  46
  1
  509/882
  59
  #f
  397/72
  ((5/2 5/2 0) (5/2 5/2 0) (5/2 5/2 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  141
  73
  27
  41
  33
  13
  46
  1
  509/924
  60
  #t
  404/73
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  142
  74
  27
  41
  33
  13
  46
  1
  169/308
  61
  #t
  411/74
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #t)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  152
  78
  30
  44
  33
  13
  46
  1
  493/966
  65
  #t
  145/26
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  156
  82
  30
  44
  33
  13
  46
  1
  493/1050
  69
  #t
  455/82
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  159
  84
  31
  44
  34
  14
  48
  1
  535/1134
  71
  #t
  155/28
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  234
  132
  43
  59
  62
  22
  84
  1
  4387/9135
  110
  #f
  182/33
  ((19/2 19/2 0) (19/2 19/2 0) (19/2 19/2 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f3 (-> (app #t) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  239
  137
  43
  59
  62
  22
  84
  1
  4387/9765
  115
  #t
  753/137
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  248
  144
  43
  61
  68
  22
  90
  1
  458/945
  121
  #f
  263/48
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  31
  ref-or-constructor
  "\"'(eval (app z x1 x2 (-> x3 <-)) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (_) (-> (app f3 (app #f)) <-))\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  69
  34
  15
  20
  5
  3
  8
  1
  1/3
  29
  #f
  11/2
  ((3 3 0) (3 3 0) (3 3 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  108
  58
  21
  29
  29
  9
  38
  1
  217/290
  53
  #t
  307/58
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  109
  59
  21
  29
  29
  9
  38
  1
  106/145
  54
  #t
  312/59
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  110
  60
  21
  29
  29
  9
  38
  1
  207/290
  55
  #t
  317/60
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  let
  "\"'(eval (λ (f3) (-> (let (_) ...) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  116
  66
  21
  29
  29
  9
  38
  1
  1389/2030
  59
  #f
  349/66
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  149
  87
  26
  36
  49
  14
  63
  1
  449/620
  80
  #t
  454/87
  ((3 3 0) (3 3 0) (3 3 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  150
  88
  26
  36
  49
  14
  63
  1
  439/620
  81
  #t
  459/88
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  1
  25
  31
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  153
  89
  26
  38
  49
  14
  63
  1
  1313/1860
  81
  #f
  465/89
  ((0 0 0) (0 0 0) (0 0 0)))
