'(clean-cache
  facehugger
  1
  15
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  103
  84
  13
  6
  76
  11
  87
  1
  133/141
  54
  #f
  19/14
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  facehugger
  1
  15
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  50
  39
  8
  3
  32
  7
  39
  1
  49/57
  25
  #f
  53/39
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  1
  15
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  42
  31
  8
  3
  27
  7
  34
  1
  35/38
  19
  #f
  43/31
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  1
  15
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  41
  30
  8
  3
  24
  7
  31
  1
  101/114
  19
  #f
  41/30
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  1
  15
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  25
  15
  8
  2
  11
  7
  18
  1
  17/21
  11
  #f
  19/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  15
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  22
  12
  8
  2
  11
  7
  18
  1
  20/21
  9
  #f
  5/4
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  15
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  22
  12
  8
  2
  11
  7
  18
  1
  7/8
  9
  #f
  5/4
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  15
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  31
  21
  8
  2
  17
  7
  24
  1
  9/11
  16
  #f
  26/21
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  15
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  22
  12
  8
  2
  11
  7
  18
  1
  7/8
  9
  #f
  5/4
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  15
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  50
  39
  8
  3
  32
  7
  39
  1
  49/57
  25
  #f
  53/39
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  1
  15
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  42
  31
  8
  3
  27
  7
  34
  1
  35/38
  19
  #f
  43/31
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  1
  15
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  41
  30
  8
  3
  24
  7
  31
  1
  101/114
  19
  #f
  41/30
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  1
  15
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  25
  15
  8
  2
  11
  7
  18
  1
  17/21
  11
  #f
  19/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  15
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  22
  12
  8
  2
  11
  7
  18
  1
  20/21
  9
  #f
  5/4
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  15
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  22
  12
  8
  2
  11
  7
  18
  1
  7/8
  9
  #f
  5/4
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  15
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  31
  21
  8
  2
  17
  7
  24
  1
  9/11
  16
  #f
  26/21
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  15
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  22
  12
  8
  2
  11
  7
  18
  1
  7/8
  9
  #f
  5/4
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  15
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  9
  5
  3
  1
  4
  3
  7
  1
  4/5
  4
  #f
  6/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  15
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  102
  83
  13
  6
  75
  11
  86
  1
  65/69
  54
  #f
  112/83
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  facehugger
  1
  15
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  53
  41
  8
  4
  37
  7
  44
  1
  65/69
  27
  #f
  55/41
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  1
  15
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  10
  6
  3
  1
  6
  3
  9
  1
  1
  6
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  1
  15
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  53
  41
  8
  4
  37
  7
  44
  1
  65/69
  27
  #f
  55/41
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  1
  15
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  10
  6
  3
  1
  6
  3
  9
  1
  1
  6
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  15
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  22
  12
  8
  2
  11
  7
  18
  1
  7/8
  9
  #f
  5/4
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  15
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  39
  23
  13
  3
  21
  11
  32
  1
  13/15
  17
  #f
  29/23
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  15
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  96
  77
  13
  6
  75
  11
  86
  1
  68/69
  50
  #f
  104/77
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  facehugger
  1
  15
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  97
  78
  13
  6
  75
  11
  86
  1
  45/46
  50
  #f
  53/39
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  15
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  98
  79
  13
  6
  76
  11
  87
  1
  46/47
  50
  #f
  108/79
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  15
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  99
  80
  13
  6
  76
  11
  87
  1
  137/141
  50
  #f
  11/8
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  15
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  100
  81
  13
  6
  76
  11
  87
  1
  136/141
  50
  #f
  112/81
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  15
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  101
  82
  13
  6
  76
  11
  87
  1
  45/47
  50
  #f
  57/41
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  15
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  102
  83
  13
  6
  76
  11
  87
  1
  134/141
  50
  #f
  116/83
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  15
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  103
  84
  13
  6
  76
  11
  87
  1
  133/141
  50
  #f
  59/42
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  15
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  104
  85
  13
  6
  76
  11
  87
  1
  44/47
  50
  #f
  24/17
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  15
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  105
  86
  13
  6
  76
  11
  87
  1
  131/141
  50
  #f
  61/43
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  15
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  106
  87
  13
  6
  76
  11
  87
  1
  130/141
  50
  #f
  124/87
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  15
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  107
  88
  13
  6
  76
  11
  87
  1
  43/47
  50
  #f
  63/44
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  15
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  108
  89
  13
  6
  76
  11
  87
  1
  128/141
  50
  #f
  128/89
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  15
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  108
  89
  13
  6
  76
  11
  87
  1
  128/141
  50
  #t
  128/89
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  15
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  109
  90
  13
  6
  76
  11
  87
  1
  127/141
  50
  #f
  13/9
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  15
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  110
  91
  13
  6
  76
  11
  87
  1
  42/47
  50
  #f
  132/91
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  15
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  110
  91
  13
  6
  76
  11
  87
  1
  42/47
  50
  #f
  132/91
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  15
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  111
  92
  13
  6
  76
  11
  87
  1
  125/141
  50
  #f
  67/46
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  15
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  111
  92
  13
  6
  76
  11
  87
  1
  125/141
  50
  #t
  67/46
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  15
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  112
  93
  13
  6
  76
  11
  87
  1
  124/141
  50
  #f
  136/93
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  1
  15
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  112
  93
  13
  6
  76
  11
  87
  1
  124/141
  50
  #f
  136/93
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  15
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  103
  84
  13
  6
  76
  11
  87
  1
  133/141
  54
  #f
  19/14
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  1
  facehugger
  1
  15
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  104
  85
  13
  6
  76
  11
  87
  1
  44/47
  54
  #f
  116/85
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  15
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  104
  85
  13
  6
  76
  11
  87
  1
  44/47
  54
  #t
  116/85
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  15
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  105
  86
  13
  6
  76
  11
  87
  1
  131/141
  54
  #f
  59/43
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  15
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  106
  87
  13
  6
  76
  11
  87
  1
  130/141
  54
  #f
  40/29
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  15
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  107
  88
  13
  6
  76
  11
  87
  1
  43/47
  54
  #f
  61/44
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  15
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  108
  89
  13
  6
  76
  11
  87
  1
  128/141
  54
  #f
  124/89
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  15
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  108
  89
  13
  6
  76
  11
  87
  1
  128/141
  54
  #f
  124/89
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  15
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  109
  90
  13
  6
  76
  11
  87
  1
  127/141
  54
  #f
  7/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  15
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  110
  91
  13
  6
  76
  11
  87
  1
  42/47
  54
  #f
  128/91
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  15
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  110
  91
  13
  6
  76
  11
  87
  1
  42/47
  54
  #f
  128/91
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  15
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  110
  91
  13
  6
  76
  11
  87
  1
  42/47
  54
  #t
  128/91
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  15
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  111
  92
  13
  6
  76
  11
  87
  1
  125/141
  54
  #f
  65/46
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  15
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  111
  92
  13
  6
  76
  11
  87
  1
  125/141
  54
  #f
  65/46
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  15
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  112
  93
  13
  6
  76
  11
  87
  1
  124/141
  54
  #f
  44/31
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  15
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  113
  94
  13
  6
  76
  11
  87
  1
  41/47
  54
  #f
  67/47
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  15
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  113
  94
  13
  6
  76
  11
  87
  1
  41/47
  54
  #f
  67/47
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  15
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  113
  94
  13
  6
  76
  11
  87
  1
  41/47
  54
  #f
  67/47
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  15
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  113
  94
  13
  6
  76
  11
  87
  1
  41/47
  54
  #f
  67/47
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  15
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  113
  94
  13
  6
  76
  11
  87
  1
  41/47
  54
  #f
  67/47
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  15
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  114
  95
  13
  6
  76
  11
  87
  1
  122/141
  54
  #f
  136/95
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  15
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  115
  96
  13
  6
  76
  11
  87
  1
  121/141
  54
  #f
  23/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  1
  15
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  116
  97
  13
  6
  76
  11
  87
  1
  40/47
  54
  #f
  140/97
  ((0 0 0) (0 0 0) (0 0 0)))
