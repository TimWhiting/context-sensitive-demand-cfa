'(clean-cache
  blur
  2
  25
  23
  letrec
  "\"'(eval ((top) letrec (id ... lp) ...) (env ()))\""
  59
  34
  17
  8
  31
  4
  35
  1
  53/58
  16
  #f
  77/17
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  blur
  2
  25
  23
  match
  "\"'(eval (λ (a n) (-> (match (app <= n 1) ...) <-)) (env ((□? (a n)))))\""
  133
  102
  26
  5
  95
  19
  114
  1
  421/444
  73
  #f
  503/102
  ((13/2 13/2 0) (8 8 0) (7 7 0)))
'(clean-cache
  blur
  2
  25
  23
  app
  "\"'(eval (match (app <= n 1) (#f) (_ (-> (app id a) <-))) (env ((□? (a n)))))\""
  127
  81
  39
  7
  75
  28
  103
  1
  3391/3780
  79
  #t
  403/81
  ((17/2 9 0) (17/2 9 0) (11 11 0)))
'(clean-cache
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app id (-> a <-)) (env ((□? (a n)))))\""
  66
  36
  26
  4
  35
  19
  54
  1
  15/16
  36
  #t
  5
  ((3 3 0) (3 3 0) (3 3 0)))
'(clean-cache
  blur
  2
  25
  23
  let*
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (let* (r ... s) ...) <-)) _)\n  (env ((□? (a n)))))\""
  205
  162
  36
  7
  124
  24
  148
  1
  5867/7350
  103
  #f
  265/54
  ((37/2 19 0) (35/2 35/2 0) (19 39/2 0)))
'(clean-cache
  blur
  2
  25
  23
  app
  "\"'(eval\n  (let* (... r (s (-> (app (app blur id) (app #f)) <-)) () ...) ...)\n  (env ((□? (a n)))))\""
  30
  11
  12
  7
  2
  2
  4
  1
  2/11
  11
  #t
  5
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  blur
  2
  25
  23
  app
  "\"'(eval (app (app blur id) (-> (app #f) <-)) (env ((□? (a n)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  blur
  2
  25
  23
  app
  "\"'(eval (app (-> (app blur id) <-) (app #f)) (env ((□? (a n)))))\""
  13
  6
  4
  3
  2
  1
  3
  1
  1/3
  6
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  blur
  2
  25
  23
  app
  "\"'(eval\n  (let* (... () (r (-> (app (app blur id) (app #t)) <-)) s ...) ...)\n  (env ((□? (a n)))))\""
  30
  11
  12
  7
  2
  2
  4
  1
  2/11
  11
  #t
  5
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  blur
  2
  25
  23
  app
  "\"'(eval (app (app blur id) (-> (app #t) <-)) (env ((□? (a n)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  blur
  2
  25
  23
  app
  "\"'(eval (app (-> (app blur id) <-) (app #t)) (env ((□? (a n)))))\""
  13
  6
  4
  3
  2
  1
  3
  1
  1/3
  6
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  blur
  2
  25
  23
  app
  "\"'(eval\n  (let* (r ... s) (-> (app not (app (app blur lp) s (app - n 1))) <-))\n  (env ((□? (a n)))))\""
  203
  160
  36
  7
  123
  24
  147
  1
  2944/3675
  103
  #f
  783/160
  ((35/2 35/2 0) (35/2 35/2 0) (17 35/2 0)))
'(clean-cache
  blur
  2
  25
  23
  app
  "\"'(eval (app not (-> (app (app blur lp) s (app - n 1)) <-)) (env ((□? (a n)))))\""
  199
  156
  36
  7
  121
  24
  145
  1
  5923/7350
  101
  #f
  761/156
  ((18 18 0) (17 17 0) (17 17 0)))
'(clean-cache
  blur
  2
  25
  23
  app
  "\"'(eval (app (app blur lp) s (-> (app - n 1) <-)) (env ((□? (a n)))))\""
  35
  21
  12
  2
  17
  8
  25
  1
  6/7
  8
  #f
  92/21
  ((3/2 2 0) (2 2 0) (3/2 2 0)))
'(clean-cache
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (a n)))))\""
  32
  18
  12
  2
  17
  8
  25
  1
  27/28
  7
  #f
  79/18
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app (app blur lp) (-> s <-) (app - n 1)) (env ((□? (a n)))))\""
  31
  12
  12
  7
  2
  2
  4
  1
  1/6
  12
  #t
  5
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  blur
  2
  25
  23
  app
  "\"'(eval (app (-> (app blur lp) <-) s (app - n 1)) (env ((□? (a n)))))\""
  13
  6
  4
  3
  2
  1
  3
  1
  1/3
  6
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  blur
  2
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (a n)))))\""
  44
  30
  12
  2
  26
  8
  34
  1
  37/44
  11
  #f
  133/30
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (a n)))))\""
  32
  18
  12
  2
  17
  8
  25
  1
  7/8
  7
  #f
  79/18
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (λ (y) (-> y <-)) (env ((□? (y)))))\""
  12
  6
  4
  2
  2
  1
  3
  1
  1/3
  5
  #f
  31/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  150
  101
  39
  10
  93
  28
  121
  1
  25999/27720
  98
  #f
  504/101
  ((19/2 10 0) (19/2 10 0) (19/2 10 0)))
'(clean-cache
  blur
  2
  25
  23
  app
  "\"'(eval (letrec (id ... lp) (-> (app lp (app #f) 2) <-)) (env ()))\""
  58
  33
  17
  8
  30
  4
  34
  1
  51/56
  16
  #f
  50/11
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  blur
  2
  25
  23
  app
  "\"'(eval (app lp (-> (app #f) <-) 2) (env ()))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  app
  "\"'(eval (app (app blur id) (-> (app #f) <-)) (env ((□? (a n)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  app
  "\"'(eval (app not (-> (app (app blur lp) s (app - n 1)) <-)) (env ((□? (a n)))))\""
  202
  159
  36
  7
  121
  24
  145
  1
  1937/2450
  104
  #f
  776/159
  ((17 35/2 0) (17 35/2 0) (17 35/2 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  app
  "\"'(eval\n  (let* (... () (r (-> (app (app blur id) (app #t)) <-)) s ...) ...)\n  (env ((□? (a n)))))\""
  225
  182
  36
  7
  141
  24
  165
  1
  26303/33600
  127
  #t
  891/182
  ((1 1 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  app
  "\"'(eval (match (app <= n 1) (#f) (_ (-> (app id a) <-))) (env ((□? (a n)))))\""
  231
  188
  36
  7
  146
  24
  170
  1
  3103/3920
  133
  #t
  921/188
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  app
  "\"'(eval\n  (let* (... r (s (-> (app (app blur id) (app #f)) <-)) () ...) ...)\n  (env ((□? (a n)))))\""
  232
  189
  36
  7
  146
  24
  170
  1
  3093/3920
  134
  #t
  926/189
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  match
  "\"'(eval (λ (a n) (-> (match (app <= n 1) ...) <-)) (env ((□? (a n)))))\""
  242
  199
  36
  7
  155
  24
  179
  1
  28187/35280
  137
  #f
  979/199
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  app
  "\"'(eval (app (-> (app blur lp) <-) s (app - n 1)) (env ((□? (a n)))))\""
  242
  199
  36
  7
  155
  24
  179
  1
  28187/35280
  137
  #t
  979/199
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  app
  "\"'(eval (app lp (-> (app #f) <-) 2) (env ()))\""
  242
  199
  36
  7
  155
  24
  179
  1
  28187/35280
  137
  #t
  979/199
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  app
  "\"'(eval (app (app blur lp) s (-> (app - n 1) <-)) (env ((□? (a n)))))\""
  242
  199
  36
  7
  155
  24
  179
  1
  28187/35280
  137
  #f
  979/199
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  let*
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (let* (r ... s) ...) <-)) _)\n  (env ((□? (a n)))))\""
  243
  200
  36
  7
  155
  24
  179
  1
  28061/35280
  137
  #f
  197/40
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app (app blur lp) (-> s <-) (app - n 1)) (env ((□? (a n)))))\""
  243
  200
  36
  7
  155
  24
  179
  1
  28061/35280
  137
  #t
  197/40
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  app
  "\"'(eval\n  (let* (r ... s) (-> (app not (app (app blur lp) s (app - n 1))) <-))\n  (env ((□? (a n)))))\""
  244
  201
  36
  7
  155
  24
  179
  1
  27949/35280
  137
  #f
  991/201
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app id (-> a <-)) (env ((□? (a n)))))\""
  245
  202
  36
  7
  155
  24
  179
  1
  3093/3920
  138
  #t
  498/101
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (a n)))))\""
  245
  202
  36
  7
  155
  24
  179
  1
  3093/3920
  138
  #f
  498/101
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (λ (y) (-> y <-)) (env ((□? (y)))))\""
  246
  203
  36
  7
  155
  24
  179
  1
  41633/52920
  138
  #f
  1002/203
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  app
  "\"'(eval (app (-> (app blur id) <-) (app #t)) (env ((□? (a n)))))\""
  247
  204
  36
  7
  155
  24
  179
  1
  8293/10584
  139
  #t
  1007/204
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  249
  205
  36
  8
  155
  24
  179
  1
  8257/10584
  139
  #f
  1013/205
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  letrec
  "\"'(eval ((top) letrec (id ... lp) ...) (env ()))\""
  253
  209
  36
  8
  159
  24
  183
  1
  45191/56700
  140
  #f
  1036/209
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (a n)))))\""
  254
  210
  36
  8
  159
  24
  183
  1
  45023/56700
  140
  #f
  521/105
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (a n)))))\""
  255
  211
  36
  8
  159
  24
  183
  1
  8971/11340
  140
  #f
  1046/211
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  app
  "\"'(eval (app (app blur id) (-> (app #t) <-)) (env ((□? (a n)))))\""
  257
  213
  36
  8
  159
  24
  183
  1
  44351/56700
  142
  #t
  352/71
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  app
  "\"'(eval (app (-> (app blur id) <-) (app #f)) (env ((□? (a n)))))\""
  258
  214
  36
  8
  159
  24
  183
  1
  11054/14175
  143
  #t
  1061/214
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  app
  "\"'(eval (letrec (id ... lp) (-> (app lp (app #f) 2) <-)) (env ()))\""
  258
  214
  36
  8
  159
  24
  183
  1
  11054/14175
  143
  #f
  1061/214
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  app
  "\"'(eval (app (app blur lp) s (-> (app - n 1) <-)) (env ((□? (a n)))))\""
  35
  21
  12
  2
  17
  8
  25
  1
  6/7
  8
  #f
  92/21
  ((2 2 0) (3/2 2 0) (2 2 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (a n)))))\""
  36
  22
  12
  2
  17
  8
  25
  1
  3/4
  8
  #f
  48/11
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app id (-> a <-)) (env ((□? (a n)))))\""
  84
  54
  26
  4
  48
  19
  67
  1
  19/22
  40
  #t
  128/27
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  app
  "\"'(eval (match (app <= n 1) (#f) (_ (-> (app id a) <-))) (env ((□? (a n)))))\""
  93
  63
  26
  4
  56
  19
  75
  1
  83/96
  49
  #t
  43/9
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (a n)))))\""
  93
  63
  26
  4
  56
  19
  75
  1
  83/96
  49
  #f
  43/9
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  101
  70
  26
  5
  62
  19
  81
  1
  451/520
  55
  #f
  337/70
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (a n)))))\""
  111
  80
  26
  5
  71
  19
  90
  1
  253/290
  58
  #f
  191/40
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  let*
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (let* (r ... s) ...) <-)) _)\n  (env ((□? (a n)))))\""
  140
  108
  26
  6
  98
  19
  117
  1
  542/585
  78
  #f
  265/54
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  app
  "\"'(eval (app (-> (app blur lp) <-) s (app - n 1)) (env ((□? (a n)))))\""
  141
  109
  26
  6
  98
  19
  117
  1
  2153/2340
  79
  #t
  535/109
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  letrec
  "\"'(eval ((top) letrec (id ... lp) ...) (env ()))\""
  148
  116
  26
  6
  105
  19
  124
  1
  2353/2520
  82
  #f
  287/58
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  app
  "\"'(eval\n  (let* (... r (s (-> (app (app blur id) (app #f)) <-)) () ...) ...)\n  (env ((□? (a n)))))\""
  149
  117
  26
  6
  105
  19
  124
  1
  167/180
  83
  #t
  193/39
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  app
  "\"'(eval (app (app blur id) (-> (app #f) <-)) (env ((□? (a n)))))\""
  150
  118
  26
  6
  105
  19
  124
  1
  2323/2520
  84
  #t
  292/59
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  app
  "\"'(eval (app (-> (app blur id) <-) (app #f)) (env ((□? (a n)))))\""
  151
  119
  26
  6
  105
  19
  124
  1
  577/630
  85
  #t
  589/119
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app (app blur lp) (-> s <-) (app - n 1)) (env ((□? (a n)))))\""
  152
  120
  26
  6
  105
  19
  124
  1
  2293/2520
  86
  #t
  99/20
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  app
  "\"'(eval (app lp (-> (app #f) <-) 2) (env ()))\""
  152
  120
  26
  6
  105
  19
  124
  1
  2293/2520
  86
  #t
  99/20
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  app
  "\"'(eval (app (app blur id) (-> (app #t) <-)) (env ((□? (a n)))))\""
  153
  121
  26
  6
  105
  19
  124
  1
  1139/1260
  87
  #t
  599/121
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  app
  "\"'(eval (app not (-> (app (app blur lp) s (app - n 1)) <-)) (env ((□? (a n)))))\""
  154
  122
  26
  6
  105
  19
  124
  1
  2263/2520
  87
  #f
  605/122
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  app
  "\"'(eval (app (-> (app blur id) <-) (app #t)) (env ((□? (a n)))))\""
  160
  128
  26
  6
  110
  19
  129
  1
  2323/2640
  93
  #t
  635/128
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  app
  "\"'(eval\n  (let* (... () (r (-> (app (app blur id) (app #t)) <-)) s ...) ...)\n  (env ((□? (a n)))))\""
  166
  134
  26
  6
  115
  19
  134
  1
  166/189
  99
  #t
  665/134
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  match
  "\"'(eval (λ (a n) (-> (match (app <= n 1) ...) <-)) (env ((□? (a n)))))\""
  167
  135
  26
  6
  115
  19
  134
  1
  3299/3780
  99
  #f
  671/135
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  app
  "\"'(eval\n  (let* (r ... s) (-> (app not (app (app blur lp) s (app - n 1))) <-))\n  (env ((□? (a n)))))\""
  168
  136
  26
  6
  115
  19
  134
  1
  1639/1890
  99
  #f
  677/136
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  app
  "\"'(eval (letrec (id ... lp) (-> (app lp (app #f) 2) <-)) (env ()))\""
  168
  136
  26
  6
  115
  19
  134
  1
  1639/1890
  99
  #f
  677/136
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (λ (y) (-> y <-)) (env ((□? (y)))))\""
  169
  137
  26
  6
  115
  19
  134
  1
  1633/1890
  99
  #f
  683/137
  ((0 0 0) (1/2 1/2 0) (0 0 0)))
