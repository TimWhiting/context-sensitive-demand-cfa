'(clean-cache
  blur
  2
  25
  23
  letrec
  "\"'(eval ((top) letrec (id ... lp) ...) (env ()))\""
  157
  117
  33
  7
  94
  19
  113
  1
  989/1140
  79
  #f
  193/39
  ((9/2 9/2 0) (9/2 9/2 0) (9/2 9/2 0)))
'(clean-cache
  blur
  2
  25
  23
  match
  "\"'(eval (λ (a n) (-> (match (app <= n 1) ...) <-)) (env ((□? (a n)))))\""
  132
  101
  26
  5
  94
  19
  113
  1
  35/37
  73
  #f
  497/101
  ((5/2 5/2 0) (5/2 5/2 0) (5/2 5/2 0)))
'(clean-cache
  blur
  2
  25
  23
  app
  "\"'(eval (match (app <= n 1) (#f) (_ (-> (app id a) <-))) (env ((□? (a n)))))\""
  89
  51
  31
  7
  43
  19
  62
  1
  17/20
  51
  #t
  5
  ((5/2 5/2 0) (5/2 5/2 0) (5/2 5/2 0)))
'(clean-cache
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app id (-> a <-)) (env ((□? (a n)))))\""
  66
  36
  26
  4
  35
  19
  54
  1
  15/16
  36
  #t
  5
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  blur
  2
  25
  23
  let*
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (let* (r ... s) ...) <-)) _)\n  (env ((□? (a n)))))\""
  161
  123
  31
  7
  85
  19
  104
  1
  1559/2100
  81
  #f
  613/123
  ((5 5 0) (5 5 0) (5 5 0)))
'(clean-cache
  blur
  2
  25
  23
  app
  "\"'(eval\n  (let* (... r (s (-> (app (app blur id) (app #f)) <-)) () ...) ...)\n  (env ((□? (a n)))))\""
  30
  11
  12
  7
  2
  2
  4
  1
  2/11
  11
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  blur
  2
  25
  23
  app
  "\"'(eval (app (app blur id) (-> (app #f) <-)) (env ((□? (a n)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  blur
  2
  25
  23
  app
  "\"'(eval (app (-> (app blur id) <-) (app #f)) (env ((□? (a n)))))\""
  13
  6
  4
  3
  2
  1
  3
  1
  1/3
  6
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  blur
  2
  25
  23
  app
  "\"'(eval\n  (let* (... () (r (-> (app (app blur id) (app #t)) <-)) s ...) ...)\n  (env ((□? (a n)))))\""
  30
  11
  12
  7
  2
  2
  4
  1
  2/11
  11
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  blur
  2
  25
  23
  app
  "\"'(eval (app (app blur id) (-> (app #t) <-)) (env ((□? (a n)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  blur
  2
  25
  23
  app
  "\"'(eval (app (-> (app blur id) <-) (app #t)) (env ((□? (a n)))))\""
  13
  6
  4
  3
  2
  1
  3
  1
  1/3
  6
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  blur
  2
  25
  23
  app
  "\"'(eval\n  (let* (r ... s) (-> (app not (app (app blur lp) s (app - n 1))) <-))\n  (env ((□? (a n)))))\""
  159
  121
  31
  7
  84
  19
  103
  1
  521/700
  81
  #f
  601/121
  ((5 5 0) (5 5 0) (5 5 0)))
'(clean-cache
  blur
  2
  25
  23
  app
  "\"'(eval (app not (-> (app (app blur lp) s (app - n 1)) <-)) (env ((□? (a n)))))\""
  155
  117
  31
  7
  82
  19
  101
  1
  1571/2100
  79
  #f
  193/39
  ((5 5 0) (5 5 0) (5 5 0)))
'(clean-cache
  blur
  2
  25
  23
  app
  "\"'(eval (app (app blur lp) s (-> (app - n 1) <-)) (env ((□? (a n)))))\""
  35
  21
  12
  2
  17
  8
  25
  1
  6/7
  8
  #f
  92/21
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (a n)))))\""
  32
  18
  12
  2
  17
  8
  25
  1
  27/28
  7
  #f
  79/18
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app (app blur lp) (-> s <-) (app - n 1)) (env ((□? (a n)))))\""
  31
  12
  12
  7
  2
  2
  4
  1
  1/6
  12
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  blur
  2
  25
  23
  app
  "\"'(eval (app (-> (app blur lp) <-) s (app - n 1)) (env ((□? (a n)))))\""
  13
  6
  4
  3
  2
  1
  3
  1
  1/3
  6
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  blur
  2
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (a n)))))\""
  44
  30
  12
  2
  26
  8
  34
  1
  37/44
  11
  #f
  133/30
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (a n)))))\""
  32
  18
  12
  2
  17
  8
  25
  1
  7/8
  7
  #f
  79/18
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (λ (y) (-> y <-)) (env ((□? (y)))))\""
  12
  6
  4
  2
  2
  1
  3
  1
  1/3
  5
  #f
  31/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  94
  53
  31
  10
  44
  19
  63
  1
  47/54
  52
  #f
  266/53
  ((5/2 5/2 0) (5/2 5/2 0) (5/2 5/2 0)))
'(clean-cache
  blur
  2
  25
  23
  app
  "\"'(eval (letrec (id ... lp) (-> (app lp (app #f) 2) <-)) (env ()))\""
  156
  116
  33
  7
  93
  19
  112
  1
  959/1110
  79
  #f
  573/116
  ((9/2 9/2 0) (9/2 9/2 0) (9/2 9/2 0)))
'(clean-cache
  blur
  2
  25
  23
  app
  "\"'(eval (app lp (-> (app #f) <-) 2) (env ()))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  app
  "\"'(eval (match (app <= n 1) (#f) (_ (-> (app id a) <-))) (env ((□? (a n)))))\""
  89
  51
  31
  7
  43
  19
  62
  1
  17/20
  51
  #t
  5
  ((5/2 5/2 0) (5/2 5/2 0) (5/2 5/2 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  app
  "\"'(eval (app (app blur id) (-> (app #f) <-)) (env ((□? (a n)))))\""
  89
  51
  31
  7
  43
  19
  62
  1
  17/20
  51
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  letrec
  "\"'(eval ((top) letrec (id ... lp) ...) (env ()))\""
  119
  80
  31
  8
  71
  19
  90
  1
  121/130
  72
  #t
  49/10
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (a n)))))\""
  128
  89
  31
  8
  79
  19
  98
  1
  83/90
  74
  #f
  430/89
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  app
  "\"'(eval\n  (let* (... r (s (-> (app (app blur id) (app #f)) <-)) () ...) ...)\n  (env ((□? (a n)))))\""
  129
  90
  31
  8
  79
  19
  98
  1
  2143/2340
  75
  #t
  29/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  let*
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (let* (r ... s) ...) <-)) _)\n  (env ((□? (a n)))))\""
  149
  110
  31
  8
  98
  19
  117
  1
  2213/2400
  85
  #f
  541/110
  ((0 0 0) (0 0 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  app
  "\"'(eval (app (app blur lp) s (-> (app - n 1) <-)) (env ((□? (a n)))))\""
  150
  111
  31
  8
  98
  19
  117
  1
  1099/1200
  85
  #f
  545/111
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  app
  "\"'(eval (app not (-> (app (app blur lp) s (app - n 1)) <-)) (env ((□? (a n)))))\""
  151
  112
  31
  8
  98
  19
  117
  1
  2183/2400
  85
  #f
  551/112
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  app
  "\"'(eval\n  (let* (r ... s) (-> (app not (app (app blur lp) s (app - n 1))) <-))\n  (env ((□? (a n)))))\""
  152
  113
  31
  8
  98
  19
  117
  1
  271/300
  85
  #f
  557/113
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (λ (y) (-> y <-)) (env ((□? (y)))))\""
  157
  118
  31
  8
  101
  19
  120
  1
  2201/2460
  89
  #f
  583/118
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (a n)))))\""
  158
  119
  31
  8
  101
  19
  120
  1
  1093/1230
  89
  #f
  587/119
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  app
  "\"'(eval (app (-> (app blur lp) <-) s (app - n 1)) (env ((□? (a n)))))\""
  159
  120
  31
  8
  101
  19
  120
  1
  2171/2460
  90
  #t
  74/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  app
  "\"'(eval (letrec (id ... lp) (-> (app lp (app #f) 2) <-)) (env ()))\""
  159
  120
  31
  8
  101
  19
  120
  1
  2171/2460
  90
  #t
  74/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app (app blur lp) (-> s <-) (app - n 1)) (env ((□? (a n)))))\""
  160
  121
  31
  8
  101
  19
  120
  1
  539/615
  91
  #t
  597/121
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  app
  "\"'(eval (app (-> (app blur id) <-) (app #t)) (env ((□? (a n)))))\""
  163
  124
  31
  8
  103
  19
  122
  1
  3779/4410
  94
  #t
  153/31
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  match
  "\"'(eval (λ (a n) (-> (match (app <= n 1) ...) <-)) (env ((□? (a n)))))\""
  164
  125
  31
  8
  103
  19
  122
  1
  15011/17640
  94
  #f
  618/125
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  app
  "\"'(eval (app lp (-> (app #f) <-) 2) (env ()))\""
  164
  125
  31
  8
  103
  19
  122
  1
  15011/17640
  94
  #t
  618/125
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  app
  "\"'(eval\n  (let* (... () (r (-> (app (app blur id) (app #t)) <-)) s ...) ...)\n  (env ((□? (a n)))))\""
  177
  138
  31
  8
  114
  19
  133
  1
  3217/3780
  107
  #t
  683/138
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app id (-> a <-)) (env ((□? (a n)))))\""
  177
  138
  31
  8
  114
  19
  133
  1
  3217/3780
  107
  #t
  683/138
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  app
  "\"'(eval (app (-> (app blur id) <-) (app #f)) (env ((□? (a n)))))\""
  178
  139
  31
  8
  114
  19
  133
  1
  799/945
  108
  #t
  688/139
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  app
  "\"'(eval (app (app blur id) (-> (app #t) <-)) (env ((□? (a n)))))\""
  178
  139
  31
  8
  114
  19
  133
  1
  799/945
  108
  #t
  688/139
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (a n)))))\""
  179
  140
  31
  8
  114
  19
  133
  1
  635/756
  108
  #f
  347/70
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  183
  141
  31
  11
  114
  19
  133
  1
  1583/1890
  108
  #f
  700/141
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  94
  53
  31
  10
  44
  19
  63
  1
  47/54
  52
  #f
  266/53
  ((5/2 5/2 0) (5/2 5/2 0) (5/2 5/2 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  app
  "\"'(eval (letrec (id ... lp) (-> (app lp (app #f) 2) <-)) (env ()))\""
  125
  83
  31
  11
  73
  19
  92
  1
  149/160
  74
  #t
  408/83
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  app
  "\"'(eval (app (app blur id) (-> (app #f) <-)) (env ((□? (a n)))))\""
  125
  83
  31
  11
  73
  19
  92
  1
  149/160
  74
  #t
  408/83
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (a n)))))\""
  134
  92
  31
  11
  81
  19
  100
  1
  37/40
  76
  #f
  223/46
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  app
  "\"'(eval (match (app <= n 1) (#f) (_ (-> (app id a) <-))) (env ((□? (a n)))))\""
  138
  96
  31
  11
  84
  19
  103
  1
  731/800
  80
  #t
  233/48
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app id (-> a <-)) (env ((□? (a n)))))\""
  138
  96
  31
  11
  84
  19
  103
  1
  731/800
  80
  #t
  233/48
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  app
  "\"'(eval (app (-> (app blur lp) <-) s (app - n 1)) (env ((□? (a n)))))\""
  142
  100
  31
  11
  87
  19
  106
  1
  363/400
  84
  #t
  243/50
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  app
  "\"'(eval (app (app blur lp) s (-> (app - n 1) <-)) (env ((□? (a n)))))\""
  143
  101
  31
  11
  87
  19
  106
  1
  721/800
  84
  #f
  490/101
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (λ (y) (-> y <-)) (env ((□? (y)))))\""
  148
  106
  31
  11
  90
  19
  109
  1
  183/205
  88
  #f
  258/53
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (a n)))))\""
  152
  110
  31
  11
  93
  19
  112
  1
  544/615
  89
  #f
  107/22
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  app
  "\"'(eval (app (-> (app blur id) <-) (app #t)) (env ((□? (a n)))))\""
  155
  113
  31
  11
  95
  19
  114
  1
  1907/2205
  92
  #t
  550/113
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  letrec
  "\"'(eval ((top) letrec (id ... lp) ...) (env ()))\""
  156
  114
  31
  11
  96
  19
  115
  1
  3919/4515
  93
  #t
  185/38
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  app
  "\"'(eval (app lp (-> (app #f) <-) 2) (env ()))\""
  156
  114
  31
  11
  96
  19
  115
  1
  3919/4515
  93
  #t
  185/38
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app (app blur lp) (-> s <-) (app - n 1)) (env ((□? (a n)))))\""
  157
  115
  31
  11
  96
  19
  115
  1
  15571/18060
  94
  #t
  112/23
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  app
  "\"'(eval (app (-> (app blur id) <-) (app #f)) (env ((□? (a n)))))\""
  158
  116
  31
  11
  96
  19
  115
  1
  7733/9030
  95
  #t
  565/116
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  app
  "\"'(eval\n  (let* (r ... s) (-> (app not (app (app blur lp) s (app - n 1))) <-))\n  (env ((□? (a n)))))\""
  171
  129
  31
  11
  108
  19
  127
  1
  3989/4620
  101
  #f
  637/129
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  app
  "\"'(eval\n  (let* (... () (r (-> (app (app blur id) (app #t)) <-)) s ...) ...)\n  (env ((□? (a n)))))\""
  177
  135
  31
  11
  113
  19
  132
  1
  3259/3780
  107
  #t
  667/135
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  app
  "\"'(eval (app not (-> (app (app blur lp) s (app - n 1)) <-)) (env ((□? (a n)))))\""
  178
  136
  31
  11
  113
  19
  132
  1
  1619/1890
  107
  #f
  673/136
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  app
  "\"'(eval\n  (let* (... r (s (-> (app (app blur id) (app #f)) <-)) () ...) ...)\n  (env ((□? (a n)))))\""
  179
  137
  31
  11
  113
  19
  132
  1
  3217/3780
  108
  #t
  678/137
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  app
  "\"'(eval (app (app blur id) (-> (app #t) <-)) (env ((□? (a n)))))\""
  179
  137
  31
  11
  113
  19
  132
  1
  3217/3780
  108
  #t
  678/137
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (a n)))))\""
  180
  138
  31
  11
  113
  19
  132
  1
  799/945
  108
  #f
  341/69
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  let*
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (let* (r ... s) ...) <-)) _)\n  (env ((□? (a n)))))\""
  182
  140
  31
  11
  114
  19
  133
  1
  635/756
  108
  #f
  347/70
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  blur
  2
  25
  23
  match
  "\"'(eval (λ (a n) (-> (match (app <= n 1) ...) <-)) (env ((□? (a n)))))\""
  183
  141
  31
  11
  114
  19
  133
  1
  1577/1890
  108
  #f
  700/141
  ((0 0 0) (0 0 0) (0 0 0)))
