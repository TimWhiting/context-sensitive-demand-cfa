'(clean-cache
  facehugger
  2
  25
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  143
  122
  13
  8
  106
  11
  117
  1
  219/235
  72
  #f
  86/61
  ((3 3 0) (3 3 0) (3 3 0)))
'(clean-cache
  facehugger
  2
  25
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  64
  53
  8
  3
  46
  7
  53
  1
  203/228
  36
  #f
  70/53
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  56
  45
  8
  3
  41
  7
  48
  1
  215/228
  30
  #f
  4/3
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  72
  60
  8
  4
  39
  7
  46
  1
  27/38
  33
  #f
  29/20
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  29
  19
  8
  2
  15
  7
  22
  1
  6/7
  15
  #f
  23/19
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  27/28
  13
  #f
  19/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  13
  #f
  19/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  38
  28
  8
  2
  24
  7
  31
  1
  37/44
  23
  #f
  33/28
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  13
  #f
  19/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  25
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  64
  53
  8
  3
  46
  7
  53
  1
  203/228
  36
  #f
  70/53
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  56
  45
  8
  3
  41
  7
  48
  1
  215/228
  30
  #f
  4/3
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  72
  60
  8
  4
  39
  7
  46
  1
  27/38
  33
  #f
  29/20
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  29
  19
  8
  2
  15
  7
  22
  1
  6/7
  15
  #f
  23/19
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  27/28
  13
  #f
  19/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  13
  #f
  19/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  38
  28
  8
  2
  24
  7
  31
  1
  37/44
  23
  #f
  33/28
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  13
  #f
  19/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  9
  5
  3
  1
  4
  3
  7
  1
  4/5
  4
  #f
  6/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  142
  121
  13
  8
  105
  11
  116
  1
  107/115
  72
  #f
  170/121
  ((3 3 0) (3 3 0) (3 3 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  73
  60
  8
  5
  52
  7
  59
  1
  107/115
  36
  #f
  7/5
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  10
  6
  3
  1
  6
  3
  9
  1
  1
  6
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  73
  60
  8
  5
  52
  7
  59
  1
  107/115
  36
  #f
  7/5
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  10
  6
  3
  1
  6
  3
  9
  1
  1
  6
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  73
  60
  8
  5
  52
  7
  59
  1
  107/115
  36
  #f
  7/5
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  77
  64
  8
  5
  52
  7
  59
  1
  102/115
  38
  #f
  45/32
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  77
  64
  8
  5
  52
  7
  59
  1
  102/115
  38
  #t
  45/32
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  136
  116
  13
  7
  97
  11
  108
  1
  2179/2460
  73
  #f
  159/116
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  140
  120
  13
  7
  97
  11
  108
  1
  106/123
  74
  #f
  83/60
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  140
  120
  13
  7
  97
  11
  108
  1
  106/123
  74
  #f
  83/60
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  145
  125
  13
  7
  102
  11
  113
  1
  461/528
  77
  #f
  173/125
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  146
  126
  13
  7
  102
  11
  113
  1
  287/330
  77
  #f
  25/18
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  146
  126
  13
  7
  102
  11
  113
  1
  287/330
  77
  #f
  25/18
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  148
  128
  13
  7
  104
  11
  115
  1
  302/345
  78
  #f
  89/64
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  149
  129
  13
  7
  104
  11
  115
  1
  599/690
  78
  #f
  60/43
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  150
  130
  13
  7
  104
  11
  115
  1
  2381/2760
  78
  #f
  7/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  150
  130
  13
  7
  104
  11
  115
  1
  2381/2760
  78
  #f
  7/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  154
  134
  13
  7
  104
  11
  115
  1
  2333/2760
  79
  #f
  189/134
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  154
  134
  13
  7
  104
  11
  115
  1
  2333/2760
  79
  #f
  189/134
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  155
  135
  13
  7
  104
  11
  115
  1
  1159/1380
  79
  #f
  191/135
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  155
  135
  13
  7
  104
  11
  115
  1
  1159/1380
  79
  #t
  191/135
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  156
  136
  13
  7
  104
  11
  115
  1
  2303/2760
  79
  #f
  193/136
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  158
  138
  13
  7
  104
  11
  115
  1
  2279/2760
  80
  #f
  98/69
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  158
  138
  13
  7
  104
  11
  115
  1
  2279/2760
  80
  #f
  98/69
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  159
  139
  13
  7
  104
  11
  115
  1
  283/345
  80
  #f
  198/139
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  160
  140
  13
  7
  105
  11
  116
  1
  581/705
  80
  #f
  10/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  161
  141
  13
  7
  105
  11
  116
  1
  2309/2820
  80
  #f
  202/141
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  13
  #f
  19/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  64
  52
  8
  4
  51
  7
  58
  1
  91/92
  36
  #f
  17/13
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  64
  52
  8
  4
  51
  7
  58
  1
  91/92
  36
  #t
  17/13
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  65
  53
  8
  4
  51
  7
  58
  1
  45/46
  36
  #f
  70/53
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  66
  54
  8
  4
  51
  7
  58
  1
  22/23
  37
  #t
  71/54
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  136
  116
  13
  7
  105
  11
  116
  1
  1337/1410
  72
  #f
  40/29
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  136
  116
  13
  7
  105
  11
  116
  1
  1337/1410
  72
  #f
  40/29
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  137
  117
  13
  7
  105
  11
  116
  1
  2659/2820
  72
  #f
  18/13
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  137
  117
  13
  7
  105
  11
  116
  1
  2659/2820
  72
  #f
  18/13
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  138
  118
  13
  7
  105
  11
  116
  1
  661/705
  72
  #f
  82/59
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  142
  122
  13
  7
  105
  11
  116
  1
  646/705
  73
  #f
  171/122
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  142
  122
  13
  7
  105
  11
  116
  1
  646/705
  73
  #f
  171/122
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  142
  122
  13
  7
  105
  11
  116
  1
  646/705
  73
  #f
  171/122
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  143
  123
  13
  7
  105
  11
  116
  1
  2569/2820
  73
  #f
  173/123
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  144
  124
  13
  7
  105
  11
  116
  1
  1277/1410
  73
  #f
  175/124
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  148
  128
  13
  7
  105
  11
  116
  1
  1247/1410
  75
  #f
  181/128
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  150
  130
  13
  7
  105
  11
  116
  1
  247/282
  76
  #f
  92/65
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  154
  134
  13
  7
  105
  11
  116
  1
  2417/2820
  77
  #f
  191/134
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  154
  134
  13
  7
  105
  11
  116
  1
  2417/2820
  77
  #t
  191/134
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  155
  135
  13
  7
  105
  11
  116
  1
  602/705
  77
  #f
  193/135
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  156
  136
  13
  7
  105
  11
  116
  1
  2393/2820
  77
  #f
  195/136
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  157
  137
  13
  7
  105
  11
  116
  1
  1189/1410
  77
  #f
  197/137
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  158
  138
  13
  7
  105
  11
  116
  1
  2369/2820
  77
  #f
  199/138
  ((0 0 0) (0 0 0) (0 0 0)))
