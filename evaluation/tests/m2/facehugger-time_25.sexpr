'(clean-cache
  facehugger
  2
  25
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  73
  54
  13
  6
  54
  11
  65
  1
  1
  22
  #f
  121/27
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  facehugger
  2
  25
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  66
  55
  8
  3
  48
  7
  55
  1
  103/114
  16
  #f
  244/55
  ((7/2 7/2 0) (4 4 0) (7/2 7/2 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  57
  46
  8
  3
  42
  7
  49
  1
  215/228
  15
  #f
  203/46
  ((5/2 5/2 0) (5/2 5/2 0) (3 3 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  72
  60
  8
  4
  39
  7
  46
  1
  27/38
  19
  #f
  53/12
  ((6 6 0) (6 6 0) (6 6 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  29
  19
  8
  2
  15
  7
  22
  1
  6/7
  6
  #f
  82/19
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  27/28
  5
  #f
  69/16
  ((1 1 0) (1 1 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  5
  #f
  69/16
  ((1 1 0) (1/2 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  38
  28
  8
  2
  24
  7
  31
  1
  37/44
  9
  #f
  123/28
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  5
  #f
  69/16
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  25
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  66
  55
  8
  3
  48
  7
  55
  1
  103/114
  16
  #f
  244/55
  ((7/2 7/2 0) (7/2 7/2 0) (7/2 7/2 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  57
  46
  8
  3
  42
  7
  49
  1
  215/228
  15
  #f
  203/46
  ((5/2 5/2 0) (5/2 5/2 0) (5/2 5/2 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  72
  60
  8
  4
  39
  7
  46
  1
  27/38
  19
  #f
  53/12
  ((6 6 0) (6 6 0) (6 6 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  29
  19
  8
  2
  15
  7
  22
  1
  6/7
  6
  #f
  82/19
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  27/28
  5
  #f
  69/16
  ((1/2 1 0) (1/2 1/2 0) (1/2 1 0)))
'(clean-cache
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  5
  #f
  69/16
  ((1/2 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  38
  28
  8
  2
  24
  7
  31
  1
  37/44
  9
  #f
  123/28
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  5
  #f
  69/16
  ((1/2 1 0) (1/2 1 0) (1/2 1 0)))
'(clean-cache
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  9
  5
  3
  1
  4
  3
  7
  1
  4/5
  4
  #f
  26/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  72
  53
  13
  6
  53
  11
  64
  1
  1
  22
  #f
  238/53
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  38
  26
  8
  4
  26
  7
  33
  1
  1
  11
  #f
  9/2
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  10
  6
  3
  1
  6
  3
  9
  1
  1
  6
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  38
  26
  8
  4
  26
  7
  33
  1
  1
  11
  #f
  9/2
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  10
  6
  3
  1
  6
  3
  9
  1
  1
  6
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  38
  28
  8
  2
  24
  7
  31
  1
  37/44
  9
  #f
  123/28
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  103
  84
  13
  6
  80
  11
  91
  1
  44/45
  30
  #f
  94/21
  ((5/2 5/2 0) (5/2 5/2 0) (5/2 5/2 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  104
  85
  13
  6
  80
  11
  91
  1
  131/135
  30
  #f
  382/85
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  138
  118
  13
  7
  107
  11
  118
  1
  649/690
  38
  #f
  263/59
  ((3 3 0) (3 7/2 0) (3 3 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  138
  118
  13
  7
  107
  11
  118
  1
  649/690
  38
  #f
  263/59
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  139
  119
  13
  7
  107
  11
  118
  1
  2587/2760
  38
  #f
  530/119
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  139
  119
  13
  7
  107
  11
  118
  1
  2587/2760
  38
  #f
  530/119
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  140
  120
  13
  7
  107
  11
  118
  1
  643/690
  38
  #f
  89/20
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  142
  122
  13
  7
  107
  11
  118
  1
  1271/1380
  39
  #f
  543/122
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  146
  126
  13
  7
  107
  11
  118
  1
  1247/1380
  40
  #f
  40/9
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  147
  127
  13
  7
  107
  11
  118
  1
  2479/2760
  40
  #f
  564/127
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  147
  127
  13
  7
  107
  11
  118
  1
  2479/2760
  40
  #t
  564/127
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  151
  131
  13
  7
  107
  11
  118
  1
  485/552
  41
  #f
  583/131
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  155
  135
  13
  7
  107
  11
  118
  1
  2377/2760
  41
  #f
  601/135
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  156
  136
  13
  7
  107
  11
  118
  1
  1181/1380
  41
  #f
  605/136
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  157
  137
  13
  7
  107
  11
  118
  1
  2347/2760
  41
  #f
  609/137
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  158
  138
  13
  7
  108
  11
  119
  1
  2407/2820
  41
  #f
  613/138
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  158
  138
  13
  7
  108
  11
  119
  1
  2407/2820
  41
  #t
  613/138
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  158
  138
  13
  7
  108
  11
  119
  1
  2407/2820
  41
  #f
  613/138
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  159
  139
  13
  7
  108
  11
  119
  1
  598/705
  41
  #f
  617/139
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  160
  140
  13
  7
  108
  11
  119
  1
  2377/2820
  41
  #f
  621/140
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  161
  141
  13
  7
  108
  11
  119
  1
  1181/1410
  41
  #f
  625/141
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  161
  141
  13
  7
  108
  11
  119
  1
  1181/1410
  41
  #f
  625/141
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  66
  55
  8
  3
  48
  7
  55
  1
  103/114
  16
  #f
  244/55
  ((7/2 7/2 0) (4 4 0) (7/2 7/2 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  87
  70
  13
  4
  62
  11
  73
  1
  139/156
  20
  #f
  22/5
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  88
  71
  13
  4
  62
  11
  73
  1
  275/312
  20
  #f
  312/71
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  117
  99
  13
  5
  89
  11
  100
  1
  103/111
  29
  #f
  437/99
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  118
  100
  13
  5
  89
  11
  100
  1
  409/444
  29
  #f
  441/100
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  118
  100
  13
  5
  89
  11
  100
  1
  409/444
  29
  #f
  441/100
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  119
  101
  13
  5
  89
  11
  100
  1
  203/222
  29
  #f
  445/101
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  120
  102
  13
  5
  89
  11
  100
  1
  403/444
  29
  #f
  449/102
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  120
  102
  13
  5
  89
  11
  100
  1
  403/444
  29
  #f
  449/102
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  121
  103
  13
  5
  89
  11
  100
  1
  100/111
  29
  #f
  453/103
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  133
  114
  13
  6
  100
  11
  111
  1
  449/492
  33
  #f
  503/114
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  134
  115
  13
  6
  100
  11
  111
  1
  223/246
  33
  #f
  507/115
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  137
  118
  13
  6
  103
  11
  114
  1
  235/258
  36
  #t
  261/59
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  137
  118
  13
  6
  103
  11
  114
  1
  235/258
  36
  #t
  261/59
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  138
  119
  13
  6
  103
  11
  114
  1
  467/516
  36
  #f
  526/119
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  139
  120
  13
  6
  103
  11
  114
  1
  116/129
  36
  #f
  53/12
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  139
  120
  13
  6
  103
  11
  114
  1
  116/129
  36
  #f
  53/12
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  140
  121
  13
  6
  103
  11
  114
  1
  461/516
  36
  #f
  536/121
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  145
  126
  13
  6
  108
  11
  119
  1
  85/94
  37
  #f
  557/126
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  145
  126
  13
  6
  108
  11
  119
  1
  85/94
  37
  #f
  557/126
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  146
  127
  13
  6
  108
  11
  119
  1
  253/282
  37
  #f
  563/127
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  146
  127
  13
  6
  108
  11
  119
  1
  253/282
  37
  #f
  563/127
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  147
  128
  13
  6
  108
  11
  119
  1
  503/564
  37
  #f
  567/128
  ((0 0 0) (0 0 0) (0 0 0)))
