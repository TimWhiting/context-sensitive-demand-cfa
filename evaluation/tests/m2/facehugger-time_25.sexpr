'(clean-cache
  facehugger
  2
  25
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  143
  122
  13
  8
  106
  11
  117
  1
  219/235
  42
  #f
  269/61
  ((3 3 0) (3 3 0) (3 3 0)))
'(clean-cache
  facehugger
  2
  25
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  64
  53
  8
  3
  46
  7
  53
  1
  203/228
  18
  #f
  234/53
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  56
  45
  8
  3
  41
  7
  48
  1
  215/228
  16
  #f
  22/5
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  72
  60
  8
  4
  39
  7
  46
  1
  27/38
  19
  #f
  53/12
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  29
  19
  8
  2
  15
  7
  22
  1
  6/7
  6
  #f
  82/19
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  27/28
  5
  #f
  69/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  5
  #f
  69/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  38
  28
  8
  2
  24
  7
  31
  1
  37/44
  9
  #f
  123/28
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  5
  #f
  69/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  25
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  64
  53
  8
  3
  46
  7
  53
  1
  203/228
  18
  #f
  234/53
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  56
  45
  8
  3
  41
  7
  48
  1
  215/228
  16
  #f
  22/5
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  72
  60
  8
  4
  39
  7
  46
  1
  27/38
  19
  #f
  53/12
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  29
  19
  8
  2
  15
  7
  22
  1
  6/7
  6
  #f
  82/19
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  27/28
  5
  #f
  69/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  5
  #f
  69/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  38
  28
  8
  2
  24
  7
  31
  1
  37/44
  9
  #f
  123/28
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  5
  #f
  69/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  9
  5
  3
  1
  4
  3
  7
  1
  4/5
  4
  #f
  26/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  142
  121
  13
  8
  105
  11
  116
  1
  107/115
  42
  #f
  534/121
  ((3 3 0) (3 3 0) (3 3 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  73
  60
  8
  5
  52
  7
  59
  1
  107/115
  21
  #f
  53/12
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  10
  6
  3
  1
  6
  3
  9
  1
  1
  6
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  73
  60
  8
  5
  52
  7
  59
  1
  107/115
  21
  #f
  53/12
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  25
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  10
  6
  3
  1
  6
  3
  9
  1
  1
  6
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  5
  #f
  69/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  133
  113
  13
  7
  104
  11
  115
  1
  883/920
  41
  #f
  499/113
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  134
  114
  13
  7
  104
  11
  115
  1
  439/460
  41
  #f
  503/114
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  138
  118
  13
  7
  104
  11
  115
  1
  2569/2760
  41
  #f
  521/118
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  138
  118
  13
  7
  104
  11
  115
  1
  2569/2760
  41
  #f
  521/118
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  139
  119
  13
  7
  104
  11
  115
  1
  1277/1380
  41
  #f
  75/17
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  143
  123
  13
  7
  104
  11
  115
  1
  1253/1380
  42
  #f
  544/123
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  144
  124
  13
  7
  104
  11
  115
  1
  2491/2760
  42
  #f
  137/31
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  145
  125
  13
  7
  104
  11
  115
  1
  619/690
  42
  #f
  552/125
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  145
  125
  13
  7
  104
  11
  115
  1
  619/690
  42
  #t
  552/125
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  146
  126
  13
  7
  105
  11
  116
  1
  634/705
  42
  #f
  278/63
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  146
  126
  13
  7
  105
  11
  116
  1
  634/705
  42
  #t
  278/63
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  147
  127
  13
  7
  105
  11
  116
  1
  2521/2820
  42
  #f
  560/127
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  147
  127
  13
  7
  105
  11
  116
  1
  2521/2820
  42
  #f
  560/127
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  148
  128
  13
  7
  105
  11
  116
  1
  1253/1410
  42
  #f
  141/32
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  148
  128
  13
  7
  105
  11
  116
  1
  1253/1410
  42
  #f
  141/32
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  152
  132
  13
  7
  105
  11
  116
  1
  1229/1410
  43
  #f
  581/132
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  153
  133
  13
  7
  105
  11
  116
  1
  2443/2820
  43
  #f
  585/133
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  154
  134
  13
  7
  105
  11
  116
  1
  607/705
  43
  #f
  589/134
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  155
  135
  13
  7
  105
  11
  116
  1
  2413/2820
  43
  #f
  119/27
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  157
  137
  13
  7
  105
  11
  116
  1
  2389/2820
  44
  #f
  604/137
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  158
  138
  13
  7
  105
  11
  116
  1
  2369/2820
  44
  #f
  305/69
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  25
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  158
  138
  13
  7
  105
  11
  116
  1
  2369/2820
  44
  #f
  305/69
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  27/28
  5
  #f
  69/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  133
  113
  13
  7
  104
  11
  115
  1
  883/920
  41
  #f
  499/113
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  137
  117
  13
  7
  104
  11
  115
  1
  863/920
  42
  #f
  518/117
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  137
  117
  13
  7
  104
  11
  115
  1
  863/920
  42
  #t
  518/117
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  138
  118
  13
  7
  104
  11
  115
  1
  429/460
  42
  #f
  261/59
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  139
  119
  13
  7
  104
  11
  115
  1
  853/920
  42
  #f
  526/119
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  140
  120
  13
  7
  104
  11
  115
  1
  106/115
  42
  #f
  53/12
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  142
  122
  13
  7
  104
  11
  115
  1
  419/460
  43
  #f
  539/122
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  142
  122
  13
  7
  104
  11
  115
  1
  419/460
  43
  #f
  539/122
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  146
  126
  13
  7
  104
  11
  115
  1
  491/552
  43
  #f
  557/126
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  146
  126
  13
  7
  104
  11
  115
  1
  491/552
  43
  #t
  557/126
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  146
  126
  13
  7
  104
  11
  115
  1
  491/552
  43
  #f
  557/126
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  147
  127
  13
  7
  104
  11
  115
  1
  61/69
  43
  #f
  561/127
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  147
  127
  13
  7
  104
  11
  115
  1
  61/69
  43
  #f
  561/127
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  147
  127
  13
  7
  104
  11
  115
  1
  61/69
  43
  #f
  561/127
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  148
  128
  13
  7
  104
  11
  115
  1
  2431/2760
  43
  #f
  565/128
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  149
  129
  13
  7
  104
  11
  115
  1
  302/345
  43
  #f
  569/129
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  150
  130
  13
  7
  104
  11
  115
  1
  599/690
  43
  #f
  115/26
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  154
  134
  13
  7
  104
  11
  115
  1
  587/690
  44
  #f
  296/67
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  155
  135
  13
  7
  104
  11
  115
  1
  2333/2760
  44
  #f
  598/135
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  156
  136
  13
  7
  105
  11
  116
  1
  2393/2820
  44
  #f
  301/68
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  157
  137
  13
  7
  105
  11
  116
  1
  1189/1410
  44
  #f
  606/137
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  25
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  158
  138
  13
  7
  105
  11
  116
  1
  2369/2820
  44
  #f
  305/69
  ((0 0 0) (0 0 0) (0 0 0)))
