'(clean-cache
  kcfa-3
  2
  15
  31
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  46
  27
  9
  10
  27
  9
  36
  1
  1
  27
  #t
  5
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  kcfa-3
  2
  31
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  #f)
'(clean-cache
  kcfa-3
  2
  15
  31
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (f3) ...) (λ (x3) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  80
  42
  15
  23
  5
  3
  8
  1
  5/18
  35
  #f
  229/42
  ((17/2 17/2 0) (17/2 17/2 0) (9 9 0)))
'(clean-cache
  kcfa-3
  2
  15
  31
  app
  "\"'(eval\n  (λ (x3) (-> (app (λ (z) ...) (λ (y1 y2 y3) ...)) <-))\n  (env ((□? (x3)) (□? (x2)) (□? (x1)))))\""
  56
  24
  12
  20
  5
  3
  8
  1
  5/12
  20
  #f
  65/12
  ((13/2 13/2 0) (13/2 13/2 0) (13/2 7 0)))
'(clean-cache
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval\n  (λ (y1 y2 y3) (-> y1 <-))\n  (env ((□? (y1 y2 y3)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  38
  12
  9
  17
  5
  3
  8
  1
  5/8
  10
  #f
  16/3
  ((5/2 5/2 0) (3 3 0) (5/2 3 0)))
'(clean-cache
  kcfa-3
  2
  15
  31
  app
  "\"'(eval\n  (λ (z) (-> (app z x1 x2 x3) <-))\n  (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  57
  25
  12
  20
  5
  3
  8
  1
  5/11
  21
  #f
  137/25
  ((7 7 0) (13/2 13/2 0) (13/2 13/2 0)))
'(clean-cache
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval (app z x1 x2 (-> x3 <-)) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  15
  6
  3
  6
  0
  0
  0
  1
  0
  5
  #f
  31/6
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-) x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  15
  6
  3
  6
  0
  0
  0
  1
  0
  5
  #f
  31/6
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  14
  6
  3
  5
  5
  3
  8
  1
  5/6
  5
  #f
  31/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  7
  2
  1
  4
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  2
  31
  let
  "\"'(eval (λ (f3) (-> (let (_) ...) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  #f)
'(clean-cache
  kcfa-3
  2
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f3 (app #t)) <-)) () ...) ...)\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  #f)
'(clean-cache
  kcfa-3
  2
  15
  31
  app
  "\"'(eval (app f3 (-> (app #t) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  5
  2
  0
  3
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #t)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  6
  2
  1
  3
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  2
  31
  app
  "\"'(eval\n  (let (_) (-> (app f3 (app #f)) <-))\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  #f)
'(clean-cache
  kcfa-3
  2
  15
  31
  app
  "\"'(eval (app f3 (-> (app #f) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  5
  2
  0
  3
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #f)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  6
  2
  1
  3
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  2
  31
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  #f)
'(clean-cache
  kcfa-3
  2
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  #f)
'(clean-cache
  kcfa-3
  2
  15
  31
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  4
  2
  0
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  5
  2
  1
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  2
  31
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  #f)
'(clean-cache
  kcfa-3
  2
  15
  31
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  4
  2
  0
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  5
  2
  1
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  2
  15
  31
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  78
  47
  14
  17
  25
  9
  34
  1
  29/52
  47
  #t
  244/47
  ((15/2 15/2 0) (15/2 15/2 0) (15/2 15/2 0)))
'(clean-cache
  kcfa-3
  2
  15
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  76
  45
  14
  17
  24
  9
  33
  1
  14/25
  45
  #t
  26/5
  ((15/2 8 0) (15/2 15/2 0) (7 15/2 0)))
'(clean-cache
  kcfa-3
  2
  15
  31
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  4
  2
  1
  1
  1
  1
  2
  1
  1/2
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  2
  15
  31
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  76
  45
  14
  17
  24
  9
  33
  1
  14/25
  45
  #t
  26/5
  ((15/2 15/2 0) (15/2 15/2 0) (7 7 0)))
'(clean-cache
  kcfa-3
  2
  15
  31
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  4
  2
  1
  1
  1
  1
  2
  1
  1/2
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  2
  15
  31
  app
  "\"'(eval\n  (λ (z) (-> (app z x1 x2 x3) <-))\n  (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  57
  25
  12
  20
  5
  3
  8
  1
  5/11
  21
  #f
  137/25
  ((13/2 13/2 0) (13/2 7 0) (13/2 13/2 0)))
'(shuffled-cache
  0
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #f)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  67
  29
  15
  23
  5
  3
  8
  1
  5/13
  25
  #t
  161/29
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  kcfa-3
  2
  31
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-) x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  0
  kcfa-3
  2
  15
  31
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  76
  45
  14
  17
  24
  9
  33
  1
  14/25
  45
  #t
  26/5
  ((15/2 15/2 0) (7 7 0) (8 17/2 0)))
'(shuffled-cache
  0
  kcfa-3
  2
  31
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  0
  kcfa-3
  2
  15
  31
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  2
  31
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  0
  kcfa-3
  2
  15
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  76
  45
  14
  17
  24
  9
  33
  1
  14/25
  45
  #t
  26/5
  ((15/2 8 0) (15/2 15/2 0) (8 8 0)))
'(shuffled-cache
  0
  kcfa-3
  2
  15
  31
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  112
  69
  19
  24
  47
  14
  61
  1
  127/180
  69
  #t
  118/23
  ((5 11/2 0) (11/2 11/2 0) (11/2 11/2 0)))
'(shuffled-cache
  0
  kcfa-3
  2
  15
  31
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  113
  70
  19
  24
  47
  14
  61
  1
  31/45
  70
  #t
  359/70
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  114
  71
  19
  24
  47
  14
  61
  1
  121/180
  71
  #t
  364/71
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  2
  15
  31
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  117
  73
  19
  25
  49
  14
  63
  1
  65/93
  73
  #t
  374/73
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  2
  15
  31
  app
  "\"'(eval\n  (λ (x3) (-> (app (λ (z) ...) (λ (y1 y2 y3) ...)) <-))\n  (env ((□? (x3)) (□? (x2)) (□? (x1)))))\""
  164
  92
  28
  44
  49
  14
  63
  1
  39/62
  88
  #f
  479/92
  ((8 17/2 0) (8 8 0) (8 8 0)))
'(shuffled-cache
  0
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  165
  93
  28
  44
  49
  14
  63
  1
  817/1302
  89
  #t
  162/31
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  2
  15
  31
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  172
  97
  28
  47
  49
  14
  63
  1
  817/1386
  93
  #t
  506/97
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  2
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f3 (app #t)) <-)) () ...) ...)\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  0
  kcfa-3
  2
  15
  31
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (f3) ...) (λ (x3) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  80
  42
  15
  23
  5
  3
  8
  1
  5/18
  35
  #f
  229/42
  ((17/2 17/2 0) (8 17/2 0) (8 17/2 0)))
'(shuffled-cache
  0
  kcfa-3
  2
  15
  31
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  141
  79
  25
  37
  41
  13
  54
  1
  29/45
  71
  #f
  415/79
  ((11 11 0) (21/2 21/2 0) (10 21/2 0)))
'(shuffled-cache
  0
  kcfa-3
  2
  31
  let
  "\"'(eval (λ (f3) (-> (let (_) ...) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  0
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval (app z x1 x2 (-> x3 <-)) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  15
  6
  3
  6
  0
  0
  0
  1
  0
  5
  #f
  31/6
  ((1/2 1 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  19
  8
  4
  7
  0
  0
  0
  1
  0
  7
  #t
  41/8
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  20
  9
  4
  7
  0
  0
  0
  1
  0
  8
  #t
  46/9
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  2
  31
  app
  "\"'(eval\n  (let (_) (-> (app f3 (app #f)) <-))\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  0
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval\n  (λ (y1 y2 y3) (-> y1 <-))\n  (env ((□? (y1 y2 y3)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  38
  12
  9
  17
  5
  3
  8
  1
  5/8
  10
  #f
  16/3
  ((3 3 0) (3 3 0) (7/2 7/2 0)))
'(shuffled-cache
  0
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  41
  14
  10
  17
  6
  4
  10
  1
  3/5
  12
  #t
  37/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  2
  15
  31
  app
  "\"'(eval (app f3 (-> (app #f) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  48
  18
  10
  20
  6
  4
  10
  1
  1/2
  16
  #t
  47/9
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  2
  15
  31
  app
  "\"'(eval (app f3 (-> (app #t) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  52
  22
  10
  20
  6
  4
  10
  1
  3/7
  20
  #t
  57/11
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  2
  15
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  158
  82
  29
  47
  34
  14
  48
  1
  454/945
  79
  #f
  208/41
  ((13 27/2 0) (25/2 13 0) (25/2 13 0)))
'(shuffled-cache
  0
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #t)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  168
  88
  32
  48
  34
  14
  48
  1
  893/1960
  85
  #t
  225/44
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  169
  89
  32
  48
  34
  14
  48
  1
  1781/3920
  85
  #f
  456/89
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  2
  15
  31
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  174
  94
  32
  48
  34
  14
  48
  1
  1781/4200
  90
  #t
  481/94
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-) x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  15
  6
  3
  6
  0
  0
  0
  1
  0
  5
  #f
  31/6
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  kcfa-3
  2
  15
  31
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  91
  51
  17
  23
  24
  9
  33
  1
  83/180
  50
  #t
  265/51
  ((8 8 0) (17/2 17/2 0) (15/2 8 0)))
'(shuffled-cache
  1
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  94
  53
  18
  23
  24
  9
  33
  1
  41/93
  52
  #t
  275/53
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  2
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  1
  kcfa-3
  2
  31
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  #f)
'(shuffled-cache
  1
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  4
  2
  1
  1
  1
  1
  2
  1
  1/2
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  2
  15
  31
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  6
  4
  1
  1
  2
  1
  3
  1
  1/2
  4
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  2
  15
  31
  app
  "\"'(eval\n  (λ (x3) (-> (app (λ (z) ...) (λ (y1 y2 y3) ...)) <-))\n  (env ((□? (x3)) (□? (x2)) (□? (x1)))))\""
  60
  27
  13
  20
  6
  4
  10
  1
  11/28
  23
  #f
  145/27
  ((13/2 13/2 0) (7 7 0) (7 7 0)))
'(shuffled-cache
  1
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #f)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  70
  31
  16
  23
  6
  4
  10
  1
  11/32
  27
  #t
  169/31
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  kcfa-3
  2
  15
  31
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  105
  53
  21
  31
  27
  9
  36
  1
  81/116
  49
  #t
  279/53
  ((5/2 5/2 0) (5/2 5/2 0) (5/2 5/2 0)))
'(shuffled-cache
  1
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  106
  54
  21
  31
  27
  9
  36
  1
  101/145
  49
  #f
  95/18
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #t)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  107
  55
  21
  31
  27
  9
  36
  1
  101/150
  50
  #t
  292/55
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  2
  31
  ref-or-constructor
  "\"'(eval (app z x1 x2 (-> x3 <-)) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  1
  kcfa-3
  2
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f3 (app #t)) <-)) () ...) ...)\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  1
  kcfa-3
  2
  15
  31
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  4
  2
  0
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  2
  15
  31
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  50
  29
  9
  12
  27
  9
  36
  1
  27/29
  29
  #t
  5
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  1
  kcfa-3
  2
  31
  app
  "\"'(eval\n  (let (_) (-> (app f3 (app #f)) <-))\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  1
  kcfa-3
  2
  15
  31
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  2
  15
  31
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (f3) ...) (λ (x3) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  82
  44
  15
  23
  5
  3
  8
  1
  2/9
  37
  #f
  239/44
  ((9 9 0) (9 9 0) (9 9 0)))
'(shuffled-cache
  1
  kcfa-3
  2
  31
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  1
  kcfa-3
  2
  15
  31
  app
  "\"'(eval (app f3 (-> (app #t) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  5
  2
  0
  3
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  2
  15
  31
  app
  "\"'(eval\n  (λ (z) (-> (app z x1 x2 x3) <-))\n  (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  64
  29
  12
  23
  5
  3
  8
  1
  5/13
  25
  #f
  157/29
  ((7 7 0) (7 7 0) (7 7 0)))
'(shuffled-cache
  1
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  67
  31
  13
  23
  6
  4
  10
  1
  2/5
  27
  #t
  167/31
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  2
  31
  let
  "\"'(eval (λ (f3) (-> (let (_) ...) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  1
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  5
  2
  1
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  2
  15
  31
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  9
  5
  1
  3
  0
  0
  0
  1
  0
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval\n  (λ (y1 y2 y3) (-> y1 <-))\n  (env ((□? (y1 y2 y3)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  58
  25
  12
  21
  9
  5
  14
  1
  29/60
  23
  #f
  27/5
  ((7/2 7/2 0) (7/2 7/2 0) (7/2 7/2 0)))
'(shuffled-cache
  1
  kcfa-3
  2
  31
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  1
  kcfa-3
  2
  15
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  76
  45
  14
  17
  24
  9
  33
  1
  14/25
  45
  #t
  26/5
  ((15/2 15/2 0) (15/2 15/2 0) (15/2 15/2 0)))
'(shuffled-cache
  1
  kcfa-3
  2
  15
  31
  app
  "\"'(eval (app f3 (-> (app #f) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))\""
  81
  47
  14
  20
  24
  9
  33
  1
  14/27
  47
  #t
  244/47
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  2
  15
  31
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2 x3) (env ((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  86
  49
  15
  22
  24
  9
  33
  1
  41/81
  49
  #t
  254/49
  ((0 0 0) (0 0 0) (0 0 0)))
