'(expression: (app (λ (x) (app x x)) (λ (y) (app y y))))
(list 'query: '(top) (menv '()))
'(clos/con: ⊥)
'(literals: (⊥ ⊥ ⊥ ⊥))
(list 'query: '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))
(list 'clos/con: (list (list '(λ (y) (app y y)) (menv '()))))
'(literals: (⊥ ⊥ ⊥ ⊥))
(list 'query: '(λ (y) (-> (app y y) <-)) (menv '((□? (y)))))
'(clos/con: ⊥)
'(literals: (⊥ ⊥ ⊥ ⊥))
(list 'query: '(app y (-> y <-)) (menv '((□? (y)))))
(list 'clos/con: (list (list '(λ (y) (app y y)) (menv '()))))
'(literals: (⊥ ⊥ ⊥ ⊥))
(list 'query: '(app (-> y <-) y) (menv '((□? (y)))))
(list 'clos/con: (list (list '(λ (y) (app y y)) (menv '()))))
'(literals: (⊥ ⊥ ⊥ ⊥))
(list 'query: '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))
(list 'clos/con: (list (list '(λ (x) (app x x)) (menv '()))))
'(literals: (⊥ ⊥ ⊥ ⊥))
(list 'query: '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))
'(clos/con: ⊥)
'(literals: (⊥ ⊥ ⊥ ⊥))
(list 'query: '(app x (-> x <-)) (menv '((□? (x)))))
(list 'clos/con: (list (list '(λ (y) (app y y)) (menv '()))))
'(literals: (⊥ ⊥ ⊥ ⊥))
(list 'query: '(app (-> x <-) x) (menv '((□? (x)))))
(list 'clos/con: (list (list '(λ (y) (app y y)) (menv '()))))
'(literals: (⊥ ⊥ ⊥ ⊥))
