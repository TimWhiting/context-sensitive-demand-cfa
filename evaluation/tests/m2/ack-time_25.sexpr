'(clean-cache
  ack
  2
  25
  20
  letrec*
  "\"'(eval ((top) letrec* (ack) ...) (env ()))\""
  45
  38
  5
  2
  38
  2
  40
  1
  1
  11
  #f
  167/38
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  ack
  2
  20
  match
  "\"'(eval (λ (m n) (-> (match (app = m 0) ...) <-)) (env ((□? (m n)))))\""
  #f)
'(clean-cache
  ack
  2
  20
  app
  "\"'(eval (match (app = m 0) (#f) (_ (-> (app + n 1) <-))) (env ((□? (m n)))))\""
  #f)
'(clean-cache
  ack
  2
  25
  20
  ref-or-constructor
  "\"'(eval (app + (-> n <-) 1) (env ((□? (m n)))))\""
  397
  390
  5
  2
  389
  2
  391
  1
  406/407
  103
  #f
  567/130
  ((45/2 23 0) (23 47/2 0) (23 47/2 0)))
'(clean-cache
  ack
  2
  20
  match
  "\"'(eval\n  (match (app = m 0) ((#f) (-> (match (app = n 0) ...) <-)) _)\n  (env ((□? (m n)))))\""
  #f)
'(clean-cache
  ack
  2
  20
  app
  "\"'(eval\n  (match (app = n 0) (#f) (_ (-> (app ack (app - m 1) 1) <-)))\n  (env ((□? (m n)))))\""
  #f)
'(clean-cache
  ack
  2
  25
  20
  app
  "\"'(eval (app ack (-> (app - m 1) <-) 1) (env ((□? (m n)))))\""
  128
  122
  5
  1
  118
  2
  120
  1
  34/35
  27
  #f
  515/122
  ((21/2 21/2 0) (21/2 21/2 0) (21/2 21/2 0)))
'(clean-cache
  ack
  2
  25
  20
  ref-or-constructor
  "\"'(eval (app - (-> m <-) 1) (env ((□? (m n)))))\""
  125
  119
  5
  1
  118
  2
  120
  1
  139/140
  26
  #f
  502/119
  ((19/2 19/2 0) (21/2 15 0) (21/2 21/2 0)))
'(clean-cache
  ack
  2
  20
  app
  "\"'(eval\n  (match\n   (app = n 0)\n   ((#f) (-> (app ack (app - m 1) (app ack m (app - n 1))) <-))\n   _)\n  (env ((□? (m n)))))\""
  #f)
'(clean-cache
  ack
  2
  20
  app
  "\"'(eval\n  (app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n  (env ((□? (m n)))))\""
  #f)
'(clean-cache
  ack
  2
  20
  app
  "\"'(eval (app ack m (-> (app - n 1) <-)) (env ((□? (m n)))))\""
  #f)
'(clean-cache
  ack
  2
  25
  20
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (m n)))))\""
  397
  390
  5
  2
  389
  2
  391
  1
  517/518
  103
  #f
  567/130
  ((45/2 23 0) (23 23 0) (23 47/2 0)))
'(clean-cache
  ack
  2
  25
  20
  ref-or-constructor
  "\"'(eval (app ack (-> m <-) (app - n 1)) (env ((□? (m n)))))\""
  125
  119
  5
  1
  118
  2
  120
  1
  139/140
  26
  #f
  502/119
  ((19/2 19/2 0) (19/2 19/2 0) (19/2 19/2 0)))
'(clean-cache
  ack
  2
  25
  20
  app
  "\"'(eval\n  (app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n  (env ((□? (m n)))))\""
  128
  122
  5
  1
  118
  2
  120
  1
  34/35
  27
  #f
  515/122
  ((21/2 21/2 0) (21/2 21/2 0) (23/2 12 0)))
'(clean-cache
  ack
  2
  25
  20
  ref-or-constructor
  "\"'(eval (app - (-> m <-) 1) (env ((□? (m n)))))\""
  125
  119
  5
  1
  118
  2
  120
  1
  139/140
  26
  #f
  502/119
  ((10 21/2 0) (21/2 11 0) (19/2 19/2 0)))
'(clean-cache
  ack
  2
  20
  app
  "\"'(eval (match (-> (app = n 0) <-) (#f) _) (env ((□? (m n)))))\""
  #f)
'(clean-cache
  ack
  2
  25
  20
  ref-or-constructor
  "\"'(eval (app = (-> n <-) 0) (env ((□? (m n)))))\""
  397
  390
  5
  2
  389
  2
  391
  1
  406/407
  103
  #f
  567/130
  ((47/2 24 0) (47/2 24 0) (23 47/2 0)))
'(clean-cache
  ack
  2
  25
  20
  app
  "\"'(eval (match (-> (app = m 0) <-) (#f) _) (env ((□? (m n)))))\""
  167
  161
  5
  1
  157
  2
  159
  1
  179/196
  40
  #f
  98/23
  ((12 25/2 0) (12 25/2 0) (12 25/2 0)))
'(clean-cache
  ack
  2
  25
  20
  ref-or-constructor
  "\"'(eval (app = (-> m <-) 0) (env ((□? (m n)))))\""
  125
  119
  5
  1
  118
  2
  120
  1
  10/11
  26
  #f
  502/119
  ((19/2 19/2 0) (19/2 19/2 0) (19/2 19/2 0)))
'(clean-cache
  ack
  2
  25
  20
  app
  "\"'(eval (letrec* (ack) (-> (app ack 3 12) <-)) (env ()))\""
  44
  37
  5
  2
  37
  2
  39
  1
  1
  11
  #f
  163/37
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  ack
  2
  25
  20
  app
  "\"'(eval (letrec* (ack) (-> (app ack 3 12) <-)) (env ()))\""
  44
  37
  5
  2
  37
  2
  39
  1
  1
  11
  #f
  163/37
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  ack
  2
  20
  app
  "\"'(eval\n  (match (app = n 0) (#f) (_ (-> (app ack (app - m 1) 1) <-)))\n  (env ((□? (m n)))))\""
  #f)
'(shuffled-cache
  0
  ack
  2
  25
  20
  app
  "\"'(eval (app ack (-> (app - m 1) <-) 1) (env ((□? (m n)))))\""
  128
  122
  5
  1
  118
  2
  120
  1
  34/35
  27
  #f
  515/122
  ((21/2 21/2 0) (21/2 21/2 0) (21/2 21/2 0)))
'(shuffled-cache
  0
  ack
  2
  25
  20
  app
  "\"'(eval (match (-> (app = m 0) <-) (#f) _) (env ((□? (m n)))))\""
  168
  162
  5
  1
  157
  2
  159
  1
  89/98
  40
  #f
  115/27
  ((5/2 5/2 0) (5/2 5/2 0) (5/2 5/2 0)))
'(shuffled-cache
  0
  ack
  2
  25
  20
  app
  "\"'(eval\n  (app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n  (env ((□? (m n)))))\""
  169
  163
  5
  1
  157
  2
  159
  1
  177/196
  40
  #f
  694/163
  ((1 1 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  ack
  2
  25
  20
  ref-or-constructor
  "\"'(eval (app - (-> m <-) 1) (env ((□? (m n)))))\""
  170
  164
  5
  1
  157
  2
  159
  1
  44/49
  40
  #f
  349/82
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  ack
  2
  25
  20
  letrec*
  "\"'(eval ((top) letrec* (ack) ...) (env ()))\""
  460
  453
  5
  2
  446
  2
  448
  1
  79/80
  120
  #f
  1984/453
  ((31/2 16 0) (31/2 16 0) (31/2 16 0)))
'(shuffled-cache
  0
  ack
  2
  25
  20
  match
  "\"'(eval\n  (match (app = m 0) ((#f) (-> (match (app = n 0) ...) <-)) _)\n  (env ((□? (m n)))))\""
  461
  454
  5
  2
  446
  2
  448
  1
  69/70
  120
  #f
  994/227
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  ack
  2
  25
  20
  ref-or-constructor
  "\"'(eval (app = (-> m <-) 0) (env ((□? (m n)))))\""
  462
  455
  5
  2
  446
  2
  448
  1
  551/560
  120
  #f
  1992/455
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  ack
  2
  25
  20
  app
  "\"'(eval\n  (app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n  (env ((□? (m n)))))\""
  463
  456
  5
  2
  446
  2
  448
  1
  55/56
  120
  #f
  499/114
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  ack
  2
  25
  20
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (m n)))))\""
  464
  457
  5
  2
  446
  2
  448
  1
  549/560
  120
  #f
  2000/457
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  ack
  2
  25
  20
  ref-or-constructor
  "\"'(eval (app ack (-> m <-) (app - n 1)) (env ((□? (m n)))))\""
  465
  458
  5
  2
  446
  2
  448
  1
  137/140
  120
  #f
  1002/229
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  ack
  2
  25
  20
  app
  "\"'(eval (app ack m (-> (app - n 1) <-)) (env ((□? (m n)))))\""
  466
  459
  5
  2
  446
  2
  448
  1
  547/560
  120
  #f
  2008/459
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  ack
  2
  25
  20
  app
  "\"'(eval (match (-> (app = n 0) <-) (#f) _) (env ((□? (m n)))))\""
  467
  460
  5
  2
  446
  2
  448
  1
  39/40
  120
  #f
  1007/230
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  ack
  2
  25
  20
  ref-or-constructor
  "\"'(eval (app + (-> n <-) 1) (env ((□? (m n)))))\""
  468
  461
  5
  2
  446
  2
  448
  1
  109/112
  120
  #f
  2018/461
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  ack
  2
  25
  20
  app
  "\"'(eval (match (app = m 0) (#f) (_ (-> (app + n 1) <-))) (env ((□? (m n)))))\""
  469
  462
  5
  2
  446
  2
  448
  1
  34/35
  120
  #f
  337/77
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  ack
  2
  25
  20
  ref-or-constructor
  "\"'(eval (app = (-> n <-) 0) (env ((□? (m n)))))\""
  470
  463
  5
  2
  446
  2
  448
  1
  543/560
  120
  #f
  2026/463
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  ack
  2
  25
  20
  match
  "\"'(eval (λ (m n) (-> (match (app = m 0) ...) <-)) (env ((□? (m n)))))\""
  471
  464
  5
  2
  446
  2
  448
  1
  271/280
  120
  #f
  35/8
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  ack
  2
  25
  20
  ref-or-constructor
  "\"'(eval (app - (-> m <-) 1) (env ((□? (m n)))))\""
  471
  464
  5
  2
  446
  2
  448
  1
  271/280
  120
  #f
  35/8
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  ack
  2
  25
  20
  app
  "\"'(eval\n  (match\n   (app = n 0)\n   ((#f) (-> (app ack (app - m 1) (app ack m (app - n 1))) <-))\n   _)\n  (env ((□? (m n)))))\""
  473
  466
  5
  2
  447
  2
  449
  1
  879/910
  121
  #f
  2039/466
  ((1/2 1/2 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  ack
  2
  20
  match
  "\"'(eval\n  (match (app = m 0) ((#f) (-> (match (app = n 0) ...) <-)) _)\n  (env ((□? (m n)))))\""
  #f)
'(shuffled-cache
  1
  ack
  2
  20
  app
  "\"'(eval\n  (match\n   (app = n 0)\n   ((#f) (-> (app ack (app - m 1) (app ack m (app - n 1))) <-))\n   _)\n  (env ((□? (m n)))))\""
  #f)
'(shuffled-cache
  1
  ack
  2
  25
  20
  ref-or-constructor
  "\"'(eval (app - (-> m <-) 1) (env ((□? (m n)))))\""
  125
  119
  5
  1
  118
  2
  120
  1
  139/140
  26
  #f
  502/119
  ((19/2 19/2 0) (19/2 19/2 0) (19/2 19/2 0)))
'(shuffled-cache
  1
  ack
  2
  25
  20
  app
  "\"'(eval\n  (match (app = n 0) (#f) (_ (-> (app ack (app - m 1) 1) <-)))\n  (env ((□? (m n)))))\""
  418
  411
  5
  2
  409
  2
  411
  1
  3095/3108
  110
  #f
  1796/411
  ((33/2 17 0) (16 33/2 0) (16 33/2 0)))
'(shuffled-cache
  1
  ack
  2
  25
  20
  app
  "\"'(eval\n  (app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n  (env ((□? (m n)))))\""
  419
  412
  5
  2
  409
  2
  411
  1
  3089/3108
  110
  #f
  450/103
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  ack
  2
  25
  20
  app
  "\"'(eval (app ack (-> (app - m 1) <-) 1) (env ((□? (m n)))))\""
  420
  413
  5
  2
  409
  2
  411
  1
  3083/3108
  110
  #f
  1804/413
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  ack
  2
  25
  20
  ref-or-constructor
  "\"'(eval (app + (-> n <-) 1) (env ((□? (m n)))))\""
  421
  414
  5
  2
  409
  2
  411
  1
  769/777
  110
  #f
  904/207
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  ack
  2
  25
  20
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (m n)))))\""
  422
  415
  5
  2
  409
  2
  411
  1
  1535/1554
  110
  #f
  1812/415
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  ack
  2
  25
  20
  ref-or-constructor
  "\"'(eval (app ack (-> m <-) (app - n 1)) (env ((□? (m n)))))\""
  423
  416
  5
  2
  409
  2
  411
  1
  766/777
  110
  #f
  227/52
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  ack
  2
  25
  20
  app
  "\"'(eval (match (-> (app = m 0) <-) (#f) _) (env ((□? (m n)))))\""
  430
  423
  5
  2
  415
  2
  417
  1
  1019/1036
  112
  #f
  616/141
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  ack
  2
  25
  20
  letrec*
  "\"'(eval ((top) letrec* (ack) ...) (env ()))\""
  461
  454
  5
  2
  446
  2
  448
  1
  69/70
  119
  #f
  1987/454
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  1
  ack
  2
  25
  20
  match
  "\"'(eval (λ (m n) (-> (match (app = m 0) ...) <-)) (env ((□? (m n)))))\""
  462
  455
  5
  2
  446
  2
  448
  1
  551/560
  119
  #f
  1991/455
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  ack
  2
  25
  20
  app
  "\"'(eval (app ack m (-> (app - n 1) <-)) (env ((□? (m n)))))\""
  463
  456
  5
  2
  446
  2
  448
  1
  55/56
  119
  #f
  35/8
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  ack
  2
  25
  20
  app
  "\"'(eval\n  (app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n  (env ((□? (m n)))))\""
  464
  457
  5
  2
  446
  2
  448
  1
  549/560
  119
  #f
  1999/457
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  ack
  2
  25
  20
  ref-or-constructor
  "\"'(eval (app = (-> m <-) 0) (env ((□? (m n)))))\""
  465
  458
  5
  2
  446
  2
  448
  1
  137/140
  119
  #f
  2003/458
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  ack
  2
  25
  20
  app
  "\"'(eval (match (app = m 0) (#f) (_ (-> (app + n 1) <-))) (env ((□? (m n)))))\""
  466
  459
  5
  2
  446
  2
  448
  1
  547/560
  119
  #f
  223/51
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  ack
  2
  25
  20
  app
  "\"'(eval (match (-> (app = n 0) <-) (#f) _) (env ((□? (m n)))))\""
  467
  460
  5
  2
  446
  2
  448
  1
  39/40
  119
  #f
  2013/460
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  ack
  2
  25
  20
  app
  "\"'(eval (letrec* (ack) (-> (app ack 3 12) <-)) (env ()))\""
  467
  460
  5
  2
  446
  2
  448
  1
  39/40
  119
  #f
  2013/460
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  ack
  2
  25
  20
  ref-or-constructor
  "\"'(eval (app = (-> n <-) 0) (env ((□? (m n)))))\""
  468
  461
  5
  2
  446
  2
  448
  1
  109/112
  119
  #f
  2017/461
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  ack
  2
  25
  20
  ref-or-constructor
  "\"'(eval (app - (-> m <-) 1) (env ((□? (m n)))))\""
  469
  462
  5
  2
  446
  2
  448
  1
  34/35
  119
  #f
  2021/462
  ((1 1 0) (1 1 0) (1 1 0)))
