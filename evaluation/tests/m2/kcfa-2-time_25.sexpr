'(clean-cache
  kcfa-2
  2
  25
  22
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  37
  21
  8
  8
  21
  8
  29
  1
  1
  21
  #t
  1
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  89
  54
  15
  20
  31
  11
  42
  1
  3821/5670
  43
  #f
  77/54
  ((5/2 5/2 0) (5/2 5/2 0) (5/2 5/2 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (z) ...) (λ (y1 y2) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  53
  24
  12
  17
  5
  3
  8
  1
  5/12
  20
  #f
  17/12
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (λ (y1 y2) (-> y1 <-)) (env ((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  35
  12
  9
  14
  5
  3
  8
  1
  5/8
  10
  #f
  4/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (λ (z) (-> (app z x1 x2) <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  54
  25
  12
  17
  5
  3
  8
  1
  5/11
  21
  #f
  37/25
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  14
  6
  3
  5
  0
  0
  0
  1
  0
  5
  #f
  7/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  13
  6
  3
  4
  5
  3
  8
  1
  5/6
  5
  #f
  7/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  6
  2
  1
  3
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  125
  69
  24
  32
  25
  11
  36
  1
  25/48
  54
  #f
  34/23
  ((5 5 0) (5 5 0) (5 5 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  113
  57
  24
  32
  21
  11
  32
  1
  8/15
  48
  #f
  88/57
  ((9/2 9/2 0) (9/2 9/2 0) (9/2 9/2 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  4
  2
  0
  2
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  5
  2
  1
  2
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  113
  57
  24
  32
  21
  11
  32
  1
  8/15
  48
  #f
  88/57
  ((9/2 9/2 0) (9/2 9/2 0) (9/2 9/2 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  4
  2
  0
  2
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  5
  2
  1
  2
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  60
  35
  12
  13
  19
  8
  27
  1
  23/40
  35
  #t
  41/35
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  58
  33
  12
  13
  18
  8
  26
  1
  11/19
  33
  #t
  13/11
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  4
  2
  1
  1
  1
  1
  2
  1
  1/2
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  58
  33
  12
  13
  18
  8
  26
  1
  11/19
  33
  #t
  13/11
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  4
  2
  1
  1
  1
  1
  2
  1
  1/2
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (λ (z) (-> (app z x1 x2) <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  54
  25
  12
  17
  5
  3
  8
  1
  5/11
  21
  #f
  37/25
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  55
  26
  12
  17
  5
  3
  8
  1
  9/22
  22
  #t
  19/13
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  82
  42
  17
  23
  20
  8
  28
  1
  2113/2940
  38
  #t
  9/7
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  149
  77
  31
  41
  35
  15
  50
  1
  20237/30360
  72
  #f
  13/11
  ((3 3 0) (3 3 0) (3 3 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (z) ...) (λ (y1 y2) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  158
  83
  31
  44
  35
  15
  50
  1
  3961/6072
  76
  #f
  99/83
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  162
  86
  31
  45
  38
  15
  53
  1
  4621/6600
  79
  #t
  51/43
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  163
  87
  31
  45
  38
  15
  53
  1
  4489/6600
  80
  #t
  104/87
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  182
  99
  34
  49
  49
  18
  67
  1
  3599/5250
  91
  #f
  13/11
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  183
  100
  34
  49
  49
  18
  67
  1
  1747/2625
  92
  #t
  59/50
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  188
  105
  34
  49
  49
  18
  67
  1
  1747/2835
  97
  #t
  41/35
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  193
  110
  34
  49
  49
  18
  67
  1
  1747/3045
  102
  #t
  64/55
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  194
  111
  34
  49
  49
  18
  67
  1
  1747/3150
  103
  #t
  43/37
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  194
  111
  34
  49
  49
  18
  67
  1
  1747/3150
  103
  #t
  43/37
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  195
  112
  34
  49
  49
  18
  67
  1
  3389/6300
  104
  #t
  65/56
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (λ (y1 y2) (-> y1 <-)) (env ((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  199
  113
  34
  52
  49
  18
  67
  1
  43987/81900
  104
  #f
  132/113
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  22
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  125
  69
  24
  32
  25
  11
  36
  1
  25/48
  54
  #f
  34/23
  ((5 5 0) (5 5 0) (11/2 11/2 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  126
  70
  24
  32
  25
  11
  36
  1
  25/51
  55
  #t
  3/2
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  136
  77
  25
  34
  31
  12
  43
  1
  545/924
  62
  #t
  16/11
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  137
  78
  25
  34
  31
  12
  43
  1
  131/231
  63
  #t
  113/78
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  140
  79
  25
  36
  31
  12
  43
  1
  87/154
  63
  #f
  115/79
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  140
  79
  25
  36
  31
  12
  43
  1
  87/154
  63
  #f
  115/79
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  4
  2
  0
  2
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  8
  4
  1
  3
  1
  1
  2
  1
  1/4
  4
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (z) ...) (λ (y1 y2) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  63
  30
  13
  20
  6
  4
  10
  1
  3/8
  26
  #f
  4/3
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  88
  45
  17
  26
  20
  8
  28
  1
  5/8
  41
  #t
  11/9
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (λ (z) (-> (app z x1 x2) <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  98
  52
  17
  29
  20
  8
  28
  1
  2063/3360
  46
  #f
  33/26
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (λ (y1 y2) (-> y1 <-)) (env ((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  102
  53
  17
  32
  20
  8
  28
  1
  4121/6720
  46
  #f
  68/53
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  155
  83
  28
  44
  28
  12
  40
  1
  62627/110880
  75
  #f
  100/83
  ((5/2 5/2 0) (5/2 5/2 0) (5/2 5/2 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  155
  83
  28
  44
  28
  12
  40
  1
  62627/110880
  75
  #t
  100/83
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  156
  84
  28
  44
  28
  12
  40
  1
  31231/55440
  75
  #f
  17/14
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  162
  89
  28
  45
  32
  12
  44
  1
  1921/3465
  79
  #f
  108/89
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  22
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  285
  161
  53
  71
  52
  24
  76
  1
  56321/97020
  136
  #t
  272/161
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  286
  162
  53
  71
  52
  24
  76
  1
  109177/194040
  137
  #t
  91/54
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  286
  162
  53
  71
  52
  24
  76
  1
  109177/194040
  137
  #t
  91/54
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  291
  167
  53
  71
  52
  24
  76
  1
  102247/194040
  142
  #t
  278/167
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  294
  170
  53
  71
  54
  24
  78
  1
  106867/200970
  145
  #t
  281/170
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  301
  177
  53
  71
  56
  24
  80
  1
  34339/66990
  149
  #f
  287/177
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  305
  180
  53
  72
  59
  24
  83
  1
  647/1155
  152
  #t
  29/18
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  306
  181
  53
  72
  59
  24
  83
  1
  38959/71610
  153
  #t
  291/181
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  341
  202
  59
  80
  61
  24
  85
  1
  315271/602784
  173
  #f
  313/202
  ((7/2 7/2 0) (4 4 0) (4 4 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  342
  203
  59
  80
  61
  24
  85
  1
  611705/1205568
  174
  #t
  314/203
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  343
  204
  59
  80
  61
  24
  85
  1
  148217/301392
  175
  #t
  105/68
  ((0 0 0) (0 0 0) (0 0 0)))
