'(clean-cache
  kcfa-2
  2
  25
  22
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  37
  21
  8
  8
  21
  8
  29
  1
  1
  21
  #t
  5
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  119
  70
  21
  28
  47
  17
  64
  1
  4157/5670
  53
  #f
  363/70
  ((9 9 0) (9 9 0) (10 10 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (z) ...) (λ (y1 y2) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  53
  24
  12
  17
  5
  3
  8
  1
  5/12
  20
  #f
  65/12
  ((4 4 0) (4 4 0) (4 4 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (λ (y1 y2) (-> y1 <-)) (env ((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  35
  12
  9
  14
  5
  3
  8
  1
  5/8
  10
  #f
  16/3
  ((3/2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (λ (z) (-> (app z x1 x2) <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  54
  25
  12
  17
  5
  3
  8
  1
  5/11
  21
  #f
  137/25
  ((9/2 9/2 0) (9/2 9/2 0) (9/2 9/2 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  14
  6
  3
  5
  0
  0
  0
  1
  0
  5
  #f
  31/6
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  13
  6
  3
  4
  5
  3
  8
  1
  5/6
  5
  #f
  31/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  6
  2
  1
  3
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  170
  92
  33
  45
  41
  17
  58
  1
  26/45
  67
  #f
  233/46
  ((16 33/2 0) (31/2 16 0) (17 17 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  158
  80
  33
  45
  37
  17
  54
  1
  401/675
  59
  #f
  203/40
  ((15 31/2 0) (35/2 35/2 0) (29/2 15 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  4
  2
  0
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  5
  2
  1
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  158
  80
  33
  45
  37
  17
  54
  1
  401/675
  59
  #f
  203/40
  ((16 33/2 0) (29/2 29/2 0) (29/2 29/2 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  4
  2
  0
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  5
  2
  1
  2
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  60
  35
  12
  13
  19
  8
  27
  1
  23/40
  35
  #t
  181/35
  ((3 3 0) (3 3 0) (9/2 9/2 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  58
  33
  12
  13
  18
  8
  26
  1
  11/19
  33
  #t
  57/11
  ((3 3 0) (3 3 0) (3 3 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  4
  2
  1
  1
  1
  1
  2
  1
  1/2
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  58
  33
  12
  13
  18
  8
  26
  1
  11/19
  33
  #t
  57/11
  ((3 3 0) (3 3 0) (5/2 3 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  4
  2
  1
  1
  1
  1
  2
  1
  1/2
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (λ (z) (-> (app z x1 x2) <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  54
  25
  12
  17
  5
  3
  8
  1
  5/11
  21
  #f
  137/25
  ((7/2 7/2 0) (5 5 0) (7/2 7/2 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  54
  25
  12
  17
  5
  3
  8
  1
  5/11
  21
  #t
  137/25
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  63
  28
  15
  20
  7
  5
  12
  1
  6/13
  24
  #t
  153/28
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  124
  61
  27
  36
  21
  11
  32
  1
  383/700
  56
  #f
  319/61
  ((9/2 9/2 0) (4 4 0) (4 4 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  127
  63
  28
  36
  22
  12
  34
  1
  1289/2380
  58
  #t
  47/9
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  164
  86
  34
  44
  44
  18
  62
  1
  751/1155
  80
  #f
  445/86
  ((5/2 5/2 0) (5/2 5/2 0) (5/2 5/2 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  165
  87
  34
  44
  44
  18
  62
  1
  1502/2415
  81
  #t
  150/29
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  166
  88
  34
  44
  44
  18
  62
  1
  4492/7245
  81
  #f
  57/11
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  199
  107
  40
  52
  44
  18
  62
  1
  17497/31878
  99
  #f
  552/107
  ((9/2 9/2 0) (3 3 0) (3 3 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  200
  108
  40
  52
  44
  18
  62
  1
  8402/15939
  100
  #t
  557/108
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  22
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  58
  33
  12
  13
  18
  8
  26
  1
  11/19
  33
  #t
  57/11
  ((5/2 3 0) (9/2 5 0) (3 3 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  63
  35
  13
  15
  18
  8
  26
  1
  32/57
  35
  #t
  181/35
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  64
  36
  13
  15
  18
  8
  26
  1
  61/114
  36
  #t
  31/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  66
  38
  13
  15
  19
  8
  27
  1
  8/15
  38
  #t
  98/19
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  70
  41
  13
  16
  19
  8
  27
  1
  16/33
  41
  #t
  211/41
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (z) ...) (λ (y1 y2) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  125
  69
  23
  33
  24
  9
  33
  1
  331/720
  65
  #f
  367/69
  ((4 4 0) (9/2 9/2 0) (4 4 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  128
  71
  23
  34
  26
  9
  35
  1
  188/375
  67
  #t
  377/71
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  134
  77
  23
  34
  26
  9
  35
  1
  188/405
  73
  #t
  37/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  221
  127
  38
  56
  50
  18
  68
  1
  2809/5670
  111
  #f
  651/127
  ((12 25/2 0) (11 23/2 0) (14 14 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  228
  133
  38
  57
  55
  18
  73
  1
  31/60
  117
  #t
  681/133
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (λ (y1 y2) (-> y1 <-)) (env ((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  232
  134
  38
  60
  55
  18
  73
  1
  1973/3828
  117
  #f
  687/134
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))\""
  4
  2
  1
  1
  1
  1
  2
  1
  1/2
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))\""
  35
  20
  8
  7
  18
  8
  26
  1
  9/10
  20
  #t
  5
  ((1/2 1 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))\""
  37
  22
  8
  7
  19
  8
  27
  1
  19/22
  22
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (λ (z) (-> (app z x1 x2) <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  83
  43
  17
  23
  20
  8
  28
  1
  2113/3080
  39
  #f
  227/43
  ((7/2 7/2 0) (11/2 11/2 0) (4 4 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))\""
  137
  71
  28
  38
  28
  12
  40
  1
  5617/9240
  66
  #f
  369/71
  ((5 5 0) (5 5 0) (5 5 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))\""
  145
  78
  28
  39
  34
  12
  46
  1
  5947/9660
  73
  #t
  202/39
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  22
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-)) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  #f)
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))\""
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))\""
  7
  5
  1
  1
  2
  1
  3
  1
  3/8
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  app
  "\"'(eval\n  (λ (x2) (-> (app (λ (z) ...) (λ (y1 y2) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))\""
  58
  28
  13
  17
  6
  4
  10
  1
  5/14
  24
  #f
  75/14
  ((3 3 0) (4 4 0) (3 3 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))\""
  101
  53
  21
  27
  30
  12
  42
  1
  49/75
  48
  #f
  276/53
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  108
  58
  21
  29
  35
  12
  47
  1
  256/345
  53
  #t
  301/58
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  109
  59
  21
  29
  35
  12
  47
  1
  17/23
  53
  #f
  307/59
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (λ (y1 y2) (-> y1 <-)) (env ((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  113
  60
  21
  32
  35
  12
  47
  1
  254/345
  53
  #f
  313/60
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))\""
  120
  64
  21
  35
  35
  12
  47
  1
  254/375
  57
  #t
  333/64
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  app
  "\"'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))\""
  183
  100
  34
  49
  49
  18
  67
  1
  5402/8505
  92
  #f
  103/20
  ((13/2 7 0) (13/2 7 0) (13/2 13/2 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))\""
  184
  101
  34
  49
  49
  18
  67
  1
  5297/8505
  93
  #t
  521/101
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))\""
  185
  102
  34
  49
  49
  18
  67
  1
  10279/17010
  94
  #t
  263/51
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))\""
  185
  102
  34
  49
  49
  18
  67
  1
  10279/17010
  94
  #t
  263/51
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))\""
  190
  107
  34
  49
  49
  18
  67
  1
  10279/18270
  99
  #t
  551/107
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))\""
  229
  132
  40
  57
  51
  18
  69
  1
  2873/5742
  121
  #f
  225/44
  ((5 5 0) (5 5 0) (5 5 0)))
'(shuffled-cache
  1
  kcfa-2
  2
  25
  22
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2) (env ((□? (z)) (□? (x2)) (□? (x1)))))\""
  230
  133
  40
  57
  51
  18
  69
  1
  2867/5742
  122
  #t
  682/133
  ((0 0 0) (0 0 0) (0 0 0)))
