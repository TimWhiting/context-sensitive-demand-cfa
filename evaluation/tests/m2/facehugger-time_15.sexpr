'(clean-cache
  facehugger
  2
  15
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  73
  54
  13
  6
  54
  11
  65
  1
  1
  22
  #f
  121/27
  ((3/2 3/2 0) (2 2 0) (2 2 0)))
'(clean-cache
  facehugger
  2
  15
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  66
  55
  8
  3
  48
  7
  55
  1
  103/114
  16
  #f
  244/55
  ((4 4 0) (7/2 7/2 0) (7/2 7/2 0)))
'(clean-cache
  facehugger
  2
  15
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  57
  46
  8
  3
  42
  7
  49
  1
  215/228
  15
  #f
  203/46
  ((3 3 0) (3 3 0) (3 3 0)))
'(clean-cache
  facehugger
  2
  15
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  72
  60
  8
  4
  39
  7
  46
  1
  27/38
  19
  #f
  53/12
  ((13/2 7 0) (7 7 0) (13/2 13/2 0)))
'(clean-cache
  facehugger
  2
  15
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  29
  19
  8
  2
  15
  7
  22
  1
  6/7
  6
  #f
  82/19
  ((3/2 3/2 0) (1 1 0) (3/2 3/2 0)))
'(clean-cache
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  27/28
  5
  #f
  69/16
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  5
  #f
  69/16
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  15
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  38
  28
  8
  2
  24
  7
  31
  1
  37/44
  9
  #f
  123/28
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  5
  #f
  69/16
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  15
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  66
  55
  8
  3
  48
  7
  55
  1
  103/114
  16
  #f
  244/55
  ((4 4 0) (7/2 7/2 0) (3 7/2 0)))
'(clean-cache
  facehugger
  2
  15
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  57
  46
  8
  3
  42
  7
  49
  1
  215/228
  15
  #f
  203/46
  ((5/2 5/2 0) (5/2 5/2 0) (5/2 5/2 0)))
'(clean-cache
  facehugger
  2
  15
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  72
  60
  8
  4
  39
  7
  46
  1
  27/38
  19
  #f
  53/12
  ((6 6 0) (6 6 0) (6 6 0)))
'(clean-cache
  facehugger
  2
  15
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  29
  19
  8
  2
  15
  7
  22
  1
  6/7
  6
  #f
  82/19
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  27/28
  5
  #f
  69/16
  ((1/2 1 0) (1/2 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  5
  #f
  69/16
  ((1/2 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  15
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  38
  28
  8
  2
  24
  7
  31
  1
  37/44
  9
  #f
  123/28
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  5
  #f
  69/16
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  9
  5
  3
  1
  4
  3
  7
  1
  4/5
  4
  #f
  26/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  15
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  72
  53
  13
  6
  53
  11
  64
  1
  1
  22
  #f
  238/53
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  facehugger
  2
  15
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  38
  26
  8
  4
  26
  7
  33
  1
  1
  11
  #f
  9/2
  ((1 1 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  2
  15
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  10
  6
  3
  1
  6
  3
  9
  1
  1
  6
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  15
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  38
  26
  8
  4
  26
  7
  33
  1
  1
  11
  #f
  9/2
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  2
  15
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  10
  6
  3
  1
  6
  3
  9
  1
  1
  6
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  57
  46
  8
  3
  42
  7
  49
  1
  215/228
  15
  #f
  203/46
  ((5/2 5/2 0) (3 3 0) (5/2 3 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  118
  100
  13
  5
  89
  11
  100
  1
  409/444
  30
  #f
  221/50
  ((9/2 9/2 0) (4 9/2 0) (3 7/2 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  125
  107
  13
  5
  95
  11
  106
  1
  203/222
  31
  #f
  473/107
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  131
  112
  13
  6
  100
  11
  111
  1
  455/492
  34
  #f
  31/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  132
  113
  13
  6
  100
  11
  111
  1
  113/123
  34
  #f
  500/113
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  133
  114
  13
  6
  100
  11
  111
  1
  449/492
  34
  #f
  84/19
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  134
  115
  13
  6
  100
  11
  111
  1
  223/246
  34
  #f
  102/23
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  135
  116
  13
  6
  100
  11
  111
  1
  443/492
  34
  #f
  257/58
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  136
  117
  13
  6
  100
  11
  111
  1
  110/123
  34
  #f
  518/117
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  137
  118
  13
  6
  100
  11
  111
  1
  437/492
  34
  #f
  261/59
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  137
  118
  13
  6
  100
  11
  111
  1
  437/492
  34
  #f
  261/59
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  139
  120
  13
  6
  101
  11
  112
  1
  443/504
  35
  #f
  533/120
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  141
  122
  13
  6
  103
  11
  114
  1
  457/516
  37
  #t
  543/122
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  142
  123
  13
  6
  103
  11
  114
  1
  227/258
  37
  #f
  547/123
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  142
  123
  13
  6
  103
  11
  114
  1
  227/258
  37
  #f
  547/123
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  142
  123
  13
  6
  103
  11
  114
  1
  227/258
  37
  #f
  547/123
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  142
  123
  13
  6
  103
  11
  114
  1
  227/258
  37
  #f
  547/123
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  142
  123
  13
  6
  103
  11
  114
  1
  227/258
  37
  #f
  547/123
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  146
  127
  13
  6
  107
  11
  118
  1
  491/552
  38
  #f
  564/127
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  147
  128
  13
  6
  107
  11
  118
  1
  61/69
  38
  #f
  71/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  148
  129
  13
  6
  108
  11
  119
  1
  125/141
  38
  #f
  572/129
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  148
  129
  13
  6
  108
  11
  119
  1
  125/141
  38
  #t
  572/129
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  148
  129
  13
  6
  108
  11
  119
  1
  125/141
  38
  #f
  572/129
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  29
  19
  8
  2
  15
  7
  22
  1
  6/7
  6
  #f
  82/19
  ((1 3/2 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  35
  24
  8
  3
  20
  7
  27
  1
  11/12
  11
  #t
  107/24
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  55
  38
  13
  4
  33
  11
  44
  1
  63/68
  14
  #f
  83/19
  ((1 1 0) (1/2 1 0) (1 1 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  90
  72
  13
  5
  67
  11
  78
  1
  111/116
  23
  #f
  317/72
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  91
  73
  13
  5
  67
  11
  78
  1
  55/58
  23
  #f
  321/73
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  130
  111
  13
  6
  105
  11
  116
  1
  85/88
  36
  #f
  164/37
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  131
  112
  13
  6
  105
  11
  116
  1
  169/176
  36
  #f
  31/7
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  132
  113
  13
  6
  105
  11
  116
  1
  21/22
  36
  #f
  500/113
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  133
  114
  13
  6
  105
  11
  116
  1
  167/176
  36
  #f
  84/19
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  134
  115
  13
  6
  105
  11
  116
  1
  83/88
  36
  #f
  102/23
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  134
  115
  13
  6
  105
  11
  116
  1
  83/88
  36
  #f
  102/23
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  135
  116
  13
  6
  105
  11
  116
  1
  15/16
  36
  #f
  257/58
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  137
  118
  13
  6
  107
  11
  118
  1
  173/184
  37
  #f
  523/118
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  138
  119
  13
  6
  107
  11
  118
  1
  43/46
  37
  #f
  31/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  139
  120
  13
  6
  107
  11
  118
  1
  171/184
  37
  #f
  177/40
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  139
  120
  13
  6
  107
  11
  118
  1
  171/184
  37
  #t
  177/40
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  140
  121
  13
  6
  107
  11
  118
  1
  85/92
  37
  #f
  535/121
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  141
  122
  13
  6
  107
  11
  118
  1
  169/184
  37
  #f
  539/122
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  142
  123
  13
  6
  108
  11
  119
  1
  173/188
  37
  #f
  181/41
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  143
  124
  13
  6
  108
  11
  119
  1
  43/47
  37
  #f
  549/124
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  144
  125
  13
  6
  108
  11
  119
  1
  171/188
  37
  #f
  553/125
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  145
  126
  13
  6
  108
  11
  119
  1
  85/94
  37
  #f
  557/126
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  146
  127
  13
  6
  108
  11
  119
  1
  253/282
  37
  #f
  563/127
  ((0 0 0) (0 0 0) (0 0 0)))
