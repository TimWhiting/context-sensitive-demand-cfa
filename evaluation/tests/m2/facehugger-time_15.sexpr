'(clean-cache
  facehugger
  2
  15
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  143
  122
  13
  8
  106
  11
  117
  1
  219/235
  42
  #f
  269/61
  ((3 3 0) (3 3 0) (3 3 0)))
'(clean-cache
  facehugger
  2
  15
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  64
  53
  8
  3
  46
  7
  53
  1
  203/228
  18
  #f
  234/53
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  15
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  56
  45
  8
  3
  41
  7
  48
  1
  215/228
  16
  #f
  22/5
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  15
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  72
  60
  8
  4
  39
  7
  46
  1
  27/38
  19
  #f
  53/12
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  facehugger
  2
  15
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  29
  19
  8
  2
  15
  7
  22
  1
  6/7
  6
  #f
  82/19
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  27/28
  5
  #f
  69/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  5
  #f
  69/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  15
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  38
  28
  8
  2
  24
  7
  31
  1
  37/44
  9
  #f
  123/28
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  5
  #f
  69/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  15
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  64
  53
  8
  3
  46
  7
  53
  1
  203/228
  18
  #f
  234/53
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  15
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  56
  45
  8
  3
  41
  7
  48
  1
  215/228
  16
  #f
  22/5
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  15
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  72
  60
  8
  4
  39
  7
  46
  1
  27/38
  19
  #f
  53/12
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  facehugger
  2
  15
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  29
  19
  8
  2
  15
  7
  22
  1
  6/7
  6
  #f
  82/19
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  27/28
  5
  #f
  69/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  5
  #f
  69/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  15
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  38
  28
  8
  2
  24
  7
  31
  1
  37/44
  9
  #f
  123/28
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  5
  #f
  69/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  9
  5
  3
  1
  4
  3
  7
  1
  4/5
  4
  #f
  26/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  15
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  142
  121
  13
  8
  105
  11
  116
  1
  107/115
  42
  #f
  534/121
  ((3 3 0) (3 3 0) (3 3 0)))
'(clean-cache
  facehugger
  2
  15
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  73
  60
  8
  5
  52
  7
  59
  1
  107/115
  21
  #f
  53/12
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  facehugger
  2
  15
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  10
  6
  3
  1
  6
  3
  9
  1
  1
  6
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  15
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  73
  60
  8
  5
  52
  7
  59
  1
  107/115
  21
  #f
  53/12
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  15
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  10
  6
  3
  1
  6
  3
  9
  1
  1
  6
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  72
  60
  8
  4
  39
  7
  46
  1
  27/38
  19
  #f
  53/12
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  73
  61
  8
  4
  39
  7
  46
  1
  40/57
  19
  #f
  269/61
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  73
  61
  8
  4
  39
  7
  46
  1
  40/57
  19
  #f
  269/61
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  87
  74
  8
  5
  52
  7
  59
  1
  1087/1380
  25
  #f
  327/74
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  88
  75
  8
  5
  52
  7
  59
  1
  539/690
  25
  #f
  331/75
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  155
  134
  13
  8
  103
  11
  114
  1
  1121/1320
  45
  #f
  591/134
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  159
  138
  13
  8
  103
  11
  114
  1
  1091/1320
  46
  #f
  305/69
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  160
  139
  13
  8
  103
  11
  114
  1
  2173/2640
  46
  #f
  614/139
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  160
  139
  13
  8
  103
  11
  114
  1
  2173/2640
  46
  #f
  614/139
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  161
  140
  13
  8
  103
  11
  114
  1
  541/660
  46
  #f
  309/70
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  163
  142
  13
  8
  103
  11
  114
  1
  97/120
  47
  #f
  627/142
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  163
  142
  13
  8
  103
  11
  114
  1
  97/120
  47
  #f
  627/142
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  166
  145
  13
  8
  106
  11
  117
  1
  1157/1410
  48
  #f
  128/29
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  170
  149
  13
  8
  106
  11
  117
  1
  451/564
  48
  #f
  658/149
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  170
  149
  13
  8
  106
  11
  117
  1
  451/564
  48
  #f
  658/149
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  170
  149
  13
  8
  106
  11
  117
  1
  451/564
  48
  #t
  658/149
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  170
  149
  13
  8
  106
  11
  117
  1
  451/564
  48
  #t
  658/149
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  171
  150
  13
  8
  106
  11
  117
  1
  149/188
  48
  #f
  332/75
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  171
  150
  13
  8
  106
  11
  117
  1
  149/188
  48
  #f
  332/75
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  172
  151
  13
  8
  106
  11
  117
  1
  37/47
  48
  #f
  668/151
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  173
  152
  13
  8
  106
  11
  117
  1
  737/940
  48
  #f
  84/19
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  177
  156
  13
  8
  106
  11
  117
  1
  723/940
  49
  #f
  53/12
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  15
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  178
  157
  13
  8
  106
  11
  117
  1
  36/47
  49
  #f
  695/157
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  27/28
  5
  #f
  69/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  93
  75
  13
  5
  53
  11
  64
  1
  77/100
  23
  #f
  329/75
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  94
  76
  13
  5
  53
  11
  64
  1
  229/300
  23
  #f
  333/76
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  95
  77
  13
  5
  53
  11
  64
  1
  113/150
  23
  #f
  337/77
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  99
  80
  13
  6
  56
  11
  67
  1
  131/168
  26
  #t
  22/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  99
  80
  13
  6
  56
  11
  67
  1
  131/168
  26
  #f
  22/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  102
  83
  13
  6
  58
  11
  69
  1
  7/9
  28
  #f
  368/83
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  104
  85
  13
  6
  60
  11
  71
  1
  49/62
  30
  #t
  378/85
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  149
  129
  13
  7
  104
  11
  115
  1
  2417/2760
  45
  #f
  571/129
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  150
  130
  13
  7
  104
  11
  115
  1
  1201/1380
  45
  #f
  115/26
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  151
  131
  13
  7
  104
  11
  115
  1
  2393/2760
  45
  #f
  579/131
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  152
  132
  13
  7
  104
  11
  115
  1
  298/345
  45
  #f
  195/44
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  153
  133
  13
  7
  104
  11
  115
  1
  103/120
  45
  #f
  31/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  154
  134
  13
  7
  105
  11
  116
  1
  2429/2820
  45
  #f
  593/134
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  154
  134
  13
  7
  105
  11
  116
  1
  2429/2820
  45
  #f
  593/134
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  155
  135
  13
  7
  105
  11
  116
  1
  1207/1410
  45
  #f
  199/45
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  156
  136
  13
  7
  105
  11
  116
  1
  2399/2820
  45
  #f
  601/136
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  157
  137
  13
  7
  105
  11
  116
  1
  596/705
  45
  #f
  607/137
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  157
  137
  13
  7
  105
  11
  116
  1
  596/705
  45
  #f
  607/137
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  158
  138
  13
  7
  105
  11
  116
  1
  2369/2820
  45
  #f
  611/138
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  158
  138
  13
  7
  105
  11
  116
  1
  2369/2820
  45
  #f
  611/138
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  159
  139
  13
  7
  105
  11
  116
  1
  118/141
  45
  #f
  615/139
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  15
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  160
  140
  13
  7
  105
  11
  116
  1
  2351/2820
  45
  #f
  619/140
  ((0 0 0) (0 0 0) (0 0 0)))
