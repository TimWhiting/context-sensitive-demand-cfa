'(clean-cache
  facehugger
  2
  5
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  73
  54
  13
  6
  54
  11
  65
  1
  1
  22
  #f
  121/27
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  facehugger
  2
  5
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  66
  55
  8
  3
  48
  7
  55
  1
  103/114
  16
  #f
  244/55
  ((7/2 7/2 0) (7/2 7/2 0) (7/2 7/2 0)))
'(clean-cache
  facehugger
  2
  5
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  57
  46
  8
  3
  42
  7
  49
  1
  215/228
  15
  #f
  203/46
  ((5/2 5/2 0) (5/2 3 0) (5/2 5/2 0)))
'(clean-cache
  facehugger
  2
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  #f)
'(clean-cache
  facehugger
  2
  5
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  29
  19
  8
  2
  15
  7
  22
  1
  6/7
  6
  #f
  82/19
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  27/28
  5
  #f
  69/16
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  5
  #f
  69/16
  ((1/2 1/2 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  5
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  38
  28
  8
  2
  24
  7
  31
  1
  37/44
  9
  #f
  123/28
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  5
  #f
  69/16
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  5
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  66
  55
  8
  3
  48
  7
  55
  1
  103/114
  16
  #f
  244/55
  ((7/2 7/2 0) (7/2 7/2 0) (7/2 7/2 0)))
'(clean-cache
  facehugger
  2
  5
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  57
  46
  8
  3
  42
  7
  49
  1
  215/228
  15
  #f
  203/46
  ((5/2 5/2 0) (5/2 5/2 0) (5/2 5/2 0)))
'(clean-cache
  facehugger
  2
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  #f)
'(clean-cache
  facehugger
  2
  5
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  29
  19
  8
  2
  15
  7
  22
  1
  6/7
  6
  #f
  82/19
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  27/28
  5
  #f
  69/16
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  5
  #f
  69/16
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  5
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  38
  28
  8
  2
  24
  7
  31
  1
  37/44
  9
  #f
  123/28
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  5
  #f
  69/16
  ((1 1 0) (1 1 0) (1/2 1 0)))
'(clean-cache
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  9
  5
  3
  1
  4
  3
  7
  1
  4/5
  4
  #f
  26/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  5
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  72
  53
  13
  6
  53
  11
  64
  1
  1
  22
  #f
  238/53
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  facehugger
  2
  5
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  38
  26
  8
  4
  26
  7
  33
  1
  1
  11
  #f
  9/2
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1 0)))
'(clean-cache
  facehugger
  2
  5
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  10
  6
  3
  1
  6
  3
  9
  1
  1
  6
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  5
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  38
  26
  8
  4
  26
  7
  33
  1
  1
  11
  #f
  9/2
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  2
  5
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  10
  6
  3
  1
  6
  3
  9
  1
  1
  6
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  66
  55
  8
  3
  48
  7
  55
  1
  103/114
  16
  #f
  244/55
  ((7/2 7/2 0) (7/2 7/2 0) (7/2 7/2 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  66
  55
  8
  3
  48
  7
  55
  1
  103/114
  16
  #f
  244/55
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  67
  56
  8
  3
  48
  7
  55
  1
  203/228
  16
  #f
  31/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  68
  57
  8
  3
  48
  7
  55
  1
  50/57
  16
  #f
  84/19
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  72
  60
  8
  4
  51
  7
  58
  1
  59/66
  19
  #t
  89/20
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  93
  75
  13
  5
  65
  11
  76
  1
  77/87
  23
  #f
  331/75
  ((1/2 1/2 0) (1/2 1 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  136
  117
  13
  6
  107
  11
  118
  1
  87/92
  37
  #f
  173/39
  ((5/2 5/2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  137
  118
  13
  6
  108
  11
  119
  1
  89/94
  37
  #f
  523/118
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  138
  119
  13
  6
  108
  11
  119
  1
  177/188
  37
  #f
  31/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  139
  120
  13
  6
  108
  11
  119
  1
  44/47
  37
  #f
  177/40
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  140
  121
  13
  6
  108
  11
  119
  1
  175/188
  37
  #f
  535/121
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  141
  122
  13
  6
  108
  11
  119
  1
  521/564
  37
  #f
  541/122
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  142
  123
  13
  6
  108
  11
  119
  1
  259/282
  37
  #f
  545/123
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  142
  123
  13
  6
  108
  11
  119
  1
  259/282
  37
  #f
  545/123
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  142
  123
  13
  6
  108
  11
  119
  1
  259/282
  37
  #f
  545/123
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  143
  124
  13
  6
  108
  11
  119
  1
  515/564
  37
  #f
  549/124
  ((0 0 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  144
  125
  13
  6
  108
  11
  119
  1
  128/141
  37
  #f
  111/25
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  145
  126
  13
  6
  108
  11
  119
  1
  509/564
  37
  #f
  559/126
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  145
  126
  13
  6
  108
  11
  119
  1
  509/564
  37
  #t
  559/126
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  146
  127
  13
  6
  108
  11
  119
  1
  253/282
  37
  #f
  563/127
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  146
  127
  13
  6
  108
  11
  119
  1
  253/282
  37
  #f
  563/127
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  147
  128
  13
  6
  108
  11
  119
  1
  503/564
  37
  #f
  567/128
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  147
  128
  13
  6
  108
  11
  119
  1
  503/564
  37
  #f
  567/128
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  38
  28
  8
  2
  24
  7
  31
  1
  37/44
  9
  #f
  123/28
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  59
  43
  13
  3
  38
  11
  49
  1
  61/72
  13
  #f
  187/43
  ((1/2 1 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  64
  47
  13
  4
  42
  11
  53
  1
  7/8
  17
  #t
  207/47
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  90
  72
  13
  5
  67
  11
  78
  1
  14/15
  23
  #f
  319/72
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  91
  73
  13
  5
  67
  11
  78
  1
  37/40
  23
  #f
  323/73
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  101
  83
  13
  5
  76
  11
  87
  1
  61/66
  26
  #f
  368/83
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  102
  84
  13
  5
  76
  11
  87
  1
  11/12
  26
  #f
  31/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  106
  88
  13
  5
  80
  11
  91
  1
  133/144
  30
  #t
  49/11
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  107
  89
  13
  5
  80
  11
  91
  1
  11/12
  30
  #f
  396/89
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  108
  90
  13
  5
  80
  11
  91
  1
  131/144
  30
  #f
  40/9
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  109
  91
  13
  5
  80
  11
  91
  1
  65/72
  30
  #f
  404/91
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  110
  92
  13
  5
  80
  11
  91
  1
  65/74
  30
  #f
  102/23
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  111
  93
  13
  5
  80
  11
  91
  1
  129/148
  30
  #f
  412/93
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  111
  93
  13
  5
  80
  11
  91
  1
  129/148
  30
  #f
  412/93
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  140
  121
  13
  6
  108
  11
  119
  1
  175/188
  37
  #f
  537/121
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  140
  121
  13
  6
  108
  11
  119
  1
  175/188
  37
  #f
  537/121
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  141
  122
  13
  6
  108
  11
  119
  1
  87/94
  37
  #f
  541/122
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  142
  123
  13
  6
  108
  11
  119
  1
  173/188
  37
  #f
  545/123
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  143
  124
  13
  6
  108
  11
  119
  1
  43/47
  37
  #f
  549/124
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  144
  125
  13
  6
  108
  11
  119
  1
  171/188
  37
  #f
  553/125
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  145
  126
  13
  6
  108
  11
  119
  1
  509/564
  37
  #f
  559/126
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  146
  127
  13
  6
  108
  11
  119
  1
  253/282
  37
  #f
  563/127
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  146
  127
  13
  6
  108
  11
  119
  1
  253/282
  37
  #f
  563/127
  ((0 0 0) (0 0 0) (0 0 0)))
