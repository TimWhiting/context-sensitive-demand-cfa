'(clean-cache
  facehugger
  2
  5
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  143
  122
  13
  8
  106
  11
  117
  1
  219/235
  42
  #f
  269/61
  ((3 3 0) (3 3 0) (3 3 0)))
'(clean-cache
  facehugger
  2
  5
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  64
  53
  8
  3
  46
  7
  53
  1
  203/228
  18
  #f
  234/53
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  5
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  56
  45
  8
  3
  41
  7
  48
  1
  215/228
  16
  #f
  22/5
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  5
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  72
  60
  8
  4
  39
  7
  46
  1
  27/38
  19
  #f
  53/12
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  facehugger
  2
  5
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  29
  19
  8
  2
  15
  7
  22
  1
  6/7
  6
  #f
  82/19
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  27/28
  5
  #f
  69/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  5
  #f
  69/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  5
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  38
  28
  8
  2
  24
  7
  31
  1
  37/44
  9
  #f
  123/28
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  5
  #f
  69/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  5
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  64
  53
  8
  3
  46
  7
  53
  1
  203/228
  18
  #f
  234/53
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  5
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  56
  45
  8
  3
  41
  7
  48
  1
  215/228
  16
  #f
  22/5
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  facehugger
  2
  5
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  72
  60
  8
  4
  39
  7
  46
  1
  27/38
  19
  #f
  53/12
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  facehugger
  2
  5
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  29
  19
  8
  2
  15
  7
  22
  1
  6/7
  6
  #f
  82/19
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  27/28
  5
  #f
  69/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  5
  #f
  69/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  5
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  38
  28
  8
  2
  24
  7
  31
  1
  37/44
  9
  #f
  123/28
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  5
  #f
  69/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  9
  5
  3
  1
  4
  3
  7
  1
  4/5
  4
  #f
  26/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  5
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  142
  121
  13
  8
  105
  11
  116
  1
  107/115
  42
  #f
  534/121
  ((3 3 0) (3 3 0) (3 3 0)))
'(clean-cache
  facehugger
  2
  5
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  73
  60
  8
  5
  52
  7
  59
  1
  107/115
  21
  #f
  53/12
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  facehugger
  2
  5
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  10
  6
  3
  1
  6
  3
  9
  1
  1
  6
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  2
  5
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  73
  60
  8
  5
  52
  7
  59
  1
  107/115
  21
  #f
  53/12
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  facehugger
  2
  5
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  10
  6
  3
  1
  6
  3
  9
  1
  1
  6
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  27/28
  5
  #f
  69/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  27
  17
  8
  2
  15
  7
  22
  1
  13/14
  5
  #f
  73/17
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  65
  53
  8
  4
  51
  7
  58
  1
  45/46
  20
  #f
  234/53
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  135
  115
  13
  7
  105
  11
  116
  1
  449/470
  41
  #f
  507/115
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  136
  116
  13
  7
  105
  11
  116
  1
  19/20
  41
  #f
  511/116
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  136
  116
  13
  7
  105
  11
  116
  1
  19/20
  41
  #f
  511/116
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  138
  118
  13
  7
  105
  11
  116
  1
  883/940
  42
  #f
  260/59
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  138
  118
  13
  7
  105
  11
  116
  1
  883/940
  42
  #t
  260/59
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  139
  119
  13
  7
  105
  11
  116
  1
  439/470
  42
  #f
  524/119
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  139
  119
  13
  7
  105
  11
  116
  1
  439/470
  42
  #f
  524/119
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  140
  120
  13
  7
  105
  11
  116
  1
  1307/1410
  42
  #f
  53/12
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  141
  121
  13
  7
  105
  11
  116
  1
  2599/2820
  42
  #f
  534/121
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  141
  121
  13
  7
  105
  11
  116
  1
  2599/2820
  42
  #f
  534/121
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  145
  125
  13
  7
  105
  11
  116
  1
  2539/2820
  43
  #f
  553/125
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  146
  126
  13
  7
  105
  11
  116
  1
  631/705
  43
  #f
  557/126
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  150
  130
  13
  7
  105
  11
  116
  1
  493/564
  43
  #f
  115/26
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  151
  131
  13
  7
  105
  11
  116
  1
  245/282
  43
  #f
  581/131
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  155
  135
  13
  7
  105
  11
  116
  1
  602/705
  44
  #f
  598/135
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  156
  136
  13
  7
  105
  11
  116
  1
  2393/2820
  44
  #f
  301/68
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  156
  136
  13
  7
  105
  11
  116
  1
  2393/2820
  44
  #t
  301/68
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  157
  137
  13
  7
  105
  11
  116
  1
  596/705
  44
  #f
  606/137
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  158
  138
  13
  7
  105
  11
  116
  1
  2369/2820
  44
  #f
  305/69
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  2
  5
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  158
  138
  13
  7
  105
  11
  116
  1
  2369/2820
  44
  #f
  305/69
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  26
  16
  8
  2
  15
  7
  22
  1
  7/8
  5
  #f
  69/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  59
  48
  8
  3
  46
  7
  53
  1
  221/228
  17
  #f
  211/48
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env ((□? (n)))))\""
  118
  100
  13
  5
  91
  11
  102
  1
  103/111
  34
  #f
  22/5
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  118
  100
  13
  5
  91
  11
  102
  1
  103/111
  34
  #f
  22/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env ((□? (n)))))\""
  119
  101
  13
  5
  91
  11
  102
  1
  409/444
  34
  #f
  444/101
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env ((□? (x)))))\""
  122
  104
  13
  5
  93
  11
  104
  1
  433/480
  36
  #f
  115/26
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env ((□? (n)))))\""
  123
  105
  13
  5
  93
  11
  104
  1
  43/48
  36
  #f
  464/105
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env ((□? (n)))))\""
  124
  106
  13
  5
  93
  11
  104
  1
  427/480
  36
  #f
  234/53
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env ((□? (n)))))\""
  124
  106
  13
  5
  93
  11
  104
  1
  427/480
  36
  #f
  234/53
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env ((□? (n)))))\""
  125
  107
  13
  5
  93
  11
  104
  1
  53/60
  36
  #f
  472/107
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  130
  111
  13
  6
  97
  11
  108
  1
  65/72
  38
  #f
  490/111
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  131
  112
  13
  6
  97
  11
  108
  1
  113/126
  38
  #f
  247/56
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env ((□? (n)))))\""
  132
  113
  13
  6
  97
  11
  108
  1
  449/504
  38
  #f
  498/113
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  133
  114
  13
  6
  97
  11
  108
  1
  223/252
  38
  #f
  84/19
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env ((□? (n)))))\""
  133
  114
  13
  6
  97
  11
  108
  1
  223/252
  38
  #f
  84/19
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  135
  116
  13
  6
  99
  11
  110
  1
  115/129
  40
  #t
  257/58
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  135
  116
  13
  6
  99
  11
  110
  1
  115/129
  40
  #t
  257/58
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env ((□? (n)))))\""
  136
  117
  13
  6
  99
  11
  110
  1
  457/516
  40
  #f
  518/117
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  140
  121
  13
  6
  103
  11
  114
  1
  247/276
  41
  #f
  535/121
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env ((□? (n)))))\""
  141
  122
  13
  6
  103
  11
  114
  1
  491/552
  41
  #f
  539/122
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  141
  122
  13
  6
  103
  11
  114
  1
  491/552
  41
  #f
  539/122
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  142
  123
  13
  6
  104
  11
  115
  1
  503/564
  41
  #f
  181/41
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  2
  5
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env ((□? (n)))))\""
  143
  124
  13
  6
  104
  11
  115
  1
  125/141
  41
  #f
  547/124
  ((0 0 0) (0 0 0) (0 0 0)))
