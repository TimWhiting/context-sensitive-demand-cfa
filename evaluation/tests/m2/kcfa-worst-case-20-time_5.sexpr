'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval (app (λ (f1) ...) (-> (λ (x1) ...) <-)) (env ()))"
  (lambda number char string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env ((□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval (app (λ (f2) ...) (-> (λ (x2) ...) <-)) (env ((□? (x1)))))"
  (lambda number char string quoted constructor)
  2
  1
  0
  1
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (λ (x2) (-> (app (λ (f3) ...) (λ (x3) ...)) <-))\n  (env ((□? (x2)) (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval (app (λ (f3) ...) (-> (λ (x3) ...) <-)) (env ((□? (x2)) (□? (x1)))))"
  (lambda number char string quoted constructor)
  3
  1
  0
  2
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (λ (x3) (-> (app (λ (f4) ...) (λ (x4) ...)) <-))\n  (env ((□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (λ (f4) ...) (-> (λ (x4) ...) <-))\n  (env ((□? (x3)) (□? (x2)) (□? (x1)))))"
  (lambda number char string quoted constructor)
  4
  1
  0
  3
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (λ (x4) (-> (app (λ (f5) ...) (λ (x5) ...)) <-))\n  (env ((□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (λ (f5) ...) (-> (λ (x5) ...) <-))\n  (env ((□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  (lambda number char string quoted constructor)
  5
  1
  0
  4
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (λ (x5) (-> (app (λ (f6) ...) (λ (x6) ...)) <-))\n  (env ((□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (λ (f6) ...) (-> (λ (x6) ...) <-))\n  (env ((□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  (lambda number char string quoted constructor)
  6
  1
  0
  5
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (λ (x6) (-> (app (λ (f7) ...) (λ (x7) ...)) <-))\n  (env ((□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (λ (f7) ...) (-> (λ (x7) ...) <-))\n  (env ((□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  (lambda number char string quoted constructor)
  7
  1
  0
  6
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (λ (x7) (-> (app (λ (f8) ...) (λ (x8) ...)) <-))\n  (env\n   ((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (λ (f8) ...) (-> (λ (x8) ...) <-))\n  (env\n   ((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  (lambda number char string quoted constructor)
  8
  1
  0
  7
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (λ (x8) (-> (app (λ (f9) ...) (λ (x9) ...)) <-))\n  (env\n   ((□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (λ (f9) ...) (-> (λ (x9) ...) <-))\n  (env\n   ((□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (lambda number char string quoted constructor)
  9
  1
  0
  8
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (λ (x9) (-> (app (λ (f10) ...) (λ (x10) ...)) <-))\n  (env\n   ((□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (λ (f10) ...) (-> (λ (x10) ...) <-))\n  (env\n   ((□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (lambda number char string quoted constructor)
  10
  1
  0
  9
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (λ (x10) (-> (app (λ (f11) ...) (λ (x11) ...)) <-))\n  (env\n   ((□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (λ (f11) ...) (-> (λ (x11) ...) <-))\n  (env\n   ((□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (lambda number char string quoted constructor)
  11
  1
  0
  10
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (λ (x11) (-> (app (λ (f12) ...) (λ (x12) ...)) <-))\n  (env\n   ((□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (λ (f12) ...) (-> (λ (x12) ...) <-))\n  (env\n   ((□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (lambda number char string quoted constructor)
  12
  1
  0
  11
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (λ (x12) (-> (app (λ (f13) ...) (λ (x13) ...)) <-))\n  (env\n   ((□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (λ (f13) ...) (-> (λ (x13) ...) <-))\n  (env\n   ((□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (lambda number char string quoted constructor)
  13
  1
  0
  12
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (λ (x13) (-> (app (λ (f14) ...) (λ (x14) ...)) <-))\n  (env\n   ((□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (λ (f14) ...) (-> (λ (x14) ...) <-))\n  (env\n   ((□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (lambda number char string quoted constructor)
  14
  1
  0
  13
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (λ (x14) (-> (app (λ (f15) ...) (λ (x15) ...)) <-))\n  (env\n   ((□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (λ (f15) ...) (-> (λ (x15) ...) <-))\n  (env\n   ((□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (lambda number char string quoted constructor)
  15
  1
  0
  14
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (λ (x15) (-> (app (λ (f16) ...) (λ (x16) ...)) <-))\n  (env\n   ((□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (λ (f16) ...) (-> (λ (x16) ...) <-))\n  (env\n   ((□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (lambda number char string quoted constructor)
  16
  1
  0
  15
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (λ (x16) (-> (app (λ (f17) ...) (λ (x17) ...)) <-))\n  (env\n   ((□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (λ (f17) ...) (-> (λ (x17) ...) <-))\n  (env\n   ((□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (lambda number char string quoted constructor)
  17
  1
  0
  16
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (λ (x17) (-> (app (λ (f18) ...) (λ (x18) ...)) <-))\n  (env\n   ((□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (λ (f18) ...) (-> (λ (x18) ...) <-))\n  (env\n   ((□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (lambda number char string quoted constructor)
  18
  1
  0
  17
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (λ (x18) (-> (app (λ (f19) ...) (λ (x19) ...)) <-))\n  (env\n   ((□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (λ (f19) ...) (-> (λ (x19) ...) <-))\n  (env\n   ((□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (lambda number char string quoted constructor)
  19
  1
  0
  18
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (λ (x19) (-> (app (λ (f20) ...) (λ (x20) ...)) <-))\n  (env\n   ((□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (λ (f20) ...) (-> (λ (x20) ...) <-))\n  (env\n   ((□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (lambda number char string quoted constructor)
  20
  1
  0
  19
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (λ (x20)\n    (->\n     (app\n      (λ (z) ...)\n      (λ (y1\n          y2\n          y3\n          y4\n          y5\n          y6\n          y7\n          y8\n          y9\n          y10\n          y11\n          y12\n          y13\n          y14\n          y15\n          y16\n          y17\n          y18\n          y19\n          y20)\n        ...))\n     <-))\n  (env\n   ((□? (x20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app\n   (λ (z) ...)\n   (->\n    (λ (y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12 y13 y14 y15 y16 y17 y18 y19 y20)\n      ...)\n    <-))\n  (env\n   ((□? (x20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (lambda number char string quoted constructor)
  21
  1
  0
  20
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (λ (y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12 y13 y14 y15 y16 y17 y18 y19 y20)\n    (-> y1 <-))\n  (env\n   ((□?\n     (y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12 y13 y14 y15 y16 y17 y18 y19 y20))\n    (□? (x20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app\n   (-> (λ (z) ...) <-)\n   (λ (y1 y2 y3 y4 y5 y6 y7 y8 y9 y10 y11 y12 y13 y14 y15 y16 y17 y18 y19 y20)\n     ...))\n  (env\n   ((□? (x20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (lambda number char string quoted constructor)
  21
  1
  0
  20
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (λ (z)\n    (->\n     (app\n      z\n      x1\n      x2\n      x3\n      x4\n      x5\n      x6\n      x7\n      x8\n      x9\n      x10\n      x11\n      x12\n      x13\n      x14\n      x15\n      x16\n      x17\n      x18\n      x19\n      x20)\n     <-))\n  (env\n   ((□? (z))\n    (□? (x20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app\n   z\n   x1\n   x2\n   x3\n   x4\n   x5\n   x6\n   x7\n   x8\n   x9\n   x10\n   x11\n   x12\n   x13\n   x14\n   x15\n   x16\n   x17\n   x18\n   x19\n   (-> x20 <-))\n  (env\n   ((□? (z))\n    (□? (x20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  32
  6
  3
  23
  0
  0
  0
  1
  0
  5
  #f
  7/6
  ((3 3 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app\n   z\n   x1\n   x2\n   x3\n   x4\n   x5\n   x6\n   x7\n   x8\n   x9\n   x10\n   x11\n   x12\n   x13\n   x14\n   x15\n   x16\n   x17\n   x18\n   (-> x19 <-)\n   x20)\n  (env\n   ((□? (z))\n    (□? (x20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  32
  6
  3
  23
  0
  0
  0
  1
  0
  5
  #f
  7/6
  ((3 3 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app\n   z\n   x1\n   x2\n   x3\n   x4\n   x5\n   x6\n   x7\n   x8\n   x9\n   x10\n   x11\n   x12\n   x13\n   x14\n   x15\n   x16\n   x17\n   (-> x18 <-)\n   x19\n   x20)\n  (env\n   ((□? (z))\n    (□? (x20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  32
  6
  3
  23
  0
  0
  0
  1
  0
  5
  #f
  7/6
  ((2 2 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app\n   z\n   x1\n   x2\n   x3\n   x4\n   x5\n   x6\n   x7\n   x8\n   x9\n   x10\n   x11\n   x12\n   x13\n   x14\n   x15\n   x16\n   (-> x17 <-)\n   x18\n   x19\n   x20)\n  (env\n   ((□? (z))\n    (□? (x20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  32
  6
  3
  23
  0
  0
  0
  1
  0
  5
  #f
  7/6
  ((2 2 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app\n   z\n   x1\n   x2\n   x3\n   x4\n   x5\n   x6\n   x7\n   x8\n   x9\n   x10\n   x11\n   x12\n   x13\n   x14\n   x15\n   (-> x16 <-)\n   x17\n   x18\n   x19\n   x20)\n  (env\n   ((□? (z))\n    (□? (x20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  32
  6
  3
  23
  0
  0
  0
  1
  0
  5
  #f
  7/6
  ((2 2 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app\n   z\n   x1\n   x2\n   x3\n   x4\n   x5\n   x6\n   x7\n   x8\n   x9\n   x10\n   x11\n   x12\n   x13\n   x14\n   (-> x15 <-)\n   x16\n   x17\n   x18\n   x19\n   x20)\n  (env\n   ((□? (z))\n    (□? (x20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  32
  6
  3
  23
  0
  0
  0
  1
  0
  5
  #f
  7/6
  ((2 2 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app\n   z\n   x1\n   x2\n   x3\n   x4\n   x5\n   x6\n   x7\n   x8\n   x9\n   x10\n   x11\n   x12\n   x13\n   (-> x14 <-)\n   x15\n   x16\n   x17\n   x18\n   x19\n   x20)\n  (env\n   ((□? (z))\n    (□? (x20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  32
  6
  3
  23
  0
  0
  0
  1
  0
  5
  #f
  7/6
  ((2 2 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app\n   z\n   x1\n   x2\n   x3\n   x4\n   x5\n   x6\n   x7\n   x8\n   x9\n   x10\n   x11\n   x12\n   (-> x13 <-)\n   x14\n   x15\n   x16\n   x17\n   x18\n   x19\n   x20)\n  (env\n   ((□? (z))\n    (□? (x20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  32
  6
  3
  23
  0
  0
  0
  1
  0
  5
  #f
  7/6
  ((1 1 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app\n   z\n   x1\n   x2\n   x3\n   x4\n   x5\n   x6\n   x7\n   x8\n   x9\n   x10\n   x11\n   (-> x12 <-)\n   x13\n   x14\n   x15\n   x16\n   x17\n   x18\n   x19\n   x20)\n  (env\n   ((□? (z))\n    (□? (x20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  32
  6
  3
  23
  0
  0
  0
  1
  0
  5
  #f
  7/6
  ((1 1 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app\n   z\n   x1\n   x2\n   x3\n   x4\n   x5\n   x6\n   x7\n   x8\n   x9\n   x10\n   (-> x11 <-)\n   x12\n   x13\n   x14\n   x15\n   x16\n   x17\n   x18\n   x19\n   x20)\n  (env\n   ((□? (z))\n    (□? (x20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  32
  6
  3
  23
  0
  0
  0
  1
  0
  5
  #f
  7/6
  ((1 1 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app\n   z\n   x1\n   x2\n   x3\n   x4\n   x5\n   x6\n   x7\n   x8\n   x9\n   (-> x10 <-)\n   x11\n   x12\n   x13\n   x14\n   x15\n   x16\n   x17\n   x18\n   x19\n   x20)\n  (env\n   ((□? (z))\n    (□? (x20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  32
  6
  3
  23
  0
  0
  0
  1
  0
  5
  #f
  7/6
  ((1 1 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app\n   z\n   x1\n   x2\n   x3\n   x4\n   x5\n   x6\n   x7\n   x8\n   (-> x9 <-)\n   x10\n   x11\n   x12\n   x13\n   x14\n   x15\n   x16\n   x17\n   x18\n   x19\n   x20)\n  (env\n   ((□? (z))\n    (□? (x20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  32
  6
  3
  23
  0
  0
  0
  1
  0
  5
  #f
  7/6
  ((1 1 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app\n   z\n   x1\n   x2\n   x3\n   x4\n   x5\n   x6\n   x7\n   (-> x8 <-)\n   x9\n   x10\n   x11\n   x12\n   x13\n   x14\n   x15\n   x16\n   x17\n   x18\n   x19\n   x20)\n  (env\n   ((□? (z))\n    (□? (x20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  32
  6
  3
  23
  0
  0
  0
  1
  0
  5
  #f
  7/6
  ((1 1 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app\n   z\n   x1\n   x2\n   x3\n   x4\n   x5\n   x6\n   (-> x7 <-)\n   x8\n   x9\n   x10\n   x11\n   x12\n   x13\n   x14\n   x15\n   x16\n   x17\n   x18\n   x19\n   x20)\n  (env\n   ((□? (z))\n    (□? (x20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  32
  6
  3
  23
  0
  0
  0
  1
  0
  5
  #f
  7/6
  ((1 1 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app\n   z\n   x1\n   x2\n   x3\n   x4\n   x5\n   (-> x6 <-)\n   x7\n   x8\n   x9\n   x10\n   x11\n   x12\n   x13\n   x14\n   x15\n   x16\n   x17\n   x18\n   x19\n   x20)\n  (env\n   ((□? (z))\n    (□? (x20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  32
  6
  3
  23
  0
  0
  0
  1
  0
  5
  #f
  7/6
  ((1 1 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app\n   z\n   x1\n   x2\n   x3\n   x4\n   (-> x5 <-)\n   x6\n   x7\n   x8\n   x9\n   x10\n   x11\n   x12\n   x13\n   x14\n   x15\n   x16\n   x17\n   x18\n   x19\n   x20)\n  (env\n   ((□? (z))\n    (□? (x20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  32
  6
  3
  23
  0
  0
  0
  1
  0
  5
  #f
  7/6
  ((1 1 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app\n   z\n   x1\n   x2\n   x3\n   (-> x4 <-)\n   x5\n   x6\n   x7\n   x8\n   x9\n   x10\n   x11\n   x12\n   x13\n   x14\n   x15\n   x16\n   x17\n   x18\n   x19\n   x20)\n  (env\n   ((□? (z))\n    (□? (x20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  32
  6
  3
  23
  0
  0
  0
  1
  0
  5
  #f
  7/6
  ((1 1 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app\n   z\n   x1\n   x2\n   (-> x3 <-)\n   x4\n   x5\n   x6\n   x7\n   x8\n   x9\n   x10\n   x11\n   x12\n   x13\n   x14\n   x15\n   x16\n   x17\n   x18\n   x19\n   x20)\n  (env\n   ((□? (z))\n    (□? (x20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  32
  6
  3
  23
  0
  0
  0
  1
  0
  5
  #f
  7/6
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app\n   z\n   x1\n   (-> x2 <-)\n   x3\n   x4\n   x5\n   x6\n   x7\n   x8\n   x9\n   x10\n   x11\n   x12\n   x13\n   x14\n   x15\n   x16\n   x17\n   x18\n   x19\n   x20)\n  (env\n   ((□? (z))\n    (□? (x20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  32
  6
  3
  23
  0
  0
  0
  1
  0
  5
  #f
  7/6
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app\n   z\n   (-> x1 <-)\n   x2\n   x3\n   x4\n   x5\n   x6\n   x7\n   x8\n   x9\n   x10\n   x11\n   x12\n   x13\n   x14\n   x15\n   x16\n   x17\n   x18\n   x19\n   x20)\n  (env\n   ((□? (z))\n    (□? (x20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  31
  6
  3
  22
  5
  3
  8
  1
  5/6
  5
  #f
  7/6
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app\n   (-> z <-)\n   x1\n   x2\n   x3\n   x4\n   x5\n   x6\n   x7\n   x8\n   x9\n   x10\n   x11\n   x12\n   x13\n   x14\n   x15\n   x16\n   x17\n   x18\n   x19\n   x20)\n  (env\n   ((□? (z))\n    (□? (x20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  24
  2
  1
  21
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (-> (λ (f20) ...) <-) (λ (x20) ...))\n  (env\n   ((□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (lambda number char string quoted constructor)
  20
  1
  0
  19
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  let
  "'(eval\n  (λ (f20) (-> (let (_) ...) <-))\n  (env\n   ((□? (f20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (... () (_ (-> (app f20 (app #t)) <-)) () ...) ...)\n  (env\n   ((□? (f20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f20 (-> (app #t) <-))\n  (env\n   ((□? (f20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  22
  2
  0
  20
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #t <-))\n  (env\n   ((□? (f20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (constructor)
  21
  1
  0
  20
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f20 <-) (app #t))\n  (env\n   ((□? (f20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  23
  2
  1
  20
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (_) (-> (app f20 (app #f)) <-))\n  (env\n   ((□? (f20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f20 (-> (app #f) <-))\n  (env\n   ((□? (f20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  22
  2
  0
  20
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #f <-))\n  (env\n   ((□? (f20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (constructor)
  21
  1
  0
  20
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f20 <-) (app #f))\n  (env\n   ((□? (f20))\n    (□? (x19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  23
  2
  1
  20
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (-> (λ (f19) ...) <-) (λ (x19) ...))\n  (env\n   ((□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (lambda number char string quoted constructor)
  19
  1
  0
  18
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  let
  "'(eval\n  (λ (f19) (-> (let (_) ...) <-))\n  (env\n   ((□? (f19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (... () (_ (-> (app f19 (app #t)) <-)) () ...) ...)\n  (env\n   ((□? (f19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f19 (-> (app #t) <-))\n  (env\n   ((□? (f19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  21
  2
  0
  19
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #t <-))\n  (env\n   ((□? (f19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (constructor)
  20
  1
  0
  19
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f19 <-) (app #t))\n  (env\n   ((□? (f19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  22
  2
  1
  19
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (_) (-> (app f19 (app #f)) <-))\n  (env\n   ((□? (f19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f19 (-> (app #f) <-))\n  (env\n   ((□? (f19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  21
  2
  0
  19
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #f <-))\n  (env\n   ((□? (f19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (constructor)
  20
  1
  0
  19
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f19 <-) (app #f))\n  (env\n   ((□? (f19))\n    (□? (x18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  22
  2
  1
  19
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (-> (λ (f18) ...) <-) (λ (x18) ...))\n  (env\n   ((□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (lambda number char string quoted constructor)
  18
  1
  0
  17
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  let
  "'(eval\n  (λ (f18) (-> (let (_) ...) <-))\n  (env\n   ((□? (f18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (... () (_ (-> (app f18 (app #t)) <-)) () ...) ...)\n  (env\n   ((□? (f18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f18 (-> (app #t) <-))\n  (env\n   ((□? (f18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  20
  2
  0
  18
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #t <-))\n  (env\n   ((□? (f18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (constructor)
  19
  1
  0
  18
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f18 <-) (app #t))\n  (env\n   ((□? (f18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  21
  2
  1
  18
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (_) (-> (app f18 (app #f)) <-))\n  (env\n   ((□? (f18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f18 (-> (app #f) <-))\n  (env\n   ((□? (f18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  20
  2
  0
  18
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #f <-))\n  (env\n   ((□? (f18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (constructor)
  19
  1
  0
  18
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f18 <-) (app #f))\n  (env\n   ((□? (f18))\n    (□? (x17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  21
  2
  1
  18
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (-> (λ (f17) ...) <-) (λ (x17) ...))\n  (env\n   ((□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (lambda number char string quoted constructor)
  17
  1
  0
  16
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  let
  "'(eval\n  (λ (f17) (-> (let (_) ...) <-))\n  (env\n   ((□? (f17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (... () (_ (-> (app f17 (app #t)) <-)) () ...) ...)\n  (env\n   ((□? (f17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f17 (-> (app #t) <-))\n  (env\n   ((□? (f17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  19
  2
  0
  17
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #t <-))\n  (env\n   ((□? (f17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (constructor)
  18
  1
  0
  17
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f17 <-) (app #t))\n  (env\n   ((□? (f17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  20
  2
  1
  17
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (_) (-> (app f17 (app #f)) <-))\n  (env\n   ((□? (f17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f17 (-> (app #f) <-))\n  (env\n   ((□? (f17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  19
  2
  0
  17
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #f <-))\n  (env\n   ((□? (f17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (constructor)
  18
  1
  0
  17
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f17 <-) (app #f))\n  (env\n   ((□? (f17))\n    (□? (x16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  20
  2
  1
  17
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (-> (λ (f16) ...) <-) (λ (x16) ...))\n  (env\n   ((□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (lambda number char string quoted constructor)
  16
  1
  0
  15
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  let
  "'(eval\n  (λ (f16) (-> (let (_) ...) <-))\n  (env\n   ((□? (f16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (... () (_ (-> (app f16 (app #t)) <-)) () ...) ...)\n  (env\n   ((□? (f16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f16 (-> (app #t) <-))\n  (env\n   ((□? (f16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  18
  2
  0
  16
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #t <-))\n  (env\n   ((□? (f16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (constructor)
  17
  1
  0
  16
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f16 <-) (app #t))\n  (env\n   ((□? (f16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  19
  2
  1
  16
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (_) (-> (app f16 (app #f)) <-))\n  (env\n   ((□? (f16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f16 (-> (app #f) <-))\n  (env\n   ((□? (f16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  18
  2
  0
  16
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #f <-))\n  (env\n   ((□? (f16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (constructor)
  17
  1
  0
  16
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f16 <-) (app #f))\n  (env\n   ((□? (f16))\n    (□? (x15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  19
  2
  1
  16
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (-> (λ (f15) ...) <-) (λ (x15) ...))\n  (env\n   ((□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (lambda number char string quoted constructor)
  15
  1
  0
  14
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  let
  "'(eval\n  (λ (f15) (-> (let (_) ...) <-))\n  (env\n   ((□? (f15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (... () (_ (-> (app f15 (app #t)) <-)) () ...) ...)\n  (env\n   ((□? (f15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f15 (-> (app #t) <-))\n  (env\n   ((□? (f15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  17
  2
  0
  15
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #t <-))\n  (env\n   ((□? (f15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (constructor)
  16
  1
  0
  15
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f15 <-) (app #t))\n  (env\n   ((□? (f15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  18
  2
  1
  15
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (_) (-> (app f15 (app #f)) <-))\n  (env\n   ((□? (f15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f15 (-> (app #f) <-))\n  (env\n   ((□? (f15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  17
  2
  0
  15
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #f <-))\n  (env\n   ((□? (f15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (constructor)
  16
  1
  0
  15
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f15 <-) (app #f))\n  (env\n   ((□? (f15))\n    (□? (x14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  18
  2
  1
  15
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (-> (λ (f14) ...) <-) (λ (x14) ...))\n  (env\n   ((□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (lambda number char string quoted constructor)
  14
  1
  0
  13
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  let
  "'(eval\n  (λ (f14) (-> (let (_) ...) <-))\n  (env\n   ((□? (f14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (... () (_ (-> (app f14 (app #t)) <-)) () ...) ...)\n  (env\n   ((□? (f14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f14 (-> (app #t) <-))\n  (env\n   ((□? (f14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  16
  2
  0
  14
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #t <-))\n  (env\n   ((□? (f14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (constructor)
  15
  1
  0
  14
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f14 <-) (app #t))\n  (env\n   ((□? (f14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  17
  2
  1
  14
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (_) (-> (app f14 (app #f)) <-))\n  (env\n   ((□? (f14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f14 (-> (app #f) <-))\n  (env\n   ((□? (f14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  16
  2
  0
  14
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #f <-))\n  (env\n   ((□? (f14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (constructor)
  15
  1
  0
  14
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f14 <-) (app #f))\n  (env\n   ((□? (f14))\n    (□? (x13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  17
  2
  1
  14
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (-> (λ (f13) ...) <-) (λ (x13) ...))\n  (env\n   ((□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (lambda number char string quoted constructor)
  13
  1
  0
  12
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  let
  "'(eval\n  (λ (f13) (-> (let (_) ...) <-))\n  (env\n   ((□? (f13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (... () (_ (-> (app f13 (app #t)) <-)) () ...) ...)\n  (env\n   ((□? (f13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f13 (-> (app #t) <-))\n  (env\n   ((□? (f13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  15
  2
  0
  13
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #t <-))\n  (env\n   ((□? (f13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (constructor)
  14
  1
  0
  13
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f13 <-) (app #t))\n  (env\n   ((□? (f13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  16
  2
  1
  13
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (_) (-> (app f13 (app #f)) <-))\n  (env\n   ((□? (f13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f13 (-> (app #f) <-))\n  (env\n   ((□? (f13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  15
  2
  0
  13
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #f <-))\n  (env\n   ((□? (f13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (constructor)
  14
  1
  0
  13
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f13 <-) (app #f))\n  (env\n   ((□? (f13))\n    (□? (x12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  16
  2
  1
  13
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (-> (λ (f12) ...) <-) (λ (x12) ...))\n  (env\n   ((□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (lambda number char string quoted constructor)
  12
  1
  0
  11
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  let
  "'(eval\n  (λ (f12) (-> (let (_) ...) <-))\n  (env\n   ((□? (f12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (... () (_ (-> (app f12 (app #t)) <-)) () ...) ...)\n  (env\n   ((□? (f12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f12 (-> (app #t) <-))\n  (env\n   ((□? (f12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  14
  2
  0
  12
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #t <-))\n  (env\n   ((□? (f12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (constructor)
  13
  1
  0
  12
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f12 <-) (app #t))\n  (env\n   ((□? (f12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  15
  2
  1
  12
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (_) (-> (app f12 (app #f)) <-))\n  (env\n   ((□? (f12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f12 (-> (app #f) <-))\n  (env\n   ((□? (f12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  14
  2
  0
  12
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #f <-))\n  (env\n   ((□? (f12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (constructor)
  13
  1
  0
  12
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f12 <-) (app #f))\n  (env\n   ((□? (f12))\n    (□? (x11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  15
  2
  1
  12
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (-> (λ (f11) ...) <-) (λ (x11) ...))\n  (env\n   ((□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (lambda number char string quoted constructor)
  11
  1
  0
  10
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  let
  "'(eval\n  (λ (f11) (-> (let (_) ...) <-))\n  (env\n   ((□? (f11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (... () (_ (-> (app f11 (app #t)) <-)) () ...) ...)\n  (env\n   ((□? (f11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f11 (-> (app #t) <-))\n  (env\n   ((□? (f11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  13
  2
  0
  11
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #t <-))\n  (env\n   ((□? (f11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (constructor)
  12
  1
  0
  11
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f11 <-) (app #t))\n  (env\n   ((□? (f11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  14
  2
  1
  11
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (_) (-> (app f11 (app #f)) <-))\n  (env\n   ((□? (f11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f11 (-> (app #f) <-))\n  (env\n   ((□? (f11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  13
  2
  0
  11
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #f <-))\n  (env\n   ((□? (f11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (constructor)
  12
  1
  0
  11
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f11 <-) (app #f))\n  (env\n   ((□? (f11))\n    (□? (x10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  14
  2
  1
  11
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (-> (λ (f10) ...) <-) (λ (x10) ...))\n  (env\n   ((□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (lambda number char string quoted constructor)
  10
  1
  0
  9
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  let
  "'(eval\n  (λ (f10) (-> (let (_) ...) <-))\n  (env\n   ((□? (f10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (... () (_ (-> (app f10 (app #t)) <-)) () ...) ...)\n  (env\n   ((□? (f10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f10 (-> (app #t) <-))\n  (env\n   ((□? (f10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  12
  2
  0
  10
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #t <-))\n  (env\n   ((□? (f10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (constructor)
  11
  1
  0
  10
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f10 <-) (app #t))\n  (env\n   ((□? (f10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  13
  2
  1
  10
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (_) (-> (app f10 (app #f)) <-))\n  (env\n   ((□? (f10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f10 (-> (app #f) <-))\n  (env\n   ((□? (f10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  12
  2
  0
  10
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #f <-))\n  (env\n   ((□? (f10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (constructor)
  11
  1
  0
  10
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f10 <-) (app #f))\n  (env\n   ((□? (f10))\n    (□? (x9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  13
  2
  1
  10
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (-> (λ (f9) ...) <-) (λ (x9) ...))\n  (env\n   ((□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (lambda number char string quoted constructor)
  9
  1
  0
  8
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  let
  "'(eval\n  (λ (f9) (-> (let (_) ...) <-))\n  (env\n   ((□? (f9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (... () (_ (-> (app f9 (app #t)) <-)) () ...) ...)\n  (env\n   ((□? (f9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f9 (-> (app #t) <-))\n  (env\n   ((□? (f9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  11
  2
  0
  9
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #t <-))\n  (env\n   ((□? (f9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (constructor)
  10
  1
  0
  9
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f9 <-) (app #t))\n  (env\n   ((□? (f9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  12
  2
  1
  9
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (_) (-> (app f9 (app #f)) <-))\n  (env\n   ((□? (f9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f9 (-> (app #f) <-))\n  (env\n   ((□? (f9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  11
  2
  0
  9
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #f <-))\n  (env\n   ((□? (f9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (constructor)
  10
  1
  0
  9
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f9 <-) (app #f))\n  (env\n   ((□? (f9))\n    (□? (x8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  12
  2
  1
  9
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (-> (λ (f8) ...) <-) (λ (x8) ...))\n  (env\n   ((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  (lambda number char string quoted constructor)
  8
  1
  0
  7
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  let
  "'(eval\n  (λ (f8) (-> (let (_) ...) <-))\n  (env\n   ((□? (f8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (... () (_ (-> (app f8 (app #t)) <-)) () ...) ...)\n  (env\n   ((□? (f8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f8 (-> (app #t) <-))\n  (env\n   ((□? (f8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  10
  2
  0
  8
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #t <-))\n  (env\n   ((□? (f8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (constructor)
  9
  1
  0
  8
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f8 <-) (app #t))\n  (env\n   ((□? (f8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  11
  2
  1
  8
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (_) (-> (app f8 (app #f)) <-))\n  (env\n   ((□? (f8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f8 (-> (app #f) <-))\n  (env\n   ((□? (f8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  10
  2
  0
  8
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #f <-))\n  (env\n   ((□? (f8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  (constructor)
  9
  1
  0
  8
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f8 <-) (app #f))\n  (env\n   ((□? (f8))\n    (□? (x7))\n    (□? (x6))\n    (□? (x5))\n    (□? (x4))\n    (□? (x3))\n    (□? (x2))\n    (□? (x1)))))"
  #f
  11
  2
  1
  8
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (-> (λ (f7) ...) <-) (λ (x7) ...))\n  (env ((□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  (lambda number char string quoted constructor)
  7
  1
  0
  6
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  let
  "'(eval\n  (λ (f7) (-> (let (_) ...) <-))\n  (env\n   ((□? (f7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (... () (_ (-> (app f7 (app #t)) <-)) () ...) ...)\n  (env\n   ((□? (f7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f7 (-> (app #t) <-))\n  (env\n   ((□? (f7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  9
  2
  0
  7
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #t <-))\n  (env\n   ((□? (f7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  (constructor)
  8
  1
  0
  7
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f7 <-) (app #t))\n  (env\n   ((□? (f7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  10
  2
  1
  7
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (_) (-> (app f7 (app #f)) <-))\n  (env\n   ((□? (f7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f7 (-> (app #f) <-))\n  (env\n   ((□? (f7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  9
  2
  0
  7
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #f <-))\n  (env\n   ((□? (f7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  (constructor)
  8
  1
  0
  7
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f7 <-) (app #f))\n  (env\n   ((□? (f7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  10
  2
  1
  7
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (-> (λ (f6) ...) <-) (λ (x6) ...))\n  (env ((□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  (lambda number char string quoted constructor)
  6
  1
  0
  5
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  let
  "'(eval\n  (λ (f6) (-> (let (_) ...) <-))\n  (env ((□? (f6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (... () (_ (-> (app f6 (app #t)) <-)) () ...) ...)\n  (env ((□? (f6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f6 (-> (app #t) <-))\n  (env ((□? (f6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  8
  2
  0
  6
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #t <-))\n  (env ((□? (f6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  (constructor)
  7
  1
  0
  6
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f6 <-) (app #t))\n  (env ((□? (f6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  9
  2
  1
  6
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (_) (-> (app f6 (app #f)) <-))\n  (env ((□? (f6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f6 (-> (app #f) <-))\n  (env ((□? (f6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  8
  2
  0
  6
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #f <-))\n  (env ((□? (f6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  (constructor)
  7
  1
  0
  6
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f6 <-) (app #f))\n  (env ((□? (f6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  9
  2
  1
  6
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (-> (λ (f5) ...) <-) (λ (x5) ...))\n  (env ((□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  (lambda number char string quoted constructor)
  5
  1
  0
  4
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  let
  "'(eval\n  (λ (f5) (-> (let (_) ...) <-))\n  (env ((□? (f5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (... () (_ (-> (app f5 (app #t)) <-)) () ...) ...)\n  (env ((□? (f5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f5 (-> (app #t) <-))\n  (env ((□? (f5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  7
  2
  0
  5
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #t <-))\n  (env ((□? (f5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  (constructor)
  6
  1
  0
  5
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f5 <-) (app #t))\n  (env ((□? (f5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  8
  2
  1
  5
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (_) (-> (app f5 (app #f)) <-))\n  (env ((□? (f5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f5 (-> (app #f) <-))\n  (env ((□? (f5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  7
  2
  0
  5
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval\n  (app (-> #f <-))\n  (env ((□? (f5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  (constructor)
  6
  1
  0
  5
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f5 <-) (app #f))\n  (env ((□? (f5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  8
  2
  1
  5
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval\n  (app (-> (λ (f4) ...) <-) (λ (x4) ...))\n  (env ((□? (x3)) (□? (x2)) (□? (x1)))))"
  (lambda number char string quoted constructor)
  4
  1
  0
  3
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  let
  "'(eval\n  (λ (f4) (-> (let (_) ...) <-))\n  (env ((□? (f4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (... () (_ (-> (app f4 (app #t)) <-)) () ...) ...)\n  (env ((□? (f4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f4 (-> (app #t) <-))\n  (env ((□? (f4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  6
  2
  0
  4
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval (app (-> #t <-)) (env ((□? (f4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  (constructor)
  5
  1
  0
  4
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f4 <-) (app #t))\n  (env ((□? (f4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  7
  2
  1
  4
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (_) (-> (app f4 (app #f)) <-))\n  (env ((□? (f4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (app f4 (-> (app #f) <-))\n  (env ((□? (f4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  6
  2
  0
  4
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval (app (-> #f <-)) (env ((□? (f4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  (constructor)
  5
  1
  0
  4
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval\n  (app (-> f4 <-) (app #f))\n  (env ((□? (f4)) (□? (x3)) (□? (x2)) (□? (x1)))))"
  #f
  7
  2
  1
  4
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval (app (-> (λ (f3) ...) <-) (λ (x3) ...)) (env ((□? (x2)) (□? (x1)))))"
  (lambda number char string quoted constructor)
  3
  1
  0
  2
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  let
  "'(eval (λ (f3) (-> (let (_) ...) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (... () (_ (-> (app f3 (app #t)) <-)) () ...) ...)\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval (app f3 (-> (app #t) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))"
  #f
  5
  2
  0
  3
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval (app (-> #t <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))"
  (constructor)
  4
  1
  0
  3
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval (app (-> f3 <-) (app #t)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))"
  #f
  6
  2
  1
  3
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (_) (-> (app f3 (app #f)) <-))\n  (env ((□? (f3)) (□? (x2)) (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval (app f3 (-> (app #f) <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))"
  #f
  5
  2
  0
  3
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval (app (-> #f <-)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))"
  (constructor)
  4
  1
  0
  3
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval (app (-> f3 <-) (app #f)) (env ((□? (f3)) (□? (x2)) (□? (x1)))))"
  #f
  6
  2
  1
  3
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval (app (-> (λ (f2) ...) <-) (λ (x2) ...)) (env ((□? (x1)))))"
  (lambda number char string quoted constructor)
  2
  1
  0
  1
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  let
  "'(eval (λ (f2) (-> (let (_) ...) <-)) (env ((□? (f2)) (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...)\n  (env ((□? (f2)) (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval (app f2 (-> (app #t) <-)) (env ((□? (f2)) (□? (x1)))))"
  #f
  4
  2
  0
  2
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval (app (-> #t <-)) (env ((□? (f2)) (□? (x1)))))"
  (constructor)
  3
  1
  0
  2
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval (app (-> f2 <-) (app #t)) (env ((□? (f2)) (□? (x1)))))"
  #f
  5
  2
  1
  2
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval (let (_) (-> (app f2 (app #f)) <-)) (env ((□? (f2)) (□? (x1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval (app f2 (-> (app #f) <-)) (env ((□? (f2)) (□? (x1)))))"
  #f
  4
  2
  0
  2
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval (app (-> #f <-)) (env ((□? (f2)) (□? (x1)))))"
  (constructor)
  3
  1
  0
  2
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval (app (-> f2 <-) (app #f)) (env ((□? (f2)) (□? (x1)))))"
  #f
  5
  2
  1
  2
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  lambda
  "'(eval (app (-> (λ (f1) ...) <-) (λ (x1) ...)) (env ()))"
  (lambda number char string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  let
  "'(eval (λ (f1) (-> (let (_) ...) <-)) (env ((□? (f1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval\n  (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...)\n  (env ((□? (f1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval (app f1 (-> (app #t) <-)) (env ((□? (f1)))))"
  #f
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval (app (-> #t <-)) (env ((□? (f1)))))"
  (constructor)
  2
  1
  0
  1
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval (app (-> f1 <-) (app #t)) (env ((□? (f1)))))"
  #f
  4
  2
  1
  1
  1
  1
  2
  1
  1/2
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval (let (_) (-> (app f1 (app #f)) <-)) (env ((□? (f1)))))"
  #f
  #f)
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  app
  "'(eval (app f1 (-> (app #f) <-)) (env ((□? (f1)))))"
  #f
  3
  2
  0
  1
  0
  0
  0
  1
  0
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  constructor
  "'(eval (app (-> #f <-)) (env ((□? (f1)))))"
  (constructor)
  2
  1
  0
  1
  0
  0
  0
  1
  0
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-worst-case-20
  2
  5
  266
  ref-or-constructor
  "'(eval (app (-> f1 <-) (app #f)) (env ((□? (f1)))))"
  #f
  4
  2
  1
  1
  1
  1
  2
  1
  1/2
  2
  #t
  1
  ((0 0 0)))
