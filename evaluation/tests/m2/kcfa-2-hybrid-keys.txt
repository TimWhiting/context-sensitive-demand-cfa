'(expression:
  (app
   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))
   (λ (x1)
     (app
      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))))

(list 'query: '(top) (envenv '()))

(list
 (list 'eval '(app f1 (-> #f <-)) (envenv '((□? (f1)))))
 (list 'eval '(app f1 (-> #t <-)) (envenv '((□? (f1)))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'eval '(app z (-> x1 <-) x2) (envenv '((□? (z)) (□? (z)) (□? (x1)))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'eval '(app z (-> x1 <-) x2) (envenv '((□? (z)) (□? (z)) (□? (z)))))
 (list
  'eval
  '(app (-> f1 <-) #f)
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app
    (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)
    (λ (x1)
      (app
       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))
  (envenv '()))
 (list
  'eval
  '(app
    (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)
    (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app
    (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))
    (->
     (λ (x1)
       (app
        (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
        (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))
     <-))
  (envenv '()))
 (list
  'eval
  '(app
    (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
    (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))
  (envenv '((□? (x1)))))
 (list
  'eval
  '(app
    (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
    (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app
    (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
    (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv '((□? (x2)) (□? (x1)))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv '((□? (x2)) (□? (x2)))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let (_) (-> (app f1 #f) <-))
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'eval '(top) (envenv '()))
 (list
  'eval
  '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-))
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'eval
  '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x1)
     (->
      (app
       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
      <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'expr
  '(app (-> f1 <-) #f)
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'expr
  '(app (-> f1 <-) #t)
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'expr
  '(app
    (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))
    (->
     (λ (x1)
       (app
        (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
        (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))
     <-))
  (envenv '()))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list 'refine (envenv '((□? (f1)))))
 (list 'refine (envenv '((□? (x1)))))
 (list 'refine (envenv '((□? (x2)) (□? (x1)))))
 (list 'refine (envenv '((□? (x2)))))
 (list
  'refine
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (x2)) (□? (x2)))))
 (list
  'refine
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (z)) (□? (z)))))
 (list 'refine (envenv '((□? (z)) (□? (z)) (□? (x1)))))
 (list 'refine (envenv '((□? (z)))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (z)) (□? (z)) (□? (z)))))
 (list 'refine (envenv '((□? (z)) (□? (x1))))))
90


(list
 'query:
 '(λ (x1)
    (->
     (app
      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
     <-))
 (envenv '((□? (x1)))))

(list
 (list 'eval '(app f1 (-> #f <-)) (envenv '((□? (f1)))))
 (list 'eval '(app f1 (-> #t <-)) (envenv '((□? (f1)))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'eval '(app z (-> x1 <-) x2) (envenv '((□? (z)) (□? (z)) (□? (x1)))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'eval '(app z (-> x1 <-) x2) (envenv '((□? (z)) (□? (z)) (□? (z)))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(app
    (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)
    (λ (x1)
      (app
       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))
  (envenv '()))
 (list
  'eval
  '(app
    (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)
    (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
  (envenv '((□? (x1)))))
 (list
  'eval
  '(app
    (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)
    (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app
    (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)
    (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(app
    (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
    (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))
  (envenv '((□? (x1)))))
 (list
  'eval
  '(app
    (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
    (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app
    (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
    (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv '((□? (x2)) (□? (x1)))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv '((□? (x2)) (□? (x2)))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x1)
     (->
      (app
       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
      <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x1)
     (->
      (app
       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
      <-))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x1)
     (->
      (app
       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
      <-))
  (envenv '((□? (x1)))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1)))))
 (list
  'expr
  '(app (-> f1 <-) #f)
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'expr
  '(app (-> f1 <-) #t)
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'expr
  '(app
    (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))
    (->
     (λ (x1)
       (app
        (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
        (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))
     <-))
  (envenv '()))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list 'refine (envenv '((□? (f1)))))
 (list 'refine (envenv '((□? (x1)))))
 (list 'refine (envenv '((□? (x2)) (□? (x1)))))
 (list 'refine (envenv '((□? (x2)))))
 (list
  'refine
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (x2)) (□? (x2)))))
 (list
  'refine
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (z)) (□? (x1)))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (z)) (□? (z)))))
 (list 'refine (envenv '((□? (z)) (□? (z)) (□? (x1)))))
 (list 'refine (envenv '((□? (z)))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (z)) (□? (z)) (□? (z))))))
175


(list
 'query:
 '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
 (envenv '((□? (x2)) (□? (x1)))))

(list
 (list 'eval '(app f1 (-> #f <-)) (envenv '((□? (f1)))))
 (list 'eval '(app f1 (-> #t <-)) (envenv '((□? (f1)))))
 (list 'eval '(app z (-> x1 <-) x2) (envenv '((□? (z)) (□? (x2)) (□? (z)))))
 (list 'eval '(app z (-> x1 <-) x2) (envenv '((□? (z)) (□? (x2)) (□? (x1)))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    '(□? (z))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    '(□? (z))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv '((□? (x2)) (□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv '((□? (x2)) (□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv '((□? (x2)) (□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(app
    (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)
    (λ (x1)
      (app
       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))
  (envenv '()))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv '((□? (x2)) (□? (x1)))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv '((□? (x2)) (□? (x1)))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv '((□? (x2)) (□? (x2)))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv '((□? (x2)) (□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv '((□? (x2)) (□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv '((□? (x2)) (□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv '((□? (x2)) (□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'expr
  '(app (-> f1 <-) #f)
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'expr
  '(app (-> f1 <-) #t)
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'expr
  '(app
    (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))
    (->
     (λ (x1)
       (app
        (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
        (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))
     <-))
  (envenv '()))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv '((□? (x2)) (□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv '((□? (x2)) (□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv '((□? (x2)) (□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list 'refine (envenv '((□? (f1)))))
 (list 'refine (envenv '((□? (x1)))))
 (list 'refine (envenv '((□? (x2)) (□? (x1)))))
 (list 'refine (envenv '((□? (x2)))))
 (list 'refine (envenv '((□? (x2)) (□? (z)))))
 (list
  'refine
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (x2)) (□? (x2)))))
 (list
  'refine
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (z)) (□? (x2)) (□? (z)))))
 (list 'refine (envenv '((□? (z)) (□? (x2)) (□? (x1)))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (z))))))
70


(list
 'query:
 '(λ (y1 y2) (-> y1 <-))
 (envenv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))

(list
 (list 'eval '(app f1 (-> #f <-)) (envenv '((□? (f1)))))
 (list 'eval '(app f1 (-> #t <-)) (envenv '((□? (f1)))))
 (list 'eval '(app z (-> x1 <-) x2) (envenv '((□? (z)) (□? (x2)) (□? (z)))))
 (list 'eval '(app z (-> x1 <-) x2) (envenv '((□? (z)) (□? (x2)) (□? (x1)))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    '(□? (z))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    '(□? (z))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app
    (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)
    (λ (x1)
      (app
       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))
  (envenv '()))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv '((□? (x2)) (□? (x1)))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    '(□? (y1 y2))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    '(□? (y1 y2))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'expr
  '(app (-> f1 <-) #f)
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'expr
  '(app (-> f1 <-) #t)
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'expr
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv '((□? (x2)) (□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'expr
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'expr
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv '((□? (x2)) (□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'expr
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'expr
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv '((□? (x2)) (□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'expr
  '(app
    (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))
    (->
     (λ (x1)
       (app
        (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
        (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))
     <-))
  (envenv '()))
 (list
  'expr
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv '((□? (x2)) (□? (x1)))))
 (list
  'expr
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'expr
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv '((□? (x2)) (□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv '((□? (x2)) (□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv '((□? (x2)) (□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list 'refine (envenv '((□? (f1)))))
 (list 'refine (envenv '((□? (x1)))))
 (list 'refine (envenv '((□? (x2)) (□? (x1)))))
 (list 'refine (envenv '((□? (x2)) (□? (z)))))
 (list
  'refine
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    '(□? (y1 y2))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))
 (list
  'refine
  (envenv
   (list
    '(□? (y1 y2))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (z)) (□? (x2)) (□? (z)))))
 (list 'refine (envenv '((□? (z)) (□? (x2)) (□? (x1)))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (z))))))
73


(list
 'query:
 '(λ (z) (-> (app z x1 x2) <-))
 (envenv '((□? (z)) (□? (x2)) (□? (x1)))))

(list
 (list 'eval '(app f1 (-> #f <-)) (envenv '((□? (f1)))))
 (list 'eval '(app f1 (-> #t <-)) (envenv '((□? (f1)))))
 (list 'eval '(app z (-> x1 <-) x2) (envenv '((□? (z)) (□? (x2)) (□? (z)))))
 (list 'eval '(app z (-> x1 <-) x2) (envenv '((□? (z)) (□? (x2)) (□? (x1)))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    '(□? (z))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv '((□? (x2)) (□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv '((□? (x2)) (□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv '((□? (x2)) (□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    '(□? (z))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv '((□? (x2)) (□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv '((□? (x2)) (□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv '((□? (x2)) (□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    '(□? (z))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    '(□? (z))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'eval '(app (-> z <-) x1 x2) (envenv '((□? (z)) (□? (x2)) (□? (x1)))))
 (list
  'eval
  '(app
    (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)
    (λ (x1)
      (app
       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))
  (envenv '()))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv '((□? (x2)) (□? (x1)))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv '((□? (x2)) (□? (x2)))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       '(□? (z))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       '(□? (z))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv '((□? (z)) (□? (x2)) (□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv '((□? (z)) (□? (x2)) (□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv '((□? (z)) (□? (x2)) (□? (x1)))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv '((□? (z)) (□? (x2)) (□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       '(□? (x2))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    '(□? (z))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    '(□? (z))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv '((□? (z)) (□? (x2)) (□? (x1)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv '((□? (x2)) (□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv '((□? (x2)) (□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv '((□? (x2)) (□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'expr
  '(app (-> f1 <-) #f)
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'expr
  '(app (-> f1 <-) #t)
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'expr
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'expr
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv '((□? (x2)) (□? (x1)))))
 (list
  'expr
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'expr
  '(app
    (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))
    (->
     (λ (x1)
       (app
        (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
        (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))
     <-))
  (envenv '()))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv '((□? (x2)) (□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv '((□? (x2)) (□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv '((□? (x2)) (□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       '(□? (z))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv '((□? (z)) (□? (x2)) (□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       '(□? (x2))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       '(□? (x2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       '(□? (x2))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv '((□? (z)) (□? (x2)) (□? (x1)))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv '((□? (z)) (□? (x2)) (□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       '(□? (z))
       '(□? (x2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv '((□? (z)) (□? (x2)) (□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (f1)))))
 (list 'refine (envenv '((□? (x1)))))
 (list 'refine (envenv '((□? (x2)) (□? (x1)))))
 (list 'refine (envenv '((□? (x2)))))
 (list 'refine (envenv '((□? (x2)) (□? (z)))))
 (list
  'refine
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (x2)) (□? (x2)))))
 (list
  'refine
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (z)) (□? (x2)) (□? (z)))))
 (list 'refine (envenv '((□? (z)) (□? (x2)) (□? (x1)))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (z))))))
108


(list 'query: '(app z x1 (-> x2 <-)) (envenv '((□? (z)) (□? (x2)) (□? (x1)))))

(list
 (list 'eval '(app f2 (-> #f <-)) (envenv '((□? (f2)) (□? (x1)))))
 (list 'eval '(app f2 (-> #t <-)) (envenv '((□? (f2)) (□? (x1)))))
 (list
  'eval
  '(app z x1 (-> x2 <-))
  (envenv
   (list
    '(□? (z))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1)))))
 (list 'eval '(app z x1 (-> x2 <-)) (envenv '((□? (z)) (□? (x2)) (□? (x1)))))
 (list
  'eval
  '(app z x1 (-> x2 <-))
  (envenv
   (list
    '(□? (z))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(app
    (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)
    (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
  (envenv '((□? (x1)))))
 (list
  'expr
  '(app (-> f2 <-) #t)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    '(□? (x1)))))
 (list
  'expr
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    '(□? (x1)))))
 (list
  'expr
  '(app
    (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
    (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))
  (envenv '((□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    '(□? (x1)))))
 (list 'refine (envenv '((□? (f2)) (□? (x1)))))
 (list 'refine (envenv '((□? (x1)))))
 (list 'refine (envenv '((□? (x2)) (□? (x1)))))
 (list 'refine (envenv '((□? (z)) (□? (x2)) (□? (x1)))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1))))))
18


(list 'query: '(app z (-> x1 <-) x2) (envenv '((□? (z)) (□? (x2)) (□? (x1)))))

(list
 (list 'eval '(app f1 (-> #f <-)) (envenv '((□? (f1)))))
 (list 'eval '(app f1 (-> #t <-)) (envenv '((□? (f1)))))
 (list 'eval '(app z (-> x1 <-) x2) (envenv '((□? (z)) (□? (x2)) (□? (x1)))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    '(□? (z))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    '(□? (z))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app
    (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)
    (λ (x1)
      (app
       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))
  (envenv '()))
 (list
  'expr
  '(app (-> f1 <-) #f)
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'expr
  '(app (-> f1 <-) #t)
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'expr
  '(app
    (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))
    (->
     (λ (x1)
       (app
        (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
        (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))
     <-))
  (envenv '()))
 (list 'refine (envenv '((□? (f1)))))
 (list 'refine (envenv '((□? (x1)))))
 (list 'refine (envenv '((□? (x2)) (□? (x1)))))
 (list
  'refine
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (z)) (□? (x2)) (□? (x1)))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '())))))))))
17


(list
 'query:
 '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))
 (envenv '((□? (f2)) (□? (x1)))))

(list
 (list 'eval '(app f1 (-> #f <-)) (envenv '((□? (f1)))))
 (list 'eval '(app f1 (-> #t <-)) (envenv '((□? (f1)))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'eval '(app z (-> x1 <-) x2) (envenv '((□? (z)) (□? (z)) (□? (x1)))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'eval '(app z (-> x1 <-) x2) (envenv '((□? (z)) (□? (z)) (□? (z)))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    '(□? (f2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    '(□? (f2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'eval '(app (-> f2 <-) #f) (envenv '((□? (f2)) (□? (x1)))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(app
    (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)
    (λ (x1)
      (app
       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))
  (envenv '()))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app
    (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
    (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))
  (envenv '((□? (x1)))))
 (list
  'eval
  '(app
    (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
    (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app
    (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
    (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv '((□? (x2)) (□? (x1)))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv '((□? (x2)) (□? (x2)))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    '(□? (f2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    '(□? (f2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'eval '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))
  (envenv
   (list
    '(□? (f2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))
  (envenv '((□? (f2)) (□? (x1)))))
 (list
  'eval
  '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))
  (envenv
   (list
    '(□? (f2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    '(□? (x1)))))
 (list
  'expr
  '(app (-> f1 <-) #f)
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'expr
  '(app (-> f1 <-) #t)
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'expr
  '(app
    (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)
    (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
  (envenv '((□? (x1)))))
 (list
  'expr
  '(app
    (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)
    (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'expr
  '(app
    (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)
    (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'expr
  '(app
    (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))
    (->
     (λ (x1)
       (app
        (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
        (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))
     <-))
  (envenv '()))
 (list
  'refine
  (envenv
   (list
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list 'refine (envenv '((□? (f1)))))
 (list
  'refine
  (envenv
   (list
    '(□? (f2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (f2)) (□? (x1)))))
 (list
  'refine
  (envenv
   (list
    '(□? (f2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (x1)))))
 (list 'refine (envenv '((□? (x2)) (□? (x1)))))
 (list 'refine (envenv '((□? (x2)))))
 (list
  'refine
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (x2)) (□? (x2)))))
 (list
  'refine
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (z)) (□? (x1)))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (z)) (□? (z)))))
 (list 'refine (envenv '((□? (z)) (□? (z)) (□? (x1)))))
 (list 'refine (envenv '((□? (z)))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (z)) (□? (z)) (□? (z))))))
272


(list
 'query:
 '(let ((-> _ = (app f2 #t) <-)) bod)
 (envenv '((□? (f2)) (□? (x1)))))

(list
 (list 'eval '(app f1 (-> #f <-)) (envenv '((□? (f1)))))
 (list 'eval '(app f1 (-> #t <-)) (envenv '((□? (f1)))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'eval '(app z (-> x1 <-) x2) (envenv '((□? (z)) (□? (z)) (□? (x1)))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'eval '(app z (-> x1 <-) x2) (envenv '((□? (z)) (□? (z)) (□? (z)))))
 (list
  'eval
  '(app (-> f2 <-) #t)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> f2 <-) #t)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> f2 <-) #t)
  (envenv
   (list
    '(□? (f2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> f2 <-) #t)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    '(□? (x1)))))
 (list 'eval '(app (-> f2 <-) #t) (envenv '((□? (f2)) (□? (x1)))))
 (list
  'eval
  '(app (-> f2 <-) #t)
  (envenv
   (list
    '(□? (f2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> f2 <-) #t)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> f2 <-) #t)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> f2 <-) #t)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> f2 <-) #t)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> f2 <-) #t)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> f2 <-) #t)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv '((□? (f2)) (□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(app
    (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)
    (λ (x1)
      (app
       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))
  (envenv '()))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv '((□? (f2)) (□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(app
    (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
    (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))
  (envenv '((□? (x1)))))
 (list
  'eval
  '(app
    (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
    (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app
    (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
    (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv '((□? (x2)) (□? (x1)))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv '((□? (x2)) (□? (x2)))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let ((-> _ = (app f2 #t) <-)) bod)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let ((-> _ = (app f2 #t) <-)) bod)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let ((-> _ = (app f2 #t) <-)) bod)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let ((-> _ = (app f2 #t) <-)) bod)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(let ((-> _ = (app f2 #t) <-)) bod)
  (envenv '((□? (f2)) (□? (x1)))))
 (list
  'eval
  '(let ((-> _ = (app f2 #t) <-)) bod)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(let ((-> _ = (app f2 #t) <-)) bod)
  (envenv
   (list
    '(□? (f2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let ((-> _ = (app f2 #t) <-)) bod)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let ((-> _ = (app f2 #t) <-)) bod)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let ((-> _ = (app f2 #t) <-)) bod)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(let ((-> _ = (app f2 #t) <-)) bod)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let ((-> _ = (app f2 #t) <-)) bod)
  (envenv
   (list
    '(□? (f2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv '((□? (f2)) (□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv '((□? (f2)) (□? (x1)))))
    '(□? (x1)))))
 (list
  'expr
  '(app (-> f1 <-) #f)
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'expr
  '(app (-> f1 <-) #t)
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'expr
  '(app
    (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)
    (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
  (envenv '((□? (x1)))))
 (list
  'expr
  '(app
    (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)
    (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'expr
  '(app
    (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)
    (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'expr
  '(app
    (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))
    (->
     (λ (x1)
       (app
        (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
        (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))
     <-))
  (envenv '()))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv '((□? (f2)) (□? (x1)))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f2 #t) <-)) bod)
     (envenv '((□? (f2)) (□? (x1)))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f2 #t) <-)) bod)
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list 'refine (envenv '((□? (f1)))))
 (list
  'refine
  (envenv
   (list
    '(□? (f2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (f2)) (□? (x1)))))
 (list
  'refine
  (envenv
   (list
    '(□? (f2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (x1)))))
 (list 'refine (envenv '((□? (x2)) (□? (x1)))))
 (list 'refine (envenv '((□? (x2)))))
 (list
  'refine
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (x2)) (□? (x2)))))
 (list
  'refine
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (z)) (□? (x1)))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (z)) (□? (z)) (□? (x1)))))
 (list 'refine (envenv '((□? (z)) (□? (z)))))
 (list 'refine (envenv '((□? (z)))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (z)) (□? (z)) (□? (z))))))
260


(list 'query: '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))

(list
 (list 'eval '(app f1 (-> #f <-)) (envenv '((□? (f1)))))
 (list 'eval '(app f1 (-> #t <-)) (envenv '((□? (f1)))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'eval '(app z (-> x1 <-) x2) (envenv '((□? (z)) (□? (z)) (□? (x1)))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'eval '(app z (-> x1 <-) x2) (envenv '((□? (z)) (□? (z)) (□? (z)))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    '(□? (f2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    '(□? (f2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'eval '(app (-> f2 <-) #f) (envenv '((□? (f2)) (□? (x1)))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(app
    (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)
    (λ (x1)
      (app
       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))
  (envenv '()))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app
    (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
    (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))
  (envenv '((□? (x1)))))
 (list
  'eval
  '(app
    (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
    (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app
    (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
    (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv '((□? (x2)) (□? (x1)))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv '((□? (x2)) (□? (x2)))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    '(□? (f2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    '(□? (f2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'eval '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    '(□? (x1)))))
 (list
  'expr
  '(app (-> f1 <-) #f)
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'expr
  '(app (-> f1 <-) #t)
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'expr
  '(app
    (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)
    (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
  (envenv '((□? (x1)))))
 (list
  'expr
  '(app
    (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)
    (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'expr
  '(app
    (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)
    (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'expr
  '(app
    (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))
    (->
     (λ (x1)
       (app
        (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
        (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))
     <-))
  (envenv '()))
 (list
  'refine
  (envenv
   (list
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv '((□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       '(□? (f2))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    (list 'cenv '(let (_) (-> (app f2 #f) <-)) (envenv '((□? (f2)) (□? (x1)))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (x1)))))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list 'refine (envenv '((□? (f1)))))
 (list
  'refine
  (envenv
   (list
    '(□? (f2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (f2)) (□? (x1)))))
 (list
  'refine
  (envenv
   (list
    '(□? (f2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (x1)))))
 (list 'refine (envenv '((□? (x2)) (□? (x1)))))
 (list 'refine (envenv '((□? (x2)))))
 (list
  'refine
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (x2)) (□? (x2)))))
 (list
  'refine
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (z)) (□? (x1)))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (z)) (□? (z)))))
 (list 'refine (envenv '((□? (z)) (□? (z)) (□? (x1)))))
 (list 'refine (envenv '((□? (z)))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (z)) (□? (z)) (□? (z))))))
260


(list
 'query:
 '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-))
 (envenv '((□? (f1)))))

(list
 (list
  'eval
  '(app f1 (-> #f <-))
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list 'eval '(app f1 (-> #f <-)) (envenv '((□? (f1)))))
 (list 'eval '(app f1 (-> #t <-)) (envenv '((□? (f1)))))
 (list
  'eval
  '(app f1 (-> #t <-))
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'eval '(app z (-> x1 <-) x2) (envenv '((□? (z)) (□? (z)) (□? (x1)))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'eval '(app z (-> x1 <-) x2) (envenv '((□? (z)) (□? (z)) (□? (z)))))
 (list
  'eval
  '(app (-> f1 <-) #f)
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list 'eval '(app (-> f1 <-) #f) (envenv '((□? (f1)))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app
    (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)
    (λ (x1)
      (app
       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))
  (envenv '()))
 (list
  'eval
  '(app
    (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)
    (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
  (envenv
   (list (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
 (list
  'eval
  '(app
    (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)
    (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app
    (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))
    (->
     (λ (x1)
       (app
        (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
        (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))
     <-))
  (envenv '()))
 (list
  'eval
  '(app
    (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
    (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))
  (envenv '((□? (x1)))))
 (list
  'eval
  '(app
    (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
    (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app
    (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
    (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv '((□? (x2)) (□? (x1)))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv '((□? (x2)) (□? (x2)))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let (_) (-> (app f1 #f) <-))
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list 'eval '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1)))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
 (list
  'eval
  '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-))
  (envenv '((□? (f1)))))
 (list
  'eval
  '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-))
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'eval
  '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
 (list
  'eval
  '(λ (x1)
     (->
      (app
       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
      <-))
  (envenv
   (list (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
 (list
  'eval
  '(λ (x1)
     (->
      (app
       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
      <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'expr
  '(app (-> f1 <-) #f)
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'expr
  '(app (-> f1 <-) #t)
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'expr
  '(app
    (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)
    (λ (x1)
      (app
       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))
  (envenv '()))
 (list
  'expr
  '(app
    (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))
    (->
     (λ (x1)
       (app
        (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
        (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))
     <-))
  (envenv '()))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list 'refine (envenv '((□? (f1)))))
 (list 'refine (envenv '((□? (x1)))))
 (list 'refine (envenv '((□? (x2)) (□? (x1)))))
 (list 'refine (envenv '((□? (x2)))))
 (list
  'refine
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (x2)) (□? (x2)))))
 (list
  'refine
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (z)) (□? (z)))))
 (list 'refine (envenv '((□? (z)) (□? (z)) (□? (x1)))))
 (list 'refine (envenv '((□? (z)))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (z)) (□? (z)) (□? (z)))))
 (list 'refine (envenv '((□? (z)) (□? (x1))))))
102


(list 'query: '(let ((-> _ = (app f1 #t) <-)) bod) (envenv '((□? (f1)))))

(list
 (list
  'eval
  '(app f1 (-> #f <-))
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list 'eval '(app f1 (-> #f <-)) (envenv '((□? (f1)))))
 (list 'eval '(app f1 (-> #t <-)) (envenv '((□? (f1)))))
 (list
  'eval
  '(app f1 (-> #t <-))
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'eval '(app z (-> x1 <-) x2) (envenv '((□? (z)) (□? (z)) (□? (x1)))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'eval '(app z (-> x1 <-) x2) (envenv '((□? (z)) (□? (z)) (□? (z)))))
 (list
  'eval
  '(app (-> f1 <-) #t)
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list 'eval '(app (-> f1 <-) #t) (envenv '((□? (f1)))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list 'cenv '(let ((-> _ = (app f1 #t) <-)) bod) (envenv '((□? (f1))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app
    (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)
    (λ (x1)
      (app
       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))
  (envenv '()))
 (list
  'eval
  '(app
    (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)
    (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
  (envenv
   (list
    (list 'cenv '(let ((-> _ = (app f1 #t) <-)) bod) (envenv '((□? (f1))))))))
 (list
  'eval
  '(app
    (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)
    (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app
    (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))
    (->
     (λ (x1)
       (app
        (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
        (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))
     <-))
  (envenv '()))
 (list
  'eval
  '(app
    (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
    (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))
  (envenv '((□? (x1)))))
 (list
  'eval
  '(app
    (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
    (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app
    (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
    (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv '((□? (x2)) (□? (x1)))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv '((□? (x2)) (□? (x2)))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list 'cenv '(let ((-> _ = (app f1 #t) <-)) bod) (envenv '((□? (f1))))))))
 (list
  'eval
  '(let ((-> _ = (app f1 #t) <-)) bod)
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (envenv '((□? (f1)))))
 (list
  'eval
  '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list 'cenv '(let ((-> _ = (app f1 #t) <-)) bod) (envenv '((□? (f1))))))))
 (list
  'eval
  '(λ (x1)
     (->
      (app
       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
      <-))
  (envenv
   (list
    (list 'cenv '(let ((-> _ = (app f1 #t) <-)) bod) (envenv '((□? (f1))))))))
 (list
  'eval
  '(λ (x1)
     (->
      (app
       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
      <-))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'expr
  '(app (-> f1 <-) #f)
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'expr
  '(app (-> f1 <-) #t)
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'expr
  '(app
    (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)
    (λ (x1)
      (app
       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))
  (envenv '()))
 (list
  'expr
  '(app
    (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))
    (->
     (λ (x1)
       (app
        (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
        (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))
     <-))
  (envenv '()))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list 'cenv '(let ((-> _ = (app f1 #t) <-)) bod) (envenv '((□? (f1))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list 'cenv '(let ((-> _ = (app f1 #t) <-)) bod) (envenv '((□? (f1))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list 'refine (envenv '((□? (f1)))))
 (list 'refine (envenv '((□? (x1)))))
 (list 'refine (envenv '((□? (x2)) (□? (x1)))))
 (list 'refine (envenv '((□? (x2)))))
 (list
  'refine
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (x2)) (□? (x2)))))
 (list
  'refine
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (z)) (□? (x1)))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (z)) (□? (z)))))
 (list 'refine (envenv '((□? (z)) (□? (z)) (□? (x1)))))
 (list 'refine (envenv '((□? (z)))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (z)) (□? (z)) (□? (z))))))
100


(list 'query: '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1)))))

(list
 (list
  'eval
  '(app f1 (-> #f <-))
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list 'eval '(app f1 (-> #f <-)) (envenv '((□? (f1)))))
 (list 'eval '(app f1 (-> #t <-)) (envenv '((□? (f1)))))
 (list
  'eval
  '(app f1 (-> #t <-))
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'eval '(app z (-> x1 <-) x2) (envenv '((□? (z)) (□? (z)) (□? (x1)))))
 (list
  'eval
  '(app z (-> x1 <-) x2)
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'eval '(app z (-> x1 <-) x2) (envenv '((□? (z)) (□? (z)) (□? (z)))))
 (list
  'eval
  '(app (-> f1 <-) #f)
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list 'eval '(app (-> f1 <-) #f) (envenv '((□? (f1)))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> f2 <-) #f)
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> z <-) x1 x2)
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app
    (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)
    (λ (x1)
      (app
       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))
  (envenv '()))
 (list
  'eval
  '(app
    (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)
    (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
  (envenv
   (list (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
 (list
  'eval
  '(app
    (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)
    (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(app
    (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))
    (->
     (λ (x1)
       (app
        (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
        (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))
     <-))
  (envenv '()))
 (list
  'eval
  '(app
    (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
    (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))
  (envenv '((□? (x1)))))
 (list
  'eval
  '(app
    (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
    (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app
    (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
    (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))
  (envenv
   (list
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv '((□? (x2)) (□? (x2)))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))
  (envenv '((□? (x2)) (□? (x1)))))
 (list
  'eval
  '(let (_) (-> (app f1 #f) <-))
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list 'eval '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1)))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(let (_) (-> (app f2 #f) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
 (list
  'eval
  '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
 (list
  'eval
  '(λ (x1)
     (->
      (app
       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
      <-))
  (envenv
   (list (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
 (list
  'eval
  '(λ (x1)
     (->
      (app
       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
      <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (y1 y2) (-> y1 <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'eval
  '(λ (z) (-> (app z x1 x2) <-))
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'expr
  '(app (-> f1 <-) #f)
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'expr
  '(app (-> f1 <-) #t)
  (envenv (list (list 'cenv '(top) (envenv '())))))
 (list
  'expr
  '(app
    (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)
    (λ (x1)
      (app
       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))
  (envenv '()))
 (list
  'expr
  '(app
    (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))
    (->
     (λ (x1)
       (app
        (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
        (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))
     <-))
  (envenv '()))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x1)
        (->
         (app
          (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
          (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
         <-))
     (envenv
      (list
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
     (envenv
      (list
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    (list
     'cenv
     '(let (_) (-> (app f2 #f) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x1)
           (->
            (app
             (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))
             (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))
            <-))
        (envenv '((□? (x1)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x2)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x2)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list
        'cenv
        '(let ((-> _ = (app f1 #t) <-)) bod)
        (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    '(□? (x1)))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       (list 'cenv '(let (_) (-> (app f1 #f) <-)) (envenv '((□? (f1))))))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    (list
     'cenv
     '(λ (z) (-> (app z x1 x2) <-))
     (envenv
      (list
       (list
        'cenv
        '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))
        (envenv '((□? (x2)) (□? (x1)))))
       (list
        'cenv
        '(let (_) (-> (app f2 #f) <-))
        (envenv '((□? (f2)) (□? (f2)))))
       '(□? (x1)))))
    '(□? (x2))
    '(□? (x1)))))
 (list 'refine (envenv '((□? (f1)))))
 (list 'refine (envenv '((□? (x1)))))
 (list 'refine (envenv '((□? (x2)) (□? (x1)))))
 (list 'refine (envenv '((□? (x2)))))
 (list
  'refine
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (x2)) (□? (x2)))))
 (list
  'refine
  (envenv
   (list
    '(□? (x2))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (z)) (□? (z)))))
 (list 'refine (envenv '((□? (z)) (□? (z)) (□? (x1)))))
 (list 'refine (envenv '((□? (z)))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let (_) (-> (app f1 #f) <-))
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list
  'refine
  (envenv
   (list
    '(□? (z))
    '(□? (z))
    (list
     'cenv
     '(let ((-> _ = (app f1 #t) <-)) bod)
     (envenv (list (list 'cenv '(top) (envenv '()))))))))
 (list 'refine (envenv '((□? (z)) (□? (z)) (□? (z)))))
 (list 'refine (envenv '((□? (z)) (□? (x1))))))
100

