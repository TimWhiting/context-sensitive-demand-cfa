'(app-num
  0
  0
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  10
  ((1/25 1/25 0) (3/50 3/50 0) (1/25 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(app-num
  0
  0
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  0
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  0
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  0
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  12
  ((1/50 1/50 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  0
  "\"(list 'eval '(top) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  0
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  0
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  0
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  0
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  1
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  1
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  9
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (3/50 3/50 0) (1/25 1/25 0)))
'(app-num
  0
  1
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  1
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  1
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  12
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(app-num
  0
  1
  "\"(list 'eval '(top) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  1
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  1
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  1
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  1
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  2
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  2
  "\"(list 'eval '(top) (menv '()))\""
  11
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(app-num
  0
  2
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  2
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  2
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  2
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  2
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  2
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  2
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  2
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  3
  "\"(list 'eval '(top) (menv '()))\""
  11
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(app-num
  0
  3
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  3
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  3
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  3
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  3
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  3
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  3
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  3
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  3
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  4
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  9
  ((1/25 1/25 0) (1/25 3/50 0) (1/25 1/25 0) (1/25 3/50 0) (1/25 1/25 0)))
'(app-num
  0
  4
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  4
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  4
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  4
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  4
  "\"(list 'eval '(top) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  4
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  4
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  4
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  4
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  5
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  5
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  5
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  5
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  8
  ((1/50 1/25 0) (1/50 1/50 0) (1/25 1/25 0) (1/25 1/25 0) (1/50 1/50 0)))
'(app-num
  0
  5
  "\"(list 'eval '(top) (menv '()))\""
  12
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(app-num
  0
  5
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  5
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  5
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  5
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  5
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  6
  "\"(list 'eval '(top) (menv '()))\""
  11
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(app-num
  0
  6
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  6
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  13
  ((0 0 0) (1/50 1/50 0) (0 0 0) (0 1/50 0) (0 0 0)))
'(app-num
  0
  6
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  6
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  6
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  6
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  6
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  6
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  6
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  7
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  7
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  10
  ((1/25 1/25 0) (3/50 3/50 0) (1/25 1/25 0) (1/25 1/25 0) (3/50 3/50 0)))
'(app-num
  0
  7
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (1/50 1/50 0) (0 0 0) (0 0 0)))
'(app-num
  0
  7
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  7
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  7
  "\"(list 'eval '(top) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  7
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  7
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  7
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  7
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  8
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  8
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  8
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  8
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  8
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  9
  ((1/25 1/25 0) (1/25 1/25 0) (1/50 1/25 0) (1/50 1/25 0) (1/50 1/50 0)))
'(app-num
  0
  8
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  8
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  8
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  8
  "\"(list 'eval '(top) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  8
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  9
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  9
  ((3/50 3/50 0) (1/25 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (1/25 1/25 0)))
'(app-num
  0
  9
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  9
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  9
  "\"(list 'eval '(top) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  9
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  9
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  13
  ((0 1/50 0) (0 1/50 0) (0 0 0) (1/50 1/50 0) (1/50 1/50 0)))
'(app-num
  0
  9
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  9
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  9
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  0
  9
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  0
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '(())))\""
  9
  ((1/10 1/10 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(basic-letrec
  0
  0
  "\"(list 'eval '(top) (menv '()))\""
  16
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (3/50 3/50 0)))
'(basic-letrec
  0
  0
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '(())))\""
  18
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  0
  0
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '(())))\""
  19
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  0
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '(())))\""
  20
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  0
  0
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '(())))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  0
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '(())))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  0
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '(())))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  0
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  0
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '(())))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  0
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  0
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  0
  "\"(list 'eval '(app - (-> y <-) 1) (menv '(())))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  0
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '(())))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  0
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  0
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '(())))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  0
  "\"(list 'eval '(app (-> - <-) y 1) (menv '(())))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  1
  "\"(list 'eval '(app - (-> y <-) 1) (menv '(())))\""
  8
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (2/25 2/25 0)))
'(basic-letrec
  0
  1
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '(())))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  1
  "\"(list 'eval '(app (-> - <-) y 1) (menv '(())))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  1
  "\"(list 'eval '(top) (menv '()))\""
  15
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(basic-letrec
  0
  1
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  1
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '(())))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  1
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  1
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '(())))\""
  17
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  0
  1
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '(())))\""
  17
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  1
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '(())))\""
  18
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  1
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  18
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  1
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  18
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  1
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '(())))\""
  18
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  1
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '(())))\""
  19
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 3/50 0)))
'(basic-letrec
  0
  1
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '(())))\""
  19
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  1
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '(())))\""
  19
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  1
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '(())))\""
  20
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  0
  2
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  2
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '(())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  2
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '(())))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  2
  "\"(list 'eval '(top) (menv '()))\""
  9
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  0
  2
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  2
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '(())))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  2
  "\"(list 'eval '(app - (-> y <-) 1) (menv '(())))\""
  17
  ((2/25 2/25 0) (3/50 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(basic-letrec
  0
  2
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '(())))\""
  18
  ((1/50 1/50 0) (0 0 0) (1/50 1/50 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  2
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '(())))\""
  19
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  0
  2
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  19
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  2
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  19
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  2
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '(())))\""
  19
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  2
  "\"(list 'eval '(app (-> - <-) y 1) (menv '(())))\""
  19
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  2
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '(())))\""
  19
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  2
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '(())))\""
  20
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  0
  2
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  2
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '(())))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  3
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '(())))\""
  8
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (2/25 2/25 0)))
'(basic-letrec
  0
  3
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '(())))\""
  9
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  0
  3
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '(())))\""
  10
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  0
  3
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '(())))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  3
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '(())))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  3
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '(())))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  3
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '(())))\""
  17
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  0
  3
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '(())))\""
  17
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  3
  "\"(list 'eval '(app (-> - <-) y 1) (menv '(())))\""
  17
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  3
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  17
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  3
  "\"(list 'eval '(top) (menv '()))\""
  20
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  0
  3
  "\"(list 'eval '(app - (-> y <-) 1) (menv '(())))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  3
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  3
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '(())))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  3
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  3
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  3
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '(())))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  4
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '(())))\""
  3
  ((1/50 1/50 0) (1/50 1/50 0) (0 0 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  0
  4
  "\"(list 'eval '(app - (-> y <-) 1) (menv '(())))\""
  11
  ((3/50 3/50 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(basic-letrec
  0
  4
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  14
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  0
  4
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  4
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  4
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  4
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  4
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  4
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '(())))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  4
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '(())))\""
  17
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  4
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '(())))\""
  17
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  4
  "\"(list 'eval '(top) (menv '()))\""
  18
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  4
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '(())))\""
  18
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  4
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '(())))\""
  19
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  0
  4
  "\"(list 'eval '(app (-> - <-) y 1) (menv '(())))\""
  19
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  4
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '(())))\""
  20
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  0
  4
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '(())))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  5
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '(())))\""
  9
  ((2/25 2/25 0) (2/25 2/25 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0)))
'(basic-letrec
  0
  5
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '(())))\""
  15
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(basic-letrec
  0
  5
  "\"(list 'eval '(app (-> - <-) y 1) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  5
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  5
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  5
  "\"(list 'eval '(top) (menv '()))\""
  18
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  0
  5
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '(())))\""
  18
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  5
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '(())))\""
  18
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  5
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '(())))\""
  19
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  5
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '(())))\""
  19
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  5
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '(())))\""
  19
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  5
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  19
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  5
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '(())))\""
  20
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  0
  5
  "\"(list 'eval '(app - (-> y <-) 1) (menv '(())))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  5
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  5
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  5
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '(())))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  6
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  6
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '(())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  6
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  6
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '(())))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  6
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '(())))\""
  12
  ((3/50 2/25 0) (3/50 3/50 0) (3/50 3/50 0) (2/25 2/25 0) (2/25 2/25 0)))
'(basic-letrec
  0
  6
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '(())))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  6
  "\"(list 'eval '(app (-> - <-) y 1) (menv '(())))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  6
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '(())))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  6
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '(())))\""
  15
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  0
  6
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  6
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '(())))\""
  17
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  0
  6
  "\"(list 'eval '(top) (menv '()))\""
  19
  ((0 0 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  0
  6
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '(())))\""
  20
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  0
  6
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  6
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '(())))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  6
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '(())))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  6
  "\"(list 'eval '(app - (-> y <-) 1) (menv '(())))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  7
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '(())))\""
  9
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(basic-letrec
  0
  7
  "\"(list 'eval '(app - (-> y <-) 1) (menv '(())))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  7
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '(())))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  7
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '(())))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  7
  "\"(list 'eval '(top) (menv '()))\""
  17
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(basic-letrec
  0
  7
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  17
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  7
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  17
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  7
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '(())))\""
  17
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  7
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  17
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  7
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '(())))\""
  18
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  7
  "\"(list 'eval '(app (-> - <-) y 1) (menv '(())))\""
  18
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  7
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  18
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  7
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '(())))\""
  18
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  7
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '(())))\""
  18
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  7
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '(())))\""
  19
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  0
  7
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '(())))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  7
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '(())))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  8
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '(())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  8
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '(())))\""
  10
  ((3/50 2/25 0) (3/50 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (3/50 3/50 0)))
'(basic-letrec
  0
  8
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '(())))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  8
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '(())))\""
  11
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  0
  8
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '(())))\""
  15
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  0
  8
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  8
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  8
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  8
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '(())))\""
  17
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  8
  "\"(list 'eval '(app (-> - <-) y 1) (menv '(())))\""
  17
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  8
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '(())))\""
  17
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  8
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '(())))\""
  18
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  0
  8
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '(())))\""
  18
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  8
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  19
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  8
  "\"(list 'eval '(top) (menv '()))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  8
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  8
  "\"(list 'eval '(app - (-> y <-) 1) (menv '(())))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  9
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  9
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '(())))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  9
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '(())))\""
  10
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 2/25 0) (3/50 3/50 0)))
'(basic-letrec
  0
  9
  "\"(list 'eval '(top) (menv '()))\""
  15
  ((1/50 1/50 0) (1/50 1/50 0) (1/25 3/50 0) (1/50 1/50 0) (1/25 1/25 0)))
'(basic-letrec
  0
  9
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  9
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '(())))\""
  16
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 3/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  0
  9
  "\"(list 'eval '(app (-> - <-) y 1) (menv '(())))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  9
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '(())))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  9
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '(())))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  9
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '(())))\""
  18
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  0
  9
  "\"(list 'eval '(app - (-> y <-) 1) (menv '(())))\""
  18
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  9
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '(())))\""
  18
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  9
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  18
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  9
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '(())))\""
  19
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  9
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  19
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  0
  9
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '(())))\""
  20
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  0
  9
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  0
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  0
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  0
  "\"(list 'eval '(top) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  0
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  1
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  1
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  1
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  1
  "\"(list 'eval '(top) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  2
  "\"(list 'eval '(top) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  2
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  2
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  2
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  3
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  3
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  2
  ((0 0 0) (0 1/50 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  3
  "\"(list 'eval '(top) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  3
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  4
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  4
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  4
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  4
  "\"(list 'eval '(top) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  5
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  5
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  5
  "\"(list 'eval '(top) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  5
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  6
  "\"(list 'eval '(top) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  6
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  6
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  6
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  7
  "\"(list 'eval '(top) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  7
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  7
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  7
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  8
  "\"(list 'eval '(top) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  8
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  8
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  8
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  9
  "\"(list 'eval '(top) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  9
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  9
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  0
  9
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  0
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  0
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  0
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  0
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  0
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  0
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  7
  ((0 0 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(constr
  0
  0
  "\"(list 'eval '(top) (menv '()))\""
  9
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(constr
  0
  0
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  0
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  1
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  1
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  1
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (1/50 1/50 0) (0 0 0) (0 0 0)))
'(constr
  0
  1
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  7
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(constr
  0
  1
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  1
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  1
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  1
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  1
  "\"(list 'eval '(top) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  2
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  2
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  7
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(constr
  0
  2
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  2
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  2
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  2
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  2
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  2
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  2
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  3
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  3
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  3
  "\"(list 'eval '(top) (menv '()))\""
  9
  ((1/25 3/50 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(constr
  0
  3
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  3
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  3
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  3
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  3
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  3
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  4
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (2/25 2/25 0)))
'(constr
  0
  4
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  4
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  4
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  4
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  4
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  4
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  4
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  4
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  5
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((1/25 1/25 0) (3/50 3/50 0) (1/25 1/25 0) (1/25 3/50 0) (1/25 3/50 0)))
'(constr
  0
  5
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  5
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  5
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  5
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  5
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  5
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  5
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  5
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  6
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  6
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  6
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  6
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  6
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/25 0) (1/50 1/50 0)))
'(constr
  0
  6
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  6
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  6
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  6
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  7
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  7
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  7
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  7
  "\"(list 'eval '(top) (menv '()))\""
  9
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(constr
  0
  7
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  7
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  7
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  7
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  7
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  8
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(constr
  0
  8
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  8
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  8
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  8
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  8
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  8
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  8
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  8
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  9
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  9
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(constr
  0
  9
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  7
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(constr
  0
  9
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  9
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  9
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  9
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  9
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  0
  9
  "\"(list 'eval '(top) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  0
  "\"(list 'eval '(top) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 1/50 0) (0 0 0)))
'(err
  0
  0
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '(())))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  0
  "\"(list 'eval '(app (-> x <-) x) (menv '(())))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  0
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  0
  "\"(list 'eval '(app x (-> x <-)) (menv '(())))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  0
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  1
  "\"(list 'eval '(top) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  1
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  1
  "\"(list 'eval '(app (-> x <-) x) (menv '(())))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  1
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '(())))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  1
  "\"(list 'eval '(app x (-> x <-)) (menv '(())))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  1
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  2
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  2
  "\"(list 'eval '(top) (menv '()))\""
  6
  ((0 0 0) (0 1/50 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  2
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '(())))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  2
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  2
  "\"(list 'eval '(app x (-> x <-)) (menv '(())))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  2
  "\"(list 'eval '(app (-> x <-) x) (menv '(())))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  3
  "\"(list 'eval '(app x (-> x <-)) (menv '(())))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  3
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '(())))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  3
  "\"(list 'eval '(top) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  3
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  3
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  3
  "\"(list 'eval '(app (-> x <-) x) (menv '(())))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  4
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  4
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '(())))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  4
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  4
  "\"(list 'eval '(top) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  4
  "\"(list 'eval '(app (-> x <-) x) (menv '(())))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  4
  "\"(list 'eval '(app x (-> x <-)) (menv '(())))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  5
  "\"(list 'eval '(app x (-> x <-)) (menv '(())))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 1/50 0)))
'(err
  0
  5
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '(())))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  5
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  5
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  5
  "\"(list 'eval '(app (-> x <-) x) (menv '(())))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  5
  "\"(list 'eval '(top) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  6
  "\"(list 'eval '(app x (-> x <-)) (menv '(())))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  6
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  6
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '(())))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  6
  "\"(list 'eval '(app (-> x <-) x) (menv '(())))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  6
  "\"(list 'eval '(top) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  6
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  7
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '(())))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  7
  "\"(list 'eval '(app (-> x <-) x) (menv '(())))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  7
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  7
  "\"(list 'eval '(top) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  7
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  7
  "\"(list 'eval '(app x (-> x <-)) (menv '(())))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  8
  "\"(list 'eval '(top) (menv '()))\""
  6
  ((0 0 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  0
  8
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  8
  "\"(list 'eval '(app (-> x <-) x) (menv '(())))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  8
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  8
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '(())))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  8
  "\"(list 'eval '(app x (-> x <-)) (menv '(())))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  9
  "\"(list 'eval '(app (-> x <-) x) (menv '(())))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  9
  "\"(list 'eval '(top) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  9
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  9
  "\"(list 'eval '(app x (-> x <-)) (menv '(())))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  9
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '(())))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  0
  9
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  0
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '(())))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  0
  "\"(list 'eval '(top) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  0
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  0
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  0
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  1
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  1
  "\"(list 'eval '(top) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  1
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  1
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  1
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '(())))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  2
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  2
  "\"(list 'eval '(top) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  2
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '(())))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  2
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  2
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  3
  "\"(list 'eval '(top) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  3
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  3
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '(())))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  3
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  3
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  4
  "\"(list 'eval '(top) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 1/50 0)))
'(id
  0
  4
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  4
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  4
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '(())))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  4
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  5
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  6
  ((0 0 0) (0 0 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(id
  0
  5
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '(())))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  5
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  5
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  5
  "\"(list 'eval '(top) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  6
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  6
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '(())))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  6
  "\"(list 'eval '(top) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  6
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  6
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  7
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  7
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  7
  "\"(list 'eval '(top) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (1/50 1/50 0) (0 0 0) (1/50 1/50 0)))
'(id
  0
  7
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  7
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '(())))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  8
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '(())))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  8
  "\"(list 'eval '(top) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  8
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  8
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  8
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  9
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(id
  0
  9
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  9
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '(())))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  9
  "\"(list 'eval '(top) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  9
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  0
  9
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  0
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((1/50 1/50 0) (1/50 1/25 0) (1/25 1/25 0) (1/50 1/50 0) (1/25 1/25 0)))
'(let-num
  0
  0
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  0
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  0
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  0
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  0
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  1
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  7
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(let-num
  0
  1
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  1
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  1
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  1
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  1
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  2
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  2
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  2
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  6
  ((1/50 1/50 0) (1/50 1/50 0) (0 0 0) (0 0 0) (1/50 1/50 0)))
'(let-num
  0
  2
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  2
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  2
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  3
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(let-num
  0
  3
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  3
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  3
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  3
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  3
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  4
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  4
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  7
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(let-num
  0
  4
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  4
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  4
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  4
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  5
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  5
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (1/50 1/50 0) (0 0 0)))
'(let-num
  0
  5
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  5
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  5
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  5
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  6
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  7
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(let-num
  0
  6
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  6
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  6
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  6
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  6
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  7
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  7
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((1/50 1/50 0) (0 0 0) (1/50 1/50 0) (0 1/50 0) (1/50 1/50 0)))
'(let-num
  0
  7
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  7
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  7
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  7
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  8
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  8
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  8
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  8
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  8
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  8
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  9
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  9
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  9
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  7
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(let-num
  0
  9
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  9
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  0
  9
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   0
   "\"(list 'eval '(top) (menv '()))\""
   3
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   0
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
   7
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   0
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   7
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   0
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   7
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   1
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   2
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   1
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
   6
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   1
   "\"(list 'eval '(top) (menv '()))\""
   7
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   1
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   7
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   2
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   2
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   2
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   2
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   2
   "\"(list 'eval '(top) (menv '()))\""
   3
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   2
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
   7
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   3
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
   4
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   3
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   5
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   3
   "\"(list 'eval '(top) (menv '()))\""
   7
   ((0 1/50 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   3
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   7
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   4
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
   4
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   4
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   5
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   4
   "\"(list 'eval '(top) (menv '()))\""
   7
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   4
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   7
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   5
   "\"(list 'eval '(top) (menv '()))\""
   3
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   5
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   3
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   5
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
   7
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   5
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   7
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   6
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   1
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   6
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
   5
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   6
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   6
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   6
   "\"(list 'eval '(top) (menv '()))\""
   7
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   7
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   1
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   7
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
   5
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   7
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   6
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   7
   "\"(list 'eval '(top) (menv '()))\""
   7
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   8
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
   4
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   8
   "\"(list 'eval '(top) (menv '()))\""
   7
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   8
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   7
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   8
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   7
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   9
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\""
   4
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   9
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   5
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   9
   "\"(list 'eval '(top) (menv '()))\""
   7
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 0
   9
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   7
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  0
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '(())))\""
  10
  ((1/25 1/25 0) (1/25 3/50 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(multi-param
  0
  0
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  0
  "\"(list 'eval '(app (-> x <-) y) (menv '(())))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  0
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '(())))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  0
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  0
  "\"(list 'eval '(top) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  0
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  0
  "\"(list 'eval '(app x (-> y <-)) (menv '(())))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  1
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '(())))\""
  10
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(multi-param
  0
  1
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '(())))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  1
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  1
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  1
  "\"(list 'eval '(top) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  1
  "\"(list 'eval '(app (-> x <-) y) (menv '(())))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  1
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  1
  "\"(list 'eval '(app x (-> y <-)) (menv '(())))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  2
  "\"(list 'eval '(top) (menv '()))\""
  11
  ((3/50 3/50 0) (1/25 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(multi-param
  0
  2
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  2
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  2
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  2
  "\"(list 'eval '(app (-> x <-) y) (menv '(())))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  2
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '(())))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  2
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '(())))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  2
  "\"(list 'eval '(app x (-> y <-)) (menv '(())))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  3
  "\"(list 'eval '(app x (-> y <-)) (menv '(())))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  3
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '(())))\""
  7
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  0
  3
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  3
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '(())))\""
  10
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  0
  3
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  3
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  3
  "\"(list 'eval '(top) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  3
  "\"(list 'eval '(app (-> x <-) y) (menv '(())))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  4
  "\"(list 'eval '(app (-> x <-) y) (menv '(())))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  4
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  4
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '(())))\""
  9
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  0
  4
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '(())))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  4
  "\"(list 'eval '(app x (-> y <-)) (menv '(())))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  4
  "\"(list 'eval '(top) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  4
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  4
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  5
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '(())))\""
  10
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(multi-param
  0
  5
  "\"(list 'eval '(app x (-> y <-)) (menv '(())))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  5
  "\"(list 'eval '(app (-> x <-) y) (menv '(())))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  5
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  5
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  5
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '(())))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  5
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  5
  "\"(list 'eval '(top) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  6
  "\"(list 'eval '(top) (menv '()))\""
  11
  ((1/10 4/25 0) (2/25 9/50 0) (2/25 11/25 0) (1/25 3/50 0) (1/25 1/25 0)))
'(multi-param
  0
  6
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 1/50 0) (0 0 0)))
'(multi-param
  0
  6
  "\"(list 'eval '(app x (-> y <-)) (menv '(())))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  6
  "\"(list 'eval '(app (-> x <-) y) (menv '(())))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  6
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  6
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '(())))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  6
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '(())))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  6
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  7
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '(())))\""
  10
  ((2/25 2/25 0) (1/10 1/10 0) (1/10 1/10 0) (3/50 3/50 0) (3/50 3/50 0)))
'(multi-param
  0
  7
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  7
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  7
  "\"(list 'eval '(app x (-> y <-)) (menv '(())))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  7
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  7
  "\"(list 'eval '(app (-> x <-) y) (menv '(())))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  7
  "\"(list 'eval '(top) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  7
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '(())))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  8
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  8
  "\"(list 'eval '(app x (-> y <-)) (menv '(())))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  8
  "\"(list 'eval '(app (-> x <-) y) (menv '(())))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  8
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '(())))\""
  9
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  0
  8
  "\"(list 'eval '(top) (menv '()))\""
  11
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  0
  8
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  8
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '(())))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  8
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  9
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  9
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  9
  "\"(list 'eval '(app x (-> y <-)) (menv '(())))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  9
  "\"(list 'eval '(app (-> x <-) y) (menv '(())))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  9
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '(())))\""
  10
  ((1/50 1/50 0) (1/50 1/50 0) (1/25 1/25 0) (1/25 1/25 0) (1/50 1/50 0)))
'(multi-param
  0
  9
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  9
  "\"(list 'eval '(top) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  0
  9
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '(())))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '(())))\""
  2
  ((0 1/50 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app (-> = <-) m 0) (menv '(())))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '(())))\""
  22
  ((8/25 17/50 0)
   (17/50 19/50 0)
   (8/25 17/50 0)
   (17/50 17/50 0)
   (17/50 17/50 0)))
'(ack
  0
  0
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '(())))\""
  32
  ((11/50 6/25 0)
   (11/50 6/25 0)
   (11/50 11/50 0)
   (13/50 3/10 0)
   (11/50 6/25 0)))
'(ack
  0
  0
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '(())))\""
  32
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  32
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '(())))\""
  36
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(ack
  0
  0
  "\"(list 'eval '(app - (-> m <-) 1) (menv '(())))\""
  36
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '(())))\""
  37
  ((0 0 0) (0 0 0) (1/50 1/50 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '(())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '(())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '(())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  38
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(top) (menv '()))\""
  40
  ((1/50 1/50 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(ack
  0
  0
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '(())))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '(())))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '(())))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '(())))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '(())))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '(())))\""
  43
  ((1/50 1/50 0) (1/50 1/50 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(ack
  0
  0
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '(())))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app = (-> n <-) 0) (menv '(())))\""
  44
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(ack
  0
  0
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app (-> - <-) n 1) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app + (-> n <-) 1) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app (-> + <-) n 1) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app (-> = <-) n 0) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app (-> - <-) m 1) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app - (-> n <-) 1) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app - (-> m <-) 1) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app = (-> m <-) 0) (menv '(())))\""
  45
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(ack
  0
  0
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app (-> - <-) m 1) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  0
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '(())))\""
  21
  ((17/50 9/25 0) (8/25 8/25 0) (9/25 9/25 0) (11/25 11/25 0) (17/50 17/50 0)))
'(ack
  0
  1
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '(())))\""
  26
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(ack
  0
  1
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '(())))\""
  26
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list 'eval '(app = (-> m <-) 0) (menv '(())))\""
  37
  ((13/50 13/50 0) (7/25 7/25 0) (7/25 7/25 0) (13/50 7/25 0) (13/50 13/50 0)))
'(ack
  0
  1
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '(())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list 'eval '(app + (-> n <-) 1) (menv '(())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '(())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list 'eval '(app - (-> m <-) 1) (menv '(())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '(())))\""
  39
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/25 0)))
'(ack
  0
  1
  "\"(list 'eval '(top) (menv '()))\""
  42
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(ack
  0
  1
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '(())))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '(())))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list 'eval '(app - (-> m <-) 1) (menv '(())))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list 'eval '(app (-> + <-) n 1) (menv '(())))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '(())))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '(())))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '(())))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '(())))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '(())))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '(())))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '(())))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list 'eval '(app = (-> n <-) 0) (menv '(())))\""
  45
  ((2/25 2/25 0) (3/50 3/50 0) (2/25 2/25 0) (2/25 2/25 0) (3/50 2/25 0)))
'(ack
  0
  1
  "\"(list 'eval '(app (-> - <-) m 1) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list 'eval '(app (-> = <-) m 0) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list 'eval '(app (-> = <-) n 0) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list 'eval '(app (-> - <-) m 1) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list 'eval '(app (-> - <-) n 1) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list 'eval '(app - (-> n <-) 1) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  1
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list 'eval '(app (-> + <-) n 1) (menv '(())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '(())))\""
  21
  ((11/25 23/50 0) (9/25 9/25 0) (8/25 17/50 0) (9/25 9/25 0) (21/50 11/25 0)))
'(ack
  0
  2
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '(())))\""
  21
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list 'eval '(app (-> - <-) m 1) (menv '(())))\""
  22
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '(())))\""
  24
  ((1/25 1/25 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  0
  2
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '(())))\""
  25
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list 'eval '(top) (menv '()))\""
  28
  ((1/25 1/25 0) (1/25 1/25 0) (3/50 3/50 0) (1/25 1/25 0) (3/50 3/50 0)))
'(ack
  0
  2
  "\"(list 'eval '(app - (-> n <-) 1) (menv '(())))\""
  28
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list 'eval '(app (-> = <-) n 0) (menv '(())))\""
  28
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '(())))\""
  31
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(ack
  0
  2
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '(())))\""
  31
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '(())))\""
  39
  ((6/25 13/50 0) (13/50 7/25 0) (6/25 6/25 0) (11/50 11/50 0) (11/50 6/25 0)))
'(ack
  0
  2
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '(())))\""
  40
  ((1/50 1/50 0) (0 0 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  0
  2
  "\"(list 'eval '(app (-> - <-) m 1) (menv '(())))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list 'eval '(app = (-> n <-) 0) (menv '(())))\""
  41
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (3/50 3/50 0) (1/25 1/25 0)))
'(ack
  0
  2
  "\"(list 'eval '(app (-> = <-) m 0) (menv '(())))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '(())))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '(())))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list 'eval '(app + (-> n <-) 1) (menv '(())))\""
  41
  ((0 0 0) (0 0 0) (0 1/50 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list 'eval '(app (-> - <-) n 1) (menv '(())))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '(())))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '(())))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list 'eval '(app = (-> m <-) 0) (menv '(())))\""
  42
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(ack
  0
  2
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '(())))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '(())))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '(())))\""
  44
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  0
  2
  "\"(list 'eval '(app - (-> m <-) 1) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list 'eval '(app - (-> m <-) 1) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  2
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list 'eval '(top) (menv '()))\""
  24
  ((21/50 11/25 0) (2/5 2/5 0) (9/25 9/25 0) (9/25 9/25 0) (9/25 9/25 0)))
'(ack
  0
  3
  "\"(list 'eval '(app (-> = <-) n 0) (menv '(())))\""
  25
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '(())))\""
  35
  ((7/25 7/25 0) (7/25 7/25 0) (8/25 17/50 0) (21/50 21/50 0) (9/25 9/25 0)))
'(ack
  0
  3
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '(())))\""
  35
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '(())))\""
  39
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(ack
  0
  3
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list 'eval '(app = (-> m <-) 0) (menv '(())))\""
  40
  ((3/50 3/50 0) (3/50 3/50 0) (1/25 3/50 0) (3/50 3/50 0) (1/25 3/50 0)))
'(ack
  0
  3
  "\"(list 'eval '(app (-> - <-) m 1) (menv '(())))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list 'eval '(app - (-> m <-) 1) (menv '(())))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '(())))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '(())))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list 'eval '(app (-> - <-) m 1) (menv '(())))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '(())))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list 'eval '(app = (-> n <-) 0) (menv '(())))\""
  41
  ((1/25 3/50 0) (3/50 3/50 0) (1/25 3/50 0) (1/25 1/25 0) (3/50 3/50 0)))
'(ack
  0
  3
  "\"(list 'eval '(app + (-> n <-) 1) (menv '(())))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '(())))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '(())))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '(())))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '(())))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '(())))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '(())))\""
  44
  ((1/25 1/25 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/25 1/25 0)))
'(ack
  0
  3
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list 'eval '(app - (-> n <-) 1) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list 'eval '(app (-> + <-) n 1) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list 'eval '(app - (-> m <-) 1) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list 'eval '(app (-> - <-) n 1) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list 'eval '(app (-> = <-) m 0) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  3
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list 'eval '(app - (-> n <-) 1) (menv '(())))\""
  21
  ((21/50 11/25 0)
   (2/5 21/50 0)
   (21/50 21/50 0)
   (21/50 11/25 0)
   (2/5 21/50 0)))
'(ack
  0
  4
  "\"(list 'eval '(app + (-> n <-) 1) (menv '(())))\""
  21
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '(())))\""
  22
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '(())))\""
  22
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  24
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(ack
  0
  4
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '(())))\""
  24
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '(())))\""
  25
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  0
  4
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '(())))\""
  25
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list 'eval '(top) (menv '()))\""
  26
  ((0 1/50 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list 'eval '(app (-> = <-) m 0) (menv '(())))\""
  26
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '(())))\""
  26
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '(())))\""
  26
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '(())))\""
  27
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  0
  4
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '(())))\""
  27
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '(())))\""
  37
  ((7/25 7/25 0) (7/25 3/10 0) (3/10 3/10 0) (3/10 3/10 0) (3/10 3/10 0)))
'(ack
  0
  4
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '(())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list 'eval '(app (-> = <-) n 0) (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list 'eval '(app = (-> n <-) 0) (menv '(())))\""
  40
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(ack
  0
  4
  "\"(list 'eval '(app (-> - <-) m 1) (menv '(())))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list 'eval '(app = (-> m <-) 0) (menv '(())))\""
  41
  ((1/25 1/25 0) (1/25 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(ack
  0
  4
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '(())))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '(())))\""
  42
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  0
  4
  "\"(list 'eval '(app (-> - <-) n 1) (menv '(())))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '(())))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list 'eval '(app - (-> m <-) 1) (menv '(())))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list 'eval '(app (-> + <-) n 1) (menv '(())))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '(())))\""
  43
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  0
  4
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '(())))\""
  45
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  0
  4
  "\"(list 'eval '(app (-> - <-) m 1) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list 'eval '(app - (-> m <-) 1) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  4
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '(())))\""
  21
  ((8/25 17/50 0) (17/50 17/50 0) (19/50 2/5 0) (11/25 11/25 0) (2/5 2/5 0)))
'(ack
  0
  5
  "\"(list 'eval '(app + (-> n <-) 1) (menv '(())))\""
  21
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '(())))\""
  21
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '(())))\""
  22
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  0
  5
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '(())))\""
  23
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  0
  5
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '(())))\""
  24
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '(())))\""
  24
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list 'eval '(app - (-> n <-) 1) (menv '(())))\""
  24
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '(())))\""
  24
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list 'eval '(app = (-> m <-) 0) (menv '(())))\""
  34
  ((7/25 7/25 0) (7/25 7/25 0) (8/25 17/50 0) (8/25 17/50 0) (3/10 8/25 0)))
'(ack
  0
  5
  "\"(list 'eval '(app (-> + <-) n 1) (menv '(())))\""
  34
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '(())))\""
  38
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(ack
  0
  5
  "\"(list 'eval '(app (-> = <-) n 0) (menv '(())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list 'eval '(app = (-> n <-) 0) (menv '(())))\""
  40
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(ack
  0
  5
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '(())))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list 'eval '(top) (menv '()))\""
  43
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(ack
  0
  5
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '(())))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '(())))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '(())))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list 'eval '(app (-> - <-) n 1) (menv '(())))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '(())))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '(())))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '(())))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '(())))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '(())))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '(())))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list 'eval '(app (-> - <-) m 1) (menv '(())))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list 'eval '(app - (-> m <-) 1) (menv '(())))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list 'eval '(app (-> - <-) m 1) (menv '(())))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list 'eval '(app - (-> m <-) 1) (menv '(())))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list 'eval '(app (-> = <-) m 0) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  5
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '(())))\""
  45
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  0
  6
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '(())))\""
  2
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  0
  6
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '(())))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list 'eval '(app + (-> n <-) 1) (menv '(())))\""
  23
  ((19/50 2/5 0) (19/50 2/5 0) (2/5 2/5 0) (17/50 9/25 0) (2/5 2/5 0)))
'(ack
  0
  6
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  25
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(ack
  0
  6
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  25
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '(())))\""
  25
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '(())))\""
  25
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '(())))\""
  25
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list 'eval '(app = (-> n <-) 0) (menv '(())))\""
  26
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 3/50 0) (1/25 1/25 0)))
'(ack
  0
  6
  "\"(list 'eval '(app (-> = <-) n 0) (menv '(())))\""
  27
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list 'eval '(app = (-> m <-) 0) (menv '(())))\""
  37
  ((3/10 8/25 0) (3/10 3/10 0) (7/25 7/25 0) (7/25 7/25 0) (3/10 3/10 0)))
'(ack
  0
  6
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '(())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list 'eval '(app (-> + <-) n 1) (menv '(())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '(())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '(())))\""
  39
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  0
  6
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '(())))\""
  41
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/25 0) (1/25 1/25 0) (1/50 1/50 0)))
'(ack
  0
  6
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '(())))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list 'eval '(app - (-> m <-) 1) (menv '(())))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '(())))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '(())))\""
  44
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  0
  6
  "\"(list 'eval '(app - (-> m <-) 1) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list 'eval '(app (-> = <-) m 0) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list 'eval '(app (-> - <-) m 1) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list 'eval '(app (-> - <-) m 1) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list 'eval '(app (-> - <-) n 1) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list 'eval '(app - (-> n <-) 1) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  6
  "\"(list 'eval '(top) (menv '()))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '(())))\""
  23
  ((1/2 1/2 0) (19/50 2/5 0) (12/25 12/25 0) (21/50 21/50 0) (21/50 21/50 0)))
'(ack
  0
  7
  "\"(list 'eval '(app = (-> m <-) 0) (menv '(())))\""
  34
  ((17/50 17/50 0) (13/50 7/25 0) (7/25 3/10 0) (9/25 9/25 0) (9/25 9/25 0)))
'(ack
  0
  7
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  36
  ((1/25 1/25 0) (1/50 1/50 0) (1/50 1/50 0) (1/25 1/25 0) (1/25 1/25 0)))
'(ack
  0
  7
  "\"(list 'eval '(app - (-> m <-) 1) (menv '(())))\""
  36
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '(())))\""
  36
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '(())))\""
  36
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '(())))\""
  38
  ((3/50 3/50 0) (1/25 1/25 0) (1/50 1/25 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  0
  7
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '(())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '(())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list 'eval '(app (-> - <-) m 1) (menv '(())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list 'eval '(app (-> = <-) n 0) (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list 'eval '(app (-> = <-) m 0) (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '(())))\""
  41
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  0
  7
  "\"(list 'eval '(app (-> + <-) n 1) (menv '(())))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '(())))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list 'eval '(app = (-> n <-) 0) (menv '(())))\""
  42
  ((3/50 2/25 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(ack
  0
  7
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '(())))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list 'eval '(app - (-> m <-) 1) (menv '(())))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '(())))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list 'eval '(app - (-> n <-) 1) (menv '(())))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list 'eval '(app + (-> n <-) 1) (menv '(())))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '(())))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list 'eval '(app (-> - <-) m 1) (menv '(())))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list 'eval '(top) (menv '()))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list 'eval '(app (-> - <-) n 1) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  7
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list 'eval '(app - (-> n <-) 1) (menv '(())))\""
  21
  ((17/50 9/25 0)
   (11/25 11/25 0)
   (21/50 11/25 0)
   (17/50 17/50 0)
   (17/50 17/50 0)))
'(ack
  0
  8
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  22
  ((0 0 0) (0 0 0) (0 0 0) (1/50 1/50 0) (0 0 0)))
'(ack
  0
  8
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  23
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list 'eval '(app = (-> m <-) 0) (menv '(())))\""
  33
  ((7/25 7/25 0) (3/10 3/10 0) (8/25 17/50 0) (13/50 7/25 0) (13/50 13/50 0)))
'(ack
  0
  8
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '(())))\""
  33
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list 'eval '(app (-> - <-) m 1) (menv '(())))\""
  33
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list 'eval '(top) (menv '()))\""
  35
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  0
  8
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  35
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list 'eval '(app (-> - <-) m 1) (menv '(())))\""
  35
  ((0 1/50 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '(())))\""
  35
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  35
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '(())))\""
  37
  ((1/25 1/25 0) (1/50 1/25 0) (1/50 1/50 0) (1/50 1/50 0) (1/25 1/25 0)))
'(ack
  0
  8
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '(())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '(())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '(())))\""
  39
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/25 1/25 0) (1/50 1/50 0)))
'(ack
  0
  8
  "\"(list 'eval '(app - (-> m <-) 1) (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list 'eval '(app = (-> n <-) 0) (menv '(())))\""
  40
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(ack
  0
  8
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '(())))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list 'eval '(app + (-> n <-) 1) (menv '(())))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list 'eval '(app (-> + <-) n 1) (menv '(())))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '(())))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '(())))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '(())))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '(())))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '(())))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '(())))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '(())))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '(())))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list 'eval '(app (-> - <-) n 1) (menv '(())))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list 'eval '(app (-> = <-) n 0) (menv '(())))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list 'eval '(app - (-> m <-) 1) (menv '(())))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '(())))\""
  44
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  0
  8
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  8
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (1/50 1/50 0) (0 0 0)))
'(ack
  0
  8
  "\"(list 'eval '(app (-> = <-) m 0) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list 'eval '(app - (-> n <-) 1) (menv '(())))\""
  21
  ((17/50 9/25 0) (21/50 21/50 0) (2/5 21/50 0) (11/25 11/25 0) (2/5 2/5 0)))
'(ack
  0
  9
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  21
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '(())))\""
  23
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  0
  9
  "\"(list 'eval '(app (-> = <-) m 0) (menv '(())))\""
  23
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  23
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '(())))\""
  24
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '(())))\""
  24
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '(())))\""
  24
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  25
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  0
  9
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '(())))\""
  27
  ((1/50 1/50 0) (1/50 1/25 0) (1/50 1/50 0) (1/25 1/25 0) (1/25 1/25 0)))
'(ack
  0
  9
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  28
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  0
  9
  "\"(list 'eval '(app (-> = <-) n 0) (menv '(())))\""
  28
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list 'eval '(app (-> - <-) n 1) (menv '(())))\""
  28
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '(())))\""
  38
  ((6/25 6/25 0) (6/25 13/50 0) (6/25 6/25 0) (13/50 13/50 0) (11/50 6/25 0)))
'(ack
  0
  9
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '(())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list 'eval '(app (-> - <-) m 1) (menv '(())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '(())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list 'eval '(app - (-> m <-) 1) (menv '(())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '(())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '(())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '(())))\""
  41
  ((1/50 1/25 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/25 1/25 0)))
'(ack
  0
  9
  "\"(list 'eval '(app (-> - <-) m 1) (menv '(())))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '(())))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '(())))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list 'eval '(app - (-> m <-) 1) (menv '(())))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '(())))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list 'eval '(app = (-> m <-) 0) (menv '(())))\""
  42
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (3/50 2/25 0) (2/25 2/25 0)))
'(ack
  0
  9
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '(())))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list 'eval '(app = (-> n <-) 0) (menv '(())))\""
  43
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(ack
  0
  9
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '(())))\""
  44
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  0
  9
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '(())))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list 'eval '(top) (menv '()))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list 'eval '(app (-> + <-) n 1) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  0
  9
  "\"(list 'eval '(app + (-> n <-) 1) (menv '(())))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-)) (menv '(())))\""
  28
  ((21/50 21/50 0) (21/50 11/25 0) (2/5 2/5 0) (1/2 1/2 0) (11/25 23/50 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '(() ())))\""
  29
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '(() () ())))\""
  29
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(λ (z) (-> (app z x1 x2) <-)) (menv '(() () ())))\""
  29
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  0
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '(() ())))\""
  29
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '(() ())))\""
  31
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '(())))\""
  31
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '(() ())))\""
  31
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '(() ())))\""
  32
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  0
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '(() ())))\""
  32
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '(())))\""
  32
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '(() () ())))\""
  36
  ((3/25 3/25 0) (3/25 3/25 0) (2/25 2/25 0) (2/25 1/10 0) (2/25 2/25 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '(() ())))\""
  36
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  0
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '(())))\""
  36
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  0
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  36
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '(() ())))\""
  36
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  0
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  36
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '(())))\""
  37
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '(())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '(() () ())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  0
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '(())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '(() () ())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '(())))\""
  38
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/25 0) (1/50 1/50 0) (1/25 1/25 0)))
'(kcfa-2
  0
  0
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '(() ())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(top) (menv '()))\""
  39
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  0
  0
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '(() ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  0
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  1
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  1
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '(() ())))\""
  20
  ((3/10 8/25 0) (13/50 13/50 0) (13/50 7/25 0) (8/25 8/25 0) (19/50 19/50 0)))
'(kcfa-2
  0
  1
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '(() () ())))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  1
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '(() ())))\""
  21
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  0
  1
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  21
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  1
  "\"(list 'eval '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-)) (menv '(())))\""
  28
  ((2/25 2/25 0) (2/25 1/10 0) (2/25 1/10 0) (1/10 1/10 0) (1/10 1/10 0)))
'(kcfa-2
  0
  1
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '(() ())))\""
  30
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  0
  1
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '(())))\""
  32
  ((1/25 1/25 0) (1/25 3/50 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  0
  1
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '(())))\""
  32
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  1
  "\"(list 'eval '(λ (z) (-> (app z x1 x2) <-)) (menv '(() () ())))\""
  32
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  1
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '(())))\""
  32
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  1
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '(() ())))\""
  33
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  1
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '(())))\""
  33
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  1
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '(() ())))\""
  33
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  1
  "\"(list 'eval '(top) (menv '()))\""
  34
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  0
  1
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '(() () ())))\""
  39
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(kcfa-2
  0
  1
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  1
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '(() ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  1
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  1
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '(() () ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  1
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '(() ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  1
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '(() ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  1
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '(() () ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  1
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  1
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '(() ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  1
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  1
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '(() ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  1
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  2
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '(() ())))\""
  3
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  0
  2
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '(() () ())))\""
  14
  ((7/50 4/25 0) (7/50 7/50 0) (3/25 7/50 0) (7/50 7/50 0) (7/50 7/50 0)))
'(kcfa-2
  0
  2
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '(() ())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  2
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  2
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  2
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '(() () ())))\""
  22
  ((2/25 2/25 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0)))
'(kcfa-2
  0
  2
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '(())))\""
  24
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  0
  2
  "\"(list 'eval '(top) (menv '()))\""
  36
  ((3/10 3/10 0) (17/50 17/50 0) (6/25 6/25 0) (6/25 13/50 0) (11/50 6/25 0)))
'(kcfa-2
  0
  2
  "\"(list 'eval '(λ (z) (-> (app z x1 x2) <-)) (menv '(() () ())))\""
  36
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  2
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '(() ())))\""
  36
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  2
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '(() ())))\""
  38
  ((3/50 3/50 0) (2/25 2/25 0) (2/25 2/25 0) (3/50 3/50 0) (2/25 2/25 0)))
'(kcfa-2
  0
  2
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '(() ())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  2
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '(())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  2
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '(() ())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  2
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '(())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  2
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '(())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  2
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  2
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '(() ())))\""
  38
  ((0 0 0) (0 0 0) (0 1/50 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  2
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '(() ())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  2
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '(() ())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  2
  "\"(list 'eval '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-)) (menv '(())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  2
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '(())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  2
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '(() () ())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  2
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '(() ())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (1/50 1/50 0)))
'(kcfa-2
  0
  2
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '(())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  2
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '(())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  2
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '(() () ())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  2
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '(())))\""
  39
  ((1/25 1/25 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  0
  3
  "\"(list 'eval '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-)) (menv '(())))\""
  28
  ((1/2 13/25 0) (11/25 11/25 0) (2/5 2/5 0) (2/5 21/50 0) (11/25 11/25 0)))
'(kcfa-2
  0
  3
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '(() ())))\""
  29
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  0
  3
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '(() ())))\""
  29
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  3
  "\"(list 'eval '(λ (z) (-> (app z x1 x2) <-)) (menv '(() () ())))\""
  29
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  3
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '(() ())))\""
  29
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  3
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '(() ())))\""
  29
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  3
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '(() ())))\""
  29
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  3
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '(() ())))\""
  29
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  3
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '(() ())))\""
  29
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  3
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '(())))\""
  29
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  3
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '(())))\""
  29
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  3
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '(() ())))\""
  30
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  3
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '(())))\""
  30
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  3
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '(())))\""
  30
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  3
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  30
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  3
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '(())))\""
  32
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  0
  3
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '(() () ())))\""
  37
  ((1/10 1/10 0) (2/25 1/10 0) (2/25 1/10 0) (2/25 2/25 0) (2/25 2/25 0)))
'(kcfa-2
  0
  3
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '(() () ())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  3
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '(() () ())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  3
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '(())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  3
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '(())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  3
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '(())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  3
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  3
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '(() ())))\""
  38
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  0
  3
  "\"(list 'eval '(top) (menv '()))\""
  39
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  0
  3
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  3
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '(() ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  3
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '(() () ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  4
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '(() ())))\""
  16
  ((11/50 11/50 0)
   (11/50 11/50 0)
   (6/25 6/25 0)
   (11/50 6/25 0)
   (11/50 11/50 0)))
'(kcfa-2
  0
  4
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '(())))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  4
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '(())))\""
  27
  ((9/50 9/50 0) (11/50 11/50 0) (7/50 7/50 0) (7/50 4/25 0) (4/25 4/25 0)))
'(kcfa-2
  0
  4
  "\"(list 'eval '(top) (menv '()))\""
  31
  ((1/10 1/10 0) (1/10 1/10 0) (2/25 2/25 0) (2/25 2/25 0) (1/10 1/10 0)))
'(kcfa-2
  0
  4
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '(())))\""
  31
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  4
  "\"(list 'eval '(λ (z) (-> (app z x1 x2) <-)) (menv '(() () ())))\""
  31
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  4
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '(())))\""
  31
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  4
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '(() ())))\""
  31
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  4
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '(() () ())))\""
  31
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  4
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  31
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  4
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '(() () ())))\""
  31
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  4
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '(() () ())))\""
  37
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 1/10 0) (2/25 2/25 0)))
'(kcfa-2
  0
  4
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '(())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  4
  "\"(list 'eval '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-)) (menv '(())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  4
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '(() ())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  4
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '(() ())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  4
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '(() ())))\""
  38
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  0
  4
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '(() ())))\""
  39
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/25 0) (1/50 1/50 0)))
'(kcfa-2
  0
  4
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  4
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  4
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '(() ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  4
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '(() ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  4
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  4
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  4
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '(() ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  4
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '(() () ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  4
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  4
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '(() ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 1/50 0) (0 0 0)))
'(kcfa-2
  0
  5
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '(() () ())))\""
  11
  ((3/25 7/50 0) (7/50 7/50 0) (7/50 7/50 0) (3/25 7/50 0) (3/25 3/25 0)))
'(kcfa-2
  0
  5
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '(() ())))\""
  20
  ((3/25 3/25 0) (3/25 3/25 0) (3/25 3/25 0) (3/25 7/50 0) (3/25 7/50 0)))
'(kcfa-2
  0
  5
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '(())))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  5
  "\"(list 'eval '(top) (menv '()))\""
  31
  ((11/50 11/50 0) (6/25 6/25 0) (1/5 1/5 0) (4/25 9/50 0) (9/50 9/50 0)))
'(kcfa-2
  0
  5
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '(())))\""
  31
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  5
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '(() () ())))\""
  31
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  5
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  31
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  5
  "\"(list 'eval '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-)) (menv '(())))\""
  31
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  5
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '(())))\""
  31
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  5
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '(() ())))\""
  31
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  5
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '(() ())))\""
  31
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  5
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '(())))\""
  31
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  5
  "\"(list 'eval '(λ (z) (-> (app z x1 x2) <-)) (menv '(() () ())))\""
  31
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  5
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '(() ())))\""
  31
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  5
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '(() () ())))\""
  37
  ((3/25 3/25 0) (3/25 7/50 0) (1/10 1/10 0) (3/25 3/25 0) (3/25 3/25 0)))
'(kcfa-2
  0
  5
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '(() ())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  5
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '(())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  5
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '(() ())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  5
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '(() ())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  5
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '(())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  5
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '(())))\""
  38
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  0
  5
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '(())))\""
  39
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  0
  5
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '(() ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  5
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '(() ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  5
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '(() ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  5
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '(() () ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  5
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  5
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  6
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '(() ())))\""
  21
  ((7/25 7/25 0) (13/50 7/25 0) (13/50 7/25 0) (7/25 3/10 0) (3/10 3/10 0)))
'(kcfa-2
  0
  6
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '(() () ())))\""
  28
  ((3/25 3/25 0) (3/25 7/50 0) (4/25 4/25 0) (3/25 3/25 0) (1/10 1/10 0)))
'(kcfa-2
  0
  6
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '(() ())))\""
  28
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  6
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '(())))\""
  28
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  6
  "\"(list 'eval '(top) (menv '()))\""
  35
  ((3/25 3/25 0) (1/10 3/25 0) (3/25 3/25 0) (7/50 7/50 0) (7/50 7/50 0)))
'(kcfa-2
  0
  6
  "\"(list 'eval '(λ (z) (-> (app z x1 x2) <-)) (menv '(() () ())))\""
  35
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  6
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  35
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  6
  "\"(list 'eval '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-)) (menv '(())))\""
  35
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  6
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '(() () ())))\""
  35
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  6
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  35
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  6
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '(())))\""
  35
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  6
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '(())))\""
  35
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  6
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '(())))\""
  35
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  6
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '(() ())))\""
  35
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  6
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '(())))\""
  35
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  6
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '(() ())))\""
  35
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  6
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '(() ())))\""
  35
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  6
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '(() () ())))\""
  35
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  6
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '(() ())))\""
  36
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  0
  6
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '(() ())))\""
  37
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  0
  6
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '(() () ())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  6
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '(() ())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  6
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '(())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  6
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '(() ())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  6
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '(())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  6
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '(() ())))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  6
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '(())))\""
  39
  ((3/50 2/25 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(kcfa-2
  0
  6
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  7
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '(())))\""
  3
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  0
  7
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '(() ())))\""
  19
  ((11/50 6/25 0) (13/50 13/50 0) (9/25 9/25 0) (1/5 11/50 0) (11/50 11/50 0)))
'(kcfa-2
  0
  7
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '(())))\""
  28
  ((7/50 7/50 0) (7/50 7/50 0) (7/50 7/50 0) (4/25 4/25 0) (9/50 1/5 0)))
'(kcfa-2
  0
  7
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '(() ())))\""
  30
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  0
  7
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '(() ())))\""
  30
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  7
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  30
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  7
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '(())))\""
  30
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  7
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '(())))\""
  30
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  7
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  30
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  7
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '(() ())))\""
  31
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  7
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '(())))\""
  31
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  7
  "\"(list 'eval '(top) (menv '()))\""
  33
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  0
  7
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '(() () ())))\""
  33
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  7
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '(() () ())))\""
  33
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  7
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '(() ())))\""
  33
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  7
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '(())))\""
  34
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  0
  7
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '(() () ())))\""
  34
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  7
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '(() ())))\""
  34
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  7
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '(() ())))\""
  35
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  7
  "\"(list 'eval '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-)) (menv '(())))\""
  35
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  7
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '(())))\""
  35
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  7
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '(() () ())))\""
  39
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(kcfa-2
  0
  7
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  7
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  7
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '(() ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  7
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '(() ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  7
  "\"(list 'eval '(λ (z) (-> (app z x1 x2) <-)) (menv '(() () ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  7
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '(() ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  8
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '(() ())))\""
  3
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  0
  8
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '(() ())))\""
  4
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  0
  8
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '(())))\""
  24
  ((9/25 19/50 0) (3/10 8/25 0) (7/25 3/10 0) (7/25 3/10 0) (7/25 3/10 0)))
'(kcfa-2
  0
  8
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '(() () ())))\""
  24
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  8
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  24
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  8
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  25
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  8
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '(() ())))\""
  25
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  8
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '(() () ())))\""
  31
  ((2/25 2/25 0) (1/10 1/10 0) (2/25 1/10 0) (2/25 2/25 0) (2/25 2/25 0)))
'(kcfa-2
  0
  8
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '(())))\""
  34
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  0
  8
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '(())))\""
  34
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  8
  "\"(list 'eval '(top) (menv '()))\""
  38
  ((3/25 7/50 0) (7/50 7/50 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(kcfa-2
  0
  8
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '(())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  8
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '(() ())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  8
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '(() ())))\""
  39
  ((1/25 1/25 0) (1/25 1/25 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  0
  8
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '(() ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  8
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  8
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  8
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  8
  "\"(list 'eval '(λ (z) (-> (app z x1 x2) <-)) (menv '(() () ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  8
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '(() ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  8
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '(() () ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  8
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '(() ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  8
  "\"(list 'eval '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-)) (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  8
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '(() ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  8
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '(() ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  8
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  8
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '(() () ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  8
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  9
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  9
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '(() () ())))\""
  4
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/50 1/50 0)))
'(kcfa-2
  0
  9
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '(())))\""
  5
  ((0 0 0) (1/50 1/50 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  9
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  9
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '(() ())))\""
  21
  ((6/25 6/25 0) (8/25 17/50 0) (8/25 8/25 0) (3/10 3/10 0) (17/50 9/25 0)))
'(kcfa-2
  0
  9
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '(() () ())))\""
  21
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  9
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '(())))\""
  23
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  0
  9
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '(())))\""
  29
  ((3/25 3/25 0) (1/10 3/25 0) (3/25 3/25 0) (3/25 3/25 0) (1/10 1/10 0)))
'(kcfa-2
  0
  9
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '(() () ())))\""
  35
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(kcfa-2
  0
  9
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '(() ())))\""
  35
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  9
  "\"(list 'eval '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-)) (menv '(())))\""
  38
  ((2/25 2/25 0) (1/10 1/10 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(kcfa-2
  0
  9
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '(() ())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  9
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '(() ())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  9
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '(() ())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  9
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '(() ())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  9
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '(() ())))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  9
  "\"(list 'eval '(top) (menv '()))\""
  39
  ((1/50 1/25 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  0
  9
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  9
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  9
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '(() () ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  9
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '(() ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  9
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  9
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '(() ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  9
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '(() ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  9
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  9
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  9
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '(())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  0
  9
  "\"(list 'eval '(λ (z) (-> (app z x1 x2) <-)) (menv '(() () ())))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  0
  "\"(list 'eval '(app x (-> x <-)) (menv '(())))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  0
  "\"(list 'eval '(app (-> y <-) y) (menv '(())))\""
  12
  ((1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 3/25 0)))
'(structural-rec
  0
  0
  "\"(list 'eval '(app y (-> y <-)) (menv '(())))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  0
  "\"(list 'eval '(app (-> x <-) x) (menv '(())))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  0
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  0
  "\"(list 'eval '(top) (menv '()))\""
  15
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  0
  0
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  0
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  0
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  1
  "\"(list 'eval '(app y (-> y <-)) (menv '(())))\""
  12
  ((1/10 1/10 0) (1/10 3/25 0) (3/25 3/25 0) (3/25 3/25 0) (3/25 3/25 0)))
'(structural-rec
  0
  1
  "\"(list 'eval '(app (-> x <-) x) (menv '(())))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  1
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '(())))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  1
  "\"(list 'eval '(app x (-> x <-)) (menv '(())))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  1
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '(())))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  1
  "\"(list 'eval '(top) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  1
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  1
  "\"(list 'eval '(app (-> y <-) y) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  1
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  2
  "\"(list 'eval '(app (-> x <-) x) (menv '(())))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  2
  "\"(list 'eval '(top) (menv '()))\""
  15
  ((7/50 4/25 0) (7/50 7/50 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0)))
'(structural-rec
  0
  2
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  2
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  2
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  2
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  2
  "\"(list 'eval '(app x (-> x <-)) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  2
  "\"(list 'eval '(app y (-> y <-)) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  2
  "\"(list 'eval '(app (-> y <-) y) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  3
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  3
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  3
  "\"(list 'eval '(app x (-> x <-)) (menv '(())))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  3
  "\"(list 'eval '(app (-> y <-) y) (menv '(())))\""
  12
  ((2/25 2/25 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0)))
'(structural-rec
  0
  3
  "\"(list 'eval '(app (-> x <-) x) (menv '(())))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  3
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '(())))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  3
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '(())))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  3
  "\"(list 'eval '(top) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  3
  "\"(list 'eval '(app y (-> y <-)) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  4
  "\"(list 'eval '(app (-> x <-) x) (menv '(())))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  4
  "\"(list 'eval '(app (-> y <-) y) (menv '(())))\""
  12
  ((1/10 1/10 0) (7/50 7/50 0) (1/10 1/10 0) (2/25 1/10 0) (2/25 2/25 0)))
'(structural-rec
  0
  4
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  4
  "\"(list 'eval '(app y (-> y <-)) (menv '(())))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  4
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  4
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '(())))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  4
  "\"(list 'eval '(top) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  4
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  4
  "\"(list 'eval '(app x (-> x <-)) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  5
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '(())))\""
  13
  ((3/25 3/25 0) (3/25 3/25 0) (4/25 4/25 0) (3/25 3/25 0) (1/10 1/10 0)))
'(structural-rec
  0
  5
  "\"(list 'eval '(app y (-> y <-)) (menv '(())))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  5
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '(())))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  5
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  5
  "\"(list 'eval '(top) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  5
  "\"(list 'eval '(app (-> x <-) x) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  5
  "\"(list 'eval '(app (-> y <-) y) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  5
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  5
  "\"(list 'eval '(app x (-> x <-)) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  6
  "\"(list 'eval '(app (-> y <-) y) (menv '(())))\""
  12
  ((1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 3/25 0) (3/25 3/25 0)))
'(structural-rec
  0
  6
  "\"(list 'eval '(top) (menv '()))\""
  15
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  0
  6
  "\"(list 'eval '(app x (-> x <-)) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  6
  "\"(list 'eval '(app (-> x <-) x) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  6
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  6
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  6
  "\"(list 'eval '(app y (-> y <-)) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  6
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  6
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  7
  "\"(list 'eval '(app (-> x <-) x) (menv '(())))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  7
  "\"(list 'eval '(top) (menv '()))\""
  15
  ((3/25 3/25 0) (3/25 3/25 0) (3/25 3/25 0) (3/25 3/25 0) (3/25 3/25 0)))
'(structural-rec
  0
  7
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  7
  "\"(list 'eval '(app y (-> y <-)) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  7
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  7
  "\"(list 'eval '(app x (-> x <-)) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  7
  "\"(list 'eval '(app (-> y <-) y) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  7
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  7
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  8
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  8
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '(())))\""
  14
  ((3/25 3/25 0) (3/25 3/25 0) (1/10 3/25 0) (3/25 3/25 0) (7/50 7/50 0)))
'(structural-rec
  0
  8
  "\"(list 'eval '(top) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  8
  "\"(list 'eval '(app (-> x <-) x) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  8
  "\"(list 'eval '(app x (-> x <-)) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  8
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  8
  "\"(list 'eval '(app (-> y <-) y) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  8
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  8
  "\"(list 'eval '(app y (-> y <-)) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  9
  "\"(list 'eval '(top) (menv '()))\""
  15
  ((3/25 3/25 0) (3/25 3/25 0) (7/50 7/50 0) (9/50 9/50 0) (4/25 4/25 0)))
'(structural-rec
  0
  9
  "\"(list 'eval '(app x (-> x <-)) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  9
  "\"(list 'eval '(app (-> y <-) y) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  9
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  9
  "\"(list 'eval '(app y (-> y <-)) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  9
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  9
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  9
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  0
  9
  "\"(list 'eval '(app (-> x <-) x) (menv '(())))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  0
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  0
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  0
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  0
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  0
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  12
  ((2/25 1/10 0) (3/50 3/50 0) (3/50 3/50 0) (2/25 2/25 0) (2/25 2/25 0)))
'(app-num
  1
  0
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  0
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  0
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  0
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  0
  "\"(list 'eval '(top) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  1
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  1
  "\"(list 'eval '(top) (menv '()))\""
  11
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (3/50 3/50 0)))
'(app-num
  1
  1
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  1
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  1
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  1
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  1
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  1
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  1
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  15
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (3/50 3/50 0)))
'(app-num
  1
  1
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  2
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  2
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  8
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(app-num
  1
  2
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  12
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(app-num
  1
  2
  "\"(list 'eval '(top) (menv '()))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  2
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  16
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(app-num
  1
  2
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  2
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  2
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  2
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  2
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  3
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  3
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  8
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(app-num
  1
  3
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  3
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  13
  ((1/25 1/25 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(app-num
  1
  3
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  15
  ((1/25 1/25 0) (3/50 3/50 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(app-num
  1
  3
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  3
  "\"(list 'eval '(top) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  3
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  3
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  3
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  4
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  4
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  9
  ((3/50 3/50 0) (3/50 2/25 0) (1/25 3/50 0) (1/25 1/25 0) (3/50 3/50 0)))
'(app-num
  1
  4
  "\"(list 'eval '(top) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  4
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  4
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  4
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  4
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  14
  ((1/25 1/25 0) (1/25 1/25 0) (3/50 3/50 0) (1/25 1/25 0) (1/25 1/25 0)))
'(app-num
  1
  4
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  4
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  16
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(app-num
  1
  4
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  5
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  5
  "\"(list 'eval '(top) (menv '()))\""
  11
  ((1/25 1/25 0) (1/25 1/25 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(app-num
  1
  5
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  5
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  5
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  5
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  5
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  5
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  14
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(app-num
  1
  5
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  16
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(app-num
  1
  5
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  6
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  6
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  9
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(app-num
  1
  6
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  6
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  12
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(app-num
  1
  6
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  6
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  6
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  14
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(app-num
  1
  6
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  6
  "\"(list 'eval '(top) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (1/50 1/50 0) (0 0 0) (0 0 0)))
'(app-num
  1
  6
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  7
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  7
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  7
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  10
  ((2/25 2/25 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(app-num
  1
  7
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  13
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(app-num
  1
  7
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  7
  "\"(list 'eval '(top) (menv '()))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  7
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  7
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  7
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  7
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  16
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/25 0) (1/50 1/50 0) (1/50 1/50 0)))
'(app-num
  1
  8
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  8
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(app-num
  1
  8
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  8
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  12
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(app-num
  1
  8
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  8
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  8
  "\"(list 'eval '(top) (menv '()))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  8
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  16
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(app-num
  1
  8
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  8
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  8
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  9
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  9
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(app-num
  1
  9
  "\"(list 'eval '(top) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  9
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  9
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  9
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  14
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(app-num
  1
  9
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  16
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(app-num
  1
  9
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  9
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  9
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  1
  9
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  0
  "\"(list 'eval '(top) (menv '()))\""
  7
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(basic-letrec
  1
  0
  "\"(list 'eval '(app - (-> y <-) 1) (menv '((□? (y)))))\""
  26
  ((19/50 19/50 0) (8/25 8/25 0) (17/50 17/50 0) (3/10 8/25 0) (8/25 8/25 0)))
'(basic-letrec
  1
  0
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '((□? (y)))))\""
  30
  ((3/50 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(basic-letrec
  1
  0
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '((□? (y)))))\""
  30
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  0
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '((□? (y)))))\""
  33
  ((3/50 3/50 0) (3/50 3/50 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(basic-letrec
  1
  0
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  33
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  0
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '((□? (y)))))\""
  36
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (1/10 3/25 0)))
'(basic-letrec
  1
  0
  "\"(list 'eval '(app (-> - <-) y 1) (menv '((□? (y)))))\""
  36
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  0
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  36
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  0
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '((□? (y)))))\""
  39
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  1
  0
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '((□? (y)))))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  0
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '((□? (y)))))\""
  42
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(basic-letrec
  1
  0
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '((□? (y)))))\""
  44
  ((1/25 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (1/25 1/25 0) (1/25 1/25 0)))
'(basic-letrec
  1
  0
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '((□? (y)))))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  0
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  0
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '((□? (y)))))\""
  47
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(basic-letrec
  1
  0
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  47
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  1
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '((□? (y)))))\""
  4
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  1
  1
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  1
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '((□? (y)))))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  1
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '((□? (y)))))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  1
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  1
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '((□? (y)))))\""
  36
  ((14/25 29/50 0)
   (29/50 3/5 0)
   (31/50 16/25 0)
   (7/10 18/25 0)
   (27/50 14/25 0)))
'(basic-letrec
  1
  1
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '((□? (y)))))\""
  36
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  1
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  36
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  1
  "\"(list 'eval '(app (-> - <-) y 1) (menv '((□? (y)))))\""
  36
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  1
  "\"(list 'eval '(top) (menv '()))\""
  38
  ((1/50 1/50 0) (1/50 1/50 0) (1/25 1/25 0) (1/25 1/25 0) (1/50 1/50 0)))
'(basic-letrec
  1
  1
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '((□? (y)))))\""
  41
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 2/25 0) (2/25 2/25 0)))
'(basic-letrec
  1
  1
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '((□? (y)))))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  1
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '((□? (y)))))\""
  44
  ((1/10 1/10 0) (1/10 1/10 0) (3/25 3/25 0) (1/10 1/10 0) (2/25 2/25 0)))
'(basic-letrec
  1
  1
  "\"(list 'eval '(app - (-> y <-) 1) (menv '((□? (y)))))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  1
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '((□? (y)))))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  1
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  1
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '((□? (y)))))\""
  47
  ((7/50 7/50 0) (3/25 3/25 0) (2/25 2/25 0) (2/25 2/25 0) (1/10 1/10 0)))
'(basic-letrec
  1
  2
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '((□? (y)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  2
  "\"(list 'eval '(top) (menv '()))\""
  10
  ((3/50 3/50 0) (1/25 3/50 0) (1/25 1/25 0) (1/25 1/25 0) (3/50 3/50 0)))
'(basic-letrec
  1
  2
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '((□? (y)))))\""
  33
  ((14/25 29/50 0)
   (23/50 23/50 0)
   (14/25 29/50 0)
   (13/25 27/50 0)
   (27/50 27/50 0)))
'(basic-letrec
  1
  2
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '((□? (y)))))\""
  36
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (1/10 1/10 0)))
'(basic-letrec
  1
  2
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '((□? (y)))))\""
  39
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(basic-letrec
  1
  2
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '((□? (y)))))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  2
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '((□? (y)))))\""
  43
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(basic-letrec
  1
  2
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '((□? (y)))))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  2
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '((□? (y)))))\""
  46
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  1
  2
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  46
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  2
  "\"(list 'eval '(app - (-> y <-) 1) (menv '((□? (y)))))\""
  46
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  2
  "\"(list 'eval '(app (-> - <-) y 1) (menv '((□? (y)))))\""
  46
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  2
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '((□? (y)))))\""
  46
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  2
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  46
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  2
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  46
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  2
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '((□? (y)))))\""
  47
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(basic-letrec
  1
  2
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  47
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  3
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '((□? (y)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  3
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  3
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '((□? (y)))))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  3
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '((□? (y)))))\""
  24
  ((11/25 23/50 0) (2/5 2/5 0) (19/50 19/50 0) (8/25 8/25 0) (9/25 9/25 0)))
'(basic-letrec
  1
  3
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '((□? (y)))))\""
  27
  ((1/25 1/25 0) (1/25 1/25 0) (3/50 3/50 0) (1/25 1/25 0) (3/50 3/50 0)))
'(basic-letrec
  1
  3
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '((□? (y)))))\""
  33
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 1/10 0) (2/25 2/25 0) (2/25 2/25 0)))
'(basic-letrec
  1
  3
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  33
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  3
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  33
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  3
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '((□? (y)))))\""
  36
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (1/10 1/10 0) (2/25 2/25 0)))
'(basic-letrec
  1
  3
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '((□? (y)))))\""
  40
  ((1/10 1/10 0) (1/10 1/10 0) (3/25 3/25 0) (1/10 1/10 0) (1/10 1/10 0)))
'(basic-letrec
  1
  3
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '((□? (y)))))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  3
  "\"(list 'eval '(top) (menv '()))\""
  43
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(basic-letrec
  1
  3
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  3
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '((□? (y)))))\""
  44
  ((2/25 2/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(basic-letrec
  1
  3
  "\"(list 'eval '(app (-> - <-) y 1) (menv '((□? (y)))))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  3
  "\"(list 'eval '(app - (-> y <-) 1) (menv '((□? (y)))))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  3
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '((□? (y)))))\""
  47
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 1/10 0) (1/10 1/10 0)))
'(basic-letrec
  1
  4
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  6
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(basic-letrec
  1
  4
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '((□? (y)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  4
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '((□? (y)))))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  4
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  4
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '((□? (y)))))\""
  27
  ((9/25 9/25 0)
   (9/25 19/50 0)
   (17/50 17/50 0)
   (17/50 17/50 0)
   (17/50 17/50 0)))
'(basic-letrec
  1
  4
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '((□? (y)))))\""
  35
  ((7/50 7/50 0) (7/50 4/25 0) (7/50 7/50 0) (7/50 4/25 0) (7/50 7/50 0)))
'(basic-letrec
  1
  4
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '((□? (y)))))\""
  37
  ((1/10 1/10 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(basic-letrec
  1
  4
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '((□? (y)))))\""
  40
  ((1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0)))
'(basic-letrec
  1
  4
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  4
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '((□? (y)))))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  4
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  4
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '((□? (y)))))\""
  43
  ((1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (3/25 3/25 0) (1/10 1/10 0)))
'(basic-letrec
  1
  4
  "\"(list 'eval '(app - (-> y <-) 1) (menv '((□? (y)))))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  4
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '((□? (y)))))\""
  43
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  4
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '((□? (y)))))\""
  46
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  1
  4
  "\"(list 'eval '(app (-> - <-) y 1) (menv '((□? (y)))))\""
  46
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  4
  "\"(list 'eval '(top) (menv '()))\""
  47
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  5
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '((□? (y)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  5
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  5
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '((□? (y)))))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  5
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  10
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(basic-letrec
  1
  5
  "\"(list 'eval '(app (-> - <-) y 1) (menv '((□? (y)))))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  5
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '((□? (y)))))\""
  31
  ((1/2 13/25 0) (13/25 27/50 0) (1/2 13/25 0) (1/2 13/25 0) (13/25 27/50 0)))
'(basic-letrec
  1
  5
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '((□? (y)))))\""
  37
  ((4/25 4/25 0) (4/25 4/25 0) (4/25 4/25 0) (4/25 4/25 0) (4/25 4/25 0)))
'(basic-letrec
  1
  5
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  5
  "\"(list 'eval '(app - (-> y <-) 1) (menv '((□? (y)))))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  5
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '((□? (y)))))\""
  40
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(basic-letrec
  1
  5
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  5
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '((□? (y)))))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  5
  "\"(list 'eval '(top) (menv '()))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  5
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '((□? (y)))))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  5
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '((□? (y)))))\""
  44
  ((1/10 1/10 0) (2/25 2/25 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0)))
'(basic-letrec
  1
  5
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '((□? (y)))))\""
  47
  ((1/10 1/10 0) (3/25 3/25 0) (1/10 1/10 0) (1/10 1/10 0) (2/25 1/10 0)))
'(basic-letrec
  1
  5
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '((□? (y)))))\""
  47
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  6
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  6
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  6
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '((□? (y)))))\""
  9
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(basic-letrec
  1
  6
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '((□? (y)))))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  6
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '((□? (y)))))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  6
  "\"(list 'eval '(app (-> - <-) y 1) (menv '((□? (y)))))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  6
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '((□? (y)))))\""
  33
  ((1/2 13/25 0)
   (13/25 27/50 0)
   (13/25 27/50 0)
   (27/50 27/50 0)
   (27/50 14/25 0)))
'(basic-letrec
  1
  6
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '((□? (y)))))\""
  39
  ((9/50 9/50 0) (4/25 4/25 0) (4/25 9/50 0) (4/25 4/25 0) (4/25 4/25 0)))
'(basic-letrec
  1
  6
  "\"(list 'eval '(top) (menv '()))\""
  41
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  1
  6
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '((□? (y)))))\""
  44
  ((1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 3/25 0)))
'(basic-letrec
  1
  6
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  6
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  6
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '((□? (y)))))\""
  47
  ((2/25 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (2/25 1/10 0) (1/10 1/10 0)))
'(basic-letrec
  1
  6
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '((□? (y)))))\""
  47
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  6
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '((□? (y)))))\""
  47
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  6
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '((□? (y)))))\""
  47
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  6
  "\"(list 'eval '(app - (-> y <-) 1) (menv '((□? (y)))))\""
  47
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  7
  "\"(list 'eval '(top) (menv '()))\""
  7
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(basic-letrec
  1
  7
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '((□? (y)))))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  7
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '((□? (y)))))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  7
  "\"(list 'eval '(app - (-> y <-) 1) (menv '((□? (y)))))\""
  32
  ((11/25 23/50 0)
   (11/25 23/50 0)
   (23/50 23/50 0)
   (11/25 23/50 0)
   (23/50 12/25 0)))
'(basic-letrec
  1
  7
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '((□? (y)))))\""
  32
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  7
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '((□? (y)))))\""
  38
  ((7/50 4/25 0) (4/25 4/25 0) (7/50 4/25 0) (7/50 7/50 0) (7/50 7/50 0)))
'(basic-letrec
  1
  7
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  7
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '((□? (y)))))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  7
  "\"(list 'eval '(app (-> - <-) y 1) (menv '((□? (y)))))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  7
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  7
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '((□? (y)))))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  7
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '((□? (y)))))\""
  41
  ((1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0)))
'(basic-letrec
  1
  7
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '((□? (y)))))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  7
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '((□? (y)))))\""
  44
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (1/10 1/10 0) (2/25 2/25 0)))
'(basic-letrec
  1
  7
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  7
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  7
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '((□? (y)))))\""
  47
  ((2/25 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0)))
'(basic-letrec
  1
  8
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  6
  ((1/25 1/25 0) (1/25 1/25 0) (3/50 3/50 0) (1/25 1/25 0) (3/50 3/50 0)))
'(basic-letrec
  1
  8
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  8
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '((□? (y)))))\""
  25
  ((2/5 21/50 0)
   (17/50 17/50 0)
   (17/50 17/50 0)
   (19/50 19/50 0)
   (19/50 19/50 0)))
'(basic-letrec
  1
  8
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '((□? (y)))))\""
  28
  ((1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0)))
'(basic-letrec
  1
  8
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '((□? (y)))))\""
  31
  ((1/25 1/25 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(basic-letrec
  1
  8
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '((□? (y)))))\""
  34
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  1
  8
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '((□? (y)))))\""
  34
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  8
  "\"(list 'eval '(app (-> - <-) y 1) (menv '((□? (y)))))\""
  34
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  8
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '((□? (y)))))\""
  36
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/25 0) (1/50 1/25 0) (1/25 1/25 0)))
'(basic-letrec
  1
  8
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '((□? (y)))))\""
  40
  ((3/25 3/25 0) (3/25 3/25 0) (3/25 3/25 0) (1/10 1/10 0) (1/10 1/10 0)))
'(basic-letrec
  1
  8
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  8
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '((□? (y)))))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  8
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '((□? (y)))))\""
  43
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(basic-letrec
  1
  8
  "\"(list 'eval '(top) (menv '()))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  8
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  8
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '((□? (y)))))\""
  47
  ((1/10 1/10 0) (2/25 2/25 0) (2/25 1/10 0) (2/25 2/25 0) (3/50 3/50 0)))
'(basic-letrec
  1
  8
  "\"(list 'eval '(app - (-> y <-) 1) (menv '((□? (y)))))\""
  47
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  9
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  9
  "\"(list 'eval '(app (-> - <-) y 1) (menv '((□? (y)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  9
  "\"(list 'eval '(top) (menv '()))\""
  10
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (2/25 2/25 0)))
'(basic-letrec
  1
  9
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '((□? (y)))))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  9
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '((□? (y)))))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  9
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '((□? (y)))))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  9
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  9
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '((□? (y)))))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  9
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '((□? (y)))))\""
  18
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(basic-letrec
  1
  9
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '((□? (y)))))\""
  40
  ((31/50 16/25 0)
   (16/25 17/25 0)
   (16/25 33/50 0)
   (31/50 16/25 0)
   (29/50 29/50 0)))
'(basic-letrec
  1
  9
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  9
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '((□? (y)))))\""
  41
  ((1/10 6/25 0) (3/25 6/25 0) (1/10 3/25 0) (2/25 19/50 0) (3/50 7/25 0)))
'(basic-letrec
  1
  9
  "\"(list 'eval '(app - (-> y <-) 1) (menv '((□? (y)))))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  9
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '((□? (y)))))\""
  44
  ((4/25 4/25 0) (3/25 3/25 0) (3/25 7/50 0) (3/25 3/25 0) (4/25 7/25 0)))
'(basic-letrec
  1
  9
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  44
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  1
  9
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '((□? (y)))))\""
  47
  ((1/10 1/10 0) (1/10 1/10 0) (1/10 3/25 0) (3/25 3/25 0) (3/25 3/25 0)))
'(basic-letrec
  1
  9
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '((□? (y)))))\""
  47
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  0
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  0
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  0
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  0
  "\"(list 'eval '(top) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  1
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  1
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  1
  "\"(list 'eval '(top) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  1
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  2
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  2
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  2
  "\"(list 'eval '(top) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  2
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  3
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  3
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  3
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  3
  "\"(list 'eval '(top) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  4
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  4
  "\"(list 'eval '(top) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  4
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  4
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  5
  "\"(list 'eval '(top) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  5
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  5
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  5
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  6
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  6
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  6
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  6
  "\"(list 'eval '(top) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  7
  "\"(list 'eval '(top) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  7
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  7
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  7
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  8
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  8
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  8
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  8
  "\"(list 'eval '(top) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  9
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  9
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  9
  "\"(list 'eval '(top) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  1
  9
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  0
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  0
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  7
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(constr
  1
  0
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  0
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  0
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  0
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  0
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  0
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  0
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  1
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(constr
  1
  1
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  1
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  1
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  1
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  1
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  7
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(constr
  1
  1
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  1
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  1
  "\"(list 'eval '(top) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  2
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(constr
  1
  2
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  7
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(constr
  1
  2
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  2
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  2
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  2
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  2
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  2
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  2
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  3
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  3
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  3
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(constr
  1
  3
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  3
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(constr
  1
  3
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  3
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  3
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  3
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  4
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((2/25 2/25 0) (2/25 2/25 0) (3/50 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(constr
  1
  4
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  4
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  4
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  4
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  4
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  4
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  4
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  4
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  5
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  5
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  6
  ((1/50 1/50 0) (1/25 1/25 0) (1/50 1/50 0) (1/50 1/50 0) (1/25 1/25 0)))
'(constr
  1
  5
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  5
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  5
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  5
  "\"(list 'eval '(top) (menv '()))\""
  9
  ((1/50 1/50 0) (1/25 1/25 0) (1/25 1/25 0) (1/50 1/50 0) (1/50 1/50 0)))
'(constr
  1
  5
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  5
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  5
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  6
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  6
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  4
  ((1/50 1/50 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  6
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  6
  "\"(list 'eval '(top) (menv '()))\""
  9
  ((1/25 1/25 0) (1/25 3/50 0) (1/25 1/25 0) (3/50 3/50 0) (1/25 1/25 0)))
'(constr
  1
  6
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  6
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  6
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  6
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  6
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  7
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  3
  ((1/50 1/50 0) (1/50 1/50 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  7
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  7
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  7
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  6
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(constr
  1
  7
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  7
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(constr
  1
  7
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  7
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  7
  "\"(list 'eval '(top) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  7
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  8
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  8
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (1/50 1/50 0) (1/50 1/50 0)))
'(constr
  1
  8
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  8
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 1/50 0) (1/50 1/50 0) (0 0 0)))
'(constr
  1
  8
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(constr
  1
  8
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  8
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  8
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  8
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  9
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  9
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  9
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  9
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  9
  "\"(list 'eval '(top) (menv '()))\""
  9
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(constr
  1
  9
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  9
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  9
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  1
  9
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  0
  "\"(list 'eval '(top) (menv '()))\""
  6
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  1
  0
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  8
  ((0 0 0) (1/50 1/50 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  0
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  0
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  0
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  11
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  1
  0
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  1
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  7
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  1
  1
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  1
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  1
  "\"(list 'eval '(top) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  1
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  11
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  1
  1
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  2
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  1
  2
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  2
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  2
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  2
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  11
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  1
  2
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  3
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  3
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  3
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  8
  ((1/25 1/25 0) (1/50 1/25 0) (1/50 1/25 0) (1/25 1/25 0) (1/50 1/50 0)))
'(err
  1
  3
  "\"(list 'eval '(top) (menv '()))\""
  9
  ((1/50 1/50 0) (0 0 0) (0 0 0) (0 1/50 0) (0 0 0)))
'(err
  1
  3
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  11
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/25 1/25 0)))
'(err
  1
  3
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  4
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  4
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  1
  4
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  7
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  1
  4
  "\"(list 'eval '(top) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  4
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  11
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (0 0 0)))
'(err
  1
  4
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  5
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  1
  5
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  9
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  1
  5
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  5
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  5
  "\"(list 'eval '(top) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  5
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  6
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  6
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  8
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/25 1/25 0) (1/25 1/25 0)))
'(err
  1
  6
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  6
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  6
  "\"(list 'eval '(top) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  6
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  11
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  1
  7
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  7
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  8
  ((1/50 1/25 0) (1/25 1/25 0) (1/50 1/50 0) (1/50 1/25 0) (1/50 1/25 0)))
'(err
  1
  7
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  10
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  1
  7
  "\"(list 'eval '(top) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  7
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  7
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  8
  "\"(list 'eval '(top) (menv '()))\""
  6
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  1
  8
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  8
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  9
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  1
  8
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  8
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  8
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  11
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  1
  9
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  1
  9
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  7
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  1
  9
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  9
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  9
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  1
  9
  "\"(list 'eval '(top) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  1
  0
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  1
  0
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '((□? (x)))))\""
  6
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(id
  1
  0
  "\"(list 'eval '(top) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  1
  0
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  12
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(id
  1
  0
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  1
  1
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  1
  1
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  8
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(id
  1
  1
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  1
  1
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '((□? (x)))))\""
  11
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/25 0) (1/50 1/50 0)))
'(id
  1
  1
  "\"(list 'eval '(top) (menv '()))\""
  12
  ((0 0 0) (0 1/50 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  1
  2
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (1/50 1/50 0)))
'(id
  1
  2
  "\"(list 'eval '(top) (menv '()))\""
  10
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(id
  1
  2
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  1
  2
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  1
  2
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '((□? (x)))))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (1/50 1/50 0)))
'(id
  1
  3
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  7
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(id
  1
  3
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  1
  3
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '((□? (x)))))\""
  11
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(id
  1
  3
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  1
  3
  "\"(list 'eval '(top) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  1
  4
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  1
  4
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  7
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(id
  1
  4
  "\"(list 'eval '(top) (menv '()))\""
  10
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(id
  1
  4
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '((□? (x)))))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  1
  4
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  1
  5
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '((□? (x)))))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(id
  1
  5
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  1
  5
  "\"(list 'eval '(top) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  1
  5
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  1
  5
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  12
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(id
  1
  6
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  1
  6
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  7
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(id
  1
  6
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  1
  6
  "\"(list 'eval '(top) (menv '()))\""
  10
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(id
  1
  6
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '((□? (x)))))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  1
  7
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '((□? (x)))))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(id
  1
  7
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  1
  7
  "\"(list 'eval '(top) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  1
  7
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  12
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(id
  1
  7
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  1
  8
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  1
  8
  "\"(list 'eval '(top) (menv '()))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(id
  1
  8
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  1
  8
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '((□? (x)))))\""
  7
  ((1/50 1/50 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  1
  8
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  12
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(id
  1
  9
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  1
  9
  "\"(list 'eval '(top) (menv '()))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(id
  1
  9
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  10
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(id
  1
  9
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '((□? (x)))))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  1
  9
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  0
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  0
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  8
  ((1/25 1/25 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(let-num
  1
  0
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  0
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  0
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  0
  "\"(list 'eval '(top) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  1
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  1
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  7
  ((1/50 1/50 0) (1/50 1/50 0) (1/25 1/25 0) (1/50 1/50 0) (1/25 1/25 0)))
'(let-num
  1
  1
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  9
  ((0 0 0) (1/50 1/50 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  1
  "\"(list 'eval '(top) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  1
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  1
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  2
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  6
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(let-num
  1
  2
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  9
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(let-num
  1
  2
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  2
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  2
  "\"(list 'eval '(top) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  2
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  3
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((1/50 1/25 0) (1/25 1/25 0) (1/50 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(let-num
  1
  3
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  3
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 1/50 0) (0 0 0)))
'(let-num
  1
  3
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  3
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  3
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  4
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  6
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(let-num
  1
  4
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  4
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  4
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  4
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  4
  "\"(list 'eval '(top) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  5
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(let-num
  1
  5
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  5
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  5
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  5
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  5
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (1/50 1/50 0)))
'(let-num
  1
  6
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  6
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(let-num
  1
  6
  "\"(list 'eval '(top) (menv '()))\""
  10
  ((0 0 0) (1/50 1/50 0) (0 0 0) (0 1/50 0) (1/50 1/50 0)))
'(let-num
  1
  6
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  6
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  6
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  6
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  7
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  7
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  8
  ((1/50 1/50 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(let-num
  1
  7
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  7
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  7
  "\"(list 'eval '(top) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  7
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  8
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  8
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  6
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(let-num
  1
  8
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (1/50 1/50 0) (0 0 0)))
'(let-num
  1
  8
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  8
  "\"(list 'eval '(top) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  8
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  9
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  9
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  7
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(let-num
  1
  9
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  9
  "\"(list 'eval '(top) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  9
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  1
  9
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   0
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
   5
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   0
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   6
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   0
   "\"(list 'eval '(top) (menv '()))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   0
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   1
   "\"(list 'eval '(top) (menv '()))\""
   3
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   1
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   3
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   1
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   1
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   2
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   2
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   2
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   2
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   2
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
   7
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   2
   "\"(list 'eval '(top) (menv '()))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   3
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
   5
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   3
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   7
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   3
   "\"(list 'eval '(top) (menv '()))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   3
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   4
   "\"(list 'eval '(top) (menv '()))\""
   3
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   4
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   3
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   4
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   4
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   5
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
   5
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   5
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   6
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   5
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   7
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   5
   "\"(list 'eval '(top) (menv '()))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   6
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   1
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   6
   "\"(list 'eval '(top) (menv '()))\""
   3
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   6
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   6
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   7
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   2
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   7
   "\"(list 'eval '(top) (menv '()))\""
   3
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   7
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   7
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   8
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   2
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   8
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   2
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   8
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
   7
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   8
   "\"(list 'eval '(top) (menv '()))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   9
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   2
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   9
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   2
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   9
   "\"(list 'eval '(top) (menv '()))\""
   3
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 1
   9
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  0
  "\"(list 'eval '(app x (-> y <-)) (menv '((□? (x y)))))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  1
  0
  "\"(list 'eval '(app (-> x <-) y) (menv '((□? (x y)))))\""
  8
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  1
  0
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  0
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '((□? (z)))))\""
  14
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(multi-param
  1
  0
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  0
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  0
  "\"(list 'eval '(top) (menv '()))\""
  16
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  1
  0
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '((□? (x y)))))\""
  17
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  1
  1
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '((□? (x y)))))\""
  13
  ((1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (2/25 2/25 0) (1/10 1/10 0)))
'(multi-param
  1
  1
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  1
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  1
  "\"(list 'eval '(app x (-> y <-)) (menv '((□? (x y)))))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  1
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '((□? (z)))))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  1
  "\"(list 'eval '(app (-> x <-) y) (menv '((□? (x y)))))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  1
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  1
  "\"(list 'eval '(top) (menv '()))\""
  17
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  2
  "\"(list 'eval '(app x (-> y <-)) (menv '((□? (x y)))))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  1
  2
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  2
  "\"(list 'eval '(top) (menv '()))\""
  13
  ((2/25 2/25 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(multi-param
  1
  2
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  2
  "\"(list 'eval '(app (-> x <-) y) (menv '((□? (x y)))))\""
  14
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  1
  2
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '((□? (x y)))))\""
  15
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  1
  2
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '((□? (z)))))\""
  17
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  2
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  17
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  3
  "\"(list 'eval '(app x (-> y <-)) (menv '((□? (x y)))))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  1
  3
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '((□? (z)))))\""
  11
  ((1/50 1/50 0) (1/25 1/25 0) (1/25 1/25 0) (1/50 1/25 0) (1/25 1/25 0)))
'(multi-param
  1
  3
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  3
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  3
  "\"(list 'eval '(top) (menv '()))\""
  15
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/25 0) (1/50 1/50 0)))
'(multi-param
  1
  3
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '((□? (x y)))))\""
  17
  ((1/25 1/25 0) (1/50 1/50 0) (1/50 1/25 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  1
  3
  "\"(list 'eval '(app (-> x <-) y) (menv '((□? (x y)))))\""
  17
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  3
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  17
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  4
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  4
  "\"(list 'eval '(app (-> x <-) y) (menv '((□? (x y)))))\""
  6
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  1
  4
  "\"(list 'eval '(top) (menv '()))\""
  13
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(multi-param
  1
  4
  "\"(list 'eval '(app x (-> y <-)) (menv '((□? (x y)))))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  4
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '((□? (x y)))))\""
  15
  ((0 1/50 0) (0 0 0) (0 1/50 0) (1/50 1/50 0) (0 0 0)))
'(multi-param
  1
  4
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  4
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  4
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '((□? (z)))))\""
  17
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  5
  "\"(list 'eval '(top) (menv '()))\""
  11
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (2/25 2/25 0) (3/50 3/50 0)))
'(multi-param
  1
  5
  "\"(list 'eval '(app (-> x <-) y) (menv '((□? (x y)))))\""
  13
  ((1/50 1/50 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  5
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  5
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  5
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '((□? (z)))))\""
  15
  ((0 0 0) (0 0 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  1
  5
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '((□? (x y)))))\""
  16
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  1
  5
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  5
  "\"(list 'eval '(app x (-> y <-)) (menv '((□? (x y)))))\""
  17
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  6
  "\"(list 'eval '(app (-> x <-) y) (menv '((□? (x y)))))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  1
  6
  "\"(list 'eval '(app x (-> y <-)) (menv '((□? (x y)))))\""
  8
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  1
  6
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  6
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  6
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '((□? (z)))))\""
  14
  ((1/25 1/25 0) (3/50 3/50 0) (3/50 3/50 0) (1/25 1/25 0) (1/25 1/25 0)))
'(multi-param
  1
  6
  "\"(list 'eval '(top) (menv '()))\""
  16
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  1
  6
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '((□? (x y)))))\""
  17
  ((1/50 1/50 0) (1/50 1/50 0) (0 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  1
  6
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  17
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  7
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  7
  "\"(list 'eval '(top) (menv '()))\""
  11
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (2/25 2/25 0)))
'(multi-param
  1
  7
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '((□? (z)))))\""
  13
  ((0 0 0) (1/50 1/50 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  7
  "\"(list 'eval '(app (-> x <-) y) (menv '((□? (x y)))))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  7
  "\"(list 'eval '(app x (-> y <-)) (menv '((□? (x y)))))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  7
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '((□? (x y)))))\""
  17
  ((1/50 1/50 0) (0 0 0) (0 0 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  1
  7
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  17
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  7
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  17
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  8
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  8
  "\"(list 'eval '(top) (menv '()))\""
  11
  ((3/50 3/50 0) (2/25 2/25 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(multi-param
  1
  8
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '((□? (x y)))))\""
  14
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/25 1/25 0) (1/50 1/25 0)))
'(multi-param
  1
  8
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  8
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  8
  "\"(list 'eval '(app x (-> y <-)) (menv '((□? (x y)))))\""
  15
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  1
  8
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '((□? (z)))))\""
  17
  ((0 0 0) (0 0 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  1
  8
  "\"(list 'eval '(app (-> x <-) y) (menv '((□? (x y)))))\""
  17
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  9
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  9
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '((□? (x y)))))\""
  13
  ((3/25 3/25 0) (7/50 7/50 0) (7/50 7/50 0) (1/10 3/25 0) (7/50 7/50 0)))
'(multi-param
  1
  9
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  9
  "\"(list 'eval '(top) (menv '()))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  9
  "\"(list 'eval '(app (-> x <-) y) (menv '((□? (x y)))))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  9
  "\"(list 'eval '(app x (-> y <-)) (menv '((□? (x y)))))\""
  15
  ((0 0 0) (1/50 1/50 0) (0 0 0) (0 1/50 0) (0 0 0)))
'(multi-param
  1
  9
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '((□? (z)))))\""
  17
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  1
  9
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  17
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  0
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  3
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  1
  0
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '((□? (m n)))))\""
  70
  ((179/50 183/50 0)
   (147/50 3 0)
   (157/50 161/50 0)
   (81/25 33/10 0)
   (18/5 92/25 0)))
'(ack
  1
  0
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  70
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app (-> - <-) n 1) (menv '((□? (m n)))))\""
  75
  ((1/10 1/10 0) (1/10 3/25 0) (1/10 1/10 0) (1/10 1/10 0) (3/25 3/25 0)))
'(ack
  1
  0
  "\"(list 'eval '(app - (-> n <-) 1) (menv '((□? (m n)))))\""
  113
  ((17/10 44/25 0)
   (41/25 42/25 0)
   (3/2 77/50 0)
   (39/25 8/5 0)
   (42/25 43/25 0)))
'(ack
  1
  0
  "\"(list 'eval '(app = (-> n <-) 0) (menv '((□? (m n)))))\""
  118
  ((11/25 23/50 0) (1/2 1/2 0) (12/25 1/2 0) (1/2 13/25 0) (1/2 13/25 0)))
'(ack
  1
  0
  "\"(list 'eval '(top) (menv '()))\""
  128
  ((9/50 9/50 0) (9/50 1/5 0) (11/50 6/25 0) (1/5 1/5 0) (13/50 13/50 0)))
'(ack
  1
  0
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  134
  ((19/50 19/50 0) (9/25 9/25 0) (3/10 3/10 0) (13/50 7/25 0) (6/25 13/50 0)))
'(ack
  1
  0
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  134
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '((□? (m n)))))\""
  134
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  0
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  144
  ((2/5 21/50 0) (11/25 23/50 0) (12/25 1/2 0) (12/25 12/25 0) (1/2 1/2 0)))
'(ack
  1
  0
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '((□? (m n)))))\""
  159
  ((14/25 29/50 0)
   (27/50 14/25 0)
   (27/50 27/50 0)
   (14/25 14/25 0)
   (31/50 31/50 0)))
'(ack
  1
  0
  "\"(list 'eval '(app = (-> m <-) 0) (menv '((□? (m n)))))\""
  164
  ((23/50 12/25 0) (11/25 23/50 0) (1/2 1/2 0) (1/2 13/25 0) (13/25 27/50 0)))
'(ack
  1
  0
  "\"(list 'eval '(app + (-> n <-) 1) (menv '((□? (m n)))))\""
  165
  ((1/5 1/5 0) (1/5 1/5 0) (1/5 11/50 0) (11/50 11/50 0) (1/5 1/5 0)))
'(ack
  1
  0
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  165
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '((□? (m n)))))\""
  166
  ((3/25 3/25 0) (3/25 3/25 0) (3/25 3/25 0) (3/25 3/25 0) (3/25 3/25 0)))
'(ack
  1
  0
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  166
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  0
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '((□? (m n)))))\""
  169
  ((19/50 2/5 0) (19/50 2/5 0) (19/50 19/50 0) (17/50 17/50 0) (17/50 9/25 0)))
'(ack
  1
  0
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '((□? (m n)))))\""
  169
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '((□? (m n)))))\""
  169
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app (-> + <-) n 1) (menv '((□? (m n)))))\""
  169
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '((□? (m n)))))\""
  169
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app (-> = <-) m 0) (menv '((□? (m n)))))\""
  169
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  0
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  184
  ((29/50 3/5 0)
   (27/50 14/25 0)
   (18/25 37/50 0)
   (33/50 17/25 0)
   (18/25 37/50 0)))
'(ack
  1
  0
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '((□? (m n)))))\""
  184
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '((□? (m n)))))\""
  184
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '((□? (m n)))))\""
  184
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '((□? (m n)))))\""
  189
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (1/10 1/10 0) (3/25 3/25 0)))
'(ack
  1
  0
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  0
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '((□? (m n)))))\""
  194
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (3/50 3/50 0)))
'(ack
  1
  0
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app (-> = <-) n 0) (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  0
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  0
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '((□? (m n)))))\""
  95
  ((193/50 199/50 1/50)
   (219/50 9/2 1/50)
   (19/5 39/10 0)
   (102/25 21/5 1/50)
   (201/50 103/25 0)))
'(ack
  1
  1
  "\"(list 'eval '(top) (menv '()))\""
  98
  ((3/50 3/50 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(ack
  1
  1
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  108
  ((2/5 21/50 0)
   (11/25 11/25 0)
   (21/50 11/25 0)
   (2/5 21/50 0)
   (21/50 11/25 0)))
'(ack
  1
  1
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '((□? (m n)))))\""
  113
  ((1/10 1/10 0) (2/25 2/25 0) (1/10 1/10 0) (2/25 1/10 0) (1/10 1/10 0)))
'(ack
  1
  1
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  118
  ((1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0)))
'(ack
  1
  1
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  118
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list 'eval '(app - (-> n <-) 1) (menv '((□? (m n)))))\""
  118
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list 'eval '(app + (-> n <-) 1) (menv '((□? (m n)))))\""
  118
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  143
  ((1 51/50 0) (49/50 1 0) (27/25 11/10 0) (59/50 61/50 0) (29/25 59/50 0)))
'(ack
  1
  1
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  179
  ((23/10 59/25 0)
   (63/25 13/5 0)
   (67/25 69/25 0)
   (57/25 58/25 0)
   (113/50 58/25 0)))
'(ack
  1
  1
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '((□? (m n)))))\""
  179
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list 'eval '(app (-> = <-) n 0) (menv '((□? (m n)))))\""
  179
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  179
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  179
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '((□? (m n)))))\""
  179
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '((□? (m n)))))\""
  179
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  179
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list 'eval '(app = (-> n <-) 0) (menv '((□? (m n)))))\""
  184
  ((27/50 27/50 0)
   (1/2 1/2 0)
   (14/25 29/50 0)
   (23/50 12/25 0)
   (23/50 12/25 0)))
'(ack
  1
  1
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  184
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  184
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '((□? (m n)))))\""
  184
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  184
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  184
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '((□? (m n)))))\""
  184
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '((□? (m n)))))\""
  184
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  184
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '((□? (m n)))))\""
  184
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '((□? (m n)))))\""
  189
  ((1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0)))
'(ack
  1
  1
  "\"(list 'eval '(app (-> + <-) n 1) (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list 'eval '(app (-> - <-) n 1) (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list 'eval '(app = (-> m <-) 0) (menv '((□? (m n)))))\""
  194
  ((27/50 14/25 0)
   (29/50 3/5 0)
   (3/5 31/50 0)
   (31/50 16/25 0)
   (29/50 29/50 0)))
'(ack
  1
  1
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list 'eval '(app (-> = <-) m 0) (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  1
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  2
  "\"(list 'eval '(app = (-> n <-) 0) (menv '((□? (m n)))))\""
  67
  ((77/25 79/25 0)
   (161/50 33/10 0)
   (31/10 159/50 0)
   (29/10 149/50 0)
   (66/25 27/10 0)))
'(ack
  1
  2
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '((□? (m n)))))\""
  71
  ((2/25 2/25 0) (2/25 2/25 0) (1/10 1/10 0) (3/25 7/50 0) (7/50 7/50 0)))
'(ack
  1
  2
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  102
  ((69/50 71/50 0) (73/50 3/2 0) (71/50 73/50 0) (6/5 63/50 0) (29/25 6/5 0)))
'(ack
  1
  2
  "\"(list 'eval '(app (-> + <-) n 1) (menv '((□? (m n)))))\""
  105
  ((2/25 2/25 0) (2/25 2/25 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0)))
'(ack
  1
  2
  "\"(list 'eval '(app + (-> n <-) 1) (menv '((□? (m n)))))\""
  108
  ((6/25 13/50 0) (13/50 7/25 0) (8/25 17/50 0) (8/25 8/25 0) (13/50 13/50 0)))
'(ack
  1
  2
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  113
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(ack
  1
  2
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  113
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  2
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  154
  ((54/25 111/50 0)
   (58/25 119/50 0)
   (29/10 149/50 0)
   (66/25 68/25 0)
   (66/25 27/10 0)))
'(ack
  1
  2
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '((□? (m n)))))\""
  154
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  2
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  155
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (0 0 0) (1/50 1/50 0)))
'(ack
  1
  2
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '((□? (m n)))))\""
  155
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  2
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  155
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  2
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  161
  ((8/25 17/50 0) (8/25 8/25 0) (3/10 3/10 0) (3/10 8/25 0) (7/25 3/10 0)))
'(ack
  1
  2
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  161
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  2
  "\"(list 'eval '(app (-> = <-) n 0) (menv '((□? (m n)))))\""
  161
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  2
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '((□? (m n)))))\""
  161
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  2
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '((□? (m n)))))\""
  167
  ((1/2 1/2 0) (1/2 13/25 0) (13/25 27/50 0) (27/50 14/25 0) (27/50 14/25 0)))
'(ack
  1
  2
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '((□? (m n)))))\""
  167
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  2
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '((□? (m n)))))\""
  167
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  2
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  167
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  2
  "\"(list 'eval '(app - (-> n <-) 1) (menv '((□? (m n)))))\""
  167
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  2
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '((□? (m n)))))\""
  167
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  2
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '((□? (m n)))))\""
  167
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  2
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  167
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  2
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  177
  ((9/25 9/25 0)
   (19/50 2/5 0)
   (11/25 11/25 0)
   (11/25 23/50 0)
   (23/50 23/50 0)))
'(ack
  1
  2
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '((□? (m n)))))\""
  182
  ((2/25 2/25 0) (1/10 1/10 0) (7/50 7/50 0) (7/50 7/50 0) (1/10 3/25 0)))
'(ack
  1
  2
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  182
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  2
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '((□? (m n)))))\""
  182
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  2
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '((□? (m n)))))\""
  182
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  2
  "\"(list 'eval '(app (-> = <-) m 0) (menv '((□? (m n)))))\""
  182
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  2
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '((□? (m n)))))\""
  182
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  2
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  183
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  1
  2
  "\"(list 'eval '(top) (menv '()))\""
  184
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  2
  "\"(list 'eval '(app (-> - <-) n 1) (menv '((□? (m n)))))\""
  184
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  2
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  184
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  2
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  184
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  2
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  184
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  2
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  184
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  2
  "\"(list 'eval '(app = (-> m <-) 0) (menv '((□? (m n)))))\""
  189
  ((11/25 23/50 0)
   (11/25 23/50 0)
   (12/25 12/25 0)
   (12/25 1/2 0)
   (11/25 23/50 0)))
'(ack
  1
  2
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '((□? (m n)))))\""
  194
  ((2/25 2/25 0) (1/10 1/10 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(ack
  1
  3
  "\"(list 'eval '(top) (menv '()))\""
  18
  ((9/25 19/50 0) (17/50 17/50 0) (8/25 8/25 0) (8/25 8/25 0) (8/25 8/25 0)))
'(ack
  1
  3
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  20
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  1
  3
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '((□? (m n)))))\""
  90
  ((102/25 211/50 1/50)
   (103/25 106/25 1/50)
   (173/50 89/25 0)
   (159/50 163/50 0)
   (191/50 39/10 0)))
'(ack
  1
  3
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  101
  ((27/50 14/25 0)
   (13/25 13/25 0)
   (13/25 27/50 0)
   (13/25 27/50 0)
   (13/25 27/50 0)))
'(ack
  1
  3
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '((□? (m n)))))\""
  101
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  3
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  101
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  3
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  101
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  3
  "\"(list 'eval '(app - (-> n <-) 1) (menv '((□? (m n)))))\""
  101
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  3
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  147
  ((59/25 121/50 0)
   (123/50 63/25 0)
   (27/10 139/50 0)
   (68/25 139/50 0)
   (151/50 31/10 0)))
'(ack
  1
  3
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '((□? (m n)))))\""
  158
  ((23/50 12/25 0) (2/5 21/50 0) (2/5 21/50 0) (19/50 2/5 0) (21/50 21/50 0)))
'(ack
  1
  3
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '((□? (m n)))))\""
  158
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  3
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  168
  ((9/25 9/25 0) (17/50 9/25 0) (17/50 9/25 0) (17/50 9/25 0) (9/25 19/50 0)))
'(ack
  1
  3
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '((□? (m n)))))\""
  168
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  3
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  168
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  3
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  168
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  3
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  168
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  3
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '((□? (m n)))))\""
  168
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  3
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  168
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  3
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '((□? (m n)))))\""
  168
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  3
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '((□? (m n)))))\""
  168
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  3
  "\"(list 'eval '(app = (-> n <-) 0) (menv '((□? (m n)))))\""
  173
  ((18/25 43/25 0) (29/50 29/50 0) (3/5 3/5 0) (29/50 3/5 0) (3/5 3/5 0)))
'(ack
  1
  3
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  173
  ((0 0 0) (0 1/50 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  3
  "\"(list 'eval '(app = (-> m <-) 0) (menv '((□? (m n)))))\""
  178
  ((3/5 3/5 0) (31/50 16/25 0) (3/5 3/5 0) (3/5 31/50 0) (31/50 16/25 0)))
'(ack
  1
  3
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '((□? (m n)))))\""
  183
  ((1/10 1/10 0) (1/10 1/10 0) (1/10 3/25 0) (1/10 1/10 0) (1/10 1/10 0)))
'(ack
  1
  3
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '((□? (m n)))))\""
  188
  ((1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0)))
'(ack
  1
  3
  "\"(list 'eval '(app (-> - <-) n 1) (menv '((□? (m n)))))\""
  188
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  3
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  188
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  3
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  188
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  3
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '((□? (m n)))))\""
  189
  ((4/25 4/25 0) (4/25 9/50 0) (4/25 4/25 0) (9/50 9/50 0) (4/25 9/50 0)))
'(ack
  1
  3
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  3
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  3
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  3
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  194
  ((8/25 8/25 0) (3/10 8/25 0) (3/10 3/10 0) (8/25 8/25 0) (8/25 8/25 0)))
'(ack
  1
  3
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  3
  "\"(list 'eval '(app (-> + <-) n 1) (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  3
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  3
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  3
  "\"(list 'eval '(app (-> = <-) m 0) (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  3
  "\"(list 'eval '(app + (-> n <-) 1) (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  3
  "\"(list 'eval '(app (-> = <-) n 0) (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  4
  "\"(list 'eval '(app (-> - <-) n 1) (menv '((□? (m n)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  4
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  4
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  19
  ((17/50 9/25 0)
   (17/50 17/50 0)
   (17/50 17/50 0)
   (17/50 17/50 0)
   (17/50 17/50 0)))
'(ack
  1
  4
  "\"(list 'eval '(top) (menv '()))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  4
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  22
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  1
  4
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '((□? (m n)))))\""
  23
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  4
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  24
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  4
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  24
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  4
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '((□? (m n)))))\""
  25
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  1
  4
  "\"(list 'eval '(app (-> = <-) m 0) (menv '((□? (m n)))))\""
  25
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  4
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '((□? (m n)))))\""
  26
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  4
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '((□? (m n)))))\""
  100
  ((103/25 106/25 1/50)
   (109/25 112/25 0)
   (111/25 114/25 1/50)
   (213/50 109/25 1/50)
   (21/5 108/25 0)))
'(ack
  1
  4
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '((□? (m n)))))\""
  105
  ((2/25 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0)))
'(ack
  1
  4
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  110
  ((1/10 1/10 0) (1/10 1/10 0) (2/25 1/10 0) (1/10 1/10 0) (1/10 1/10 0)))
'(ack
  1
  4
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  136
  ((27/25 11/10 0)
   (27/25 11/10 0)
   (51/50 26/25 0)
   (26/25 53/50 0)
   (27/25 28/25 0)))
'(ack
  1
  4
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  136
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  4
  "\"(list 'eval '(app = (-> n <-) 0) (menv '((□? (m n)))))\""
  141
  ((21/50 21/50 0)
   (21/50 11/25 0)
   (13/25 27/50 0)
   (11/25 11/25 0)
   (12/25 1/2 0)))
'(ack
  1
  4
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '((□? (m n)))))\""
  172
  ((119/50 61/25 0)
   (107/50 11/5 0)
   (56/25 23/10 0)
   (59/25 12/5 0)
   (56/25 57/25 0)))
'(ack
  1
  4
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '((□? (m n)))))\""
  172
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  4
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '((□? (m n)))))\""
  172
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  4
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  183
  ((13/25 27/50 0)
   (13/25 27/50 0)
   (27/50 14/25 0)
   (27/50 14/25 0)
   (27/50 14/25 0)))
'(ack
  1
  4
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '((□? (m n)))))\""
  188
  ((1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0)))
'(ack
  1
  4
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  188
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  4
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  188
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  4
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '((□? (m n)))))\""
  188
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  4
  "\"(list 'eval '(app - (-> n <-) 1) (menv '((□? (m n)))))\""
  188
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  4
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '((□? (m n)))))\""
  189
  ((4/25 4/25 0) (4/25 9/50 0) (4/25 4/25 0) (4/25 4/25 0) (4/25 9/50 0)))
'(ack
  1
  4
  "\"(list 'eval '(app + (-> n <-) 1) (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  4
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  4
  "\"(list 'eval '(app = (-> m <-) 0) (menv '((□? (m n)))))\""
  194
  ((3/5 31/50 0) (3/5 31/50 0) (3/5 3/5 0) (3/5 31/50 0) (3/5 31/50 0)))
'(ack
  1
  4
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  4
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  4
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  4
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  4
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  194
  ((1/50 1/50 0) (0 0 0) (0 1/50 0) (1/50 1/50 0) (0 1/50 0)))
'(ack
  1
  4
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  4
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 1/50 0) (0 1/50 0)))
'(ack
  1
  4
  "\"(list 'eval '(app (-> = <-) n 0) (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 1/50 0)))
'(ack
  1
  4
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  4
  "\"(list 'eval '(app (-> + <-) n 1) (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  5
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  3
  ((1/50 1/50 0) (1/50 1/50 0) (1/25 3/50 0) (1/50 1/25 0) (1/50 1/25 0)))
'(ack
  1
  5
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  5
  "\"(list 'eval '(app (-> = <-) m 0) (menv '((□? (m n)))))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  5
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (1/50 1/50 0) (0 0 0)))
'(ack
  1
  5
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  7
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/25 1/25 0)))
'(ack
  1
  5
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '((□? (m n)))))\""
  84
  ((207/50 106/25 1/50)
   (189/50 97/25 0)
   (199/50 203/50 1/50)
   (9/2 116/25 1/50)
   (47/10 121/25 1/50)))
'(ack
  1
  5
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  84
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  5
  "\"(list 'eval '(app (-> = <-) n 0) (menv '((□? (m n)))))\""
  84
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  5
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  141
  ((139/50 71/25 0)
   (137/50 141/50 1/50)
   (68/25 14/5 0)
   (137/50 14/5 0)
   (143/50 147/50 0)))
'(ack
  1
  5
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '((□? (m n)))))\""
  141
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  5
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '((□? (m n)))))\""
  141
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  5
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  141
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  5
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '((□? (m n)))))\""
  156
  ((57/50 29/25 0)
   (27/25 11/10 0)
   (27/25 11/10 0)
   (11/10 28/25 0)
   (27/25 28/25 0)))
'(ack
  1
  5
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '((□? (m n)))))\""
  166
  ((13/25 13/25 0)
   (1/2 13/25 0)
   (12/25 12/25 0)
   (23/50 23/50 0)
   (1/2 13/25 0)))
'(ack
  1
  5
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '((□? (m n)))))\""
  166
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  5
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  166
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  5
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  166
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  5
  "\"(list 'eval '(app = (-> m <-) 0) (menv '((□? (m n)))))\""
  171
  ((29/50 3/5 0) (3/5 16/25 0) (29/50 29/50 0) (3/5 3/5 0) (3/5 31/50 0)))
'(ack
  1
  5
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '((□? (m n)))))\""
  171
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  5
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  171
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  5
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '((□? (m n)))))\""
  171
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  5
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '((□? (m n)))))\""
  176
  ((2/25 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0)))
'(ack
  1
  5
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '((□? (m n)))))\""
  176
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  5
  "\"(list 'eval '(app (-> + <-) n 1) (menv '((□? (m n)))))\""
  176
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  5
  "\"(list 'eval '(app + (-> n <-) 1) (menv '((□? (m n)))))\""
  176
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  5
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  181
  ((13/50 13/50 0)
   (13/50 13/50 0)
   (13/50 13/50 0)
   (7/25 7/25 0)
   (13/50 7/25 0)))
'(ack
  1
  5
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  181
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  5
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  181
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  5
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '((□? (m n)))))\""
  186
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(ack
  1
  5
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '((□? (m n)))))\""
  186
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  5
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  187
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  1
  5
  "\"(list 'eval '(app (-> - <-) n 1) (menv '((□? (m n)))))\""
  187
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  5
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  187
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  5
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '((□? (m n)))))\""
  187
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  5
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  187
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  5
  "\"(list 'eval '(top) (menv '()))\""
  189
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(ack
  1
  5
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  5
  "\"(list 'eval '(app - (-> n <-) 1) (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  5
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  5
  "\"(list 'eval '(app = (-> n <-) 0) (menv '((□? (m n)))))\""
  194
  ((13/25 27/50 0) (1/2 13/25 0) (21/50 11/25 0) (23/50 23/50 0) (1/2 1/2 0)))
'(ack
  1
  6
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '((□? (m n)))))\""
  17
  ((9/25 19/50 0)
   (17/50 17/50 0)
   (7/25 7/25 0)
   (17/50 17/50 0)
   (17/50 9/25 0)))
'(ack
  1
  6
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  27
  ((1/5 1/5 0) (6/25 6/25 0) (1/5 1/5 0) (11/50 11/50 0) (6/25 13/50 0)))
'(ack
  1
  6
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '((□? (m n)))))\""
  88
  ((69/25 141/50 0)
   (29/10 149/50 0)
   (19/5 47/10 1/50)
   (73/25 3 0)
   (73/25 149/50 0)))
'(ack
  1
  6
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  88
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  6
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '((□? (m n)))))\""
  93
  ((3/25 3/25 0) (1/10 1/10 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(ack
  1
  6
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  98
  ((2/25 2/25 0) (2/25 1/10 0) (3/25 3/25 0) (1/10 1/10 0) (1/10 1/10 0)))
'(ack
  1
  6
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '((□? (m n)))))\""
  98
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  6
  "\"(list 'eval '(top) (menv '()))\""
  99
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  6
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  109
  ((11/25 11/25 0) (21/50 21/50 0) (7/25 7/25 0) (7/25 3/10 0) (7/25 7/25 0)))
'(ack
  1
  6
  "\"(list 'eval '(app (-> = <-) n 0) (menv '((□? (m n)))))\""
  109
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  6
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  110
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  6
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  150
  ((57/25 117/50 0)
   (64/25 131/50 0)
   (109/50 111/50 0)
   (63/25 129/50 0)
   (119/50 123/50 0)))
'(ack
  1
  6
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  167
  ((16/25 16/25 0)
   (18/25 37/50 0)
   (14/25 14/25 0)
   (29/50 3/5 0)
   (37/50 37/50 0)))
'(ack
  1
  6
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '((□? (m n)))))\""
  167
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  6
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '((□? (m n)))))\""
  171
  ((12/25 1/2 0) (1/2 13/25 0) (29/50 3/5 0) (14/25 14/25 0) (1/2 13/25 0)))
'(ack
  1
  6
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '((□? (m n)))))\""
  171
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  6
  "\"(list 'eval '(app (-> - <-) n 1) (menv '((□? (m n)))))\""
  171
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  6
  "\"(list 'eval '(app = (-> n <-) 0) (menv '((□? (m n)))))\""
  176
  ((3/5 31/50 0)
   (3/5 16/25 0)
   (27/50 14/25 0)
   (23/50 23/50 0)
   (23/50 12/25 0)))
'(ack
  1
  6
  "\"(list 'eval '(app (-> + <-) n 1) (menv '((□? (m n)))))\""
  176
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  6
  "\"(list 'eval '(app - (-> n <-) 1) (menv '((□? (m n)))))\""
  176
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  6
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  176
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  6
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  176
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  6
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '((□? (m n)))))\""
  179
  ((13/25 27/50 0)
   (27/50 14/25 0)
   (27/50 14/25 0)
   (27/50 14/25 0)
   (13/25 27/50 0)))
'(ack
  1
  6
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  179
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  6
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  179
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  6
  "\"(list 'eval '(app (-> = <-) m 0) (menv '((□? (m n)))))\""
  179
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  6
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '((□? (m n)))))\""
  184
  ((1/10 1/10 0) (1/10 1/10 0) (3/25 3/25 0) (1/10 1/10 0) (1/10 1/10 0)))
'(ack
  1
  6
  "\"(list 'eval '(app = (-> m <-) 0) (menv '((□? (m n)))))\""
  189
  ((14/25 29/50 0) (29/50 29/50 0) (3/5 3/5 0) (29/50 3/5 0) (3/5 3/5 0)))
'(ack
  1
  6
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  6
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  6
  "\"(list 'eval '(app + (-> n <-) 1) (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  6
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  6
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  6
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  6
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  6
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  6
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  6
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  6
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  194
  ((8/25 17/50 0) (8/25 17/50 0) (8/25 8/25 0) (8/25 8/25 0) (8/25 8/25 0)))
'(ack
  1
  6
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  7
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  20
  ((21/50 21/50 0)
   (2/5 2/5 0)
   (21/50 11/25 0)
   (11/25 23/50 0)
   (21/50 21/50 0)))
'(ack
  1
  7
  "\"(list 'eval '(app (-> = <-) m 0) (menv '((□? (m n)))))\""
  21
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  7
  "\"(list 'eval '(app (-> - <-) n 1) (menv '((□? (m n)))))\""
  22
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  7
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  23
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  1
  7
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '((□? (m n)))))\""
  24
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  7
  "\"(list 'eval '(app + (-> n <-) 1) (menv '((□? (m n)))))\""
  110
  ((128/25 146/25 1/50)
   (121/25 124/25 1/50)
   (118/25 121/25 1/50)
   (257/50 132/25 1/50)
   (241/50 247/50 1/50)))
'(ack
  1
  7
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '((□? (m n)))))\""
  110
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  7
  "\"(list 'eval '(app = (-> n <-) 0) (menv '((□? (m n)))))\""
  115
  ((3/5 3/5 0) (3/5 3/5 0) (3/5 31/50 0) (17/25 39/50 0) (31/50 16/25 0)))
'(ack
  1
  7
  "\"(list 'eval '(app - (-> n <-) 1) (menv '((□? (m n)))))\""
  115
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  7
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '((□? (m n)))))\""
  115
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  7
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  118
  ((1/5 11/50 0) (1/5 11/50 0) (1/5 1/5 0) (11/50 11/50 0) (11/50 11/50 0)))
'(ack
  1
  7
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '((□? (m n)))))\""
  164
  ((78/25 16/5 1/50)
   (77/25 79/25 0)
   (31/10 159/50 1/50)
   (77/25 79/25 0)
   (153/50 78/25 1/50)))
'(ack
  1
  7
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '((□? (m n)))))\""
  169
  ((3/25 3/25 0) (3/25 3/25 0) (3/25 3/25 0) (1/10 1/10 0) (1/10 1/10 0)))
'(ack
  1
  7
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  169
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  7
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '((□? (m n)))))\""
  181
  ((37/50 19/25 0)
   (18/25 37/50 0)
   (37/50 19/25 0)
   (19/25 19/25 0)
   (19/25 39/50 0)))
'(ack
  1
  7
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  183
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(ack
  1
  7
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  183
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  7
  "\"(list 'eval '(app = (-> m <-) 0) (menv '((□? (m n)))))\""
  188
  ((3/5 3/5 0) (14/25 29/50 0) (27/50 27/50 0) (27/50 14/25 0) (29/50 3/5 0)))
'(ack
  1
  7
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  188
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  7
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  188
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  7
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '((□? (m n)))))\""
  188
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  7
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  188
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  7
  "\"(list 'eval '(app (-> + <-) n 1) (menv '((□? (m n)))))\""
  188
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  7
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '((□? (m n)))))\""
  188
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  7
  "\"(list 'eval '(top) (menv '()))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  7
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  7
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (1/50 1/50 0) (0 0 0)))
'(ack
  1
  7
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  7
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  7
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  194
  ((7/25 7/25 0) (7/25 7/25 0) (7/25 7/25 0) (3/10 3/10 0) (7/25 7/25 0)))
'(ack
  1
  7
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  7
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 1/50 0) (0 0 0)))
'(ack
  1
  7
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  7
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  7
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  7
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  7
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  7
  "\"(list 'eval '(app (-> = <-) n 0) (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  7
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  7
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '((□? (m n)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  1
  8
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '((□? (m n)))))\""
  105
  ((104/25 107/25 1/50)
   (223/50 229/50 1/50)
   (203/50 213/50 0)
   (219/50 113/25 1/50)
   (249/50 51/10 1/50)))
'(ack
  1
  8
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '((□? (m n)))))\""
  105
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  110
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(ack
  1
  8
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  110
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '((□? (m n)))))\""
  146
  ((13/5 67/25 0)
   (78/25 161/50 1/50)
   (177/50 97/25 0)
   (83/25 104/25 0)
   (117/50 121/50 0)))
'(ack
  1
  8
  "\"(list 'eval '(app - (-> n <-) 1) (menv '((□? (m n)))))\""
  146
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  146
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list 'eval '(app = (-> m <-) 0) (menv '((□? (m n)))))\""
  151
  ((12/25 12/25 0)
   (29/50 29/50 0)
   (13/25 27/50 0)
   (27/50 27/50 0)
   (13/25 13/25 0)))
'(ack
  1
  8
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '((□? (m n)))))\""
  151
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '((□? (m n)))))\""
  151
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '((□? (m n)))))\""
  151
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  151
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  151
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  176
  ((49/50 1 0)
   (27/25 28/25 0)
   (11/10 57/50 0)
   (53/50 11/10 0)
   (26/25 27/25 0)))
'(ack
  1
  8
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '((□? (m n)))))\""
  176
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list 'eval '(app (-> + <-) n 1) (menv '((□? (m n)))))\""
  176
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '((□? (m n)))))\""
  181
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(ack
  1
  8
  "\"(list 'eval '(app = (-> n <-) 0) (menv '((□? (m n)))))\""
  186
  ((21/50 11/25 0)
   (11/25 11/25 0)
   (27/50 27/50 0)
   (23/50 23/50 0)
   (23/50 12/25 0)))
'(ack
  1
  8
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '((□? (m n)))))\""
  186
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '((□? (m n)))))\""
  186
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  186
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  188
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(ack
  1
  8
  "\"(list 'eval '(app + (-> n <-) 1) (menv '((□? (m n)))))\""
  188
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list 'eval '(top) (menv '()))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list 'eval '(app (-> - <-) n 1) (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list 'eval '(app (-> = <-) n 0) (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list 'eval '(app (-> = <-) m 0) (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  189
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  8
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  194
  ((1/5 1/5 0) (1/5 1/5 0) (1/5 1/5 0) (1/5 1/5 0) (1/5 1/5 0)))
'(ack
  1
  9
  "\"(list 'eval '(app - (-> n <-) 1) (menv '((□? (m n)))))\""
  62
  ((27/10 69/25 0)
   (27/10 69/25 0)
   (67/25 137/50 0)
   (111/50 57/25 0)
   (11/5 56/25 0)))
'(ack
  1
  9
  "\"(list 'eval '(app (-> = <-) m 0) (menv '((□? (m n)))))\""
  66
  ((3/25 3/25 0) (7/50 4/25 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0)))
'(ack
  1
  9
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  67
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  9
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '((□? (m n)))))\""
  112
  ((58/25 119/50 0)
   (131/50 133/50 0)
   (121/50 62/25 0)
   (133/50 68/25 0)
   (58/25 119/50 0)))
'(ack
  1
  9
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  112
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  9
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '((□? (m n)))))\""
  128
  ((39/50 4/5 0)
   (18/25 37/50 0)
   (7/10 18/25 0)
   (23/25 47/50 0)
   (41/50 21/25 0)))
'(ack
  1
  9
  "\"(list 'eval '(top) (menv '()))\""
  133
  ((9/50 9/50 0) (1/10 3/25 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0)))
'(ack
  1
  9
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  133
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  9
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  133
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  9
  "\"(list 'eval '(app = (-> n <-) 0) (menv '((□? (m n)))))\""
  138
  ((21/50 11/25 0)
   (21/50 11/25 0)
   (13/25 27/50 0)
   (23/50 12/25 0)
   (14/25 14/25 0)))
'(ack
  1
  9
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '((□? (m n)))))\""
  138
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  9
  "\"(list 'eval '(app + (-> n <-) 1) (menv '((□? (m n)))))\""
  138
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  9
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  138
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  9
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '((□? (m n)))))\""
  138
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  9
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  138
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  9
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '((□? (m n)))))\""
  138
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  9
  "\"(list 'eval '(app (-> - <-) n 1) (menv '((□? (m n)))))\""
  138
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  9
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  138
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  9
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  148
  ((3/10 3/10 0) (8/25 8/25 0) (19/50 19/50 0) (9/25 19/50 0) (19/50 19/50 0)))
'(ack
  1
  9
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  148
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  9
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '((□? (m n)))))\""
  148
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  9
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  151
  ((4/25 4/25 0) (11/50 11/50 0) (4/25 4/25 0) (4/25 4/25 0) (7/50 4/25 0)))
'(ack
  1
  9
  "\"(list 'eval '(app (-> = <-) n 0) (menv '((□? (m n)))))\""
  151
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  9
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '((□? (m n)))))\""
  156
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (1/10 1/10 0) (1/10 1/10 0)))
'(ack
  1
  9
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '((□? (m n)))))\""
  161
  ((3/50 2/25 0) (2/25 2/25 0) (3/50 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(ack
  1
  9
  "\"(list 'eval '(app (-> + <-) n 1) (menv '((□? (m n)))))\""
  161
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  9
  "\"(list 'eval '(app = (-> m <-) 0) (menv '((□? (m n)))))\""
  166
  ((27/50 14/25 0)
   (31/50 16/25 0)
   (29/50 3/5 0)
   (21/50 21/50 0)
   (11/25 23/50 0)))
'(ack
  1
  9
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  177
  ((2/5 2/5 0) (19/50 2/5 0) (2/5 2/5 0) (11/25 23/50 0) (16/25 16/25 0)))
'(ack
  1
  9
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '((□? (m n)))))\""
  177
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  9
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '((□? (m n)))))\""
  177
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  9
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  177
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  9
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  193
  ((43/50 22/25 0)
   (16/25 33/50 0)
   (17/25 7/10 0)
   (21/25 43/50 0)
   (17/25 7/10 0)))
'(ack
  1
  9
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  193
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  9
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  193
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  9
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '((□? (m n)))))\""
  193
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  9
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '((□? (m n)))))\""
  193
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  9
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '((□? (m n)))))\""
  194
  ((1/5 1/5 0) (11/50 11/50 0) (7/50 7/50 0) (7/50 7/50 0) (7/50 7/50 0)))
'(ack
  1
  9
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  9
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  1
  9
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  194
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  0
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  0
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '((□? (x1)))))\""
  58
  ((13/5 133/50 0)
   (69/25 71/25 0)
   (129/50 66/25 0)
   (133/50 68/25 0)
   (73/25 3 0)))
'(kcfa-2
  1
  0
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '((□? (x1)))))\""
  58
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  94
  ((49/25 2 0)
   (19/10 49/25 0)
   (42/25 43/25 0)
   (83/50 17/10 0)
   (43/25 44/25 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))\""
  100
  ((2/25 2/25 0) (2/25 2/25 0) (3/25 3/25 0) (2/25 2/25 0) (3/50 3/50 0)))
'(kcfa-2
  1
  0
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '((□? (f2)) (□? (x1)))))\""
  109
  ((18/25 37/50 0)
   (23/25 23/25 0)
   (43/50 22/25 0)
   (9/10 23/25 0)
   (43/50 22/25 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '((□? (f1)))))\""
  116
  ((7/50 4/25 0) (4/25 4/25 0) (3/25 3/25 0) (3/25 3/25 0) (3/25 3/25 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  116
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '((□? (f1)))))\""
  117
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  165
  ((203/50 104/25 0)
   (107/25 219/50 0)
   (124/25 127/25 0)
   (22/5 9/2 0)
   (107/25 109/25 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '((□? (f1)))))\""
  165
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  0
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '((□? (x1)))))\""
  165
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '((□? (f1)))))\""
  166
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  175
  ((14/25 29/50 0) (3/5 31/50 0) (29/50 29/50 0) (3/5 3/5 0) (3/5 31/50 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))\""
  178
  ((9/50 9/50 0) (9/50 1/5 0) (9/50 9/50 0) (9/50 9/50 0) (1/5 1/5 0)))
'(kcfa-2
  1
  0
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  184
  ((2/5 21/50 0) (2/5 2/5 0) (12/25 1/2 0) (19/50 2/5 0) (2/5 2/5 0)))
'(kcfa-2
  1
  0
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '((□? (x2)) (□? (x1)))))\""
  184
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  214
  ((106/25 217/50 0)
   (103/25 106/25 0)
   (109/25 111/25 1/50)
   (227/50 233/50 0)
   (109/25 223/50 0)))
'(kcfa-2
  1
  0
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  226
  ((41/25 17/10 0)
   (87/50 89/50 0)
   (97/50 99/50 0)
   (47/25 48/25 0)
   (2 103/50 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '((□? (f2)) (□? (x1)))))\""
  226
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  0
  "\"(list\n 'eval\n '(λ (z) (-> (app z x1 x2) <-))\n (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  235
  ((61/50 31/25 0)
   (32/25 33/25 0)
   (69/50 71/50 0)
   (32/25 33/25 0)
   (31/25 63/50 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '((□? (f1)))))\""
  237
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(top) (menv '()))\""
  240
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(kcfa-2
  1
  0
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-))\n (menv '((□? (f1)))))\""
  242
  ((2/25 2/25 0) (3/50 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (3/50 3/50 0)))
'(kcfa-2
  1
  0
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  242
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '((□? (f1)))))\""
  242
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '((□? (f2)) (□? (x1)))))\""
  254
  ((23/25 47/50 0)
   (21/25 43/50 0)
   (21/25 43/50 0)
   (9/10 47/50 0)
   (21/25 43/50 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '((□? (f2)) (□? (x1)))))\""
  254
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  1
  "\"(list\n 'eval\n '(λ (z) (-> (app z x1 x2) <-))\n (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  46
  ((47/25 97/50 0)
   (19/10 49/25 0)
   (47/25 48/25 0)
   (97/50 2 0)
   (101/50 103/50 0)))
'(kcfa-2
  1
  1
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  52
  ((1/5 1/5 0) (9/50 9/50 0) (1/5 1/5 0) (11/50 11/50 0) (13/50 13/50 0)))
'(kcfa-2
  1
  1
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  172
  ((23/2 294/25 2/25)
   (301/25 123/10 3/50)
   (302/25 309/25 2/25)
   (653/50 671/50 2/25)
   (328/25 336/25 3/50)))
'(kcfa-2
  1
  1
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '((□? (f1)))))\""
  186
  ((3/10 3/10 0) (3/10 8/25 0) (9/25 9/25 0) (11/25 23/50 0) (17/50 9/25 0)))
'(kcfa-2
  1
  1
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '((□? (x1)))))\""
  186
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  1
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  186
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  1
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  205
  ((61/50 31/25 0)
   (61/50 31/25 0)
   (29/25 59/50 0)
   (31/25 63/50 0)
   (28/25 29/25 0)))
'(kcfa-2
  1
  1
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '((□? (f1)))))\""
  206
  ((1/25 1/25 0) (1/25 1/25 0) (3/50 3/50 0) (3/50 3/50 0) (1/25 1/25 0)))
'(kcfa-2
  1
  1
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '((□? (f2)) (□? (x1)))))\""
  211
  ((6/25 13/50 0)
   (7/25 3/10 0)
   (19/50 19/50 0)
   (19/50 19/50 0)
   (13/50 7/25 0)))
'(kcfa-2
  1
  1
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '((□? (f2)) (□? (x1)))))\""
  211
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  1
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '((□? (f1)))))\""
  211
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  1
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '((□? (f1)))))\""
  216
  ((6/25 13/50 0) (9/50 9/50 0) (9/50 1/5 0) (9/50 9/50 0) (11/50 11/50 0)))
'(kcfa-2
  1
  1
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))\""
  219
  ((1/5 11/50 0) (1/5 1/5 0) (1/5 1/5 0) (1/5 1/5 0) (1/5 11/50 0)))
'(kcfa-2
  1
  1
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  228
  ((49/50 1 0) (53/50 11/10 0) (51/50 53/50 0) (24/25 49/50 0) (9/10 23/25 0)))
'(kcfa-2
  1
  1
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '((□? (x2)) (□? (x1)))))\""
  228
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  1
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  228
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  1
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '((□? (x1)))))\""
  228
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  1
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '((□? (f1)))))\""
  229
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  1
  1
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  229
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  1
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-))\n (menv '((□? (f1)))))\""
  231
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  1
  1
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '((□? (x1)))))\""
  232
  ((3/25 3/25 0) (4/25 4/25 0) (7/50 4/25 0) (3/25 7/50 0) (7/50 7/50 0)))
'(kcfa-2
  1
  1
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  232
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  1
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))\""
  235
  ((1/5 1/5 0) (1/5 1/5 0) (1/5 1/5 0) (1/5 11/50 0) (11/50 11/50 0)))
'(kcfa-2
  1
  1
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  241
  ((39/50 4/5 0)
   (41/50 21/25 0)
   (18/25 37/50 0)
   (37/50 19/25 0)
   (37/50 19/25 0)))
'(kcfa-2
  1
  1
  "\"(list 'eval '(top) (menv '()))\""
  242
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  1
  1
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '((□? (f1)))))\""
  242
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  1
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '((□? (f2)) (□? (x1)))))\""
  248
  ((12/25 12/25 0)
   (23/50 12/25 0)
   (11/25 23/50 0)
   (21/50 21/50 0)
   (13/25 13/25 0)))
'(kcfa-2
  1
  1
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '((□? (f2)) (□? (x1)))))\""
  254
  ((12/25 1/2 0)
   (1/2 13/25 0)
   (23/50 23/50 0)
   (11/25 23/50 0)
   (13/25 13/25 0)))
'(kcfa-2
  1
  2
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '((□? (f1)))))\""
  5
  ((2/25 2/25 0) (1/25 1/25 0) (3/50 3/50 0) (1/25 1/25 0) (3/50 3/50 0)))
'(kcfa-2
  1
  2
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  2
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '((□? (x1)))))\""
  63
  ((27/10 69/25 0)
   (63/25 129/50 0)
   (72/25 147/50 0)
   (67/25 137/50 0)
   (3 77/25 0)))
'(kcfa-2
  1
  2
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  81
  ((3/5 31/50 0)
   (14/25 29/50 0)
   (31/50 31/50 0)
   (3/5 31/50 0)
   (31/50 16/25 0)))
'(kcfa-2
  1
  2
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  102
  ((1 51/50 0) (51/50 26/25 0) (24/25 1 0) (27/25 28/25 0) (53/50 11/10 0)))
'(kcfa-2
  1
  2
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  105
  ((11/50 6/25 0) (6/25 13/50 0) (1/5 1/5 0) (1/5 1/5 0) (1/5 1/5 0)))
'(kcfa-2
  1
  2
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '((□? (f2)) (□? (x1)))))\""
  114
  ((19/50 19/50 0)
   (21/50 11/25 0)
   (2/5 21/50 0)
   (27/50 14/25 0)
   (21/50 21/50 0)))
'(kcfa-2
  1
  2
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  201
  ((266/25 109/10 3/50)
   (49/5 501/50 1/25)
   (483/50 248/25 1/25)
   (244/25 501/50 3/50)
   (47/5 483/50 1/50)))
'(kcfa-2
  1
  2
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '((□? (f2)) (□? (x1)))))\""
  213
  ((26/25 53/50 0)
   (47/50 24/25 0)
   (53/50 27/25 0)
   (11/10 28/25 0)
   (6/5 61/50 0)))
'(kcfa-2
  1
  2
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '((□? (f1)))))\""
  217
  ((3/25 3/25 0) (3/25 3/25 0) (1/5 1/5 0) (7/50 7/50 0) (7/50 7/50 0)))
'(kcfa-2
  1
  2
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '((□? (f1)))))\""
  217
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  2
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '((□? (f1)))))\""
  218
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  1
  2
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '((□? (x1)))))\""
  218
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  2
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '((□? (x2)) (□? (x1)))))\""
  218
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  2
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))\""
  221
  ((11/50 11/50 0)
   (11/50 11/50 0)
   (11/50 6/25 0)
   (11/50 11/50 0)
   (11/50 6/25 0)))
'(kcfa-2
  1
  2
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  227
  ((21/50 21/50 0)
   (11/25 11/25 0)
   (2/5 21/50 0)
   (21/50 21/50 0)
   (23/50 12/25 0)))
'(kcfa-2
  1
  2
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '((□? (x1)))))\""
  227
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  2
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  227
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  2
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '((□? (f1)))))\""
  229
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (2/25 1/10 0) (2/25 2/25 0)))
'(kcfa-2
  1
  2
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-))\n (menv '((□? (f1)))))\""
  231
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 3/50 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  1
  2
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  231
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  2
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '((□? (f2)) (□? (x1)))))\""
  234
  ((9/50 1/5 0) (9/50 9/50 0) (1/5 1/5 0) (9/50 1/5 0) (9/50 1/5 0)))
'(kcfa-2
  1
  2
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  240
  ((59/50 61/50 0)
   (34/25 7/5 0)
   (77/50 79/50 0)
   (33/25 34/25 0)
   (61/50 31/25 0)))
'(kcfa-2
  1
  2
  "\"(list\n 'eval\n '(λ (z) (-> (app z x1 x2) <-))\n (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  249
  ((73/50 37/25 0)
   (36/25 37/25 0)
   (33/25 34/25 0)
   (6/5 61/50 0)
   (59/50 61/50 0)))
'(kcfa-2
  1
  2
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '((□? (f1)))))\""
  250
  ((1/25 1/25 0) (1/25 3/50 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  1
  2
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '((□? (f2)) (□? (x1)))))\""
  250
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  2
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))\""
  253
  ((6/25 6/25 0)
   (13/50 13/50 0)
   (13/50 13/50 0)
   (7/25 7/25 0)
   (13/50 13/50 0)))
'(kcfa-2
  1
  2
  "\"(list 'eval '(top) (menv '()))\""
  254
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  1
  3
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-))\n (menv '((□? (f1)))))\""
  31
  ((17/25 7/10 0) (7/10 18/25 0) (7/10 7/10 0) (7/10 18/25 0) (37/50 19/25 0)))
'(kcfa-2
  1
  3
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '((□? (f2)) (□? (x1)))))\""
  37
  ((3/50 3/50 0) (3/50 2/25 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(kcfa-2
  1
  3
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  3
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))\""
  41
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  1
  3
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  82
  ((211/50 217/50 1/50)
   (88/25 181/50 1/50)
   (101/25 107/25 1/50)
   (43/10 251/50 1/50)
   (191/50 98/25 1/50)))
'(kcfa-2
  1
  3
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '((□? (f2)) (□? (x1)))))\""
  88
  ((12/25 13/25 0) (1/2 13/25 0) (1/2 13/25 0) (1/2 13/25 0) (23/50 12/25 0)))
'(kcfa-2
  1
  3
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  94
  ((9/50 9/50 0) (9/50 9/50 0) (9/50 1/5 0) (1/5 1/5 0) (1/5 1/5 0)))
'(kcfa-2
  1
  3
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  121
  ((77/50 39/25 0)
   (91/50 93/50 0)
   (46/25 19/10 0)
   (42/25 43/25 0)
   (89/50 91/50 0)))
'(kcfa-2
  1
  3
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '((□? (f1)))))\""
  122
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  1
  3
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  187
  ((212/25 437/50 1/25)
   (441/50 226/25 1/25)
   (226/25 233/25 3/50)
   (259/25 533/50 3/50)
   (491/50 503/50 3/50)))
'(kcfa-2
  1
  3
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '((□? (f1)))))\""
  187
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  3
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  187
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  3
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '((□? (f2)) (□? (x1)))))\""
  192
  ((13/50 7/25 0) (13/50 7/25 0) (13/50 7/25 0) (13/50 7/25 0) (13/50 7/25 0)))
'(kcfa-2
  1
  3
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  192
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  3
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  210
  ((71/25 73/25 0)
   (64/25 66/25 0)
   (27/10 139/50 0)
   (67/25 137/50 0)
   (5/2 129/50 0)))
'(kcfa-2
  1
  3
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '((□? (x1)))))\""
  212
  ((9/50 9/50 0) (4/25 9/50 0) (9/50 9/50 0) (9/50 9/50 0) (7/50 4/25 0)))
'(kcfa-2
  1
  3
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '((□? (f1)))))\""
  216
  ((7/50 7/50 0) (7/50 7/50 0) (9/50 9/50 0) (7/50 7/50 0) (4/25 4/25 0)))
'(kcfa-2
  1
  3
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '((□? (f1)))))\""
  216
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  3
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '((□? (f2)) (□? (x1)))))\""
  222
  ((23/50 12/25 0)
   (11/25 23/50 0)
   (12/25 1/2 0)
   (12/25 12/25 0)
   (11/25 23/50 0)))
'(kcfa-2
  1
  3
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  240
  ((22/25 9/10 0) (49/50 1 0) (9/10 47/50 0) (23/25 47/50 0) (47/50 24/25 0)))
'(kcfa-2
  1
  3
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '((□? (x1)))))\""
  240
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  3
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '((□? (f1)))))\""
  241
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  1
  3
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '((□? (x1)))))\""
  241
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  3
  "\"(list\n 'eval\n '(λ (z) (-> (app z x1 x2) <-))\n (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  250
  ((73/50 38/25 0)
   (3/2 38/25 0)
   (41/25 42/25 0)
   (38/25 39/25 0)
   (77/50 79/50 0)))
'(kcfa-2
  1
  3
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '((□? (x2)) (□? (x1)))))\""
  250
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  3
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '((□? (f1)))))\""
  250
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  3
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))\""
  253
  ((13/50 7/25 0) (13/50 13/50 0) (1/5 1/5 0) (11/50 11/50 0) (11/50 6/25 0)))
'(kcfa-2
  1
  3
  "\"(list 'eval '(top) (menv '()))\""
  254
  ((1/50 1/50 0) (1/50 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/50 1/50 0)))
'(kcfa-2
  1
  4
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '((□? (f1)))))\""
  5
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 3/50 0)))
'(kcfa-2
  1
  4
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '((□? (f2)) (□? (x1)))))\""
  11
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(kcfa-2
  1
  4
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '((□? (f1)))))\""
  13
  ((1/25 1/25 0) (1/50 1/50 0) (1/50 1/50 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  1
  4
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))\""
  15
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  1
  4
  "\"(list\n 'eval\n '(λ (z) (-> (app z x1 x2) <-))\n (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  73
  ((73/25 3 0)
   (137/50 141/50 0)
   (68/25 141/50 0)
   (133/50 137/50 0)
   (69/25 71/25 0)))
'(kcfa-2
  1
  4
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))\""
  79
  ((7/25 7/25 0) (3/10 3/10 0) (13/50 13/50 0) (7/25 7/25 0) (13/50 7/25 0)))
'(kcfa-2
  1
  4
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '((□? (f1)))))\""
  81
  ((1/25 1/25 0) (3/50 3/50 0) (3/50 3/50 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  1
  4
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '((□? (x1)))))\""
  84
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(kcfa-2
  1
  4
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  90
  ((1/5 1/5 0) (11/50 11/50 0) (9/50 1/5 0) (1/5 11/50 0) (9/50 1/5 0)))
'(kcfa-2
  1
  4
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '((□? (x1)))))\""
  90
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  4
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  132
  ((84/25 86/25 1/50)
   (173/50 177/50 1/50)
   (91/25 187/50 1/50)
   (76/25 31/10 1/50)
   (76/25 78/25 0)))
'(kcfa-2
  1
  4
  "\"(list 'eval '(top) (menv '()))\""
  137
  ((9/50 9/50 0) (4/25 4/25 0) (4/25 4/25 0) (4/25 4/25 0) (9/50 9/50 0)))
'(kcfa-2
  1
  4
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '((□? (f2)) (□? (x1)))))\""
  173
  ((68/25 139/50 0)
   (71/25 147/50 0)
   (141/50 29/10 1/50)
   (139/50 143/50 0)
   (153/50 79/25 0)))
'(kcfa-2
  1
  4
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '((□? (x2)) (□? (x1)))))\""
  173
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  4
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '((□? (f1)))))\""
  174
  ((1/25 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (1/25 3/50 0)))
'(kcfa-2
  1
  4
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  177
  ((8/25 17/50 0) (6/25 6/25 0) (11/50 11/50 0) (13/50 13/50 0) (6/25 6/25 0)))
'(kcfa-2
  1
  4
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  177
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  4
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  180
  ((11/50 11/50 0) (11/50 11/50 0) (1/5 11/50 0) (9/50 9/50 0) (9/50 9/50 0)))
'(kcfa-2
  1
  4
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  180
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  4
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '((□? (f2)) (□? (x1)))))\""
  180
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  4
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-))\n (menv '((□? (f1)))))\""
  181
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  1
  4
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  181
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  4
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '((□? (f1)))))\""
  185
  ((4/25 4/25 0) (4/25 4/25 0) (7/50 4/25 0) (7/50 4/25 0) (7/50 4/25 0)))
'(kcfa-2
  1
  4
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  248
  ((553/50 284/25 3/50)
   (553/50 569/50 3/50)
   (298/25 611/50 3/50)
   (58/5 119/10 2/25)
   (319/25 328/25 3/50)))
'(kcfa-2
  1
  4
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '((□? (f1)))))\""
  249
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  1
  4
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  249
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  4
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '((□? (x1)))))\""
  251
  ((9/50 9/50 0) (9/50 1/5 0) (1/5 1/5 0) (1/5 11/50 0) (11/50 11/50 0)))
'(kcfa-2
  1
  4
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '((□? (f2)) (□? (x1)))))\""
  254
  ((9/50 9/50 0) (4/25 4/25 0) (9/50 9/50 0) (9/50 9/50 0) (9/50 9/50 0)))
'(kcfa-2
  1
  5
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '((□? (f1)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  5
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  5
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '((□? (f1)))))\""
  34
  ((7/10 18/25 0)
   (37/50 19/25 0)
   (9/10 47/50 0)
   (33/50 7/10 0)
   (16/25 33/50 0)))
'(kcfa-2
  1
  5
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '((□? (f1)))))\""
  36
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(kcfa-2
  1
  5
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  42
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(kcfa-2
  1
  5
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  64
  ((51/50 26/25 0)
   (27/25 11/10 0)
   (23/25 47/50 0)
   (26/25 53/50 0)
   (27/25 11/10 0)))
'(kcfa-2
  1
  5
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  137
  ((379/50 194/25 1/25)
   (183/25 187/25 1/50)
   (207/25 471/50 1/25)
   (207/25 212/25 1/25)
   (193/25 79/10 1/50)))
'(kcfa-2
  1
  5
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  137
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  5
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  163
  ((159/50 163/50 0)
   (82/25 169/50 0)
   (16/5 163/50 0)
   (33/10 84/25 1/50)
   (82/25 167/50 0)))
'(kcfa-2
  1
  5
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  163
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  5
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-))\n (menv '((□? (f1)))))\""
  169
  ((1/5 11/50 0) (1/5 1/5 0) (9/50 9/50 0) (4/25 9/50 0) (9/50 9/50 0)))
'(kcfa-2
  1
  5
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  169
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  5
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '((□? (f2)) (□? (x1)))))\""
  173
  ((3/10 3/10 0) (8/25 17/50 0) (3/10 8/25 0) (3/10 3/10 0) (8/25 8/25 0)))
'(kcfa-2
  1
  5
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '((□? (x1)))))\""
  173
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  5
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '((□? (f2)) (□? (x1)))))\""
  179
  ((23/50 12/25 0)
   (11/25 23/50 0)
   (21/50 11/25 0)
   (11/25 11/25 0)
   (11/25 23/50 0)))
'(kcfa-2
  1
  5
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '((□? (f2)) (□? (x1)))))\""
  203
  ((59/25 12/5 0)
   (11/5 113/50 0)
   (54/25 111/50 0)
   (121/50 62/25 0)
   (59/25 12/5 0)))
'(kcfa-2
  1
  5
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  221
  ((259/50 53/10 1/50)
   (24/5 123/25 1/50)
   (217/50 221/50 1/50)
   (111/25 227/50 1/50)
   (233/50 237/50 1/50)))
'(kcfa-2
  1
  5
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '((□? (x1)))))\""
  222
  ((4/25 4/25 0) (4/25 4/25 0) (4/25 4/25 0) (4/25 4/25 0) (9/50 9/50 0)))
'(kcfa-2
  1
  5
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '((□? (x2)) (□? (x1)))))\""
  222
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  5
  "\"(list 'eval '(top) (menv '()))\""
  223
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/25 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  1
  5
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  241
  ((27/25 11/10 0)
   (1 51/50 0)
   (57/50 59/50 0)
   (26/25 53/50 0)
   (26/25 27/25 0)))
'(kcfa-2
  1
  5
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '((□? (f1)))))\""
  241
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  5
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '((□? (x1)))))\""
  241
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  5
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '((□? (f2)) (□? (x1)))))\""
  241
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  5
  "\"(list\n 'eval\n '(λ (z) (-> (app z x1 x2) <-))\n (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  250
  ((81/50 41/25 0)
   (87/50 44/25 0)
   (44/25 91/50 0)
   (47/25 48/25 0)
   (43/25 44/25 0)))
'(kcfa-2
  1
  5
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))\""
  253
  ((6/25 13/50 0)
   (13/50 13/50 0)
   (13/50 13/50 0)
   (6/25 13/50 0)
   (6/25 13/50 0)))
'(kcfa-2
  1
  5
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '((□? (f1)))))\""
  254
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  1
  5
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '((□? (f1)))))\""
  254
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  6
  "\"(list\n 'eval\n '(λ (z) (-> (app z x1 x2) <-))\n (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  46
  ((49/25 2 0) (99/50 101/50 0) (2 51/25 0) (111/50 57/25 0) (107/50 11/5 0)))
'(kcfa-2
  1
  6
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  154
  ((131/10 673/50 3/50)
   (631/50 323/25 3/50)
   (286/25 117/10 3/50)
   (541/50 553/50 3/50)
   (299/25 306/25 3/50)))
'(kcfa-2
  1
  6
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '((□? (x2)) (□? (x1)))))\""
  154
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  6
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '((□? (f1)))))\""
  159
  ((3/50 3/50 0) (2/25 2/25 0) (2/25 2/25 0) (3/50 3/50 0) (2/25 2/25 0)))
'(kcfa-2
  1
  6
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  159
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  6
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-))\n (menv '((□? (f1)))))\""
  172
  ((11/25 23/50 0)
   (23/50 12/25 0)
   (12/25 1/2 0)
   (11/25 23/50 0)
   (11/25 23/50 0)))
'(kcfa-2
  1
  6
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  181
  ((51/50 53/50 0) (1 51/50 0) (47/50 24/25 0) (47/50 24/25 0) (24/25 1 0)))
'(kcfa-2
  1
  6
  "\"(list 'eval '(top) (menv '()))\""
  182
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  1
  6
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '((□? (f1)))))\""
  182
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  6
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '((□? (f1)))))\""
  183
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  1
  6
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '((□? (f2)) (□? (x1)))))\""
  205
  ((42/25 87/50 0)
   (43/25 89/50 0)
   (41/25 17/10 0)
   (39/25 8/5 0)
   (71/50 37/25 0)))
'(kcfa-2
  1
  6
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '((□? (f1)))))\""
  206
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  1
  6
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  218
  ((6/5 61/50 0)
   (28/25 57/50 0)
   (28/25 57/50 0)
   (29/25 59/50 0)
   (29/25 6/5 0)))
'(kcfa-2
  1
  6
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '((□? (x1)))))\""
  222
  ((7/25 7/25 0) (3/10 3/10 0) (8/25 8/25 0) (3/10 8/25 0) (3/10 8/25 0)))
'(kcfa-2
  1
  6
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '((□? (f1)))))\""
  224
  ((2/25 2/25 0) (2/25 1/10 0) (1/10 1/10 0) (2/25 2/25 0) (1/10 1/10 0)))
'(kcfa-2
  1
  6
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  224
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  6
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))\""
  227
  ((11/50 6/25 0) (11/50 11/50 0) (6/25 6/25 0) (6/25 6/25 0) (6/25 6/25 0)))
'(kcfa-2
  1
  6
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '((□? (f2)) (□? (x1)))))\""
  230
  ((1/5 11/50 0) (1/5 11/50 0) (1/5 11/50 0) (1/5 11/50 0) (1/5 1/5 0)))
'(kcfa-2
  1
  6
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '((□? (f2)) (□? (x1)))))\""
  230
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  6
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  248
  ((27/25 28/25 0)
   (61/50 32/25 0)
   (51/50 26/25 0)
   (26/25 53/50 0)
   (26/25 53/50 0)))
'(kcfa-2
  1
  6
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))\""
  251
  ((6/25 13/50 0)
   (13/50 13/50 0)
   (6/25 13/50 0)
   (13/50 13/50 0)
   (13/50 7/25 0)))
'(kcfa-2
  1
  6
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '((□? (f2)) (□? (x1)))))\""
  251
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  6
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '((□? (x1)))))\""
  251
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  6
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  251
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  6
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  251
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  6
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  254
  ((29/50 3/5 0)
   (33/50 17/25 0)
   (39/50 4/5 0)
   (33/50 33/50 0)
   (33/50 17/25 0)))
'(kcfa-2
  1
  6
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '((□? (f1)))))\""
  254
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  6
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '((□? (x1)))))\""
  254
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  7
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  7
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  40
  ((97/50 2 0) (97/50 2 0) (93/50 19/10 0) (89/50 91/50 0) (77/50 79/50 0)))
'(kcfa-2
  1
  7
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '((□? (x2)) (□? (x1)))))\""
  40
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  7
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '((□? (x1)))))\""
  43
  ((3/50 2/25 0) (3/50 3/50 0) (2/25 2/25 0) (3/50 2/25 0) (3/50 3/50 0)))
'(kcfa-2
  1
  7
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  91
  ((149/50 153/50 0)
   (72/25 147/50 0)
   (16/5 33/10 0)
   (143/50 73/25 0)
   (72/25 74/25 0)))
'(kcfa-2
  1
  7
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '((□? (f2)) (□? (x1)))))\""
  97
  ((17/50 9/25 0)
   (17/50 17/50 0)
   (17/50 17/50 0)
   (8/25 17/50 0)
   (17/50 9/25 0)))
'(kcfa-2
  1
  7
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-))\n (menv '((□? (f1)))))\""
  108
  ((13/50 13/50 0)
   (13/50 13/50 0)
   (13/50 13/50 0)
   (13/50 7/25 0)
   (7/25 7/25 0)))
'(kcfa-2
  1
  7
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))\""
  114
  ((8/25 8/25 0) (8/25 8/25 0) (8/25 8/25 0) (17/50 17/50 0) (8/25 8/25 0)))
'(kcfa-2
  1
  7
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '((□? (f1)))))\""
  114
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  7
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '((□? (f1)))))\""
  115
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  1
  7
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '((□? (f1)))))\""
  121
  ((9/50 9/50 0) (9/50 1/5 0) (1/5 1/5 0) (1/5 1/5 0) (1/5 1/5 0)))
'(kcfa-2
  1
  7
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  127
  ((11/50 11/50 0) (1/5 1/5 0) (9/50 1/5 0) (9/50 1/5 0) (9/50 1/5 0)))
'(kcfa-2
  1
  7
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '((□? (f2)) (□? (x1)))))\""
  127
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  7
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '((□? (f2)) (□? (x1)))))\""
  133
  ((11/25 23/50 0)
   (11/25 11/25 0)
   (21/50 11/25 0)
   (11/25 23/50 0)
   (21/50 11/25 0)))
'(kcfa-2
  1
  7
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '((□? (f1)))))\""
  134
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  1
  7
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '((□? (x1)))))\""
  136
  ((11/50 11/50 0) (1/5 11/50 0) (1/5 1/5 0) (1/5 11/50 0) (1/5 11/50 0)))
'(kcfa-2
  1
  7
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '((□? (x1)))))\""
  136
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  7
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  142
  ((9/50 1/5 0) (9/50 9/50 0) (1/5 1/5 0) (1/5 1/5 0) (1/5 1/5 0)))
'(kcfa-2
  1
  7
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  142
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  7
  "\"(list 'eval '(top) (menv '()))\""
  143
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/25 1/25 0)))
'(kcfa-2
  1
  7
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  146
  ((17/50 17/50 0)
   (17/50 9/25 0)
   (17/50 17/50 0)
   (17/50 9/25 0)
   (17/50 17/50 0)))
'(kcfa-2
  1
  7
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))\""
  152
  ((3/10 8/25 0) (3/10 8/25 0) (3/10 3/10 0) (8/25 8/25 0) (8/25 8/25 0)))
'(kcfa-2
  1
  7
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  152
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  7
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  239
  ((327/25 336/25 2/25)
   (621/50 127/10 2/25)
   (549/50 282/25 3/50)
   (277/25 567/50 3/50)
   (314/25 129/10 2/25)))
'(kcfa-2
  1
  7
  "\"(list\n 'eval\n '(λ (z) (-> (app z x1 x2) <-))\n (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  248
  ((42/25 43/25 0)
   (42/25 43/25 0)
   (83/50 17/10 0)
   (83/50 17/10 0)
   (36/25 3/2 0)))
'(kcfa-2
  1
  7
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '((□? (f1)))))\""
  248
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  7
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '((□? (f1)))))\""
  248
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  7
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '((□? (f2)) (□? (x1)))))\""
  254
  ((27/50 29/50 0)
   (14/25 29/50 0)
   (12/25 12/25 0)
   (23/50 23/50 0)
   (23/50 12/25 0)))
'(kcfa-2
  1
  8
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  40
  ((77/50 79/50 0)
   (87/50 89/50 0)
   (79/50 81/50 0)
   (48/25 49/25 0)
   (101/50 103/50 0)))
'(kcfa-2
  1
  8
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  136
  ((19/2 244/25 3/50)
   (99/10 507/50 3/50)
   (493/50 282/25 1/25)
   (93/10 477/50 1/50)
   (217/25 222/25 1/50)))
'(kcfa-2
  1
  8
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '((□? (f1)))))\""
  141
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (1/10 1/10 0) (2/25 2/25 0)))
'(kcfa-2
  1
  8
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '((□? (x1)))))\""
  141
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  8
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))\""
  147
  ((2/25 2/25 0) (2/25 1/10 0) (1/10 3/25 0) (2/25 2/25 0) (1/10 1/10 0)))
'(kcfa-2
  1
  8
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '((□? (f1)))))\""
  155
  ((13/50 13/50 0)
   (13/50 13/50 0)
   (13/50 7/25 0)
   (7/25 7/25 0)
   (13/50 7/25 0)))
'(kcfa-2
  1
  8
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  173
  ((59/25 12/5 0)
   (3 159/50 0)
   (13/5 133/50 0)
   (68/25 139/50 0)
   (83/25 87/25 0)))
'(kcfa-2
  1
  8
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  182
  ((47/50 24/25 0)
   (23/25 47/50 0)
   (22/25 9/10 0)
   (9/10 23/25 0)
   (23/25 47/50 0)))
'(kcfa-2
  1
  8
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '((□? (f1)))))\""
  184
  ((3/50 3/50 0) (3/50 3/50 0) (2/25 2/25 0) (3/50 3/50 0) (3/50 3/50 0)))
'(kcfa-2
  1
  8
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))\""
  187
  ((1/10 1/10 0) (1/10 1/10 0) (1/10 3/25 0) (1/10 1/10 0) (1/10 1/10 0)))
'(kcfa-2
  1
  8
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '((□? (f2)) (□? (x1)))))\""
  196
  ((22/25 9/10 0) (24/25 49/50 0) (21/25 43/50 0) (43/50 22/25 0) (49/50 1 0)))
'(kcfa-2
  1
  8
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  196
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  8
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '((□? (f1)))))\""
  197
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  1
  8
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  215
  ((26/25 53/50 0)
   (9/10 47/50 0)
   (41/50 21/25 0)
   (41/50 21/25 0)
   (47/50 24/25 0)))
'(kcfa-2
  1
  8
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '((□? (x1)))))\""
  221
  ((19/50 2/5 0)
   (21/50 21/50 0)
   (23/50 12/25 0)
   (23/50 12/25 0)
   (23/50 12/25 0)))
'(kcfa-2
  1
  8
  "\"(list\n 'eval\n '(λ (z) (-> (app z x1 x2) <-))\n (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  230
  ((63/50 33/25 0)
   (31/25 32/25 0)
   (33/25 34/25 0)
   (13/10 33/25 0)
   (61/50 63/50 0)))
'(kcfa-2
  1
  8
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  233
  ((13/50 7/25 0) (13/50 7/25 0) (3/10 3/10 0) (13/50 7/25 0) (6/25 6/25 0)))
'(kcfa-2
  1
  8
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '((□? (f2)) (□? (x1)))))\""
  245
  ((1 51/50 0) (49/50 1 0) (47/50 49/50 0) (22/25 9/10 0) (41/50 21/25 0)))
'(kcfa-2
  1
  8
  "\"(list 'eval '(top) (menv '()))\""
  248
  ((2/25 2/25 0) (2/25 2/25 0) (3/50 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(kcfa-2
  1
  8
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-))\n (menv '((□? (f1)))))\""
  250
  ((1/10 1/10 0) (2/25 2/25 0) (2/25 2/25 0) (1/10 1/10 0) (2/25 2/25 0)))
'(kcfa-2
  1
  8
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  250
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  8
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '((□? (f2)) (□? (x1)))))\""
  253
  ((4/25 9/50 0) (9/50 9/50 0) (1/5 1/5 0) (4/25 4/25 0) (9/50 9/50 0)))
'(kcfa-2
  1
  8
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '((□? (f1)))))\""
  253
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  8
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '((□? (f2)) (□? (x1)))))\""
  253
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  8
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '((□? (f1)))))\""
  254
  ((1/25 1/25 0) (1/25 1/25 0) (1/50 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  1
  8
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  254
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  8
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '((□? (x2)) (□? (x1)))))\""
  254
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  8
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '((□? (x1)))))\""
  254
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  9
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '((□? (x1)))))\""
  58
  ((129/50 133/50 0)
   (68/25 14/5 0)
   (68/25 14/5 0)
   (123/50 127/50 0)
   (68/25 14/5 0)))
'(kcfa-2
  1
  9
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  67
  ((23/50 12/25 0)
   (12/25 12/25 0)
   (21/50 21/50 0)
   (21/50 11/25 0)
   (11/25 11/25 0)))
'(kcfa-2
  1
  9
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '((□? (x1)))))\""
  67
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  9
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  103
  ((36/25 37/25 0)
   (81/50 41/25 0)
   (3/2 77/50 0)
   (38/25 39/25 0)
   (87/50 9/5 0)))
'(kcfa-2
  1
  9
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  163
  ((38/5 389/50 1/25)
   (77/10 197/25 1/50)
   (369/50 189/25 1/50)
   (371/50 379/50 1/25)
   (363/50 373/50 1/50)))
'(kcfa-2
  1
  9
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  181
  ((127/50 13/5 0)
   (131/50 27/10 0)
   (13/5 133/50 0)
   (131/50 27/10 0)
   (12/5 123/50 0)))
'(kcfa-2
  1
  9
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  199
  ((29/25 6/5 0)
   (53/50 27/25 0)
   (26/25 53/50 0)
   (11/10 57/50 0)
   (67/50 69/50 0)))
'(kcfa-2
  1
  9
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '((□? (x2)) (□? (x1)))))\""
  199
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  9
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  208
  ((51/50 26/25 0)
   (27/25 28/25 0)
   (57/50 59/50 0)
   (11/10 57/50 0)
   (57/50 59/50 0)))
'(kcfa-2
  1
  9
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '((□? (f2)) (□? (x1)))))\""
  211
  ((9/50 1/5 0) (1/5 1/5 0) (1/5 1/5 0) (1/5 11/50 0) (1/5 1/5 0)))
'(kcfa-2
  1
  9
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '((□? (f1)))))\""
  218
  ((4/25 4/25 0) (4/25 4/25 0) (4/25 4/25 0) (7/50 4/25 0) (4/25 4/25 0)))
'(kcfa-2
  1
  9
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-))\n (menv '((□? (f1)))))\""
  224
  ((11/50 11/50 0) (11/50 11/50 0) (1/5 1/5 0) (1/5 1/5 0) (1/5 1/5 0)))
'(kcfa-2
  1
  9
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))\""
  227
  ((13/50 7/25 0) (7/25 7/25 0) (13/50 7/25 0) (7/25 3/10 0) (13/50 7/25 0)))
'(kcfa-2
  1
  9
  "\"(list\n 'eval\n '(λ (z) (-> (app z x1 x2) <-))\n (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  236
  ((38/25 77/50 0)
   (37/25 3/2 0)
   (63/50 32/25 0)
   (67/50 69/50 0)
   (83/50 42/25 0)))
'(kcfa-2
  1
  9
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '((□? (f1)))))\""
  236
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  9
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '((□? (f1)))))\""
  237
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  1
  9
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '((□? (f2)) (□? (x1)))))\""
  243
  ((1/2 13/25 0)
   (27/50 14/25 0)
   (27/50 27/50 0)
   (27/50 14/25 0)
   (27/50 14/25 0)))
'(kcfa-2
  1
  9
  "\"(list 'eval '(top) (menv '()))\""
  244
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  1
  9
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))\""
  247
  ((6/25 6/25 0) (6/25 6/25 0) (6/25 6/25 0) (6/25 6/25 0) (13/50 13/50 0)))
'(kcfa-2
  1
  9
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  247
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  9
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '((□? (x1)))))\""
  247
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  9
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  247
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  9
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  247
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  9
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '((□? (f1)))))\""
  248
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  1
  9
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '((□? (f2)) (□? (x1)))))\""
  248
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  9
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '((□? (f1)))))\""
  248
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  9
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '((□? (f1)))))\""
  248
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  1
  9
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '((□? (f2)) (□? (x1)))))\""
  254
  ((13/25 27/50 0)
   (27/50 27/50 0)
   (13/25 27/50 0)
   (13/25 27/50 0)
   (13/25 13/25 0)))
'(structural-rec
  1
  0
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  22
  ((3/10 8/25 0) (8/25 8/25 0) (3/10 3/10 0) (13/50 7/25 0) (7/25 7/25 0)))
'(structural-rec
  1
  0
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  22
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  0
  "\"(list 'eval '(app (-> y <-) y) (menv '((□? (y)))))\""
  24
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(structural-rec
  1
  0
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  25
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/25 1/25 0)))
'(structural-rec
  1
  0
  "\"(list 'eval '(app y (-> y <-)) (menv '((□? (y)))))\""
  26
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/25 1/25 0)))
'(structural-rec
  1
  0
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  26
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  0
  "\"(list 'eval '(top) (menv '()))\""
  27
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  0
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  27
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  0
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '((□? (y)))))\""
  28
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  1
  1
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  1
  1
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  23
  ((6/25 13/50 0)
   (13/50 13/50 0)
   (13/50 7/25 0)
   (13/50 13/50 0)
   (13/50 13/50 0)))
'(structural-rec
  1
  1
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  23
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  1
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  23
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  1
  "\"(list 'eval '(app (-> y <-) y) (menv '((□? (y)))))\""
  25
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  1
  1
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  25
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  1
  "\"(list 'eval '(top) (menv '()))\""
  26
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  1
  "\"(list 'eval '(app y (-> y <-)) (menv '((□? (y)))))\""
  27
  ((1/25 1/25 0) (1/25 3/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  1
  1
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '((□? (y)))))\""
  28
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  1
  2
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  1
  2
  "\"(list 'eval '(app y (-> y <-)) (menv '((□? (y)))))\""
  20
  ((17/50 17/50 0) (3/10 3/10 0) (3/10 3/10 0) (3/10 8/25 0) (7/25 3/10 0)))
'(structural-rec
  1
  2
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  2
  "\"(list 'eval '(app (-> y <-) y) (menv '((□? (y)))))\""
  21
  ((1/25 1/25 0) (1/25 1/25 0) (1/50 1/50 0) (1/50 1/25 0) (1/25 1/25 0)))
'(structural-rec
  1
  2
  "\"(list 'eval '(top) (menv '()))\""
  25
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (3/50 3/50 0) (1/25 1/25 0)))
'(structural-rec
  1
  2
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '((□? (y)))))\""
  26
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  1
  2
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  27
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  1
  2
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  27
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  2
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  28
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  1
  3
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  3
  "\"(list 'eval '(top) (menv '()))\""
  20
  ((3/10 8/25 0) (8/25 8/25 0) (8/25 8/25 0) (8/25 8/25 0) (8/25 8/25 0)))
'(structural-rec
  1
  3
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  3
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '((□? (y)))))\""
  23
  ((1/25 1/25 0) (3/50 3/50 0) (1/25 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(structural-rec
  1
  3
  "\"(list 'eval '(app (-> y <-) y) (menv '((□? (y)))))\""
  23
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  3
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  25
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  1
  3
  "\"(list 'eval '(app y (-> y <-)) (menv '((□? (y)))))\""
  26
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/25 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  1
  3
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  27
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  1
  3
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  28
  ((1/50 1/50 0) (0 0 0) (0 0 0) (1/50 1/50 0) (0 0 0)))
'(structural-rec
  1
  4
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  4
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  6
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  1
  4
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '((□? (y)))))\""
  23
  ((13/50 13/50 0)
   (13/50 13/50 0)
   (13/50 13/50 0)
   (13/50 13/50 0)
   (7/25 7/25 0)))
'(structural-rec
  1
  4
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  24
  ((1/50 1/50 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  4
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  24
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  4
  "\"(list 'eval '(app y (-> y <-)) (menv '((□? (y)))))\""
  25
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  1
  4
  "\"(list 'eval '(app (-> y <-) y) (menv '((□? (y)))))\""
  25
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  4
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  27
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  1
  4
  "\"(list 'eval '(top) (menv '()))\""
  28
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  5
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  5
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  5
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  22
  ((17/50 17/50 0) (8/25 8/25 0) (8/25 8/25 0) (3/10 3/10 0) (7/25 7/25 0)))
'(structural-rec
  1
  5
  "\"(list 'eval '(top) (menv '()))\""
  23
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  5
  "\"(list 'eval '(app (-> y <-) y) (menv '((□? (y)))))\""
  25
  ((1/50 1/50 0) (1/50 1/25 0) (1/50 1/25 0) (1/25 1/25 0) (1/50 1/50 0)))
'(structural-rec
  1
  5
  "\"(list 'eval '(app y (-> y <-)) (menv '((□? (y)))))\""
  26
  ((1/25 1/25 0) (1/50 1/50 0) (1/50 1/50 0) (1/25 1/25 0) (1/50 1/50 0)))
'(structural-rec
  1
  5
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  27
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  1
  5
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '((□? (y)))))\""
  28
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  1
  5
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  28
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  6
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  5
  ((1/25 1/25 0) (1/25 1/25 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  1
  6
  "\"(list 'eval '(top) (menv '()))\""
  22
  ((8/25 8/25 0) (3/10 8/25 0) (17/50 9/25 0) (8/25 17/50 0) (8/25 17/50 0)))
'(structural-rec
  1
  6
  "\"(list 'eval '(app (-> y <-) y) (menv '((□? (y)))))\""
  24
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(structural-rec
  1
  6
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  25
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  1
  6
  "\"(list 'eval '(app y (-> y <-)) (menv '((□? (y)))))\""
  26
  ((1/25 1/25 0) (1/50 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(structural-rec
  1
  6
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  26
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  6
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  27
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  1
  6
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '((□? (y)))))\""
  28
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  1
  6
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  28
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  7
  "\"(list 'eval '(top) (menv '()))\""
  20
  ((3/10 3/10 0) (7/25 7/25 0) (7/25 3/10 0) (3/10 3/10 0) (3/10 3/10 0)))
'(structural-rec
  1
  7
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  20
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  7
  "\"(list 'eval '(app (-> y <-) y) (menv '((□? (y)))))\""
  22
  ((1/50 1/50 0) (1/50 1/25 0) (1/50 1/50 0) (1/50 1/50 0) (1/25 1/25 0)))
'(structural-rec
  1
  7
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '((□? (y)))))\""
  23
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  1
  7
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  25
  ((1/50 1/50 0) (1/50 1/50 0) (0 0 0) (0 0 0) (0 1/50 0)))
'(structural-rec
  1
  7
  "\"(list 'eval '(app y (-> y <-)) (menv '((□? (y)))))\""
  26
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  1
  7
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  26
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  7
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  27
  ((0 0 0) (0 0 0) (0 0 0) (1/50 1/50 0) (0 1/50 0)))
'(structural-rec
  1
  7
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  28
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  8
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  8
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  6
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  1
  8
  "\"(list 'eval '(app (-> y <-) y) (menv '((□? (y)))))\""
  20
  ((11/50 11/50 0)
   (11/50 6/25 0)
   (11/50 11/50 0)
   (11/50 11/50 0)
   (3/10 3/10 0)))
'(structural-rec
  1
  8
  "\"(list 'eval '(top) (menv '()))\""
  24
  ((1/25 1/25 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/25 0)))
'(structural-rec
  1
  8
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  25
  ((0 0 0) (0 0 0) (0 0 0) (1/50 1/50 0) (0 0 0)))
'(structural-rec
  1
  8
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  25
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  8
  "\"(list 'eval '(app y (-> y <-)) (menv '((□? (y)))))\""
  26
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  1
  8
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '((□? (y)))))\""
  27
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  1
  8
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  28
  ((0 1/50 0) (1/50 1/50 0) (0 0 0) (0 1/50 0) (0 0 0)))
'(structural-rec
  1
  9
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  1
  9
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  9
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  22
  ((11/50 11/50 0) (6/25 6/25 0) (6/25 6/25 0) (6/25 6/25 0) (7/25 7/25 0)))
'(structural-rec
  1
  9
  "\"(list 'eval '(top) (menv '()))\""
  23
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  9
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  24
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  9
  "\"(list 'eval '(app (-> y <-) y) (menv '((□? (y)))))\""
  26
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  1
  9
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '((□? (y)))))\""
  27
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  1
  9
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  27
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  1
  9
  "\"(list 'eval '(app y (-> y <-)) (menv '((□? (y)))))\""
  28
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(app-num
  2
  0
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  9
  ((1/10 1/10 0) (2/25 2/25 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(app-num
  2
  0
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  13
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/25 1/25 0)))
'(app-num
  2
  0
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  0
  "\"(list 'eval '(top) (menv '()))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  0
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  0
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  0
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  16
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(app-num
  2
  0
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  0
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  0
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  1
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  1
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  1
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  1
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  1
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  10
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(app-num
  2
  1
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  12
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(app-num
  2
  1
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  1
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  1
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  15
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(app-num
  2
  1
  "\"(list 'eval '(top) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  2
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  8
  ((2/25 2/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(app-num
  2
  2
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  2
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  2
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  2
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  13
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(app-num
  2
  2
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  2
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  2
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  2
  "\"(list 'eval '(top) (menv '()))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  2
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  16
  ((1/25 1/25 0) (1/50 1/50 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(app-num
  2
  3
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  3
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  3
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  3
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  9
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(app-num
  2
  3
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  3
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  3
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  12
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/25 1/25 0) (1/50 1/50 0)))
'(app-num
  2
  3
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  14
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(app-num
  2
  3
  "\"(list 'eval '(top) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  3
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  4
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  4
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  8
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(app-num
  2
  4
  "\"(list 'eval '(top) (menv '()))\""
  14
  ((1/25 1/25 0) (1/50 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(app-num
  2
  4
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  4
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  16
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(app-num
  2
  4
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  4
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  4
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  4
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  4
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  5
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  5
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  5
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  10
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(app-num
  2
  5
  "\"(list 'eval '(top) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  5
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  14
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(app-num
  2
  5
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  5
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  5
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  5
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  16
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(app-num
  2
  5
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  6
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  8
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(app-num
  2
  6
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  6
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  6
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  6
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  6
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  12
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(app-num
  2
  6
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  6
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  6
  "\"(list 'eval '(top) (menv '()))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  6
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  16
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(app-num
  2
  7
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  9
  ((3/50 3/50 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(app-num
  2
  7
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  7
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  7
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  13
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(app-num
  2
  7
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  7
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  7
  "\"(list 'eval '(top) (menv '()))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  7
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  7
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  7
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  16
  ((1/50 1/50 0) (0 0 0) (0 0 0) (0 0 0) (1/50 1/50 0)))
'(app-num
  2
  8
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  8
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  10
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 3/50 0) (3/50 3/50 0)))
'(app-num
  2
  8
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  13
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(app-num
  2
  8
  "\"(list 'eval '(top) (menv '()))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  8
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  8
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  8
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  16
  ((1/50 1/50 0) (1/50 1/50 0) (1/25 1/25 0) (1/50 1/50 0) (1/50 1/50 0)))
'(app-num
  2
  8
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  8
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  8
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  9
  "\"(list 'eval '(app (-> x <-) 2) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  9
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  9
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  9
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  11
  ((3/50 2/25 0) (3/50 3/50 0) (3/50 2/25 0) (3/50 3/50 0) (2/25 2/25 0)))
'(app-num
  2
  9
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  13
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (0 0 0)))
'(app-num
  2
  9
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  15
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(app-num
  2
  9
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  9
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  9
  "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(app-num
  2
  9
  "\"(list 'eval '(top) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  0
  "\"(list 'eval '(app (-> - <-) y 1) (menv '((□? (y)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  0
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '((□? (y)))))\""
  9
  ((1/10 1/10 0) (2/25 1/10 0) (2/25 2/25 0) (3/50 3/50 0) (3/50 3/50 0)))
'(basic-letrec
  2
  0
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '((□? (y)))))\""
  50
  ((39/25 8/5 0) (34/25 7/5 0) (79/50 8/5 0) (67/50 69/50 0) (81/50 83/50 0)))
'(basic-letrec
  2
  0
  "\"(list 'eval '(top) (menv '()))\""
  56
  ((1/25 3/50 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 3/50 0) (3/50 3/50 0)))
'(basic-letrec
  2
  0
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '((□? (y)))))\""
  59
  ((6/25 6/25 0) (13/50 13/50 0) (3/10 8/25 0) (6/25 6/25 0) (6/25 13/50 0)))
'(basic-letrec
  2
  0
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  59
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  0
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '((□? (y)))))\""
  59
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  0
  "\"(list 'eval '(app - (-> y <-) 1) (menv '((□? (y)))))\""
  59
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  0
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '((□? (y)))))\""
  64
  ((11/50 11/50 0)
   (11/50 11/50 0)
   (11/50 11/50 0)
   (11/50 11/50 0)
   (1/5 1/5 0)))
'(basic-letrec
  2
  0
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '((□? (y)))))\""
  64
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  0
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '((□? (y)))))\""
  69
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(basic-letrec
  2
  0
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '((□? (y)))))\""
  69
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  0
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '((□? (y)))))\""
  74
  ((1/5 1/5 0) (1/5 1/5 0) (11/50 6/25 0) (1/5 1/5 0) (1/5 1/5 0)))
'(basic-letrec
  2
  0
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  0
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  0
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  0
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '((□? (y)))))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  1
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  1
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '((□? (y)))))\""
  31
  ((43/50 9/10 0)
   (43/50 22/25 0)
   (41/50 21/25 0)
   (22/25 23/25 0)
   (21/25 43/50 0)))
'(basic-letrec
  2
  1
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '((□? (y)))))\""
  36
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(basic-letrec
  2
  1
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  36
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  1
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '((□? (y)))))\""
  41
  ((3/25 7/50 0) (3/25 3/25 0) (3/25 3/25 0) (3/25 3/25 0) (3/25 3/25 0)))
'(basic-letrec
  2
  1
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '((□? (y)))))\""
  46
  ((11/50 11/50 0) (1/5 1/5 0) (1/5 1/5 0) (1/5 1/5 0) (11/50 11/50 0)))
'(basic-letrec
  2
  1
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '((□? (y)))))\""
  60
  ((1/2 13/25 0) (1/2 13/25 0) (1/2 13/25 0) (13/25 27/50 0) (12/25 12/25 0)))
'(basic-letrec
  2
  1
  "\"(list 'eval '(app - (-> y <-) 1) (menv '((□? (y)))))\""
  60
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  1
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  65
  ((1/25 3/50 0) (1/25 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(basic-letrec
  2
  1
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '((□? (y)))))\""
  68
  ((6/25 13/50 0) (6/25 6/25 0) (6/25 13/50 0) (11/50 6/25 0) (6/25 6/25 0)))
'(basic-letrec
  2
  1
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  68
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  1
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '((□? (y)))))\""
  73
  ((6/25 13/50 0) (6/25 6/25 0) (6/25 6/25 0) (6/25 6/25 0) (6/25 6/25 0)))
'(basic-letrec
  2
  1
  "\"(list 'eval '(top) (menv '()))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  1
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '((□? (y)))))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  1
  "\"(list 'eval '(app (-> - <-) y 1) (menv '((□? (y)))))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  1
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '((□? (y)))))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  1
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '((□? (y)))))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  2
  "\"(list 'eval '(app - (-> y <-) 1) (menv '((□? (y)))))\""
  30
  ((23/25 47/50 0)
   (39/50 4/5 0)
   (24/25 49/50 0)
   (9/10 23/25 0)
   (9/10 23/25 0)))
'(basic-letrec
  2
  2
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  30
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  2
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  31
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  2
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '((□? (y)))))\""
  31
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  2
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  36
  ((1/25 1/25 0) (1/25 1/25 0) (3/50 3/50 0) (2/25 2/25 0) (2/25 2/25 0)))
'(basic-letrec
  2
  2
  "\"(list 'eval '(top) (menv '()))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  2
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '((□? (y)))))\""
  42
  ((11/50 11/50 0) (11/50 11/50 0) (1/5 1/5 0) (1/5 1/5 0) (1/5 1/5 0)))
'(basic-letrec
  2
  2
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  42
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  2
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '((□? (y)))))\""
  47
  ((3/50 3/50 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(basic-letrec
  2
  2
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '((□? (y)))))\""
  66
  ((29/50 29/50 0)
   (29/50 29/50 0)
   (29/50 3/5 0)
   (31/50 16/25 0)
   (33/50 33/50 0)))
'(basic-letrec
  2
  2
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '((□? (y)))))\""
  66
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  2
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '((□? (y)))))\""
  66
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  2
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '((□? (y)))))\""
  69
  ((6/25 6/25 0) (6/25 6/25 0) (13/50 13/50 0) (11/50 6/25 0) (13/50 13/50 0)))
'(basic-letrec
  2
  2
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '((□? (y)))))\""
  69
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  2
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '((□? (y)))))\""
  74
  ((1/5 1/5 0) (11/50 6/25 0) (8/25 17/50 0) (6/25 6/25 0) (1/5 11/50 0)))
'(basic-letrec
  2
  2
  "\"(list 'eval '(app (-> - <-) y 1) (menv '((□? (y)))))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  2
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '((□? (y)))))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  3
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '((□? (y)))))\""
  4
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  2
  3
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  10
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(basic-letrec
  2
  3
  "\"(list 'eval '(top) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  3
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  3
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '((□? (y)))))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  3
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '((□? (y)))))\""
  54
  ((9/5 93/50 0) (46/25 47/25 0) (8/5 41/25 0) (39/25 8/5 0) (89/50 9/5 0)))
'(basic-letrec
  2
  3
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  54
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  3
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  54
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  3
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '((□? (y)))))\""
  59
  ((4/25 4/25 0) (4/25 4/25 0) (7/50 7/50 0) (7/50 7/50 0) (7/50 7/50 0)))
'(basic-letrec
  2
  3
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '((□? (y)))))\""
  59
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  3
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '((□? (y)))))\""
  64
  ((6/25 6/25 0) (6/25 6/25 0) (6/25 13/50 0) (6/25 13/50 0) (6/25 13/50 0)))
'(basic-letrec
  2
  3
  "\"(list 'eval '(app (-> - <-) y 1) (menv '((□? (y)))))\""
  64
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  3
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '((□? (y)))))\""
  69
  ((1/10 1/10 0) (3/25 7/50 0) (3/25 3/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(basic-letrec
  2
  3
  "\"(list 'eval '(app - (-> y <-) 1) (menv '((□? (y)))))\""
  69
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  3
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '((□? (y)))))\""
  69
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  3
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '((□? (y)))))\""
  69
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  3
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '((□? (y)))))\""
  74
  ((11/50 11/50 0)
   (11/50 11/50 0)
   (11/50 6/25 0)
   (11/50 11/50 0)
   (6/25 6/25 0)))
'(basic-letrec
  2
  4
  "\"(list 'eval '(app (-> - <-) y 1) (menv '((□? (y)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  4
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '((□? (y)))))\""
  35
  ((61/50 31/25 0)
   (33/25 34/25 0)
   (7/5 36/25 0)
   (63/50 13/10 0)
   (27/25 28/25 0)))
'(basic-letrec
  2
  4
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '((□? (y)))))\""
  45
  ((8/25 8/25 0) (8/25 17/50 0) (8/25 17/50 0) (17/50 17/50 0) (8/25 8/25 0)))
'(basic-letrec
  2
  4
  "\"(list 'eval '(top) (menv '()))\""
  50
  ((3/50 3/50 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 3/50 0)))
'(basic-letrec
  2
  4
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '((□? (y)))))\""
  54
  ((13/50 13/50 0) (7/25 3/10 0) (6/25 6/25 0) (11/50 11/50 0) (11/50 6/25 0)))
'(basic-letrec
  2
  4
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '((□? (y)))))\""
  59
  ((13/50 13/50 0) (8/25 17/50 0) (3/10 3/10 0) (6/25 6/25 0) (6/25 13/50 0)))
'(basic-letrec
  2
  4
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '((□? (y)))))\""
  59
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  4
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  59
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  4
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  59
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  4
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '((□? (y)))))\""
  64
  ((1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0)))
'(basic-letrec
  2
  4
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '((□? (y)))))\""
  69
  ((4/25 4/25 0) (4/25 4/25 0) (4/25 4/25 0) (4/25 9/50 0) (4/25 9/50 0)))
'(basic-letrec
  2
  4
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '((□? (y)))))\""
  74
  ((13/50 13/50 0)
   (13/50 13/50 0)
   (6/25 13/50 0)
   (13/50 13/50 0)
   (13/50 7/25 0)))
'(basic-letrec
  2
  4
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  4
  "\"(list 'eval '(app - (-> y <-) 1) (menv '((□? (y)))))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  4
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  4
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '((□? (y)))))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  4
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '((□? (y)))))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  5
  "\"(list 'eval '(top) (menv '()))\""
  7
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 2/25 0) (3/50 3/50 0) (2/25 2/25 0)))
'(basic-letrec
  2
  5
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '((□? (y)))))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  5
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '((□? (y)))))\""
  47
  ((38/25 39/25 0)
   (38/25 39/25 0)
   (34/25 69/50 0)
   (71/50 73/50 0)
   (37/25 38/25 0)))
'(basic-letrec
  2
  5
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  47
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  5
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  47
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  5
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '((□? (y)))))\""
  61
  ((1/2 1/2 0) (23/50 23/50 0) (21/50 11/25 0) (12/25 1/2 0) (13/25 27/50 0)))
'(basic-letrec
  2
  5
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  61
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  5
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '((□? (y)))))\""
  66
  ((6/25 6/25 0) (11/50 6/25 0) (11/50 6/25 0) (11/50 6/25 0) (6/25 13/50 0)))
'(basic-letrec
  2
  5
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '((□? (y)))))\""
  66
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  5
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '((□? (y)))))\""
  68
  ((4/25 4/25 0) (9/50 9/50 0) (9/50 9/50 0) (9/50 9/50 0) (9/50 9/50 0)))
'(basic-letrec
  2
  5
  "\"(list 'eval '(app (-> - <-) y 1) (menv '((□? (y)))))\""
  68
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  5
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '((□? (y)))))\""
  73
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(basic-letrec
  2
  5
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '((□? (y)))))\""
  74
  ((1/10 3/25 0) (1/10 3/25 0) (3/25 3/25 0) (3/25 3/25 0) (3/25 3/25 0)))
'(basic-letrec
  2
  5
  "\"(list 'eval '(app - (-> y <-) 1) (menv '((□? (y)))))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  5
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  5
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '((□? (y)))))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  5
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '((□? (y)))))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  6
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  6
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '((□? (y)))))\""
  36
  ((7/5 36/25 0) (71/50 73/50 0) (59/50 61/50 0) (49/50 1 0) (1 51/50 0)))
'(basic-letrec
  2
  6
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  41
  ((3/50 2/25 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(basic-letrec
  2
  6
  "\"(list 'eval '(app (-> - <-) y 1) (menv '((□? (y)))))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  6
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '((□? (y)))))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  6
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '((□? (y)))))\""
  53
  ((11/25 23/50 0)
   (1/2 13/25 0)
   (13/25 13/25 0)
   (13/25 13/25 0)
   (27/50 27/50 0)))
'(basic-letrec
  2
  6
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '((□? (y)))))\""
  53
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  6
  "\"(list 'eval '(app - (-> y <-) 1) (menv '((□? (y)))))\""
  53
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  6
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '((□? (y)))))\""
  63
  ((17/50 17/50 0)
   (8/25 17/50 0)
   (8/25 17/50 0)
   (8/25 17/50 0)
   (17/50 17/50 0)))
'(basic-letrec
  2
  6
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  63
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  6
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '((□? (y)))))\""
  68
  ((1/10 1/10 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(basic-letrec
  2
  6
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '((□? (y)))))\""
  68
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  6
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '((□? (y)))))\""
  73
  ((11/50 11/50 0) (8/25 8/25 0) (6/25 6/25 0) (11/50 11/50 0) (11/50 6/25 0)))
'(basic-letrec
  2
  6
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  73
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  6
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '((□? (y)))))\""
  73
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  6
  "\"(list 'eval '(top) (menv '()))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  6
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '((□? (y)))))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  7
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '((□? (y)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  7
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '((□? (y)))))\""
  40
  ((69/50 36/25 0)
   (29/25 6/5 0)
   (59/50 61/50 0)
   (53/50 27/25 0)
   (53/50 27/25 0)))
'(basic-letrec
  2
  7
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '((□? (y)))))\""
  45
  ((11/50 11/50 0) (1/5 1/5 0) (1/5 11/50 0) (11/50 6/25 0) (6/25 13/50 0)))
'(basic-letrec
  2
  7
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '((□? (y)))))\""
  45
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  7
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '((□? (y)))))\""
  55
  ((11/25 11/25 0)
   (23/50 12/25 0)
   (11/25 23/50 0)
   (21/50 21/50 0)
   (19/50 19/50 0)))
'(basic-letrec
  2
  7
  "\"(list 'eval '(app (-> - <-) y 1) (menv '((□? (y)))))\""
  55
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  7
  "\"(list 'eval '(app - (-> y <-) 1) (menv '((□? (y)))))\""
  55
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  7
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '((□? (y)))))\""
  60
  ((2/25 1/10 0) (2/25 1/10 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(basic-letrec
  2
  7
  "\"(list 'eval '(top) (menv '()))\""
  64
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(basic-letrec
  2
  7
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  64
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  7
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '((□? (y)))))\""
  69
  ((7/50 7/50 0) (7/50 7/50 0) (7/50 4/25 0) (7/50 4/25 0) (7/50 4/25 0)))
'(basic-letrec
  2
  7
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  69
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  7
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  69
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  7
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  69
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  7
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '((□? (y)))))\""
  74
  ((6/25 13/50 0) (11/50 11/50 0) (1/5 11/50 0) (6/25 6/25 0) (11/50 6/25 0)))
'(basic-letrec
  2
  7
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '((□? (y)))))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  7
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '((□? (y)))))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  8
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  8
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '((□? (y)))))\""
  37
  ((1 51/50 0) (59/50 61/50 0) (59/50 6/5 0) (1 51/50 0) (53/50 11/10 0)))
'(basic-letrec
  2
  8
  "\"(list 'eval '(app - (-> y <-) 1) (menv '((□? (y)))))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  8
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '((□? (y)))))\""
  42
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(basic-letrec
  2
  8
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '((□? (y)))))\""
  57
  ((23/50 23/50 0)
   (11/25 23/50 0)
   (11/25 23/50 0)
   (12/25 1/2 0)
   (12/25 1/2 0)))
'(basic-letrec
  2
  8
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '((□? (y)))))\""
  57
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  8
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  57
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  8
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '((□? (y)))))\""
  67
  ((23/50 12/25 0) (2/5 2/5 0) (9/25 19/50 0) (9/25 9/25 0) (9/25 19/50 0)))
'(basic-letrec
  2
  8
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '((□? (y)))))\""
  72
  ((7/25 7/25 0) (7/25 3/10 0) (7/25 7/25 0) (7/25 7/25 0) (13/50 7/25 0)))
'(basic-letrec
  2
  8
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  72
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  8
  "\"(list 'eval '(top) (menv '()))\""
  74
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/25 0) (1/50 1/50 0) (1/50 1/50 0)))
'(basic-letrec
  2
  8
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '((□? (y)))))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  8
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '((□? (y)))))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  8
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '((□? (y)))))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  8
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  8
  "\"(list 'eval '(app (-> - <-) y 1) (menv '((□? (y)))))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  8
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '((□? (y)))))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  9
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  9
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '((□? (y)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  9
  "\"(list 'eval '(app - (-> y <-) 1) (menv '((□? (y)))))\""
  35
  ((51/50 26/25 0) (49/50 1 0) (26/25 53/50 0) (24/25 1 0) (11/10 28/25 0)))
'(basic-letrec
  2
  9
  "\"(list\n 'eval\n '(match (app equal? y 0) (#t (app a (app - y 1))) (-> #f y <-))\n (menv '((□? (y)))))\""
  40
  ((11/50 11/50 0)
   (11/50 11/50 0)
   (11/50 11/50 0)
   (11/50 11/50 0)
   (1/5 1/5 0)))
'(basic-letrec
  2
  9
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '((□? (y)))))\""
  45
  ((2/25 1/10 0) (1/10 1/10 0) (1/10 3/25 0) (1/10 1/10 0) (1/10 1/10 0)))
'(basic-letrec
  2
  9
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '((□? (y)))))\""
  50
  ((1/5 11/50 0) (9/50 9/50 0) (9/50 1/5 0) (9/50 9/50 0) (1/5 1/5 0)))
'(basic-letrec
  2
  9
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  55
  ((1/25 1/25 0) (3/50 3/50 0) (1/25 3/50 0) (1/25 1/25 0) (1/25 1/25 0)))
'(basic-letrec
  2
  9
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '((□? (y)))))\""
  55
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  9
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y) (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)))\n            <-))\n    bod)\n (menv '()))\""
  55
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  9
  "\"(list 'eval '(app (-> - <-) y 1) (menv '((□? (y)))))\""
  55
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  9
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) (#t (app a (app - y 1))) (#f y))\n (menv '((□? (y)))))\""
  59
  ((9/50 9/50 0) (1/5 1/5 0) (11/50 6/25 0) (11/50 11/50 0) (11/50 11/50 0)))
'(basic-letrec
  2
  9
  "\"(list 'eval '(top) (menv '()))\""
  60
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  9
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) (#t (app a (app - y 1))) (#f y)) <-))\n (menv '((□? (y)))))\""
  64
  ((1/5 1/5 0) (11/50 6/25 0) (1/5 1/5 0) (1/5 11/50 0) (1/5 11/50 0)))
'(basic-letrec
  2
  9
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  64
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  9
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> #t (app a (app - y 1)) <-) (#f y))\n (menv '((□? (y)))))\""
  74
  ((17/50 17/50 0) (9/25 9/25 0) (12/25 12/25 0) (2/5 2/5 0) (9/25 9/25 0)))
'(basic-letrec
  2
  9
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '((□? (y)))))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letrec
  2
  9
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '((□? (y)))))\""
  74
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  0
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  0
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  0
  "\"(list 'eval '(top) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  0
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  1
  "\"(list 'eval '(top) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  1
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  1
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  1
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  2
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  2
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  2
  "\"(list 'eval '(top) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  2
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  3
  "\"(list 'eval '(top) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  3
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  3
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  3
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  4
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  4
  "\"(list 'eval '(top) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  4
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  4
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  5
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  5
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  5
  "\"(list 'eval '(top) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  5
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  6
  "\"(list 'eval '(top) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  6
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  6
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  6
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  7
  "\"(list 'eval '(top) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  7
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  7
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  7
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  8
  "\"(list 'eval '(top) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  8
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  8
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  8
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  9
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  9
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  9
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(basic-letstar
  2
  9
  "\"(list 'eval '(top) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  0
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  0
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  0
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  0
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  0
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  0
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  0
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  8
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(constr
  2
  0
  "\"(list 'eval '(top) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  0
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  1
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (3/50 3/50 0) (1/25 3/50 0)))
'(constr
  2
  1
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  1
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  1
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  1
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  1
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  1
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  1
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  1
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  2
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  2
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  2
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  2
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  2
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  8
  ((1/50 1/50 0) (1/25 1/25 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(constr
  2
  2
  "\"(list 'eval '(top) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  2
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  2
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  2
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  3
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  3
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  3
  "\"(list 'eval '(top) (menv '()))\""
  9
  ((1/25 1/25 0) (1/25 1/25 0) (3/50 3/50 0) (1/25 1/25 0) (1/25 1/25 0)))
'(constr
  2
  3
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  3
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  3
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  3
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  3
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  3
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  4
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  7
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 3/50 0)))
'(constr
  2
  4
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  4
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  4
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  4
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  4
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  4
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  4
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  4
  "\"(list 'eval '(top) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  5
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(constr
  2
  5
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  5
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  5
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  5
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  5
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  5
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  5
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  5
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  6
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  6
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  6
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  6
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(constr
  2
  6
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  6
  "\"(list 'eval '(top) (menv '()))\""
  9
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(constr
  2
  6
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  6
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  6
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  6
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  7
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  7
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(constr
  2
  7
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(constr
  2
  7
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  7
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  7
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  7
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  7
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  7
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  8
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  8
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  8
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  8
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  8
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(constr
  2
  8
  "\"(list 'eval '(top) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  8
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  8
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  8
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  8
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  9
  "\"(list 'eval '(let ((-> x = (app cons 1 nil) <-)) bod) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  9
  "\"(list 'eval '(app cons (-> 1 <-) nil) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  9
  "\"(list 'eval '(app (-> cons <-) 1 nil) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  9
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) (_ x)) <-)) (menv '()))\""
  7
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(constr
  2
  9
  "\"(list 'eval '(match x ((cons 1 n) n) (-> _ x <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  9
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) (_ x)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  9
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) (_ x)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  9
  "\"(list 'eval '(top) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(constr
  2
  9
  "\"(list 'eval '(app cons 1 (-> nil <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  0
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  7
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  2
  0
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  0
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  0
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  10
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  2
  0
  "\"(list 'eval '(top) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  0
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  1
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  7
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  2
  1
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  1
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  1
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  1
  "\"(list 'eval '(top) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  1
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  11
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  2
  2
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  2
  2
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  7
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  2
  2
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  2
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  2
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  2
  "\"(list 'eval '(top) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  3
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  7
  ((1/50 1/50 0) (1/25 1/25 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  2
  3
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  3
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  3
  "\"(list 'eval '(top) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  3
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  3
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  11
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  2
  4
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  2
  4
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  4
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  9
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  2
  4
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  4
  "\"(list 'eval '(top) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  4
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  5
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  5
  "\"(list 'eval '(top) (menv '()))\""
  6
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  2
  5
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  9
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  2
  5
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  5
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  11
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  2
  5
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  6
  "\"(list 'eval '(top) (menv '()))\""
  6
  ((1/50 1/50 0) (0 0 0) (0 0 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  2
  6
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  9
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  2
  6
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  6
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  11
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  2
  6
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  6
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  7
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  5
  ((0 1/50 0) (0 0 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  2
  7
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  7
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  10
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  2
  7
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  7
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  7
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  8
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  8
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  6
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  2
  8
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  8
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  10
  ((1/50 1/50 0) (1/25 1/25 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  2
  8
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  8
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  9
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  9
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  6
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/25 0) (1/50 1/50 0) (1/25 1/25 0)))
'(err
  2
  9
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  8
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(err
  2
  9
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  9
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(err
  2
  9
  "\"(list 'eval '(top) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  0
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (1/50 1/50 0)))
'(id
  2
  0
  "\"(list 'eval '(top) (menv '()))\""
  10
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(id
  2
  0
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  0
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '((□? (x)))))\""
  12
  ((1/50 1/50 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  0
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  1
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  1
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  1
  "\"(list 'eval '(top) (menv '()))\""
  10
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(id
  2
  1
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  1
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '((□? (x)))))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  2
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '((□? (x)))))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(id
  2
  2
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  2
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  2
  "\"(list 'eval '(top) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  2
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  12
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(id
  2
  3
  "\"(list 'eval '(top) (menv '()))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(id
  2
  3
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  3
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  3
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '((□? (x)))))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  3
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  4
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  4
  "\"(list 'eval '(top) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (1/50 1/50 0) (0 0 0) (0 0 0)))
'(id
  2
  4
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  4
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (1/50 1/50 0) (0 0 0)))
'(id
  2
  4
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '((□? (x)))))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  5
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  5
  "\"(list 'eval '(top) (menv '()))\""
  5
  ((0 1/50 0) (0 1/50 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  5
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  5
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  5
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '((□? (x)))))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  6
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  6
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '((□? (x)))))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(id
  2
  6
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (1/50 1/50 0) (0 0 0)))
'(id
  2
  6
  "\"(list 'eval '(top) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  6
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  7
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  7
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '((□? (x)))))\""
  11
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(id
  2
  7
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  7
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  7
  "\"(list 'eval '(top) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  8
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  8
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  8
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '((□? (x)))))\""
  6
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(id
  2
  8
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  11
  ((1/50 1/50 0) (1/50 1/50 0) (0 1/50 0) (0 0 0) (0 0 0)))
'(id
  2
  8
  "\"(list 'eval '(top) (menv '()))\""
  12
  ((0 0 0) (1/50 1/50 0) (0 0 0) (1/50 1/50 0) (0 0 0)))
'(id
  2
  9
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  9
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '((□? (x)))))\""
  6
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(id
  2
  9
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  9
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(id
  2
  9
  "\"(list 'eval '(top) (menv '()))\""
  12
  ((0 0 0) (0 0 0) (1/50 1/50 0) (1/50 1/50 0) (0 0 0)))
'(let-num
  2
  0
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  0
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  7
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(let-num
  2
  0
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  0
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  0
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  0
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (1/50 1/50 0) (1/50 1/50 0)))
'(let-num
  2
  1
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  7
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(let-num
  2
  1
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  1
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  1
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  1
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  1
  "\"(list 'eval '(top) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  2
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(let-num
  2
  2
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  2
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  2
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  2
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  2
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  3
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  6
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(let-num
  2
  3
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  3
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  3
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  3
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  3
  "\"(list 'eval '(top) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  4
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  4
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  6
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(let-num
  2
  4
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  4
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  4
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  4
  "\"(list 'eval '(top) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  5
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  5
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  7
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(let-num
  2
  5
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  5
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  5
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  5
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  6
  "\"(list 'eval '(top) (menv '()))\""
  8
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(let-num
  2
  6
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  6
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  8
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  6
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  10
  ((0 0 0) (1/50 1/50 0) (1/50 1/50 0) (0 0 0) (0 0 0)))
'(let-num
  2
  6
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  6
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  7
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  6
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(let-num
  2
  7
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  7
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  9
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(let-num
  2
  7
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  7
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  7
  "\"(list 'eval '(top) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  8
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  6
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(let-num
  2
  8
  "\"(list 'eval '(top) (menv '()))\""
  10
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(let-num
  2
  8
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  8
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  8
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  8
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  9
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  6
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(let-num
  2
  9
  "\"(list 'eval '(top) (menv '()))\""
  10
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(let-num
  2
  9
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  9
  "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  9
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let-num
  2
  9
  "\"(list 'eval '(app (-> x <-) 1) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   0
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   1
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   0
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
   6
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   0
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   7
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   0
   "\"(list 'eval '(top) (menv '()))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   1
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
   5
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   1
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   6
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   1
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   7
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   1
   "\"(list 'eval '(top) (menv '()))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   2
   "\"(list 'eval '(top) (menv '()))\""
   3
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   2
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   3
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   2
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   2
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   3
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
   5
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   3
   "\"(list 'eval '(top) (menv '()))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   3
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   3
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   4
   "\"(list 'eval '(top) (menv '()))\""
   3
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   4
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   3
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   4
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   3
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   4
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   5
   "\"(list 'eval '(top) (menv '()))\""
   3
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   5
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   5
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   5
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   6
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   1
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   6
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
   6
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   6
   "\"(list 'eval '(top) (menv '()))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   6
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   7
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   1
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   7
   "\"(list 'eval '(top) (menv '()))\""
   3
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   7
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   3
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   7
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   8
   "\"(list 'eval '(top) (menv '()))\""
   3
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   8
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   8
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   8
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   9
   "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
   5
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   9
   "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\""
   7
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   9
   "\"(list 'eval '(top) (menv '()))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(let 2
   9
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   8
   ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  0
  "\"(list 'eval '(app (-> x <-) y) (menv '((□? (x y)))))\""
  5
  ((1/50 1/50 0) (1/50 1/25 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  2
  0
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  0
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '((□? (z)))))\""
  13
  ((3/50 2/25 0) (2/25 1/10 0) (1/10 6/25 0) (1/10 9/50 0) (1/10 8/25 0)))
'(multi-param
  2
  0
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  13
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  0
  "\"(list 'eval '(app x (-> y <-)) (menv '((□? (x y)))))\""
  14
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/25 0)))
'(multi-param
  2
  0
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  0
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '((□? (x y)))))\""
  18
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(multi-param
  2
  0
  "\"(list 'eval '(top) (menv '()))\""
  19
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  1
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '((□? (z)))))\""
  9
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(multi-param
  2
  1
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  1
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  10
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  1
  "\"(list 'eval '(app (-> x <-) y) (menv '((□? (x y)))))\""
  13
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  2
  1
  "\"(list 'eval '(app x (-> y <-)) (menv '((□? (x y)))))\""
  14
  ((0 0 0) (1/50 1/50 0) (0 0 0) (0 0 0) (1/50 1/50 0)))
'(multi-param
  2
  1
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '((□? (x y)))))\""
  18
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(multi-param
  2
  1
  "\"(list 'eval '(top) (menv '()))\""
  19
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  1
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  19
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  2
  "\"(list 'eval '(app (-> x <-) y) (menv '((□? (x y)))))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  2
  2
  "\"(list 'eval '(top) (menv '()))\""
  13
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(multi-param
  2
  2
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '((□? (z)))))\""
  15
  ((0 0 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  2
  2
  "\"(list 'eval '(app x (-> y <-)) (menv '((□? (x y)))))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  2
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '((□? (x y)))))\""
  19
  ((1/50 1/25 0) (1/50 1/50 0) (1/25 1/25 0) (1/50 1/50 0) (1/25 1/25 0)))
'(multi-param
  2
  2
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  19
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  2
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  19
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  2
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  19
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  3
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '((□? (z)))))\""
  9
  ((1/25 3/50 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(multi-param
  2
  3
  "\"(list 'eval '(app x (-> y <-)) (menv '((□? (x y)))))\""
  11
  ((0 0 0) (0 1/50 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  3
  "\"(list 'eval '(app (-> x <-) y) (menv '((□? (x y)))))\""
  14
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  2
  3
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  14
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  3
  "\"(list 'eval '(top) (menv '()))\""
  16
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  2
  3
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  3
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '((□? (x y)))))\""
  19
  ((1/25 1/25 0) (1/25 1/25 0) (1/50 1/25 0) (1/50 1/25 0) (1/25 1/25 0)))
'(multi-param
  2
  3
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  19
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  4
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  4
  "\"(list 'eval '(app (-> x <-) y) (menv '((□? (x y)))))\""
  6
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  2
  4
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '((□? (x y)))))\""
  15
  ((1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (2/25 1/10 0) (2/25 2/25 0)))
'(multi-param
  2
  4
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '((□? (z)))))\""
  17
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  2
  4
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  17
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  4
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  17
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  4
  "\"(list 'eval '(app x (-> y <-)) (menv '((□? (x y)))))\""
  18
  ((0 0 0) (1/50 1/50 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  4
  "\"(list 'eval '(top) (menv '()))\""
  19
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  5
  "\"(list 'eval '(app (-> x <-) y) (menv '((□? (x y)))))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  2
  5
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  5
  "\"(list 'eval '(app x (-> y <-)) (menv '((□? (x y)))))\""
  8
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  2
  5
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  9
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  5
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '((□? (z)))))\""
  14
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(multi-param
  2
  5
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '((□? (x y)))))\""
  18
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(multi-param
  2
  5
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  18
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  5
  "\"(list 'eval '(top) (menv '()))\""
  19
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  6
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  6
  "\"(list 'eval '(app x (-> y <-)) (menv '((□? (x y)))))\""
  6
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  2
  6
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  7
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  6
  "\"(list 'eval '(app (-> x <-) y) (menv '((□? (x y)))))\""
  9
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  2
  6
  "\"(list 'eval '(top) (menv '()))\""
  14
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(multi-param
  2
  6
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '((□? (z)))))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 1/50 0)))
'(multi-param
  2
  6
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  6
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '((□? (x y)))))\""
  19
  ((1/50 1/25 0) (1/25 1/25 0) (1/50 1/50 0) (1/50 1/25 0) (1/50 1/50 0)))
'(multi-param
  2
  7
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '((□? (x y)))))\""
  15
  ((7/50 7/50 0) (3/25 7/50 0) (3/25 3/25 0) (1/10 1/10 0) (3/25 3/25 0)))
'(multi-param
  2
  7
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  7
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  7
  "\"(list 'eval '(app x (-> y <-)) (menv '((□? (x y)))))\""
  16
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  2
  7
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '((□? (z)))))\""
  18
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  2
  7
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  18
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  7
  "\"(list 'eval '(app (-> x <-) y) (menv '((□? (x y)))))\""
  18
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  7
  "\"(list 'eval '(top) (menv '()))\""
  19
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  8
  "\"(list 'eval '(app (-> x <-) y) (menv '((□? (x y)))))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  2
  8
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '((□? (x y)))))\""
  15
  ((1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0)))
'(multi-param
  2
  8
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  8
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  15
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  8
  "\"(list 'eval '(top) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  8
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  16
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  8
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '((□? (z)))))\""
  18
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  2
  8
  "\"(list 'eval '(app x (-> y <-)) (menv '((□? (x y)))))\""
  19
  ((0 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  2
  9
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  9
  "\"(list 'eval '(app x (-> y <-)) (menv '((□? (x y)))))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(multi-param
  2
  9
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '((□? (z)))))\""
  11
  ((3/50 3/50 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(multi-param
  2
  9
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '((□? (x y)))))\""
  18
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (1/10 1/10 0)))
'(multi-param
  2
  9
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  18
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  9
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  18
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  9
  "\"(list 'eval '(app (-> x <-) y) (menv '((□? (x y)))))\""
  18
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(multi-param
  2
  9
  "\"(list 'eval '(top) (menv '()))\""
  19
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  0
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '((□? (m n)))))\""
  213
  ((859/50 88/5 1/10)
   (35/2 179/10 2/25)
   (87/5 89/5 1/10)
   (407/25 417/25 2/25)
   (873/50 179/10 2/25)))
'(ack
  2
  0
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '((□? (m n)))))\""
  213
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  0
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '((□? (m n)))))\""
  230
  ((27/25 11/10 0) (57/50 29/25 0) (1 51/50 0) (22/25 9/10 0) (1 51/50 0)))
'(ack
  2
  0
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '((□? (m n)))))\""
  282
  ((4 41/10 0)
   (21/5 43/10 0)
   (189/50 97/25 0)
   (203/50 104/25 0)
   (183/50 94/25 0)))
'(ack
  2
  0
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  282
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  0
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '((□? (m n)))))\""
  282
  ((1/50 1/50 0) (1/50 1/50 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  0
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '((□? (m n)))))\""
  282
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  0
  "\"(list 'eval '(app = (-> n <-) 0) (menv '((□? (m n)))))\""
  299
  ((137/50 14/5 0)
   (171/50 7/2 0)
   (173/50 177/50 0)
   (76/25 78/25 0)
   (82/25 167/50 0)))
'(ack
  2
  0
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  350
  ((203/50 104/25 0)
   (99/25 203/50 0)
   (197/50 101/25 0)
   (97/25 199/50 0)
   (41/10 21/5 0)))
'(ack
  2
  0
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  504
  ((163/10 417/25 1/10)
   (379/25 777/50 1/10)
   (381/25 391/25 1/10)
   (773/50 396/25 1/10)
   (801/50 82/5 1/10)))
'(ack
  2
  0
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  505
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  0
  "\"(list 'eval '(app (-> = <-) n 0) (menv '((□? (m n)))))\""
  505
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  0
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  505
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  0
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '((□? (m n)))))\""
  505
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  0
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  513
  ((6/25 6/25 0) (4/25 9/50 0) (4/25 9/50 0) (9/50 9/50 0) (4/25 4/25 0)))
'(ack
  2
  0
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  513
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  0
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '((□? (m n)))))\""
  530
  ((39/50 4/5 0)
   (4/5 41/50 0)
   (31/50 16/25 0)
   (31/50 16/25 0)
   (37/50 19/25 0)))
'(ack
  2
  0
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '((□? (m n)))))\""
  572
  ((151/25 31/5 0)
   (152/25 311/50 0)
   (143/25 293/50 0)
   (293/50 6 1/50)
   (303/50 31/5 1/50)))
'(ack
  2
  0
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  589
  ((47/50 24/25 0)
   (23/25 47/50 0)
   (23/25 47/50 0)
   (49/50 1 0)
   (63/50 32/25 0)))
'(ack
  2
  0
  "\"(list 'eval '(app + (-> n <-) 1) (menv '((□? (m n)))))\""
  589
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  0
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '((□? (m n)))))\""
  589
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  0
  "\"(list 'eval '(top) (menv '()))\""
  590
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  0
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '((□? (m n)))))\""
  590
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  0
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  590
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  0
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  590
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  0
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  590
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  0
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  590
  ((0 0 0) (0 0 0) (1/50 1/50 0) (0 0 0) (0 0 0)))
'(ack
  2
  0
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  590
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  0
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '((□? (m n)))))\""
  590
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  0
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '((□? (m n)))))\""
  607
  ((3/5 31/50 0) (3/5 31/50 0) (39/50 4/5 0) (19/25 39/50 0) (16/25 33/50 0)))
'(ack
  2
  0
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  0
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  0
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  0
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '((□? (m n)))))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  0
  "\"(list 'eval '(app - (-> n <-) 1) (menv '((□? (m n)))))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  0
  "\"(list 'eval '(app (-> - <-) n 1) (menv '((□? (m n)))))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  0
  "\"(list 'eval '(app = (-> m <-) 0) (menv '((□? (m n)))))\""
  624
  ((86/25 88/25 0)
   (79/25 161/50 0)
   (147/50 76/25 0)
   (37/10 189/50 0)
   (78/25 16/5 1/50)))
'(ack
  2
  0
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  641
  ((79/50 81/50 0)
   (42/25 43/25 0)
   (36/25 37/25 0)
   (67/50 69/50 0)
   (7/5 71/50 0)))
'(ack
  2
  0
  "\"(list 'eval '(app (-> + <-) n 1) (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  0
  "\"(list 'eval '(app (-> = <-) m 0) (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  1
  "\"(list 'eval '(app (-> = <-) n 0) (menv '((□? (m n)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  1
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  4
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  2
  1
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '((□? (m n)))))\""
  262
  ((1183/50 608/25 4/25)
   (23 589/25 7/50)
   (1169/50 1197/50 4/25)
   (607/25 1243/50 4/25)
   (119/5 122/5 7/50)))
'(ack
  2
  1
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  279
  ((44/25 9/5 0) (8/5 41/25 0) (44/25 9/5 0) (42/25 43/25 0) (41/25 42/25 0)))
'(ack
  2
  1
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  280
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  1
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  280
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  1
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  280
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  1
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  374
  ((331/50 341/50 1/50)
   (351/50 359/50 1/50)
   (341/50 7 1/50)
   (168/25 172/25 1/50)
   (7 361/50 1/50)))
'(ack
  2
  1
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  381
  ((6/25 6/25 0) (11/50 11/50 0) (9/50 9/50 0) (4/25 9/50 0) (1/5 1/5 0)))
'(ack
  2
  1
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  381
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  1
  "\"(list 'eval '(app - (-> n <-) 1) (menv '((□? (m n)))))\""
  508
  ((581/50 119/10 3/50)
   (553/50 284/25 1/25)
   (56/5 573/50 3/50)
   (577/50 591/50 3/50)
   (523/50 537/50 1/25)))
'(ack
  2
  1
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '((□? (m n)))))\""
  538
  ((106/25 217/50 0)
   (223/50 114/25 0)
   (213/50 219/50 0)
   (211/50 108/25 0)
   (231/50 237/50 0)))
'(ack
  2
  1
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  538
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  1
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  538
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  1
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  572
  ((133/50 68/25 0)
   (119/50 123/50 0)
   (63/25 129/50 0)
   (121/50 62/25 0)
   (58/25 59/25 0)))
'(ack
  2
  1
  "\"(list 'eval '(app (-> + <-) n 1) (menv '((□? (m n)))))\""
  572
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  1
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '((□? (m n)))))\""
  589
  ((7/10 18/25 0)
   (19/25 19/25 0)
   (18/25 37/50 0)
   (37/50 19/25 0)
   (9/10 23/25 0)))
'(ack
  2
  1
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  589
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  1
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  589
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  1
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '((□? (m n)))))\""
  589
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  1
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  589
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  1
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  589
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  1
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '((□? (m n)))))\""
  589
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  1
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '((□? (m n)))))\""
  589
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  1
  "\"(list 'eval '(app (-> - <-) n 1) (menv '((□? (m n)))))\""
  589
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  1
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '((□? (m n)))))\""
  606
  ((3/5 31/50 0)
   (37/50 19/25 0)
   (37/50 19/25 0)
   (19/25 39/50 0)
   (33/50 17/25 0)))
'(ack
  2
  1
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '((□? (m n)))))\""
  606
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  1
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  606
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  1
  "\"(list 'eval '(app = (-> n <-) 0) (menv '((□? (m n)))))\""
  623
  ((143/50 147/50 0)
   (141/50 29/10 0)
   (76/25 78/25 0)
   (74/25 76/25 0)
   (137/50 141/50 0)))
'(ack
  2
  1
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '((□? (m n)))))\""
  623
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  1
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '((□? (m n)))))\""
  623
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  1
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  623
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  1
  "\"(list 'eval '(app + (-> n <-) 1) (menv '((□? (m n)))))\""
  623
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  1
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '((□? (m n)))))\""
  623
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  1
  "\"(list 'eval '(top) (menv '()))\""
  624
  ((1/50 1/50 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  1
  "\"(list 'eval '(app (-> = <-) m 0) (menv '((□? (m n)))))\""
  624
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  1
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '((□? (m n)))))\""
  624
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  1
  "\"(list 'eval '(app = (-> m <-) 0) (menv '((□? (m n)))))\""
  641
  ((147/50 3 0)
   (83/25 17/5 0)
   (153/50 157/50 0)
   (76/25 78/25 0)
   (76/25 157/50 0)))
'(ack
  2
  1
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  1
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (1/50 1/50 0) (0 0 0) (0 0 0)))
'(ack
  2
  2
  "\"(list 'eval '(app (-> = <-) n 0) (menv '((□? (m n)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (1/50 1/50 0)))
'(ack
  2
  2
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  2
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  4
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  2
  2
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  6
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  2
  2
  "\"(list 'eval '(app = (-> n <-) 0) (menv '((□? (m n)))))\""
  289
  ((614/25 1259/50 4/25)
   (1229/50 629/25 4/25)
   (614/25 629/25 4/25)
   (1277/50 1307/50 4/25)
   (628/25 643/25 7/50)))
'(ack
  2
  2
  "\"(list 'eval '(app (-> = <-) m 0) (menv '((□? (m n)))))\""
  289
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  2
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '((□? (m n)))))\""
  301
  ((16/25 16/25 0)
   (14/25 14/25 0)
   (33/50 33/50 0)
   (27/50 14/25 0)
   (17/25 17/25 0)))
'(ack
  2
  2
  "\"(list 'eval '(app = (-> m <-) 0) (menv '((□? (m n)))))\""
  471
  ((957/50 98/5 3/25)
   (478/25 489/25 7/50)
   (93/5 953/50 7/50)
   (939/50 481/25 7/50)
   (96/5 983/50 7/50)))
'(ack
  2
  2
  "\"(list 'eval '(app + (-> n <-) 1) (menv '((□? (m n)))))\""
  483
  ((56/25 23/10 0)
   (58/25 59/25 0)
   (23/10 59/25 0)
   (11/5 56/25 0)
   (119/50 121/50 0)))
'(ack
  2
  2
  "\"(list 'eval '(top) (menv '()))\""
  489
  ((7/50 4/25 0) (9/50 9/50 0) (1/5 1/5 0) (4/25 4/25 0) (11/50 11/50 0)))
'(ack
  2
  2
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '((□? (m n)))))\""
  511
  ((8/5 41/25 0) (54/25 11/5 0) (91/50 93/50 0) (44/25 9/5 0) (49/25 2 0)))
'(ack
  2
  2
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '((□? (m n)))))\""
  528
  ((9/10 47/50 0) (49/50 1 0) (23/25 47/50 0) (51/50 26/25 0) (24/25 49/50 0)))
'(ack
  2
  2
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  528
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  2
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '((□? (m n)))))\""
  528
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  2
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '((□? (m n)))))\""
  528
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  2
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '((□? (m n)))))\""
  539
  ((63/50 13/10 0)
   (59/50 6/5 0)
   (36/25 73/50 0)
   (69/50 7/5 0)
   (33/25 67/50 0)))
'(ack
  2
  2
  "\"(list 'eval '(app - (-> n <-) 1) (menv '((□? (m n)))))\""
  539
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  2
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '((□? (m n)))))\""
  556
  ((41/50 41/50 0)
   (18/25 19/25 0)
   (17/25 7/10 0)
   (17/25 7/10 0)
   (4/5 41/50 0)))
'(ack
  2
  2
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  590
  ((61/25 5/2 0)
   (58/25 119/50 0)
   (131/50 133/50 0)
   (58/25 119/50 0)
   (53/25 109/50 0)))
'(ack
  2
  2
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '((□? (m n)))))\""
  590
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  2
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  590
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  2
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '((□? (m n)))))\""
  590
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  2
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  590
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  2
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '((□? (m n)))))\""
  590
  ((0 0 0) (0 0 0) (1/50 1/50 0) (1/50 1/50 0) (0 0 0)))
'(ack
  2
  2
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  624
  ((29/10 149/50 0)
   (88/25 18/5 0)
   (76/25 78/25 0)
   (74/25 151/50 0)
   (179/50 183/50 0)))
'(ack
  2
  2
  "\"(list 'eval '(app (-> + <-) n 1) (menv '((□? (m n)))))\""
  624
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  2
  "\"(list 'eval '(app (-> - <-) n 1) (menv '((□? (m n)))))\""
  624
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  2
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  624
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  2
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  624
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  2
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  624
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  2
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '((□? (m n)))))\""
  641
  ((39/50 4/5 0)
   (16/25 33/50 0)
   (17/25 7/10 0)
   (18/25 37/50 0)
   (31/50 16/25 0)))
'(ack
  2
  2
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  2
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  2
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  2
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  2
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  2
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  2
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  2
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  2
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  3
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '((□? (m n)))))\""
  18
  ((3/10 3/10 0) (8/25 8/25 0) (9/25 19/50 0) (8/25 8/25 0) (3/10 3/10 0)))
'(ack
  2
  3
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '((□? (m n)))))\""
  331
  ((283/10 724/25 13/50)
   (1387/50 1421/50 1/5)
   (723/25 148/5 4/25)
   (141/5 1443/50 1/5)
   (1443/50 1477/50 1/5)))
'(ack
  2
  3
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '((□? (m n)))))\""
  348
  ((41/50 21/25 0)
   (16/25 33/50 0)
   (31/50 31/50 0)
   (16/25 33/50 0)
   (33/50 17/25 0)))
'(ack
  2
  3
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  348
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  3
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  382
  ((113/50 23/10 0)
   (58/25 59/25 0)
   (121/50 123/50 0)
   (63/25 129/50 0)
   (63/25 64/25 0)))
'(ack
  2
  3
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '((□? (m n)))))\""
  382
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  3
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '((□? (m n)))))\""
  382
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  3
  "\"(list 'eval '(app (-> = <-) n 0) (menv '((□? (m n)))))\""
  399
  ((18/25 37/50 0) (49/50 1 0) (9/10 47/50 0) (39/50 4/5 0) (19/25 19/25 0)))
'(ack
  2
  3
  "\"(list 'eval '(app + (-> n <-) 1) (menv '((□? (m n)))))\""
  399
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  3
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  416
  ((81/50 41/25 0)
   (83/50 17/10 0)
   (38/25 39/25 0)
   (71/50 36/25 0)
   (73/50 3/2 0)))
'(ack
  2
  3
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  417
  ((0 0 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  2
  3
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  434
  ((17/25 17/25 0)
   (17/25 7/10 0)
   (4/5 41/50 0)
   (33/50 17/25 0)
   (23/25 47/50 0)))
'(ack
  2
  3
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  435
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  3
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  452
  ((17/25 17/25 0)
   (47/50 24/25 0)
   (39/50 4/5 0)
   (7/10 18/25 0)
   (31/50 16/25 0)))
'(ack
  2
  3
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '((□? (m n)))))\""
  469
  ((31/50 16/25 0) (7/10 18/25 0) (39/50 4/5 0) (39/50 4/5 0) (39/50 4/5 0)))
'(ack
  2
  3
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '((□? (m n)))))\""
  469
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  3
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  588
  ((751/50 769/50 1/10)
   (743/50 761/50 1/10)
   (388/25 397/25 1/10)
   (689/50 141/10 2/25)
   (681/50 349/25 2/25)))
'(ack
  2
  3
  "\"(list 'eval '(app (-> - <-) n 1) (menv '((□? (m n)))))\""
  588
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  3
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  588
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  3
  "\"(list 'eval '(app (-> + <-) n 1) (menv '((□? (m n)))))\""
  588
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  3
  "\"(list 'eval '(app (-> = <-) m 0) (menv '((□? (m n)))))\""
  588
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  3
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '((□? (m n)))))\""
  588
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  3
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '((□? (m n)))))\""
  588
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  3
  "\"(list 'eval '(top) (menv '()))\""
  590
  ((1/25 1/25 0) (1/25 1/25 0) (1/50 1/50 0) (1/25 1/25 0) (1/25 1/25 0)))
'(ack
  2
  3
  "\"(list 'eval '(app = (-> m <-) 0) (menv '((□? (m n)))))\""
  607
  ((151/50 31/10 0)
   (74/25 151/50 0)
   (72/25 74/25 0)
   (72/25 147/50 0)
   (163/50 167/50 0)))
'(ack
  2
  3
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '((□? (m n)))))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  3
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  3
  "\"(list 'eval '(app - (-> n <-) 1) (menv '((□? (m n)))))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  3
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '((□? (m n)))))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  3
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '((□? (m n)))))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  3
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  3
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  3
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  3
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  3
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '((□? (m n)))))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  3
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  3
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  3
  "\"(list 'eval '(app = (-> n <-) 0) (menv '((□? (m n)))))\""
  624
  ((171/50 7/2 0) (3 77/25 0) (74/25 76/25 0) (82/25 167/50 0) (3 77/25 0)))
'(ack
  2
  3
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  641
  ((41/25 42/25 0)
   (87/50 44/25 0)
   (77/50 79/50 0)
   (43/25 44/25 0)
   (83/50 43/25 0)))
'(ack
  2
  3
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  4
  "\"(list 'eval '(app - (-> n <-) 1) (menv '((□? (m n)))))\""
  213
  ((819/50 839/50 2/25)
   (173/10 442/25 2/25)
   (434/25 444/25 2/25)
   (17 871/50 2/25)
   (433/25 443/25 2/25)))
'(ack
  2
  4
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  222
  ((13/50 13/50 0) (9/50 1/5 0) (6/25 6/25 0) (6/25 6/25 0) (9/50 9/50 0)))
'(ack
  2
  4
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  239
  ((18/25 37/50 0)
   (37/50 19/25 0)
   (17/25 7/10 0)
   (7/10 7/10 0)
   (9/10 23/25 0)))
'(ack
  2
  4
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '((□? (m n)))))\""
  239
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  4
  "\"(list 'eval '(app + (-> n <-) 1) (menv '((□? (m n)))))\""
  250
  ((107/50 11/5 0)
   (109/50 56/25 0)
   (117/50 12/5 0)
   (107/50 11/5 0)
   (103/50 21/10 0)))
'(ack
  2
  4
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '((□? (m n)))))\""
  314
  ((203/50 209/50 0)
   (191/50 39/10 0)
   (219/50 9/2 0)
   (104/25 213/50 0)
   (189/50 193/50 0)))
'(ack
  2
  4
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  451
  ((386/25 79/5 2/25)
   (367/25 376/25 1/10)
   (147/10 753/50 2/25)
   (383/25 392/25 1/10)
   (767/50 157/10 2/25)))
'(ack
  2
  4
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  451
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  4
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '((□? (m n)))))\""
  451
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  4
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  451
  ((0 0 0) (0 0 0) (1/50 1/50 0) (0 0 0) (0 0 0)))
'(ack
  2
  4
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '((□? (m n)))))\""
  469
  ((97/50 99/50 0)
   (117/50 119/50 0)
   (91/50 93/50 0)
   (91/50 93/50 0)
   (91/50 47/25 0)))
'(ack
  2
  4
  "\"(list 'eval '(app = (-> n <-) 0) (menv '((□? (m n)))))\""
  486
  ((147/50 3 0)
   (81/25 83/25 0)
   (159/50 163/50 0)
   (153/50 78/25 0)
   (79/25 81/25 0)))
'(ack
  2
  4
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '((□? (m n)))))\""
  486
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  4
  "\"(list 'eval '(top) (menv '()))\""
  487
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  4
  "\"(list 'eval '(app (-> + <-) n 1) (menv '((□? (m n)))))\""
  487
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  4
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  504
  ((23/25 47/50 0)
   (51/50 53/50 0)
   (29/25 59/50 0)
   (49/50 1 0)
   (23/25 47/50 0)))
'(ack
  2
  4
  "\"(list 'eval '(app = (-> m <-) 0) (menv '((□? (m n)))))\""
  521
  ((3 153/50 0)
   (163/50 167/50 0)
   (163/50 167/50 0)
   (151/50 77/25 0)
   (77/25 79/25 0)))
'(ack
  2
  4
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  521
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  4
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '((□? (m n)))))\""
  521
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  4
  "\"(list 'eval '(app (-> = <-) m 0) (menv '((□? (m n)))))\""
  527
  ((13/25 27/50 0) (3/5 31/50 0) (29/50 3/5 0) (16/25 16/25 0) (17/25 7/10 0)))
'(ack
  2
  4
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '((□? (m n)))))\""
  544
  ((31/50 16/25 0)
   (33/50 33/50 0)
   (16/25 16/25 0)
   (24/25 49/50 0)
   (16/25 33/50 0)))
'(ack
  2
  4
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  544
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  4
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  571
  ((52/25 107/50 0)
   (47/25 48/25 0)
   (101/50 52/25 0)
   (111/50 113/50 0)
   (123/50 5/2 0)))
'(ack
  2
  4
  "\"(list 'eval '(app (-> = <-) n 0) (menv '((□? (m n)))))\""
  588
  ((41/50 43/50 0)
   (39/50 4/5 0)
   (19/25 39/50 0)
   (37/50 19/25 0)
   (22/25 9/10 0)))
'(ack
  2
  4
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  588
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  4
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '((□? (m n)))))\""
  588
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  4
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  588
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  4
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  589
  ((16/25 33/50 0)
   (16/25 33/50 0)
   (31/50 16/25 0)
   (37/50 19/25 0)
   (37/50 19/25 0)))
'(ack
  2
  4
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '((□? (m n)))))\""
  590
  ((31/50 31/50 0)
   (16/25 33/50 0)
   (29/50 3/5 0)
   (31/50 16/25 0)
   (16/25 33/50 0)))
'(ack
  2
  4
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '((□? (m n)))))\""
  590
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  4
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '((□? (m n)))))\""
  590
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  4
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  590
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  4
  "\"(list 'eval '(app (-> - <-) n 1) (menv '((□? (m n)))))\""
  590
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  4
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '((□? (m n)))))\""
  590
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  4
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  590
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  4
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '((□? (m n)))))\""
  607
  ((7/10 18/25 0)
   (39/50 4/5 0)
   (17/25 7/10 0)
   (41/50 21/25 0)
   (18/25 18/25 0)))
'(ack
  2
  4
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  641
  ((181/50 93/25 0)
   (81/25 33/10 0)
   (83/25 171/50 0)
   (86/25 88/25 0)
   (157/50 161/50 0)))
'(ack
  2
  4
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  4
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  4
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  5
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  3
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  2
  5
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  245
  ((1147/50 587/25 7/50)
   (1169/50 598/25 7/50)
   (1163/50 119/5 7/50)
   (588/25 241/10 7/50)
   (1137/50 233/10 4/25)))
'(ack
  2
  5
  "\"(list 'eval '(app + (-> n <-) 1) (menv '((□? (m n)))))\""
  413
  ((709/50 727/50 2/25)
   (691/50 354/25 2/25)
   (737/50 378/25 2/25)
   (719/50 737/50 2/25)
   (76/5 781/50 2/25)))
'(ack
  2
  5
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '((□? (m n)))))\""
  430
  ((3/5 31/50 0) (39/50 4/5 0) (39/50 4/5 0) (43/50 22/25 0) (17/25 17/25 0)))
'(ack
  2
  5
  "\"(list 'eval '(app - (-> n <-) 1) (menv '((□? (m n)))))\""
  430
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  5
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '((□? (m n)))))\""
  430
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  5
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  430
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  5
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '((□? (m n)))))\""
  430
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  5
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  430
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  5
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  511
  ((138/25 283/50 1/50)
   (6 307/50 1/50)
   (151/25 309/50 1/50)
   (57/10 146/25 1/50)
   (138/25 283/50 0)))
'(ack
  2
  5
  "\"(list 'eval '(app = (-> m <-) 0) (menv '((□? (m n)))))\""
  528
  ((74/25 76/25 0)
   (161/50 33/10 0)
   (71/25 29/10 0)
   (161/50 83/25 0)
   (153/50 78/25 0)))
'(ack
  2
  5
  "\"(list 'eval '(top) (menv '()))\""
  537
  ((4/25 4/25 0) (4/25 4/25 0) (4/25 4/25 0) (9/50 9/50 0) (11/50 11/50 0)))
'(ack
  2
  5
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  601
  ((213/50 109/25 0)
   (217/50 221/50 0)
   (191/50 98/25 0)
   (193/50 99/25 0)
   (37/10 19/5 0)))
'(ack
  2
  5
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '((□? (m n)))))\""
  602
  ((21/50 21/50 0) (12/25 12/25 0) (12/25 1/2 0) (19/50 19/50 0) (2/5 2/5 0)))
'(ack
  2
  5
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  602
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  5
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  602
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  5
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '((□? (m n)))))\""
  602
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  5
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '((□? (m n)))))\""
  602
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  5
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '((□? (m n)))))\""
  604
  ((43/50 22/25 0)
   (41/50 21/25 0)
   (24/25 49/50 0)
   (9/10 23/25 0)
   (43/50 22/25 0)))
'(ack
  2
  5
  "\"(list 'eval '(app (-> = <-) n 0) (menv '((□? (m n)))))\""
  604
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  5
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  604
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  5
  "\"(list 'eval '(app (-> = <-) m 0) (menv '((□? (m n)))))\""
  605
  ((21/50 11/25 0)
   (21/50 21/50 0)
   (21/50 23/50 0)
   (11/25 23/50 0)
   (11/25 23/50 0)))
'(ack
  2
  5
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '((□? (m n)))))\""
  605
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  5
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '((□? (m n)))))\""
  605
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  5
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '((□? (m n)))))\""
  605
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  5
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  605
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  5
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  605
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  5
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '((□? (m n)))))\""
  605
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  5
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '((□? (m n)))))\""
  607
  ((67/50 69/50 0) (3/2 77/50 0) (3/2 38/25 0) (61/50 63/50 0) (73/50 3/2 0)))
'(ack
  2
  5
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  5
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  5
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  5
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  5
  "\"(list 'eval '(app (-> - <-) n 1) (menv '((□? (m n)))))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  5
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '((□? (m n)))))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  5
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  5
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '((□? (m n)))))\""
  624
  ((43/50 22/25 0)
   (4/5 41/50 0)
   (43/50 22/25 0)
   (33/50 17/25 0)
   (17/25 7/10 0)))
'(ack
  2
  5
  "\"(list 'eval '(app = (-> n <-) 0) (menv '((□? (m n)))))\""
  641
  ((169/50 173/50 0)
   (68/25 139/50 0)
   (149/50 76/25 0)
   (76/25 31/10 0)
   (71/25 29/10 0)))
'(ack
  2
  5
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  5
  "\"(list 'eval '(app (-> + <-) n 1) (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  6
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  3
  ((1/50 1/50 0) (1/50 1/50 0) (0 0 0) (0 0 0) (0 1/50 0)))
'(ack
  2
  6
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  4
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  6
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '((□? (m n)))))\""
  20
  ((3/10 8/25 0) (8/25 8/25 0) (2/5 2/5 0) (19/50 19/50 0) (9/25 9/25 0)))
'(ack
  2
  6
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '((□? (m n)))))\""
  21
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  6
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '((□? (m n)))))\""
  21
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  6
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  23
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  2
  6
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  33
  ((6/25 13/50 0) (6/25 6/25 0) (11/50 11/50 0) (4/25 4/25 0) (4/25 4/25 0)))
'(ack
  2
  6
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '((□? (m n)))))\""
  34
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  6
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  397
  ((1529/50 783/25 6/25)
   (758/25 776/25 11/50)
   (762/25 1559/50 11/50)
   (303/10 1551/50 6/25)
   (753/25 771/25 1/5)))
'(ack
  2
  6
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  431
  ((123/50 63/25 0)
   (117/50 12/5 0)
   (123/50 63/25 0)
   (27/10 69/25 0)
   (5/2 64/25 0)))
'(ack
  2
  6
  "\"(list 'eval '(app (-> = <-) n 0) (menv '((□? (m n)))))\""
  431
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  6
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  568
  ((31/2 793/50 1/10)
   (74/5 757/50 1/10)
   (376/25 77/5 3/25)
   (759/50 777/50 1/10)
   (763/50 391/25 1/10)))
'(ack
  2
  6
  "\"(list 'eval '(app = (-> m <-) 0) (menv '((□? (m n)))))\""
  585
  ((31/10 159/50 0)
   (153/50 157/50 0)
   (173/50 88/25 0)
   (167/50 17/5 0)
   (149/50 153/50 0)))
'(ack
  2
  6
  "\"(list 'eval '(app (-> = <-) m 0) (menv '((□? (m n)))))\""
  585
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  6
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  602
  ((3/2 38/25 0)
   (8/5 41/25 0)
   (41/25 42/25 0)
   (79/50 81/50 0)
   (103/50 21/10 0)))
'(ack
  2
  6
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '((□? (m n)))))\""
  602
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  6
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  602
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  6
  "\"(list 'eval '(app + (-> n <-) 1) (menv '((□? (m n)))))\""
  603
  ((7/10 18/25 0) (31/50 16/25 0) (39/50 4/5 0) (37/50 37/50 0) (3/5 31/50 0)))
'(ack
  2
  6
  "\"(list 'eval '(top) (menv '()))\""
  604
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  6
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  604
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  6
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '((□? (m n)))))\""
  604
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  6
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '((□? (m n)))))\""
  604
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  6
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '((□? (m n)))))\""
  604
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  6
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  604
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  6
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '((□? (m n)))))\""
  604
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  6
  "\"(list 'eval '(app = (-> n <-) 0) (menv '((□? (m n)))))\""
  621
  ((91/25 93/25 0)
   (151/50 77/25 0)
   (76/25 31/10 0)
   (79/25 81/25 0)
   (78/25 16/5 0)))
'(ack
  2
  6
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '((□? (m n)))))\""
  638
  ((31/50 16/25 0)
   (16/25 33/50 0)
   (7/10 18/25 0)
   (31/50 16/25 0)
   (18/25 37/50 0)))
'(ack
  2
  6
  "\"(list 'eval '(app (-> + <-) n 1) (menv '((□? (m n)))))\""
  639
  ((19/50 19/50 0)
   (2/5 21/50 0)
   (11/25 23/50 0)
   (17/50 9/25 0)
   (21/50 11/25 0)))
'(ack
  2
  6
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  639
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  6
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '((□? (m n)))))\""
  641
  ((22/25 9/10 0)
   (27/25 11/10 0)
   (29/25 6/5 0)
   (27/25 11/10 0)
   (51/50 53/50 0)))
'(ack
  2
  6
  "\"(list 'eval '(app (-> - <-) n 1) (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  6
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  6
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  6
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  6
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  6
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  6
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  6
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  6
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  6
  "\"(list 'eval '(app - (-> n <-) 1) (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  7
  "\"(list 'eval '(app = (-> n <-) 0) (menv '((□? (m n)))))\""
  230
  ((497/25 509/25 7/50)
   (1031/50 527/25 3/25)
   (1003/50 1027/50 1/10)
   (217/10 111/5 49/50)
   (503/25 103/5 1/10)))
'(ack
  2
  7
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  384
  ((79/5 809/50 2/25)
   (79/5 809/50 1/10)
   (393/25 402/25 1/10)
   (386/25 79/5 1/10)
   (821/50 84/5 1/10)))
'(ack
  2
  7
  "\"(list 'eval '(app (-> = <-) n 0) (menv '((□? (m n)))))\""
  401
  ((51/50 26/25 0)
   (43/50 43/50 0)
   (18/25 37/50 0)
   (21/25 43/50 0)
   (27/25 11/10 0)))
'(ack
  2
  7
  "\"(list 'eval '(app (-> = <-) m 0) (menv '((□? (m n)))))\""
  413
  ((17/25 7/10 0)
   (37/50 19/25 0)
   (7/10 18/25 0)
   (31/50 16/25 0)
   (37/50 37/50 0)))
'(ack
  2
  7
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  511
  ((211/25 431/50 1/50)
   (206/25 211/25 1/50)
   (209/25 214/25 1/50)
   (437/50 223/25 1/50)
   (79/10 202/25 1/50)))
'(ack
  2
  7
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '((□? (m n)))))\""
  511
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  7
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  528
  ((26/25 53/50 0)
   (49/50 1 0)
   (51/50 26/25 0)
   (28/25 57/50 0)
   (27/25 11/10 0)))
'(ack
  2
  7
  "\"(list 'eval '(app - (-> n <-) 1) (menv '((□? (m n)))))\""
  528
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  7
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  528
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  7
  "\"(list 'eval '(app = (-> m <-) 0) (menv '((□? (m n)))))\""
  545
  ((167/50 171/50 0)
   (147/50 151/50 0)
   (157/50 161/50 0)
   (149/50 76/25 1/50)
   (157/50 16/5 0)))
'(ack
  2
  7
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '((□? (m n)))))\""
  545
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  7
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  545
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  7
  "\"(list 'eval '(app + (-> n <-) 1) (menv '((□? (m n)))))\""
  552
  ((36/25 37/25 0)
   (8/5 41/25 0)
   (71/50 73/50 0)
   (67/50 34/25 0)
   (7/5 71/50 0)))
'(ack
  2
  7
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '((□? (m n)))))\""
  569
  ((41/50 21/25 0)
   (23/25 47/50 0)
   (43/50 43/50 0)
   (39/50 4/5 0)
   (31/50 16/25 0)))
'(ack
  2
  7
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '((□? (m n)))))\""
  569
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  7
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  611
  ((67/25 69/25 0)
   (153/50 78/25 0)
   (129/50 133/50 0)
   (29/10 149/50 0)
   (69/25 141/50 0)))
'(ack
  2
  7
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  613
  ((33/50 33/50 0)
   (39/50 4/5 0)
   (31/50 16/25 0)
   (18/25 37/50 0)
   (37/50 19/25 0)))
'(ack
  2
  7
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '((□? (m n)))))\""
  621
  ((49/25 2 0) (99/50 101/50 0) (101/50 52/25 0) (2 51/25 0) (2 51/25 0)))
'(ack
  2
  7
  "\"(list 'eval '(app (-> + <-) n 1) (menv '((□? (m n)))))\""
  621
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  7
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  621
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  7
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '((□? (m n)))))\""
  638
  ((18/25 37/50 0)
   (31/50 16/25 0)
   (31/50 16/25 0)
   (7/10 18/25 0)
   (31/50 16/25 0)))
'(ack
  2
  7
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  640
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(ack
  2
  7
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '((□? (m n)))))\""
  640
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  7
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '((□? (m n)))))\""
  640
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  7
  "\"(list 'eval '(app (-> - <-) n 1) (menv '((□? (m n)))))\""
  640
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  7
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  640
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  7
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  640
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  7
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '((□? (m n)))))\""
  640
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  7
  "\"(list 'eval '(top) (menv '()))\""
  641
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (0 0 0) (0 1/50 0)))
'(ack
  2
  7
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  7
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  7
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  7
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  7
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  7
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  7
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  7
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  7
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  7
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  7
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  8
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '((□? (m n)))))\""
  213
  ((429/25 439/25 2/25)
   (83/5 17 2/25)
   (86/5 881/50 2/25)
   (847/50 434/25 1/10)
   (423/25 867/50 3/50)))
'(ack
  2
  8
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  367
  ((78/5 799/50 1/10)
   (731/50 15 1/10)
   (409/25 837/50 1/10)
   (82/5 84/5 1/10)
   (787/50 403/25 1/10)))
'(ack
  2
  8
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '((□? (m n)))))\""
  436
  ((47/10 24/5 0)
   (127/25 259/50 1/50)
   (251/50 257/50 0)
   (257/50 131/25 1/50)
   (51/10 261/50 1/50)))
'(ack
  2
  8
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  505
  ((123/25 126/25 0)
   (124/25 127/25 1/50)
   (261/50 134/25 1/50)
   (117/25 239/50 0)
   (237/50 243/50 0)))
'(ack
  2
  8
  "\"(list 'eval '(app (-> = <-) n 0) (menv '((□? (m n)))))\""
  522
  ((4/5 41/50 0) (4/5 41/50 0) (41/50 43/50 0) (49/50 1 0) (26/25 53/50 0)))
'(ack
  2
  8
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  539
  ((73/50 37/25 0)
   (81/50 83/50 0)
   (77/50 79/50 0)
   (37/25 38/25 0)
   (7/5 71/50 0)))
'(ack
  2
  8
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '((□? (m n)))))\""
  541
  ((9/25 19/50 0) (9/25 9/25 0) (2/5 21/50 0) (9/25 19/50 0) (19/50 2/5 0)))
'(ack
  2
  8
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  541
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  8
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '((□? (m n)))))\""
  558
  ((31/50 31/50 0)
   (16/25 33/50 0)
   (7/10 18/25 0)
   (33/50 17/25 0)
   (31/50 16/25 0)))
'(ack
  2
  8
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '((□? (m n)))))\""
  558
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  8
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  558
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  8
  "\"(list 'eval '(top) (menv '()))\""
  567
  ((1/5 11/50 0) (1/5 1/5 0) (1/5 1/5 0) (11/50 6/25 0) (1/5 1/5 0)))
'(ack
  2
  8
  "\"(list 'eval '(app + (-> n <-) 1) (menv '((□? (m n)))))\""
  568
  ((33/50 17/25 0)
   (37/50 37/50 0)
   (16/25 33/50 0)
   (17/25 7/10 0)
   (16/25 33/50 0)))
'(ack
  2
  8
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '((□? (m n)))))\""
  573
  ((27/10 69/25 0)
   (64/25 66/25 0)
   (59/25 12/5 0)
   (143/50 73/25 0)
   (14/5 72/25 0)))
'(ack
  2
  8
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  573
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  8
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '((□? (m n)))))\""
  573
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  8
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '((□? (m n)))))\""
  573
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  8
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  573
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  8
  "\"(list 'eval '(app - (-> n <-) 1) (menv '((□? (m n)))))\""
  573
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  8
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  573
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  8
  "\"(list 'eval '(app (-> - <-) n 1) (menv '((□? (m n)))))\""
  573
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  8
  "\"(list 'eval '(app = (-> n <-) 0) (menv '((□? (m n)))))\""
  590
  ((157/50 161/50 0)
   (67/25 137/50 0)
   (79/25 81/25 0)
   (76/25 78/25 0)
   (31/10 79/25 0)))
'(ack
  2
  8
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  590
  ((1/50 1/50 0) (0 0 0) (0 0 0) (1/50 1/50 0) (1/50 1/50 0)))
'(ack
  2
  8
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '((□? (m n)))))\""
  590
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  8
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '((□? (m n)))))\""
  607
  ((19/25 39/50 0)
   (31/50 31/50 0)
   (31/50 16/25 0)
   (33/50 17/25 0)
   (19/25 4/5 0)))
'(ack
  2
  8
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  8
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '((□? (m n)))))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  8
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  8
  "\"(list 'eval '(app (-> = <-) m 0) (menv '((□? (m n)))))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  8
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '((□? (m n)))))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  8
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  8
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  607
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  8
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  624
  ((3/2 77/50 0)
   (91/50 47/25 0)
   (44/25 9/5 0)
   (43/25 44/25 0)
   (103/50 21/10 0)))
'(ack
  2
  8
  "\"(list 'eval '(app (-> + <-) n 1) (menv '((□? (m n)))))\""
  624
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  8
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  624
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  8
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  624
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  8
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '((□? (m n)))))\""
  624
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  8
  "\"(list 'eval '(app = (-> m <-) 0) (menv '((□? (m n)))))\""
  641
  ((72/25 147/50 0)
   (74/25 76/25 0)
   (29/10 149/50 0)
   (3 153/50 0)
   (73/25 149/50 0)))
'(ack
  2
  8
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '((□? (m n)))))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  8
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  641
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  9
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '((□? (m n)))))\""
  211
  ((1027/50 526/25 3/25)
   (523/25 1071/50 7/50)
   (503/25 103/5 3/25)
   (1059/50 1083/50 3/25)
   (521/25 1067/50 3/25)))
'(ack
  2
  9
  "\"(list 'eval '(app (-> = <-) m 0) (menv '((□? (m n)))))\""
  228
  ((22/25 9/10 0)
   (23/25 47/50 0)
   (4/5 41/50 0)
   (23/25 47/50 0)
   (24/25 49/50 0)))
'(ack
  2
  9
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '((□? (m n)))))\""
  245
  ((4/5 41/50 0)
   (7/10 18/25 0)
   (33/50 17/25 0)
   (17/25 7/10 0)
   (17/25 17/25 0)))
'(ack
  2
  9
  "\"(list 'eval '(app = (-> n <-) 0) (menv '((□? (m n)))))\""
  396
  ((72/5 737/50 2/25)
   (701/50 359/25 2/25)
   (143/10 366/25 1/10)
   (357/25 731/50 2/25)
   (358/25 366/25 2/25)))
'(ack
  2
  9
  "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\""
  396
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  9
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  396
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  9
  "\"(list 'eval '(app (-> = <-) n 0) (menv '((□? (m n)))))\""
  413
  ((4/5 41/50 0) (22/25 9/10 0) (41/50 21/25 0) (4/5 41/50 0) (21/25 43/50 0)))
'(ack
  2
  9
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  421
  ((1/5 1/5 0) (11/50 11/50 0) (7/25 7/25 0) (7/25 7/25 0) (1/5 1/5 0)))
'(ack
  2
  9
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> #f (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  485
  ((118/25 241/50 0)
   (249/50 128/25 0)
   (49/10 251/50 1/50)
   (119/25 49/10 0)
   (257/50 263/50 0)))
'(ack
  2
  9
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  485
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  9
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  502
  ((81/50 83/50 0)
   (73/50 3/2 0)
   (44/25 91/50 0)
   (3/2 77/50 0)
   (17/10 43/25 0)))
'(ack
  2
  9
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  502
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  9
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  502
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  9
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '((□? (m n)))))\""
  519
  ((53/50 11/10 0) (49/50 1 0) (47/50 24/25 0) (24/25 49/50 0) (24/25 1 0)))
'(ack
  2
  9
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (#f (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '((□? (m n)))))\""
  566
  ((87/25 89/25 0)
   (197/50 201/50 0)
   (191/50 98/25 0)
   (193/50 197/50 0)
   (88/25 179/50 0)))
'(ack
  2
  9
  "\"(list 'eval '(app = (-> m <-) 0) (menv '((□? (m n)))))\""
  583
  ((159/50 81/25 0)
   (74/25 76/25 0)
   (29/10 149/50 0)
   (81/25 83/25 0)
   (77/25 79/25 0)))
'(ack
  2
  9
  "\"(list 'eval '(top) (menv '()))\""
  584
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  9
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  584
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  9
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  584
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  9
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '((□? (m n)))))\""
  584
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  9
  "\"(list 'eval '(app - (-> n <-) 1) (menv '((□? (m n)))))\""
  584
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  9
  "\"(list 'eval '(app + (-> n <-) 1) (menv '((□? (m n)))))\""
  585
  ((37/50 19/25 0)
   (16/25 33/50 0)
   (17/25 7/10 0)
   (22/25 9/10 0)
   (31/50 16/25 0)))
'(ack
  2
  9
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    #f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  602
  ((38/25 77/50 0)
   (83/50 17/10 0)
   (19/10 49/25 0)
   (87/50 89/50 0)
   (43/25 89/50 0)))
'(ack
  2
  9
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '((□? (m n)))))\""
  605
  ((83/50 17/10 0)
   (37/25 3/2 0)
   (39/25 8/5 0)
   (67/50 69/50 0)
   (63/50 13/10 0)))
'(ack
  2
  9
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '((□? (m n)))))\""
  605
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  9
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '((□? (m n)))))\""
  622
  ((17/25 7/10 0)
   (16/25 33/50 0)
   (17/25 7/10 0)
   (31/50 16/25 0)
   (33/50 17/25 0)))
'(ack
  2
  9
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '((□? (m n)))))\""
  622
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  9
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '((□? (m n)))))\""
  639
  ((19/25 19/25 0)
   (16/25 33/50 0)
   (33/50 17/25 0)
   (16/25 33/50 0)
   (7/10 18/25 0)))
'(ack
  2
  9
  "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\""
  639
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  9
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  639
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  9
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  639
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  9
  "\"(list 'eval '(app (-> + <-) n 1) (menv '((□? (m n)))))\""
  639
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  9
  "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\""
  639
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  9
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   (#f\n    (match\n     (app = n 0)\n     (#f (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  640
  ((39/50 4/5 0)
   (16/25 33/50 0)
   (33/50 17/25 0)
   (17/25 7/10 0)
   (43/50 22/25 0)))
'(ack
  2
  9
  "\"(list 'eval '(app (-> - <-) n 1) (menv '((□? (m n)))))\""
  640
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  9
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '((□? (m n)))))\""
  640
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  9
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '((□? (m n)))))\""
  640
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  9
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '((□? (m n)))))\""
  640
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  9
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               (#f\n                (match\n                 (app = n 0)\n                 (#f (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  640
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(ack
  2
  9
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      (#f\n       (match\n        (app = n 0)\n        (#f (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '((□? (m n)))))\""
  641
  ((7/10 18/25 0)
   (17/25 7/10 0)
   (17/25 17/25 0)
   (14/25 29/50 0)
   (14/25 29/50 0)))
'(kcfa-2
  2
  0
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '((□? (f1)))))\""
  5
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (3/50 3/50 0)))
'(kcfa-2
  2
  0
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '((□? (f1)))))\""
  49
  ((62/25 31/10 0)
   (58/25 12/5 0)
   (111/50 57/25 0)
   (49/25 101/50 0)
   (11/5 56/25 0)))
'(kcfa-2
  2
  0
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))\""
  52
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  0
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  66
  ((11/50 6/25 0)
   (13/50 13/50 0)
   (3/10 8/25 0)
   (13/50 13/50 0)
   (17/50 17/50 0)))
'(kcfa-2
  2
  0
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '((□? (f1)))))\""
  67
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/25 0)))
'(kcfa-2
  2
  0
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '((□? (x1)))))\""
  122
  ((331/50 169/25 1/25)
   (291/50 297/50 1/25)
   (156/25 319/50 1/50)
   (311/50 317/50 1/25)
   (63/10 161/25 1/25)))
'(kcfa-2
  2
  0
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '((□? (f1)))))\""
  142
  ((99/25 203/50 1/50)
   (104/25 213/50 1/50)
   (207/50 106/25 1/50)
   (219/50 223/50 1/50)
   (113/25 231/50 1/50)))
'(kcfa-2
  2
  0
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  202
  ((142/25 29/5 1/50)
   (132/25 271/50 1/50)
   (261/50 133/25 1/50)
   (26/5 133/25 1/50)
   (53/10 271/50 0)))
'(kcfa-2
  2
  0
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-))\n (menv '((□? (f1)))))\""
  204
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  2
  0
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  210
  ((3/5 31/50 0)
   (33/50 17/25 0)
   (7/10 7/10 0)
   (19/25 39/50 0)
   (31/50 16/25 0)))
'(kcfa-2
  2
  0
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '((□? (f2)) (□? (x1)))))\""
  294
  ((103/10 527/50 1/10)
   (264/25 54/5 1/10)
   (253/25 259/25 1/10)
   (479/50 491/50 2/25)
   (529/50 541/50 1/10)))
'(kcfa-2
  2
  0
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '((□? (f2)) (□? (x1)))))\""
  336
  ((181/25 371/50 1/25)
   (36/5 367/50 1/25)
   (361/50 37/5 3/50)
   (36/5 184/25 1/25)
   (37/5 379/50 1/25)))
'(kcfa-2
  2
  0
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  426
  ((596/25 122/5 7/25)
   (597/25 1223/50 13/50)
   (574/25 47/2 13/50)
   (597/25 122/5 7/25)
   (239/10 1223/50 13/50)))
'(kcfa-2
  2
  0
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  474
  ((124/5 634/25 1/5)
   (1171/50 599/25 9/50)
   (114/5 583/25 9/50)
   (1203/50 123/5 9/50)
   (599/25 49/2 9/50)))
'(kcfa-2
  2
  0
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  474
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  0
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '((□? (f1)))))\""
  475
  ((1/50 1/50 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  2
  0
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '((□? (x1)))))\""
  475
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  0
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '((□? (x1)))))\""
  475
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  0
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '((□? (f1)))))\""
  475
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  0
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '((□? (x2)) (□? (x1)))))\""
  475
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  0
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  475
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  0
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '((□? (f2)) (□? (x1)))))\""
  475
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  0
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  499
  ((46/5 469/50 3/50)
   (459/50 469/50 3/50)
   (501/50 256/25 3/50)
   (46/5 471/50 3/50)
   (231/25 236/25 1/25)))
'(kcfa-2
  2
  0
  "\"(list 'eval '(top) (menv '()))\""
  500
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  2
  0
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  500
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  0
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '((□? (f2)) (□? (x1)))))\""
  500
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  0
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))\""
  503
  ((17/50 9/25 0)
   (9/25 9/25 0)
   (17/50 17/50 0)
   (17/50 9/25 0)
   (17/50 17/50 0)))
'(kcfa-2
  2
  0
  "\"(list\n 'eval\n '(λ (z) (-> (app z x1 x2) <-))\n (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  530
  ((123/25 251/50 1/50)
   (136/25 28/5 1/50)
   (142/25 291/50 1/50)
   (131/25 134/25 1/50)
   (126/25 129/25 1/50)))
'(kcfa-2
  2
  1
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '((□? (x2)) (□? (x1)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  1
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '((□? (f1)))))\""
  5
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  1
  "\"(list 'eval '(top) (menv '()))\""
  33
  ((27/50 14/25 0)
   (17/25 7/10 0)
   (37/50 19/25 0)
   (37/50 37/50 0)
   (7/10 7/10 0)))
'(kcfa-2
  2
  1
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  33
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  1
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  39
  ((2/25 2/25 0) (3/50 3/50 0) (2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(kcfa-2
  2
  1
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '((□? (f2)) (□? (x1)))))\""
  153
  ((253/25 517/50 1/10)
   (271/25 277/25 1/10)
   (553/50 113/10 3/25)
   (54/5 551/50 1/10)
   (513/50 21/2 1/10)))
'(kcfa-2
  2
  1
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '((□? (f1)))))\""
  155
  ((3/50 2/25 0) (2/25 2/25 0) (3/50 3/50 0) (3/50 3/50 0) (2/25 2/25 0)))
'(kcfa-2
  2
  1
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  155
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  1
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  173
  ((53/25 109/50 0)
   (51/25 21/10 0)
   (129/50 66/25 0)
   (57/25 58/25 0)
   (12/5 123/50 0)))
'(kcfa-2
  2
  1
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  173
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  1
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '((□? (x1)))))\""
  175
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(kcfa-2
  2
  1
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))\""
  187
  ((39/50 4/5 0)
   (22/25 9/10 0)
   (21/25 43/50 0)
   (43/50 22/25 0)
   (23/25 47/50 0)))
'(kcfa-2
  2
  1
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '((□? (f1)))))\""
  207
  ((12/5 61/25 0)
   (56/25 57/25 0)
   (121/50 123/50 0)
   (54/25 111/50 0)
   (11/5 113/50 0)))
'(kcfa-2
  2
  1
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  282
  ((137/10 14 7/50)
   (337/25 689/50 7/50)
   (657/50 671/50 3/25)
   (341/25 697/50 7/50)
   (341/25 349/25 7/50)))
'(kcfa-2
  2
  1
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '((□? (f1)))))\""
  283
  ((1/25 1/25 0) (3/50 3/50 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  2
  1
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  289
  ((1/2 13/25 0) (1/2 1/2 0) (33/50 33/50 0) (4/5 4/5 0) (29/50 29/50 0)))
'(kcfa-2
  2
  1
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  292
  ((17/50 17/50 0)
   (6/25 6/25 0)
   (13/50 13/50 0)
   (8/25 8/25 0)
   (13/50 13/50 0)))
'(kcfa-2
  2
  1
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  466
  ((2769/50 2833/50 18/25)
   (1441/25 2947/50 17/25)
   (279/5 2853/50 7/10)
   (2823/50 2889/50 37/50)
   (2813/50 1438/25 17/25)))
'(kcfa-2
  2
  1
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '((□? (f1)))))\""
  466
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  1
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '((□? (f2)) (□? (x1)))))\""
  466
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  1
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '((□? (x1)))))\""
  476
  ((18/25 18/25 0)
   (19/25 39/50 0)
   (39/50 4/5 0)
   (18/25 37/50 0)
   (29/50 3/5 0)))
'(kcfa-2
  2
  1
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '((□? (f2)) (□? (x1)))))\""
  476
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  1
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-))\n (menv '((□? (f1)))))\""
  477
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  2
  1
  "\"(list\n 'eval\n '(λ (z) (-> (app z x1 x2) <-))\n (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  504
  ((277/50 142/25 1/50)
   (142/25 29/5 1/50)
   (141/25 289/50 1/50)
   (283/50 289/50 1/50)
   (53/10 27/5 1/50)))
'(kcfa-2
  2
  1
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))\""
  507
  ((23/50 23/50 0)
   (9/25 9/25 0)
   (21/50 21/50 0)
   (23/50 12/25 0)
   (12/25 12/25 0)))
'(kcfa-2
  2
  1
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '((□? (f2)) (□? (x1)))))\""
  510
  ((11/50 11/50 0)
   (11/50 11/50 0)
   (1/5 1/5 0)
   (11/50 11/50 0)
   (11/50 11/50 0)))
'(kcfa-2
  2
  1
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '((□? (f1)))))\""
  530
  ((154/25 63/10 1/25)
   (319/50 163/25 1/25)
   (327/50 167/25 1/25)
   (32/5 164/25 1/25)
   (353/50 361/50 1/25)))
'(kcfa-2
  2
  1
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '((□? (x1)))))\""
  530
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  2
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '((□? (f1)))))\""
  5
  ((1/25 1/25 0) (1/25 1/25 0) (3/50 3/50 0) (3/50 3/50 0) (1/25 1/25 0)))
'(kcfa-2
  2
  2
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  39
  ((69/50 7/5 0)
   (42/25 43/25 0)
   (33/25 34/25 0)
   (57/50 29/25 0)
   (59/50 61/50 0)))
'(kcfa-2
  2
  2
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '((□? (f1)))))\""
  78
  ((23/10 59/25 0)
   (101/50 52/25 0)
   (113/50 23/10 0)
   (111/50 57/25 0)
   (63/25 129/50 0)))
'(kcfa-2
  2
  2
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '((□? (x1)))))\""
  133
  ((31/5 158/25 1/25)
   (161/25 33/5 1/25)
   (159/25 13/2 1/25)
   (301/50 309/50 1/25)
   (319/50 163/25 1/25)))
'(kcfa-2
  2
  2
  "\"(list\n 'eval\n '(λ (z) (-> (app z x1 x2) <-))\n (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  160
  ((39/25 8/5 0)
   (101/50 103/50 0)
   (17/10 87/50 0)
   (8/5 41/25 0)
   (89/50 46/25 0)))
'(kcfa-2
  2
  2
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  382
  ((2349/50 2407/50 33/50)
   (2299/50 2353/50 31/50)
   (1162/25 2377/50 3/5)
   (1162/25 1188/25 16/25)
   (1138/25 2329/50 29/50)))
'(kcfa-2
  2
  2
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  388
  ((29/25 6/5 0)
   (11/10 28/25 0)
   (51/50 53/50 0)
   (59/50 6/5 0)
   (57/50 29/25 0)))
'(kcfa-2
  2
  2
  "\"(list 'eval '(top) (menv '()))\""
  390
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (1/25 3/50 0)))
'(kcfa-2
  2
  2
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  390
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  2
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '((□? (f2)) (□? (x1)))))\""
  405
  ((23/25 47/50 0)
   (9/10 23/25 0)
   (37/50 19/25 0)
   (37/50 19/25 0)
   (9/10 23/25 0)))
'(kcfa-2
  2
  2
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  444
  ((457/50 467/50 2/25)
   (224/25 459/50 2/25)
   (229/25 469/50 2/25)
   (87/10 447/50 3/50)
   (227/25 93/10 2/25)))
'(kcfa-2
  2
  2
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  444
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  2
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  444
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  2
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))\""
  447
  ((9/25 9/25 0) (2/5 21/50 0) (9/25 19/50 0) (19/50 19/50 0) (9/25 19/50 0)))
'(kcfa-2
  2
  2
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '((□? (f2)) (□? (x1)))))\""
  447
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  2
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-))\n (menv '((□? (f1)))))\""
  448
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  2
  2
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '((□? (x2)) (□? (x1)))))\""
  448
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  2
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))\""
  451
  ((9/25 9/25 0) (19/50 19/50 0) (23/50 23/50 0) (19/50 2/5 0) (1/2 1/2 0)))
'(kcfa-2
  2
  2
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '((□? (f1)))))\""
  471
  ((319/50 163/25 1/25)
   (153/25 157/25 1/25)
   (159/25 162/25 1/25)
   (327/50 67/10 1/25)
   (61/10 156/25 1/25)))
'(kcfa-2
  2
  2
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '((□? (f1)))))\""
  472
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  2
  2
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '((□? (f2)) (□? (x1)))))\""
  517
  ((267/25 109/10 2/25)
   (503/50 257/25 2/25)
   (253/25 259/25 2/25)
   (531/50 543/50 2/25)
   (51/5 523/50 2/25)))
'(kcfa-2
  2
  2
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '((□? (f1)))))\""
  517
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  2
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '((□? (x1)))))\""
  517
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  2
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  526
  ((71/50 73/50 0)
   (67/50 69/50 0)
   (7/5 71/50 0)
   (67/50 69/50 0)
   (81/50 83/50 0)))
'(kcfa-2
  2
  2
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '((□? (x1)))))\""
  526
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  2
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '((□? (f1)))))\""
  527
  ((1/50 1/50 0) (1/50 1/50 0) (1/25 1/25 0) (1/50 1/25 0) (1/50 1/50 0)))
'(kcfa-2
  2
  2
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '((□? (f2)) (□? (x1)))))\""
  530
  ((6/25 13/50 0) (3/10 3/10 0) (8/25 8/25 0) (8/25 8/25 0) (7/25 7/25 0)))
'(kcfa-2
  2
  2
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  530
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  3
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '((□? (f1)))))\""
  5
  ((2/25 2/25 0) (3/50 3/50 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  2
  3
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '((□? (f1)))))\""
  47
  ((2 51/25 0)
   (107/50 11/5 0)
   (49/25 101/50 0)
   (19/10 97/50 0)
   (52/25 107/50 0)))
'(kcfa-2
  2
  3
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '((□? (f2)) (□? (x1)))))\""
  145
  ((316/25 647/50 3/25)
   (613/50 314/25 3/25)
   (303/25 62/5 3/25)
   (313/25 641/50 3/25)
   (57/5 117/10 3/25)))
'(kcfa-2
  2
  3
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '((□? (x1)))))\""
  147
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(kcfa-2
  2
  3
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  156
  ((4/25 4/25 0) (7/50 7/50 0) (4/25 4/25 0) (4/25 9/50 0) (9/50 9/50 0)))
'(kcfa-2
  2
  3
  "\"(list\n 'eval\n '(λ (z) (-> (app z x1 x2) <-))\n (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  198
  ((203/50 104/25 1/50)
   (106/25 217/50 1/50)
   (96/25 197/50 1/50)
   (7/2 18/5 1/50)
   (94/25 96/25 1/50)))
'(kcfa-2
  2
  3
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  198
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  3
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '((□? (f1)))))\""
  199
  ((1/25 1/25 0) (1/50 1/50 0) (1/25 1/25 0) (1/50 1/50 0) (1/25 1/25 0)))
'(kcfa-2
  2
  3
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  415
  ((1349/25 2761/50 7/10)
   (529/10 1354/25 37/50)
   (2651/50 1357/25 7/10)
   (1308/25 2679/50 17/25)
   (1326/25 1358/25 17/25)))
'(kcfa-2
  2
  3
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '((□? (x1)))))\""
  415
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  3
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  415
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  3
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  415
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  3
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '((□? (f1)))))\""
  416
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  2
  3
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  416
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  3
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '((□? (x2)) (□? (x1)))))\""
  416
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  3
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '((□? (f2)) (□? (x1)))))\""
  416
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  3
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))\""
  419
  ((19/50 19/50 0)
   (21/50 11/25 0)
   (19/50 19/50 0)
   (11/25 11/25 0)
   (19/50 2/5 0)))
'(kcfa-2
  2
  3
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '((□? (f1)))))\""
  442
  ((153/25 157/25 1/25)
   (63/10 161/25 1/25)
   (321/50 329/50 1/25)
   (161/25 331/50 1/25)
   (339/50 347/50 3/50)))
'(kcfa-2
  2
  3
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '((□? (f1)))))\""
  442
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  3
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '((□? (f2)) (□? (x1)))))\""
  454
  ((23/25 24/25 0)
   (41/50 21/25 0)
   (4/5 41/50 0)
   (9/10 23/25 0)
   (37/50 19/25 0)))
'(kcfa-2
  2
  3
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  472
  ((68/25 139/50 0)
   (117/50 119/50 0)
   (56/25 23/10 0)
   (129/50 66/25 0)
   (27/10 69/25 0)))
'(kcfa-2
  2
  3
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))\""
  475
  ((9/25 9/25 0)
   (11/25 11/25 0)
   (19/50 19/50 0)
   (17/50 17/50 0)
   (9/25 9/25 0)))
'(kcfa-2
  2
  3
  "\"(list 'eval '(top) (menv '()))\""
  477
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  2
  3
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  483
  ((51/50 53/50 0)
   (53/50 11/10 0)
   (26/25 53/50 0)
   (26/25 53/50 0)
   (28/25 29/25 0)))
'(kcfa-2
  2
  3
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-))\n (menv '((□? (f1)))))\""
  484
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  2
  3
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '((□? (x1)))))\""
  485
  ((4/25 9/50 0) (4/25 4/25 0) (3/25 3/25 0) (3/25 3/25 0) (3/25 3/25 0)))
'(kcfa-2
  2
  3
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '((□? (f2)) (□? (x1)))))\""
  530
  ((52/5 266/25 2/25)
   (264/25 54/5 2/25)
   (491/50 503/50 2/25)
   (244/25 10 2/25)
   (489/50 251/25 2/25)))
'(kcfa-2
  2
  3
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  530
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  4
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '((□? (f2)) (□? (x1)))))\""
  7
  ((2/25 2/25 0) (3/50 3/50 0) (3/50 2/25 0) (2/25 2/25 0) (2/25 2/25 0)))
'(kcfa-2
  2
  4
  "\"(list 'eval '(top) (menv '()))\""
  35
  ((7/10 18/25 0) (18/25 37/50 0) (29/50 3/5 0) (29/50 3/5 0) (16/25 33/50 0)))
'(kcfa-2
  2
  4
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '((□? (x2)) (□? (x1)))))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  4
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '((□? (f2)) (□? (x1)))))\""
  39
  ((2/25 2/25 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(kcfa-2
  2
  4
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '((□? (f1)))))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  4
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  41
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  4
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))\""
  43
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  2
  4
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  113
  ((122/25 5 1/50)
   (233/50 241/50 1/50)
   (247/50 126/25 1/50)
   (233/50 119/25 1/50)
   (231/50 237/50 1/50)))
'(kcfa-2
  2
  4
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '((□? (f1)))))\""
  114
  ((3/50 3/50 0) (3/50 3/50 0) (1/25 1/25 0) (1/25 1/25 0) (3/50 3/50 0)))
'(kcfa-2
  2
  4
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  292
  ((1437/50 736/25 8/25)
   (1471/50 754/25 9/25)
   (152/5 311/10 19/50)
   (1473/50 754/25 17/50)
   (718/25 1471/50 8/25)))
'(kcfa-2
  2
  4
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '((□? (x1)))))\""
  292
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  4
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '((□? (f1)))))\""
  311
  ((41/10 211/50 1/50)
   (97/25 199/50 1/50)
   (111/25 227/50 1/50)
   (109/25 223/50 1/50)
   (209/50 107/25 1/25)))
'(kcfa-2
  2
  4
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  311
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  4
  "\"(list\n 'eval\n '(λ (z) (-> (app z x1 x2) <-))\n (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  374
  ((339/25 139/10 2/25)
   (357/25 731/50 2/25)
   (357/25 366/25 2/25)
   (137/10 703/50 2/25)
   (357/25 73/5 3/50)))
'(kcfa-2
  2
  4
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '((□? (f1)))))\""
  375
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/25 0)))
'(kcfa-2
  2
  4
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  384
  ((67/50 34/25 0)
   (31/25 32/25 0)
   (32/25 33/25 0)
   (69/50 71/50 0)
   (69/50 7/5 0)))
'(kcfa-2
  2
  4
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '((□? (f1)))))\""
  386
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  2
  4
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '((□? (x1)))))\""
  404
  ((7/5 71/50 0)
   (79/50 8/5 0)
   (67/50 69/50 0)
   (13/10 33/25 0)
   (33/25 67/50 0)))
'(kcfa-2
  2
  4
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))\""
  407
  ((2/5 2/5 0) (13/25 27/50 0) (19/50 2/5 0) (9/25 9/25 0) (9/25 9/25 0)))
'(kcfa-2
  2
  4
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  407
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  4
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '((□? (f2)) (□? (x1)))))\""
  446
  ((537/50 551/50 2/25)
   (273/25 56/5 1/10)
   (539/50 276/25 2/25)
   (561/50 287/25 1/10)
   (113/10 577/50 2/25)))
'(kcfa-2
  2
  4
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  464
  ((81/50 83/50 0)
   (36/25 37/25 0)
   (8/5 41/25 0)
   (34/25 7/5 0)
   (79/50 81/50 0)))
'(kcfa-2
  2
  4
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '((□? (f2)) (□? (x1)))))\""
  509
  ((56/5 287/25 3/25)
   (523/50 537/50 1/10)
   (282/25 577/50 1/10)
   (54/5 553/50 1/10)
   (561/50 573/50 1/10)))
'(kcfa-2
  2
  4
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '((□? (f1)))))\""
  529
  ((57/10 146/25 1/25)
   (151/25 31/5 1/25)
   (291/50 149/25 1/25)
   (142/25 291/50 1/25)
   (307/50 157/25 1/25)))
'(kcfa-2
  2
  4
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '((□? (x1)))))\""
  529
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  4
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  529
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  4
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  529
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  4
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-))\n (menv '((□? (f1)))))\""
  530
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  2
  5
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-))\n (menv '((□? (f1)))))\""
  49
  ((113/50 58/25 0)
   (57/25 117/50 0)
   (52/25 53/25 0)
   (58/25 59/25 0)
   (54/25 11/5 0)))
'(kcfa-2
  2
  5
  "\"(list 'eval '(top) (menv '()))\""
  50
  ((1/50 1/50 0) (1/25 1/25 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  2
  5
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  53
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  5
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '((□? (f2)) (□? (x1)))))\""
  59
  ((3/50 3/50 0) (3/50 3/50 0) (2/25 2/25 0) (3/50 2/25 0) (2/25 2/25 0)))
'(kcfa-2
  2
  5
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '((□? (f2)) (□? (x1)))))\""
  154
  ((121/10 62/5 3/25)
   (296/25 609/50 3/25)
   (601/50 617/50 7/50)
   (303/25 621/50 7/50)
   (589/50 302/25 3/25)))
'(kcfa-2
  2
  5
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  216
  ((259/50 133/25 1/50)
   (271/50 277/50 1/50)
   (128/25 263/50 1/50)
   (138/25 283/50 1/50)
   (141/25 289/50 1/50)))
'(kcfa-2
  2
  5
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))\""
  219
  ((9/25 9/25 0) (11/25 11/25 0) (19/50 19/50 0) (9/25 19/50 0) (2/5 2/5 0)))
'(kcfa-2
  2
  5
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '((□? (f1)))))\""
  221
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  2
  5
  "\"(list\n 'eval\n '(λ (z) (-> (app z x1 x2) <-))\n (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  413
  ((239/5 2449/50 17/25)
   (1198/25 1228/25 7/10)
   (1206/25 1236/25 17/25)
   (2421/50 1239/25 7/10)
   (2431/50 249/5 33/50)))
'(kcfa-2
  2
  5
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  413
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  5
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  413
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  5
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '((□? (f1)))))\""
  413
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  5
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '((□? (f1)))))\""
  413
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  5
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  422
  ((81/50 83/50 0)
   (44/25 9/5 0)
   (91/50 93/50 0)
   (97/50 99/50 0)
   (43/25 44/25 0)))
'(kcfa-2
  2
  5
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  422
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  5
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '((□? (f1)))))\""
  423
  ((1/50 1/25 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/25 1/25 0)))
'(kcfa-2
  2
  5
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  441
  ((63/25 64/25 0)
   (121/50 62/25 0)
   (117/50 12/5 0)
   (117/50 12/5 0)
   (13/5 133/50 0)))
'(kcfa-2
  2
  5
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '((□? (x1)))))\""
  441
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  5
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  441
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  5
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '((□? (x1)))))\""
  441
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  5
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '((□? (x1)))))\""
  443
  ((9/50 9/50 0) (7/50 4/25 0) (9/50 9/50 0) (1/5 1/5 0) (1/5 1/5 0)))
'(kcfa-2
  2
  5
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))\""
  446
  ((9/25 9/25 0) (9/25 9/25 0) (9/25 9/25 0) (2/5 21/50 0) (19/50 2/5 0)))
'(kcfa-2
  2
  5
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '((□? (f1)))))\""
  447
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  2
  5
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '((□? (f2)) (□? (x1)))))\""
  507
  ((287/25 589/50 1/10)
   (12 123/10 3/25)
   (312/25 639/50 3/25)
   (303/25 621/50 3/25)
   (593/50 607/50 3/25)))
'(kcfa-2
  2
  5
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '((□? (x2)) (□? (x1)))))\""
  507
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  5
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '((□? (f1)))))\""
  527
  ((311/50 319/50 1/25)
   (162/25 331/50 1/25)
   (33/5 169/25 1/25)
   (166/25 34/5 1/25)
   (353/50 361/50 3/50)))
'(kcfa-2
  2
  5
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '((□? (f2)) (□? (x1)))))\""
  527
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  5
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  530
  ((24/25 49/50 0) (49/50 1 0) (53/50 27/25 0) (22/25 9/10 0) (28/25 57/50 0)))
'(kcfa-2
  2
  6
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  15
  ((6/25 13/50 0) (8/25 17/50 0) (3/10 8/25 0) (3/10 3/10 0) (13/50 13/50 0)))
'(kcfa-2
  2
  6
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  228
  ((253/10 259/10 11/50)
   (1207/50 1237/50 11/50)
   (613/25 628/25 6/25)
   (593/25 608/25 6/25)
   (611/25 626/25 11/50)))
'(kcfa-2
  2
  6
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '((□? (f1)))))\""
  233
  ((1/25 1/25 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (1/25 1/25 0)))
'(kcfa-2
  2
  6
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '((□? (f1)))))\""
  261
  ((259/50 53/10 1/25)
   (263/50 269/50 1/25)
   (251/50 129/25 1/25)
   (249/50 51/10 1/25)
   (247/50 253/50 1/25)))
'(kcfa-2
  2
  6
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '((□? (x1)))))\""
  263
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (2/25 2/25 0)))
'(kcfa-2
  2
  6
  "\"(list\n 'eval\n '(λ (z) (-> (app z x1 x2) <-))\n (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  326
  ((261/25 107/10 1/25)
   (517/50 53/5 1/25)
   (101/10 517/50 1/25)
   (103/10 264/25 1/25)
   (10 256/25 1/25)))
'(kcfa-2
  2
  6
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '((□? (f1)))))\""
  351
  ((11/2 141/25 1/25)
   (142/25 291/50 1/25)
   (141/25 289/50 1/25)
   (273/50 28/5 1/25)
   (291/50 149/25 1/25)))
'(kcfa-2
  2
  6
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-))\n (menv '((□? (f1)))))\""
  353
  ((1/25 1/25 0) (1/25 1/25 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(kcfa-2
  2
  6
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  362
  ((59/50 61/50 0)
   (11/10 57/50 0)
   (31/25 63/50 0)
   (13/10 33/25 0)
   (29/25 59/50 0)))
'(kcfa-2
  2
  6
  "\"(list 'eval '(top) (menv '()))\""
  363
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/50 1/50 0) (1/50 1/25 0)))
'(kcfa-2
  2
  6
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '((□? (f2)) (□? (x1)))))\""
  395
  ((197/25 409/50 1/25)
   (379/50 389/50 1/25)
   (37/5 379/50 1/25)
   (36/5 37/5 1/25)
   (188/25 77/10 1/50)))
'(kcfa-2
  2
  6
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '((□? (x2)) (□? (x1)))))\""
  395
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  6
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))\""
  398
  ((27/50 29/50 0)
   (29/50 31/50 0)
   (13/25 27/50 0)
   (27/50 14/25 0)
   (27/50 27/50 0)))
'(kcfa-2
  2
  6
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '((□? (f1)))))\""
  399
  ((1/25 3/50 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  2
  6
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '((□? (f2)) (□? (x1)))))\""
  444
  ((423/50 433/50 3/50)
   (218/25 9 3/50)
   (441/50 231/25 2/25)
   (231/25 243/25 2/25)
   (509/50 266/25 1/10)))
'(kcfa-2
  2
  6
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  462
  ((32/25 33/25 0)
   (33/25 34/25 0)
   (3/2 77/50 0)
   (37/25 38/25 0)
   (73/50 38/25 0)))
'(kcfa-2
  2
  6
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  462
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  6
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '((□? (x1)))))\""
  462
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  6
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  462
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  6
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))\""
  465
  ((1/2 13/25 0) (12/25 1/2 0) (2/5 21/50 0) (2/5 21/50 0) (21/50 11/25 0)))
'(kcfa-2
  2
  6
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  465
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  6
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  518
  ((58/5 119/10 3/25)
   (647/50 331/25 3/25)
   (593/50 607/50 1/10)
   (579/50 591/50 1/10)
   (121/10 62/5 3/25)))
'(kcfa-2
  2
  6
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '((□? (x1)))))\""
  526
  ((19/25 39/50 0)
   (7/10 18/25 0)
   (19/25 39/50 0)
   (18/25 37/50 0)
   (7/10 18/25 0)))
'(kcfa-2
  2
  6
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '((□? (f1)))))\""
  527
  ((1/25 1/25 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/25 0)))
'(kcfa-2
  2
  6
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '((□? (f2)) (□? (x1)))))\""
  527
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  6
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  527
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  6
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '((□? (f2)) (□? (x1)))))\""
  530
  ((71/50 71/50 26/25)
   (3/10 3/10 0)
   (7/25 3/10 0)
   (13/50 13/50 0)
   (13/50 7/25 0)))
'(kcfa-2
  2
  6
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '((□? (f1)))))\""
  530
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  7
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '((□? (f2)) (□? (x1)))))\""
  7
  ((3/50 2/25 0) (2/25 2/25 0) (3/50 2/25 0) (2/25 2/25 0) (7/50 7/50 0)))
'(kcfa-2
  2
  7
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))\""
  9
  ((1/25 1/25 0) (1/25 3/50 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 3/50 0)))
'(kcfa-2
  2
  7
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '((□? (f1)))))\""
  11
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  7
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  72
  ((68/25 139/50 0)
   (77/25 79/25 0)
   (76/25 78/25 0)
   (151/50 31/10 0)
   (78/25 161/50 0)))
'(kcfa-2
  2
  7
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  78
  ((4/25 4/25 0) (4/25 4/25 0) (4/25 4/25 0) (4/25 4/25 0) (7/50 4/25 0)))
'(kcfa-2
  2
  7
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-))\n (menv '((□? (f1)))))\""
  118
  ((69/25 141/50 0)
   (63/25 129/50 0)
   (59/25 121/50 0)
   (62/25 127/50 0)
   (66/25 27/10 1/50)))
'(kcfa-2
  2
  7
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '((□? (x2)) (□? (x1)))))\""
  118
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  7
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '((□? (x1)))))\""
  118
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  7
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  226
  ((313/25 643/50 1/10)
   (25/2 321/25 3/50)
   (318/25 327/25 2/25)
   (337/25 69/5 1/10)
   (129/10 661/50 3/50)))
'(kcfa-2
  2
  7
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '((□? (f1)))))\""
  256
  ((43/10 22/5 1/50)
   (213/50 219/50 1/50)
   (112/25 229/50 1/50)
   (114/25 233/50 1/25)
   (231/50 237/50 1/25)))
'(kcfa-2
  2
  7
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '((□? (f1)))))\""
  257
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/25 0) (1/50 1/25 0)))
'(kcfa-2
  2
  7
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '((□? (f2)) (□? (x1)))))\""
  269
  ((19/25 39/50 0)
   (4/5 21/25 0)
   (4/5 41/50 0)
   (41/50 21/25 0)
   (23/25 47/50 0)))
'(kcfa-2
  2
  7
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '((□? (f1)))))\""
  269
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  7
  "\"(list\n 'eval\n '(λ (z) (-> (app z x1 x2) <-))\n (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  420
  ((1032/25 2121/50 3/5)
   (2129/50 439/10 33/50)
   (2157/50 1117/25 33/50)
   (449/10 1164/25 33/50)
   (411/10 1057/25 31/50)))
'(kcfa-2
  2
  7
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '((□? (f1)))))\""
  420
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  7
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  420
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  7
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  420
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  7
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '((□? (x1)))))\""
  420
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  7
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '((□? (x1)))))\""
  436
  ((13/5 133/50 0)
   (7/2 37/10 1/50)
   (129/50 66/25 0)
   (119/50 123/50 1/50)
   (61/25 63/25 1/50)))
'(kcfa-2
  2
  7
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '((□? (f2)) (□? (x1)))))\""
  475
  ((56/5 286/25 1/10)
   (117/10 597/50 1/10)
   (553/50 283/25 1/10)
   (308/25 316/25 3/25)
   (637/50 327/25 7/50)))
'(kcfa-2
  2
  7
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  475
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  7
  "\"(list 'eval '(top) (menv '()))\""
  476
  ((1/50 1/50 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/50 1/50 0)))
'(kcfa-2
  2
  7
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '((□? (f1)))))\""
  476
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  7
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  476
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  7
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))\""
  479
  ((2/5 2/5 0) (9/25 9/25 0) (19/50 2/5 0) (9/25 9/25 0) (21/50 11/25 0)))
'(kcfa-2
  2
  7
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  479
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  7
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '((□? (f2)) (□? (x1)))))\""
  527
  ((252/25 258/25 2/25)
   (262/25 268/25 2/25)
   (483/50 247/25 2/25)
   (497/50 254/25 2/25)
   (251/25 257/25 2/25)))
'(kcfa-2
  2
  7
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  530
  ((39/50 4/5 0)
   (26/25 53/50 0)
   (21/25 43/50 0)
   (22/25 9/10 0)
   (28/25 28/25 0)))
'(kcfa-2
  2
  8
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '((□? (f2)) (□? (x1)))))\""
  7
  ((3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0) (3/50 3/50 0)))
'(kcfa-2
  2
  8
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  40
  ((6/5 61/50 0)
   (27/25 28/25 0)
   (59/50 6/5 0)
   (57/50 59/50 0)
   (27/25 11/10 0)))
'(kcfa-2
  2
  8
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))\""
  52
  ((47/50 24/25 0)
   (47/50 49/50 0)
   (21/25 43/50 0)
   (22/25 9/10 0)
   (39/50 4/5 0)))
'(kcfa-2
  2
  8
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '((□? (f1)))))\""
  57
  ((1/25 3/50 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  2
  8
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '((□? (f2)) (□? (x1)))))\""
  69
  ((24/25 49/50 0)
   (9/10 23/25 0)
   (7/10 18/25 0)
   (4/5 41/50 0)
   (19/25 39/50 0)))
'(kcfa-2
  2
  8
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  123
  ((229/50 117/25 0)
   (243/50 249/50 0)
   (119/25 243/50 0)
   (49/10 251/50 1/50)
   (23/5 47/10 0)))
'(kcfa-2
  2
  8
  "\"(list\n 'eval\n '(λ (z) (-> (app z x1 x2) <-))\n (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  348
  ((811/25 1661/50 8/25)
   (813/25 832/25 8/25)
   (1681/50 1719/50 8/25)
   (809/25 828/25 17/50)
   (1677/50 858/25 3/10)))
'(kcfa-2
  2
  8
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '((□? (f2)) (□? (x1)))))\""
  396
  ((246/25 252/25 2/25)
   (97/10 497/50 2/25)
   (224/25 459/50 2/25)
   (93/10 477/50 2/25)
   (233/25 477/50 1/10)))
'(kcfa-2
  2
  8
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  396
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  8
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))\""
  399
  ((17/50 17/50 0) (17/50 17/50 0) (9/25 9/25 0) (19/50 2/5 0) (19/50 2/5 0)))
'(kcfa-2
  2
  8
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '((□? (x2)) (□? (x1)))))\""
  399
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  8
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  399
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  8
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '((□? (x1)))))\""
  399
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  8
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  417
  ((36/25 37/25 0)
   (31/25 63/50 0)
   (69/50 7/5 0)
   (73/50 3/2 0)
   (81/50 41/25 0)))
'(kcfa-2
  2
  8
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  417
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  8
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '((□? (f1)))))\""
  419
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  2
  8
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '((□? (f2)) (□? (x1)))))\""
  479
  ((503/50 103/10 2/25)
   (267/25 274/25 2/25)
   (519/50 531/50 2/25)
   (263/25 269/25 2/25)
   (52/5 266/25 2/25)))
'(kcfa-2
  2
  8
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '((□? (f1)))))\""
  500
  ((156/25 319/50 1/25)
   (287/50 147/25 1/25)
   (309/50 317/50 1/25)
   (149/25 152/25 1/25)
   (59/10 151/25 1/25)))
'(kcfa-2
  2
  8
  "\"(list 'eval '(top) (menv '()))\""
  504
  ((7/50 7/50 0) (3/25 3/25 0) (3/25 3/25 0) (3/25 3/25 0) (3/25 3/25 0)))
'(kcfa-2
  2
  8
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '((□? (f1)))))\""
  505
  ((1/50 1/50 0) (1/25 1/25 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  2
  8
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '((□? (x1)))))\""
  505
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  8
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  508
  ((16/25 33/50 0)
   (21/25 43/50 0)
   (33/50 17/25 0)
   (7/10 18/25 0)
   (19/25 39/50 0)))
'(kcfa-2
  2
  8
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-))\n (menv '((□? (f1)))))\""
  528
  ((152/25 31/5 1/25)
   (283/50 29/5 1/25)
   (273/50 139/25 1/25)
   (138/25 283/50 1/25)
   (61/10 156/25 1/25)))
'(kcfa-2
  2
  8
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  528
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  8
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '((□? (f1)))))\""
  528
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  8
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '((□? (f1)))))\""
  529
  ((1/50 1/50 0) (1/50 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(kcfa-2
  2
  8
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  529
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  8
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '((□? (x1)))))\""
  530
  ((9/50 9/50 0) (9/50 9/50 0) (3/25 7/50 0) (3/25 3/25 0) (3/25 3/25 0)))
'(kcfa-2
  2
  9
  "\"(list\n 'eval\n '(λ (z) (-> (app z x1 x2) <-))\n (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  55
  ((63/25 129/50 0)
   (64/25 66/25 0)
   (137/50 14/5 0)
   (139/50 71/25 0)
   (71/25 72/25 0)))
'(kcfa-2
  2
  9
  "\"(list 'eval '(app (-> f2 <-) #t) (menv '((□? (f2)) (□? (x1)))))\""
  79
  ((23/25 47/50 0)
   (53/50 27/25 0)
   (1 51/50 0)
   (23/25 47/50 0)
   (47/50 47/50 0)))
'(kcfa-2
  2
  9
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  82
  ((6/25 6/25 0) (13/50 13/50 0) (6/25 6/25 0) (6/25 13/50 0) (6/25 6/25 0)))
'(kcfa-2
  2
  9
  "\"(list 'eval '(top) (menv '()))\""
  103
  ((7/10 18/25 0) (1/2 13/25 0) (27/50 14/25 0) (14/25 29/50 0) (1/2 1/2 0)))
'(kcfa-2
  2
  9
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  339
  ((1979/50 2023/50 1/2)
   (1051/25 2149/50 27/50)
   (2107/50 1077/25 13/25)
   (2121/50 2169/50 13/25)
   (984/25 1007/25 12/25)))
'(kcfa-2
  2
  9
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 #t))) (app f2 #f)) <-))\n (menv '((□? (f2)) (□? (x1)))))\""
  407
  ((299/25 647/50 3/25)
   (11 563/50 1/10)
   (279/25 571/50 1/10)
   (587/50 12 1/10)
   (304/25 311/25 7/50)))
'(kcfa-2
  2
  9
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  413
  ((11/10 28/25 0) (1 51/50 0) (53/50 11/10 0) (1 51/50 0) (47/50 24/25 0)))
'(kcfa-2
  2
  9
  "\"(list 'eval '(let ((-> _ = (app f1 #t) <-)) bod) (menv '((□? (f1)))))\""
  437
  ((73/10 373/50 3/50)
   (173/25 353/50 1/25)
   (331/50 169/25 3/50)
   (363/50 371/50 3/50)
   (347/50 71/10 1/25)))
'(kcfa-2
  2
  9
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  437
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  9
  "\"(list 'eval '(let ((-> _ = (app f2 #t) <-)) bod) (menv '((□? (f2)) (□? (x1)))))\""
  482
  ((254/25 519/50 2/25)
   (259/25 53/5 2/25)
   (553/50 113/10 2/25)
   (268/25 274/25 2/25)
   (254/25 52/5 2/25)))
'(kcfa-2
  2
  9
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '((□? (x1)))))\""
  482
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  9
  "\"(list 'eval '(let (_) (-> (app f2 #f) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  482
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  9
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 #t))) (app f2 #f))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '((□? (x1)))))\""
  482
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  9
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 #t))) (app f1 #f)) <-))\n (menv '((□? (f1)))))\""
  503
  ((148/25 151/25 1/25)
   (311/50 317/50 1/25)
   (146/25 149/25 1/25)
   (149/25 61/10 1/25)
   (161/25 164/25 1/25)))
'(kcfa-2
  2
  9
  "\"(list 'eval '(app f2 (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))\""
  506
  ((17/50 17/50 0) (9/25 19/50 0) (19/50 2/5 0) (11/25 11/25 0) (2/5 21/50 0)))
'(kcfa-2
  2
  9
  "\"(list 'eval '(app (-> f1 <-) #t) (menv '((□? (f1)))))\""
  506
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  9
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '((□? (x2)) (□? (x1)))))\""
  506
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  9
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '((□? (x1)))))\""
  507
  ((3/25 7/50 0) (7/50 7/50 0) (3/25 7/50 0) (3/25 7/50 0) (3/25 7/50 0)))
'(kcfa-2
  2
  9
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  507
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  9
  "\"(list 'eval '(app f1 (-> #f <-)) (menv '((□? (f1)))))\""
  508
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(kcfa-2
  2
  9
  "\"(list 'eval '(let (_) (-> (app f1 #f) <-)) (menv '((□? (f1)))))\""
  508
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  9
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 #t))) (app f1 #f))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  508
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  9
  "\"(list 'eval '(app f1 (-> #t <-)) (menv '((□? (f1)))))\""
  509
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/25 0) (1/50 1/50 0)))
'(kcfa-2
  2
  9
  "\"(list 'eval '(app (-> f2 <-) #f) (menv '((□? (f2)) (□? (x1)))))\""
  509
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  9
  "\"(list 'eval '(app (-> f1 <-) #f) (menv '((□? (f1)))))\""
  509
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(kcfa-2
  2
  9
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  527
  ((8/5 41/25 0)
   (39/25 8/5 0)
   (37/25 38/25 0)
   (83/50 17/10 0)
   (38/25 39/25 0)))
'(kcfa-2
  2
  9
  "\"(list 'eval '(app f2 (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))\""
  530
  ((9/25 19/50 0) (23/50 12/25 0) (17/50 9/25 0) (9/25 9/25 0) (9/25 9/25 0)))
'(kcfa-2
  2
  9
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 #t))) (app f1 #f)))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 #t))) (app f2 #f)))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  530
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  0
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  2
  0
  "\"(list 'eval '(app y (-> y <-)) (menv '((□? (y)))))\""
  24
  ((9/25 19/50 0) (2/5 2/5 0) (17/50 17/50 0) (17/50 17/50 0) (19/50 19/50 0)))
'(structural-rec
  2
  0
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  32
  ((1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (3/25 3/25 0) (3/25 3/25 0)))
'(structural-rec
  2
  0
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '((□? (y)))))\""
  37
  ((7/50 7/50 0) (7/50 7/50 0) (4/25 4/25 0) (11/50 6/25 0) (11/50 11/50 0)))
'(structural-rec
  2
  0
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  0
  "\"(list 'eval '(top) (menv '()))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  0
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  39
  ((1/50 1/50 0) (1/50 1/50 0) (0 1/50 0) (0 0 0) (1/50 1/50 0)))
'(structural-rec
  2
  0
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  0
  "\"(list 'eval '(app (-> y <-) y) (menv '((□? (y)))))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  1
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  1
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  30
  ((21/50 21/50 0)
   (21/50 21/50 0)
   (21/50 11/25 0)
   (1/2 1/2 0)
   (11/25 11/25 0)))
'(structural-rec
  2
  1
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '((□? (y)))))\""
  36
  ((7/50 7/50 0) (7/50 7/50 0) (7/50 7/50 0) (7/50 7/50 0) (7/50 7/50 0)))
'(structural-rec
  2
  1
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  36
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  1
  "\"(list 'eval '(top) (menv '()))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  1
  "\"(list 'eval '(app y (-> y <-)) (menv '((□? (y)))))\""
  38
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(structural-rec
  2
  1
  "\"(list 'eval '(app (-> y <-) y) (menv '((□? (y)))))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  1
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  1
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  39
  ((0 0 0) (0 0 0) (0 1/50 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  2
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  5
  ((1/25 1/25 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  2
  2
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  6
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  2
  "\"(list 'eval '(app y (-> y <-)) (menv '((□? (y)))))\""
  24
  ((19/50 19/50 0) (2/5 2/5 0) (8/25 17/50 0) (17/50 9/25 0) (12/25 12/25 0)))
'(structural-rec
  2
  2
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  33
  ((3/25 3/25 0) (7/50 4/25 0) (3/25 3/25 0) (1/10 1/10 0) (1/10 3/25 0)))
'(structural-rec
  2
  2
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '((□? (y)))))\""
  38
  ((7/50 7/50 0) (7/50 7/50 0) (4/25 9/50 0) (6/25 6/25 0) (7/50 7/50 0)))
'(structural-rec
  2
  2
  "\"(list 'eval '(top) (menv '()))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  2
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  2
  "\"(list 'eval '(app (-> y <-) y) (menv '((□? (y)))))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  2
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  3
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  30
  ((1/2 1/2 0) (1/2 1/2 0) (23/50 12/25 0) (11/25 11/25 0) (12/25 1/2 0)))
'(structural-rec
  2
  3
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  30
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  3
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  31
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  2
  3
  "\"(list 'eval '(top) (menv '()))\""
  32
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  3
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  32
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  3
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  32
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  3
  "\"(list 'eval '(app y (-> y <-)) (menv '((□? (y)))))\""
  34
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(structural-rec
  2
  3
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '((□? (y)))))\""
  39
  ((7/50 7/50 0) (7/50 7/50 0) (4/25 4/25 0) (9/50 9/50 0) (7/50 4/25 0)))
'(structural-rec
  2
  3
  "\"(list 'eval '(app (-> y <-) y) (menv '((□? (y)))))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  4
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  2
  4
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  30
  ((11/25 23/50 0)
   (11/25 11/25 0)
   (23/50 23/50 0)
   (23/50 12/25 0)
   (21/50 11/25 0)))
'(structural-rec
  2
  4
  "\"(list 'eval '(app y (-> y <-)) (menv '((□? (y)))))\""
  32
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(structural-rec
  2
  4
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '((□? (y)))))\""
  37
  ((7/50 7/50 0) (4/25 4/25 0) (7/50 7/50 0) (7/50 4/25 0) (4/25 4/25 0)))
'(structural-rec
  2
  4
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (1/50 1/50 0) (0 1/50 0)))
'(structural-rec
  2
  4
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  4
  "\"(list 'eval '(top) (menv '()))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  4
  "\"(list 'eval '(app (-> y <-) y) (menv '((□? (y)))))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  4
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  5
  "\"(list 'eval '(app y (-> y <-)) (menv '((□? (y)))))\""
  22
  ((17/50 9/25 0)
   (17/50 17/50 0)
   (9/25 9/25 0)
   (11/25 23/50 0)
   (21/50 21/50 0)))
'(structural-rec
  2
  5
  "\"(list 'eval '(top) (menv '()))\""
  27
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (3/50 3/50 0)))
'(structural-rec
  2
  5
  "\"(list 'eval '(app (-> y <-) y) (menv '((□? (y)))))\""
  28
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(structural-rec
  2
  5
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  28
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  5
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '((□? (y)))))\""
  32
  ((2/25 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0)))
'(structural-rec
  2
  5
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  34
  ((0 0 0) (1/50 1/50 0) (0 1/50 0) (0 0 0) (0 1/50 0)))
'(structural-rec
  2
  5
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  34
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  5
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  39
  ((2/25 2/25 0) (2/25 1/10 0) (2/25 2/25 0) (3/50 3/50 0) (3/50 3/50 0)))
'(structural-rec
  2
  5
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  6
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '((□? (y)))))\""
  29
  ((12/25 12/25 0) (12/25 1/2 0) (12/25 1/2 0) (13/25 27/50 0) (1/2 13/25 0)))
'(structural-rec
  2
  6
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  29
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  6
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  29
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  6
  "\"(list 'eval '(app y (-> y <-)) (menv '((□? (y)))))\""
  30
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(structural-rec
  2
  6
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  37
  ((2/25 2/25 0) (2/25 2/25 0) (2/25 2/25 0) (3/25 3/25 0) (3/25 3/25 0)))
'(structural-rec
  2
  6
  "\"(list 'eval '(top) (menv '()))\""
  38
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  6
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  39
  ((1/50 1/50 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  6
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  6
  "\"(list 'eval '(app (-> y <-) y) (menv '((□? (y)))))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  7
  "\"(list 'eval '(app (-> y <-) y) (menv '((□? (y)))))\""
  22
  ((9/25 9/25 0)
   (17/50 17/50 0)
   (17/50 9/25 0)
   (17/50 17/50 0)
   (17/50 17/50 0)))
'(structural-rec
  2
  7
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  32
  ((3/25 3/25 0) (3/25 3/25 0) (3/25 3/25 0) (3/25 3/25 0) (3/25 3/25 0)))
'(structural-rec
  2
  7
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '((□? (y)))))\""
  36
  ((7/50 7/50 0) (3/25 7/50 0) (4/25 4/25 0) (1/10 1/10 0) (2/25 1/10 0)))
'(structural-rec
  2
  7
  "\"(list 'eval '(top) (menv '()))\""
  37
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  7
  "\"(list 'eval '(app y (-> y <-)) (menv '((□? (y)))))\""
  38
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(structural-rec
  2
  7
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  39
  ((0 1/50 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  7
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  7
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  7
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  39
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  8
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  5
  ((1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0) (1/50 1/50 0)))
'(structural-rec
  2
  8
  "\"(list 'eval '(app y (-> y <-)) (menv '((□? (y)))))\""
  24
  ((17/50 17/50 0)
   (17/50 17/50 0)
   (17/50 17/50 0)
   (17/50 17/50 0)
   (9/25 9/25 0)))
'(structural-rec
  2
  8
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  24
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  8
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  25
  ((0 0 0) (1/50 1/50 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  8
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  33
  ((1/10 1/10 0) (1/10 3/25 0) (3/25 3/25 0) (7/50 7/50 0) (3/25 3/25 0)))
'(structural-rec
  2
  8
  "\"(list 'eval '(top) (menv '()))\""
  34
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  8
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  34
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  8
  "\"(list 'eval '(app (-> y <-) y) (menv '((□? (y)))))\""
  35
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(structural-rec
  2
  8
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '((□? (y)))))\""
  39
  ((4/25 4/25 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0) (1/10 1/10 0)))
'(structural-rec
  2
  9
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  30
  ((21/50 11/25 0)
   (21/50 21/50 0)
   (21/50 11/25 0)
   (11/25 23/50 0)
   (1/2 13/25 0)))
'(structural-rec
  2
  9
  "\"(list 'eval '(top) (menv '()))\""
  31
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  9
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  31
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  9
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  31
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  9
  "\"(list 'eval '(app (-> y <-) y) (menv '((□? (y)))))\""
  33
  ((2/25 2/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0)))
'(structural-rec
  2
  9
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  33
  ((0 0 0) (0 0 0) (0 0 0) (0 0 0) (0 0 0)))
'(structural-rec
  2
  9
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '((□? (y)))))\""
  37
  ((3/25 3/25 0) (1/10 1/10 0) (1/10 1/10 0) (3/25 3/25 0) (4/25 4/25 0)))
'(structural-rec
  2
  9
  "\"(list 'eval '(app y (-> y <-)) (menv '((□? (y)))))\""
  38
  ((1/25 1/25 0) (1/25 1/25 0) (1/25 1/25 0) (1/25 3/50 0) (1/25 1/25 0)))
'(structural-rec
  2
  9
  "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\""
  39
  ((1/50 1/50 0) (0 1/50 0) (1/50 1/50 0) (0 0 0) (0 0 0)))
