'(app-num 0 0 "\"(list 'eval '(app (-> x <-) 2) (menv '()))\"" 2 ((0 0 0)))
'(app-num
  0
  0
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  2
  ((0 0 0)))
'(app-num
  0
  0
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  10
  ((0 0 0)))
'(app-num 0 0 "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\"" 10 ((0 0 0)))
'(app-num 0 0 "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\"" 10 ((0 0 0)))
'(app-num
  0
  0
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  12
  ((0 0 0)))
'(app-num 0 0 "\"(list 'eval '(app (-> x <-) 1) (menv '()))\"" 12 ((0 0 0)))
'(app-num 0 0 "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\"" 12 ((0 0 0)))
'(app-num
  0
  0
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  12
  ((0 0 0)))
'(app-num 0 0 "\"(list 'eval '(top) (menv '()))\"" 13 ((0 0 0)))
'(basic-letrec
  0
  0
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  2
  ((0 0 0)))
'(basic-letrec
  0
  0
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) ((#t) (app a (app - y 1))) ((#f) y)) <-))\n (menv '(())))\""
  20
  ((0 0 0)))
'(basic-letrec
  0
  0
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y)\n              (match (app equal? y 0) ((#t) (app a (app - y 1))) ((#f) y)))\n            <-))\n    bod)\n (menv '()))\""
  20
  ((0 0 0)))
'(basic-letrec
  0
  0
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '(())))\""
  20
  ((0 0 0)))
'(basic-letrec
  0
  0
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) ((#t) (app a (app - y 1))) ((#f) y))\n (menv '(())))\""
  20
  ((0 0 0)))
'(basic-letrec
  0
  0
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  20
  ((0 0 0)))
'(basic-letrec
  0
  0
  "\"(list\n 'eval\n '(match (app equal? y 0) ((#t) (app a (app - y 1))) (-> (#f) y <-))\n (menv '(())))\""
  20
  ((0 0 0)))
'(basic-letrec
  0
  0
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> (#t) (app a (app - y 1)) <-) ((#f) y))\n (menv '(())))\""
  20
  ((0 0 0)))
'(basic-letrec
  0
  0
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  21
  ((0 0 0)))
'(basic-letrec
  0
  0
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '(())))\""
  21
  ((0 0 0)))
'(basic-letrec
  0
  0
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '(())))\""
  21
  ((0 0 0)))
'(basic-letrec
  0
  0
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '(())))\""
  21
  ((0 0 0)))
'(basic-letrec
  0
  0
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '(())))\""
  21
  ((0 0 0)))
'(basic-letrec
  0
  0
  "\"(list 'eval '(app (-> - <-) y 1) (menv '(())))\""
  21
  ((0 0 0)))
'(basic-letrec
  0
  0
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '(())))\""
  21
  ((0 0 0)))
'(basic-letrec
  0
  0
  "\"(list 'eval '(app - (-> y <-) 1) (menv '(())))\""
  21
  ((0 0 0)))
'(basic-letrec 0 0 "\"(list 'eval '(top) (menv '()))\"" 22 ((0 0 0)))
'(basic-letstar
  0
  0
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  2
  ((0 0 0)))
'(basic-letstar
  0
  0
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  3
  ((0 0 0)))
'(basic-letstar 0 0 "\"(list 'eval '(top) (menv '()))\"" 4 ((0 0 0)))
'(basic-letstar
  0
  0
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  4
  ((0 0 0)))
'(constr
  0
  0
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) ((_) x)) (menv '()))\""
  6
  ((0 0 0)))
'(constr
  0
  0
  "\"(list 'eval '(app cons 1 (-> (app nil) <-)) (menv '()))\""
  6
  ((0 0 0)))
'(constr
  0
  0
  "\"(list 'eval '(app (-> cons <-) 1 (app nil)) (menv '()))\""
  6
  ((0 0 0)))
'(constr
  0
  0
  "\"(list 'eval '(let ((-> x = (app cons 1 (app nil)) <-)) bod) (menv '()))\""
  6
  ((0 0 0)))
'(constr 0 0 "\"(list 'eval '(top) (menv '()))\"" 9 ((0 0 0)))
'(constr
  0
  0
  "\"(list 'eval '(app cons (-> 1 <-) (app nil)) (menv '()))\""
  9
  ((0 0 0)))
'(constr
  0
  0
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) ((_) x)) <-)) (menv '()))\""
  9
  ((0 0 0)))
'(constr
  0
  0
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) ((_) x)) (menv '()))\""
  9
  ((0 0 0)))
'(constr 0 0 "\"(list 'eval '(app (-> nil <-)) (menv '()))\"" 9 ((0 0 0)))
'(constr
  0
  0
  "\"(list 'eval '(match x ((cons 1 n) n) (-> (_) x <-)) (menv '()))\""
  10
  ((0 0 0)))
'(constr2
  0
  0
  "\"(list 'eval '(letrec (try) (-> (app try (λ (f) (app not f))) <-)) (menv '()))\""
  18
  ((0 0 0)))
'(constr2 0 0 "\"(list 'eval '(top) (menv '()))\"" 19 ((0 0 0)))
'(constr2
  0
  0
  "\"(list 'eval '(λ (f) (-> (app or (app f (app #t))) <-)) (menv '(())))\""
  19
  ((0 0 0)))
'(constr2
  0
  0
  "\"(list 'eval '(λ (f) (-> (app not f) <-)) (menv '(())))\""
  19
  ((0 0 0)))
'(constr2
  0
  0
  "\"(list 'eval '(app (-> try <-) (λ (f) (app not f))) (menv '()))\""
  19
  ((0 0 0)))
'(constr2
  0
  0
  "\"(list 'eval '(app (-> not <-) f) (menv '(())))\""
  19
  ((0 0 0)))
'(constr2
  0
  0
  "\"(list 'eval '(app try (-> (λ (f) (app not f)) <-)) (menv '()))\""
  19
  ((0 0 0)))
'(constr2
  0
  0
  "\"(list 'eval '(app or (-> (app f (app #t)) <-)) (menv '(())))\""
  19
  ((0 0 0)))
'(constr2
  0
  0
  "\"(list\n 'eval\n '(letrec ((-> try = (λ (f) (app or (app f (app #t)))) <-)) bod)\n (menv '()))\""
  19
  ((0 0 0)))
'(constr2
  0
  0
  "\"(list 'eval '(app not (-> f <-)) (menv '(())))\""
  19
  ((0 0 0)))
'(constr2
  0
  0
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '(())))\""
  19
  ((0 0 0)))
'(constr2
  0
  0
  "\"(list 'eval '(app (-> or <-) (app f (app #t))) (menv '(())))\""
  19
  ((0 0 0)))
'(constr2
  0
  0
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '(())))\""
  19
  ((0 0 0)))
'(constr2 0 0 "\"(list 'eval '(app (-> #t <-)) (menv '(())))\"" 19 ((0 0 0)))
'(err 0 0 "\"(list 'eval '(app x (-> x <-)) (menv '(())))\"" 3 ((0 0 0)))
'(err
  0
  0
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  3
  ((0 0 0)))
'(err
  0
  0
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '(())))\""
  5
  ((0 0 0)))
'(err
  0
  0
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  6
  ((0 0 0)))
'(err 0 0 "\"(list 'eval '(top) (menv '()))\"" 7 ((0 0 0)))
'(err 0 0 "\"(list 'eval '(app (-> x <-) x) (menv '(())))\"" 7 ((0 0 0)))
'(id 0 0 "\"(list 'eval '(λ (x) (-> x <-)) (menv '(())))\"" 3 ((0 0 0)))
'(id
  0
  0
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  4
  ((0 0 0)))
'(id 0 0 "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\"" 8 ((0 0 0)))
'(id
  0
  0
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  8
  ((0 0 0)))
'(id 0 0 "\"(list 'eval '(top) (menv '()))\"" 9 ((0 0 0)))
'(let-num
  0
  0
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  1
  ((0 0 0)))
'(let-num
  0
  0
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  7
  ((0 0 0)))
'(let-num 0 0 "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\"" 7 ((0 0 0)))
'(let-num 0 0 "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\"" 7 ((0 0 0)))
'(let-num 0 0 "\"(list 'eval '(app (-> x <-) 1) (menv '()))\"" 7 ((0 0 0)))
'(let-num 0 0 "\"(list 'eval '(top) (menv '()))\"" 8 ((0 0 0)))
'(let 0 0 "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\"" 2 ((0 0 0)))
'(let 0 0 "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\"" 6 ((0 0 0)))
'(let 0
   0
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   6
   ((0 0 0)))
'(let 0 0 "\"(list 'eval '(top) (menv '()))\"" 7 ((0 0 0)))
'(multi-param
  0
  0
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '(())))\""
  7
  ((0 0 0)))
'(multi-param
  0
  0
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  7
  ((0 0 0)))
'(multi-param
  0
  0
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  8
  ((0 0 0)))
'(multi-param
  0
  0
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  8
  ((0 0 0)))
'(multi-param
  0
  0
  "\"(list 'eval '(app x (-> y <-)) (menv '(())))\""
  8
  ((0 0 0)))
'(multi-param 0 0 "\"(list 'eval '(top) (menv '()))\"" 11 ((0 0 0)))
'(multi-param
  0
  0
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '(())))\""
  11
  ((0 0 0)))
'(multi-param
  0
  0
  "\"(list 'eval '(app (-> x <-) y) (menv '(())))\""
  11
  ((0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '(())))\""
  2
  ((0 0 0)))
'(ack
  0
  0
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '(())))\""
  17
  ((0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '(())))\""
  17
  ((0 0 0)))
'(ack
  0
  0
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> (#f) (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '(())))\""
  44
  ((0 0 0)))
'(ack
  0
  0
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '(())))\""
  44
  ((0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '(())))\""
  44
  ((0 0 0)))
'(ack 0 0 "\"(list 'eval '(app (-> - <-) m 1) (menv '(())))\"" 44 ((0 0 0)))
'(ack 0 0 "\"(list 'eval '(app (-> - <-) n 1) (menv '(())))\"" 44 ((0 0 0)))
'(ack
  0
  0
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      ((#f)\n       (match\n        (app = n 0)\n        ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '(())))\""
  44
  ((0 0 0)))
'(ack 0 0 "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\"" 44 ((0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '(())))\""
  44
  ((0 0 0)))
'(ack
  0
  0
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    (#f)\n    (match\n     (app = n 0)\n     ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '(())))\""
  44
  ((0 0 0)))
'(ack
  0
  0
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   ((#f)\n    (match\n     (app = n 0)\n     ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '(())))\""
  44
  ((0 0 0)))
'(ack 0 0 "\"(list 'eval '(app (-> - <-) m 1) (menv '(())))\"" 44 ((0 0 0)))
'(ack
  0
  0
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '(())))\""
  44
  ((0 0 0)))
'(ack 0 0 "\"(list 'eval '(app = n (-> 0 <-)) (menv '(())))\"" 44 ((0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '(())))\""
  44
  ((0 0 0)))
'(ack 0 0 "\"(list 'eval '(app - (-> n <-) 1) (menv '(())))\"" 44 ((0 0 0)))
'(ack 0 0 "\"(list 'eval '(app = (-> n <-) 0) (menv '(())))\"" 44 ((0 0 0)))
'(ack 0 0 "\"(list 'eval '(app - n (-> 1 <-)) (menv '(())))\"" 44 ((0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '(())))\""
  44
  ((0 0 0)))
'(ack 0 0 "\"(list 'eval '(app - m (-> 1 <-)) (menv '(())))\"" 44 ((0 0 0)))
'(ack 0 0 "\"(list 'eval '(app - m (-> 1 <-)) (menv '(())))\"" 44 ((0 0 0)))
'(ack
  0
  0
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   ((#f)\n    (match\n     (app = n 0)\n     ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '(())))\""
  44
  ((0 0 0)))
'(ack 0 0 "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\"" 45 ((0 0 0)))
'(ack 0 0 "\"(list 'eval '(app (-> + <-) n 1) (menv '(())))\"" 45 ((0 0 0)))
'(ack
  0
  0
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  46
  ((0 0 0)))
'(ack 0 0 "\"(list 'eval '(app (-> = <-) m 0) (menv '(())))\"" 46 ((0 0 0)))
'(ack 0 0 "\"(list 'eval '(app (-> = <-) n 0) (menv '(())))\"" 46 ((0 0 0)))
'(ack 0 0 "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\"" 46 ((0 0 0)))
'(ack
  0
  0
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               ((#f)\n                (match\n                 (app = n 0)\n                 ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  46
  ((0 0 0)))
'(ack 0 0 "\"(list 'eval '(app - (-> m <-) 1) (menv '(())))\"" 46 ((0 0 0)))
'(ack 0 0 "\"(list 'eval '(app = m (-> 0 <-)) (menv '(())))\"" 46 ((0 0 0)))
'(ack
  0
  0
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '(())))\""
  46
  ((0 0 0)))
'(ack 0 0 "\"(list 'eval '(app + (-> n <-) 1) (menv '(())))\"" 46 ((0 0 0)))
'(ack 0 0 "\"(list 'eval '(app + n (-> 1 <-)) (menv '(())))\"" 46 ((0 0 0)))
'(ack 0 0 "\"(list 'eval '(app - (-> m <-) 1) (menv '(())))\"" 46 ((0 0 0)))
'(ack 0 0 "\"(list 'eval '(top) (menv '()))\"" 47 ((0 0 0)))
'(ack 0 0 "\"(list 'eval '(app = (-> m <-) 0) (menv '(())))\"" 47 ((0 0 0)))
'(ack
  0
  0
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '(())))\""
  47
  ((0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(app (-> f2 <-) (app #f)) (menv '(() ())))\""
  3
  ((0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(let ((-> _ = (app f1 (app #t)) <-)) bod) (menv '(())))\""
  29
  ((0 0 0)))
'(kcfa-2
  0
  0
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 (app #t)))) (app f1 (app #f))) <-))\n (menv '(())))\""
  32
  ((0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(app (-> f1 <-) (app #f)) (menv '(())))\""
  32
  ((0 0 0)))
'(kcfa-2 0 0 "\"(list 'eval '(app (-> #f <-)) (menv '(())))\"" 32 ((0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '(() () ())))\""
  32
  ((0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(let (_) (-> (app f2 (app #f)) <-)) (menv '(() ())))\""
  32
  ((0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '(() () ())))\""
  32
  ((0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(app f2 (-> (app #t) <-)) (menv '(() ())))\""
  34
  ((0 0 0)))
'(kcfa-2
  0
  0
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 (app #t)))) (app f1 (app #f))))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  34
  ((0 0 0)))
'(kcfa-2 0 0 "\"(list 'eval '(app (-> #t <-)) (menv '(() ())))\"" 34 ((0 0 0)))
'(kcfa-2
  0
  0
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '(())))\""
  34
  ((0 0 0)))
'(kcfa-2
  0
  0
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '(() ())))\""
  34
  ((0 0 0)))
'(kcfa-2
  0
  0
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '(() ())))\""
  34
  ((0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(app f2 (-> (app #f) <-)) (menv '(() ())))\""
  36
  ((0 0 0)))
'(kcfa-2
  0
  0
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f)))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '(())))\""
  36
  ((0 0 0)))
'(kcfa-2
  0
  0
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 (app #t)))) (app f1 (app #f)))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  36
  ((0 0 0)))
'(kcfa-2 0 0 "\"(list 'eval '(app (-> #f <-)) (menv '(() ())))\"" 36 ((0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(app f1 (-> (app #f) <-)) (menv '(())))\""
  36
  ((0 0 0)))
'(kcfa-2
  0
  0
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '(())))\""
  36
  ((0 0 0)))
'(kcfa-2
  0
  0
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '(() ())))\""
  36
  ((0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(let ((-> _ = (app f2 (app #t)) <-)) bod) (menv '(() ())))\""
  38
  ((0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(let (_) (-> (app f1 (app #f)) <-)) (menv '(())))\""
  38
  ((0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(λ (z) (-> (app z x1 x2) <-)) (menv '(() () ())))\""
  38
  ((0 0 0)))
'(kcfa-2 0 0 "\"(list 'eval '(app (-> #t <-)) (menv '(())))\"" 38 ((0 0 0)))
'(kcfa-2
  0
  0
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 (app #t)))) (app f2 (app #f))) <-))\n (menv '(() ())))\""
  38
  ((0 0 0)))
'(kcfa-2 0 0 "\"(list 'eval '(top) (menv '()))\"" 39 ((0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '(() () ())))\""
  39
  ((0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(app (-> f2 <-) (app #t)) (menv '(() ())))\""
  39
  ((0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(app (-> f1 <-) (app #t)) (menv '(())))\""
  39
  ((0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(app f1 (-> (app #t) <-)) (menv '(())))\""
  39
  ((0 0 0)))
'(kcfa-2
  0
  0
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '(() () ())))\""
  43
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list\n 'eval\n '(λ (x3) (-> (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1)) <-))\n (menv '(() () ())))\""
  18
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list 'eval '(app (-> f2 <-) (app #f)) (menv '(() ())))\""
  21
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list 'eval '(app (-> #t <-)) (menv '(() () ())))\""
  22
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list 'eval '(app f3 (-> (app #t) <-)) (menv '(() () ())))\""
  23
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list 'eval '(let (_) (-> (app f2 (app #f)) <-)) (menv '(() ())))\""
  31
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f)))) <-)\n   (λ (x2)\n     (app\n      (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n      (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))))))\n (menv '(())))\""
  32
  ((0 0 0)))
'(kcfa-3 0 0 "\"(list 'eval '(top) (menv '()))\"" 40 ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list 'eval '(app f3 (-> (app #f) <-)) (menv '(() () ())))\""
  42
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 (app #t)))) (app f1 (app #f))) <-))\n (menv '(())))\""
  42
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list 'eval '(app (-> f2 <-) (app #t)) (menv '(() ())))\""
  43
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list 'eval '(app f1 (-> (app #t) <-)) (menv '(())))\""
  43
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list\n 'eval\n '(λ (f3) (-> (let ((_ (app f3 (app #t)))) (app f3 (app #f))) <-))\n (menv '(() () ())))\""
  43
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list 'eval '(app (-> f1 <-) (app #f)) (menv '(())))\""
  43
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 (app #t)))) (app f1 (app #f))))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n       (λ (x2)\n         (app\n          (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n          (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1)))))))\n    <-))\n (menv '()))\""
  43
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list 'eval '(app (-> f1 <-) (app #t)) (menv '(())))\""
  44
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list 'eval '(app f2 (-> (app #f) <-)) (menv '(() ())))\""
  46
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list\n 'eval\n '(app\n   (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n   (-> (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))) <-))\n (menv '(() ())))\""
  46
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list 'eval '(app z x1 x2 (-> x3 <-)) (menv '(() () () ())))\""
  50
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list\n 'eval\n '(λ (x2)\n    (->\n     (app\n      (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n      (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))))\n     <-))\n (menv '(() ())))\""
  50
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list 'eval '(λ (y1 y2 y3) (-> y1 <-)) (menv '(() () () ())))\""
  50
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list 'eval '(app (-> z <-) x1 x2 x3) (menv '(() () () ())))\""
  50
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2 x3)) (-> (λ (y1 y2 y3) y1) <-))\n (menv '(() () ())))\""
  50
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list 'eval '(app z x1 (-> x2 <-) x3) (menv '(() () () ())))\""
  56
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 (app #t)))) (app f1 (app #f)))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n      (λ (x2)\n        (app\n         (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n         (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))))))))\n (menv '()))\""
  56
  ((0 0 0)))
'(kcfa-3 0 0 "\"(list 'eval '(app (-> #t <-)) (menv '(() ())))\"" 56 ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list 'eval '(app f2 (-> (app #t) <-)) (menv '(() ())))\""
  56
  ((0 0 0)))
'(kcfa-3 0 0 "\"(list 'eval '(app (-> #f <-)) (menv '(())))\"" 56 ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list\n 'eval\n '(app\n   (-> (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f)))) <-)\n   (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))))\n (menv '(() ())))\""
  56
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list 'eval '(let ((-> _ = (app f3 (app #t)) <-)) bod) (menv '(() () ())))\""
  58
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2 x3)) <-) (λ (y1 y2 y3) y1))\n (menv '(() () ())))\""
  58
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list 'eval '(app (-> #f <-)) (menv '(() () ())))\""
  58
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list 'eval '(λ (z) (-> (app z x1 x2 x3) <-)) (menv '(() () () ())))\""
  58
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list 'eval '(app (-> f3 <-) (app #f)) (menv '(() () ())))\""
  58
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 (app #t)))) (app f2 (app #f))) <-))\n (menv '(() ())))\""
  58
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list 'eval '(app z (-> x1 <-) x2 x3) (menv '(() () () ())))\""
  58
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list 'eval '(app (-> f3 <-) (app #t)) (menv '(() () ())))\""
  58
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list 'eval '(let ((-> _ = (app f2 (app #t)) <-)) bod) (menv '(() ())))\""
  59
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list 'eval '(let (_) (-> (app f1 (app #f)) <-)) (menv '(())))\""
  59
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list 'eval '(let (_) (-> (app f3 (app #f)) <-)) (menv '(() () ())))\""
  59
  ((0 0 0)))
'(kcfa-3 0 0 "\"(list 'eval '(app (-> #t <-)) (menv '(())))\"" 59 ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n   (->\n    (λ (x2)\n      (app\n       (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n       (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1)))))\n    <-))\n (menv '(())))\""
  59
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n      (λ (x2)\n        (app\n         (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n         (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))))))\n     <-))\n (menv '(())))\""
  59
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list 'eval '(app f1 (-> (app #f) <-)) (menv '(())))\""
  59
  ((0 0 0)))
'(kcfa-3
  0
  0
  "\"(list 'eval '(let ((-> _ = (app f1 (app #t)) <-)) bod) (menv '(())))\""
  60
  ((0 0 0)))
'(kcfa-3 0 0 "\"(list 'eval '(app (-> #f <-)) (menv '(() ())))\"" 60 ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n4)\n     (app\n      try\n      (λ (n5)\n        (app\n         try\n         (λ (n6)\n           (app\n            try\n            (λ (n7)\n              (app\n               (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n               n7)))))))))\n (menv '(() () () ())))\""
  2
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(letrec (phi try sat-solve-7) (-> (app sat-solve-7 phi) <-))\n (menv '()))\""
  120
  ((4 4 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app p (-> n1 <-)) (menv '(() () () () () () () ())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(λ (n2)\n    (->\n     (app\n      try\n      (λ (n3)\n        (app\n         try\n         (λ (n4)\n           (app\n            try\n            (λ (n5)\n              (app\n               try\n               (λ (n6)\n                 (app\n                  try\n                  (λ (n7)\n                    (app\n                     (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                     n7)))))))))))\n     <-))\n (menv '(() () ())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(letrec (phi\n           (-> try = (λ (f) (app or (app f (app #t)) (app f (app #f)))) <-)\n           sat-solve-7)\n    bod)\n (menv '()))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app or (-> x1 <-) x2) (menv '(() () () () () () ())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app (-> not <-) x4) (menv '(() () () () () () ())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv '(() () () () () () ())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app not (-> x3 <-)) (menv '(() () () () () () ())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app or (app f (app #t)) (-> (app f (app #f)) <-)) (menv '(())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app (-> (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) <-) n7)\n (menv '(() () () () () () () ())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(λ (n5)\n    (->\n     (app\n      try\n      (λ (n6)\n        (app\n         try\n         (λ (n7)\n           (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7)))))\n     <-))\n (menv '(() () () () () ())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app (-> not <-) x3) (menv '(() () () () () () ())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(λ (x2)\n    (->\n     (λ (x3)\n       (λ (x4)\n         (λ (x5)\n           (λ (x6)\n             (λ (x7)\n               (app\n                and\n                (app or x1 x2)\n                (app or x1 (app not x2) (app not x3))\n                (app or x3 x4)\n                (app or (app not x4) x1)\n                (app or (app not x2) (app not x3))\n                (app or x4 x2)))))))\n     <-))\n (menv '(() ())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app or x4 (-> x2 <-)) (menv '(() () () () () () ())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n1)\n     (app\n      try\n      (λ (n2)\n        (app\n         try\n         (λ (n3)\n           (app\n            try\n            (λ (n4)\n              (app\n               try\n               (λ (n5)\n                 (app\n                  try\n                  (λ (n6)\n                    (app\n                     try\n                     (λ (n7)\n                       (app\n                        (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                        n7)))))))))))))))\n (menv '(())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app or (-> x3 <-) x4) (menv '(() () () () () () ())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app or (-> (app f (app #t)) <-) (app f (app #f))) (menv '(())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app (app p n1) (-> n2 <-)) (menv '(() () () () () () () ())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(λ (x6)\n    (->\n     (λ (x7)\n       (app\n        and\n        (app or x1 x2)\n        (app or x1 (app not x2) (app not x3))\n        (app or x3 x4)\n        (app or (app not x4) x1)\n        (app or (app not x2) (app not x3))\n        (app or x4 x2)))\n     <-))\n (menv '(() () () () () ())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app sat-solve-7 (-> phi <-)) (menv '()))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app (-> p <-) n1) (menv '(() () () () () () () ())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app or x1 (-> x2 <-)) (menv '(() () () () () () ())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (λ (x2)\n       (λ (x3)\n         (λ (x4)\n           (λ (x5)\n             (λ (x6)\n               (λ (x7)\n                 (app\n                  and\n                  (app or x1 x2)\n                  (app or x1 (app not x2) (app not x3))\n                  (app or x3 x4)\n                  (app or (app not x4) x1)\n                  (app or (app not x2) (app not x3))\n                  (app or x4 x2))))))))\n     <-))\n (menv '(())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app or (-> (app not x2) <-) (app not x3))\n (menv '(() () () () () () ())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app (-> (app p n1) <-) n2) (menv '(() () () () () () () ())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app not (-> x2 <-)) (menv '(() () () () () () ())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n3)\n      (app\n       try\n       (λ (n4)\n         (app\n          try\n          (λ (n5)\n            (app\n             try\n             (λ (n6)\n               (app\n                try\n                (λ (n7)\n                  (app\n                   (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                   n7))))))))))\n    <-))\n (menv '(() () ())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app (-> sat-solve-7 <-) phi) (menv '()))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app (-> or <-) x4 x2) (menv '(() () () () () () ())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app (-> or <-) x3 x4) (menv '(() () () () () () ())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app (-> or <-) x1 (app not x2) (app not x3))\n (menv '(() () () () () () ())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app (-> not <-) x2) (menv '(() () () () () () ())))\""
  120
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app or x1 (-> (app not x2) <-) (app not x3))\n (menv '(() () () () () () ())))\""
  120
  ((0 0 0)))
'(sat-2 0 0 "\"(list 'eval '(top) (menv '()))\"" 121 ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n3)\n     (app\n      try\n      (λ (n4)\n        (app\n         try\n         (λ (n5)\n           (app\n            try\n            (λ (n6)\n              (app\n               try\n               (λ (n7)\n                 (app\n                  (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                  n7)))))))))))\n (menv '(() () ())))\""
  121
  ((0 0 0)))
'(sat-2 0 0 "\"(list 'eval '(app (-> #f <-)) (menv '(())))\"" 121 ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(λ (n6)\n    (->\n     (app\n      try\n      (λ (n7)\n        (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7)))\n     <-))\n (menv '(() () () () () () ())))\""
  121
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n7) (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7)))\n (menv '(() () () () () () ())))\""
  121
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app (-> (app (app (app (app (app p n1) n2) n3) n4) n5) <-) n6)\n (menv '(() () () () () () () ())))\""
  121
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n5)\n     (app\n      try\n      (λ (n6)\n        (app\n         try\n         (λ (n7)\n           (app\n            (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n            n7)))))))\n (menv '(() () () () ())))\""
  121
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app (-> or <-) (app not x2) (app not x3))\n (menv '(() () () () () () ())))\""
  121
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(λ (x7)\n    (->\n     (app\n      and\n      (app or x1 x2)\n      (app or x1 (app not x2) (app not x3))\n      (app or x3 x4)\n      (app or (app not x4) x1)\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv '(() () () () () () ())))\""
  121
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n5)\n      (app\n       try\n       (λ (n6)\n         (app\n          try\n          (λ (n7)\n            (app\n             (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n             n7))))))\n    <-))\n (menv '(() () () () ())))\""
  121
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app not (-> x2 <-)) (menv '(() () () () () () ())))\""
  121
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n6)\n     (app\n      try\n      (λ (n7)\n        (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7)))))\n (menv '(() () () () () ())))\""
  121
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n1)\n      (app\n       try\n       (λ (n2)\n         (app\n          try\n          (λ (n3)\n            (app\n             try\n             (λ (n4)\n               (app\n                try\n                (λ (n5)\n                  (app\n                   try\n                   (λ (n6)\n                     (app\n                      try\n                      (λ (n7)\n                        (app\n                         (app\n                          (app (app (app (app (app p n1) n2) n3) n4) n5)\n                          n6)\n                         n7))))))))))))))\n    <-))\n (menv '(())))\""
  121
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app or (app not x2) (-> (app not x3) <-))\n (menv '(() () () () () () ())))\""
  121
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app or (-> x1 <-) (app not x2) (app not x3))\n (menv '(() () () () () () ())))\""
  121
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(λ (n1)\n    (->\n     (app\n      try\n      (λ (n2)\n        (app\n         try\n         (λ (n3)\n           (app\n            try\n            (λ (n4)\n              (app\n               try\n               (λ (n5)\n                 (app\n                  try\n                  (λ (n6)\n                    (app\n                     try\n                     (λ (n7)\n                       (app\n                        (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                        n7)))))))))))))\n     <-))\n (menv '(() ())))\""
  121
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(letrec ((->\n            phi\n            =\n            (λ (x1)\n              (λ (x2)\n                (λ (x3)\n                  (λ (x4)\n                    (λ (x5)\n                      (λ (x6)\n                        (λ (x7)\n                          (app\n                           and\n                           (app or x1 x2)\n                           (app or x1 (app not x2) (app not x3))\n                           (app or x3 x4)\n                           (app or (app not x4) x1)\n                           (app or (app not x2) (app not x3))\n                           (app or x4 x2)))))))))\n            <-)\n           try\n           sat-solve-7)\n    bod)\n (menv '()))\""
  121
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(λ (x4)\n    (->\n     (λ (x5)\n       (λ (x6)\n         (λ (x7)\n           (app\n            and\n            (app or x1 x2)\n            (app or x1 (app not x2) (app not x3))\n            (app or x3 x4)\n            (app or (app not x4) x1)\n            (app or (app not x2) (app not x3))\n            (app or x4 x2)))))\n     <-))\n (menv '(() () () ())))\""
  121
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app (-> or <-) (app f (app #t)) (app f (app #f))) (menv '(())))\""
  121
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app (app (app (app (app (app p n1) n2) n3) n4) n5) (-> n6 <-))\n (menv '(() () () () () () () ())))\""
  123
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '(())))\""
  123
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app (app (app p n1) n2) (-> n3 <-))\n (menv '(() () () () () () () ())))\""
  123
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(λ (p)\n    (->\n     (app\n      try\n      (λ (n1)\n        (app\n         try\n         (λ (n2)\n           (app\n            try\n            (λ (n3)\n              (app\n               try\n               (λ (n4)\n                 (app\n                  try\n                  (λ (n5)\n                    (app\n                     try\n                     (λ (n6)\n                       (app\n                        try\n                        (λ (n7)\n                          (app\n                           (app\n                            (app (app (app (app (app p n1) n2) n3) n4) n5)\n                            n6)\n                           n7)))))))))))))))\n     <-))\n (menv '(())))\""
  123
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  123
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app (-> or <-) (app not x4) x1) (menv '(() () () () () () ())))\""
  123
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) (-> n7 <-))\n (menv '(() () () () () () () ())))\""
  125
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or x3 x4) <-)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  125
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app (-> not <-) x2) (menv '(() () () () () () ())))\""
  125
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app (app (app (app (app p n1) n2) n3) n4) (-> n5 <-))\n (menv '(() () () () () () () ())))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app not (-> x4 <-)) (menv '(() () () () () () ())))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app (app (app (app p n1) n2) n3) (-> n4 <-))\n (menv '(() () () () () () () ())))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app or (-> x4 <-) x2) (menv '(() () () () () () ())))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (-> (app or (app not x4) x1) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n2)\n     (app\n      try\n      (λ (n3)\n        (app\n         try\n         (λ (n4)\n           (app\n            try\n            (λ (n5)\n              (app\n               try\n               (λ (n6)\n                 (app\n                  try\n                  (λ (n7)\n                    (app\n                     (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                     n7)))))))))))))\n (menv '(() ())))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(λ (x5)\n    (->\n     (λ (x6)\n       (λ (x7)\n         (app\n          and\n          (app or x1 x2)\n          (app or x1 (app not x2) (app not x3))\n          (app or x3 x4)\n          (app or (app not x4) x1)\n          (app or (app not x2) (app not x3))\n          (app or x4 x2))))\n     <-))\n (menv '(() () () () ())))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app (-> or <-) x1 x2) (menv '(() () () () () () ())))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app or (app not x4) (-> x1 <-)) (menv '(() () () () () () ())))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app (-> not <-) x3) (menv '(() () () () () () ())))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n4)\n      (app\n       try\n       (λ (n5)\n         (app\n          try\n          (λ (n6)\n            (app\n             try\n             (λ (n7)\n               (app\n                (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                n7))))))))\n    <-))\n (menv '(() () () ())))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n2)\n      (app\n       try\n       (λ (n3)\n         (app\n          try\n          (λ (n4)\n            (app\n             try\n             (λ (n5)\n               (app\n                try\n                (λ (n6)\n                  (app\n                   try\n                   (λ (n7)\n                     (app\n                      (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                      n7))))))))))))\n    <-))\n (menv '(() ())))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n7) (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7))\n    <-))\n (menv '(() () () () () () ())))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app (-> (app (app (app (app p n1) n2) n3) n4) <-) n5)\n (menv '(() () () () () () () ())))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app not (-> x3 <-)) (menv '(() () () () () () ())))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(λ (x3)\n    (->\n     (λ (x4)\n       (λ (x5)\n         (λ (x6)\n           (λ (x7)\n             (app\n              and\n              (app or x1 x2)\n              (app or x1 (app not x2) (app not x3))\n              (app or x3 x4)\n              (app or (app not x4) x1)\n              (app or (app not x2) (app not x3))\n              (app or x4 x2))))))\n     <-))\n (menv '(() () ())))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n6)\n      (app\n       try\n       (λ (n7)\n         (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7))))\n    <-))\n (menv '(() () () () () ())))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '(())))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(letrec (phi\n           try\n           (->\n            sat-solve-7\n            =\n            (λ (p)\n              (app\n               try\n               (λ (n1)\n                 (app\n                  try\n                  (λ (n2)\n                    (app\n                     try\n                     (λ (n3)\n                       (app\n                        try\n                        (λ (n4)\n                          (app\n                           try\n                           (λ (n5)\n                             (app\n                              try\n                              (λ (n6)\n                                (app\n                                 try\n                                 (λ (n7)\n                                   (app\n                                    (app\n                                     (app\n                                      (app (app (app (app p n1) n2) n3) n4)\n                                      n5)\n                                     n6)\n                                    n7))))))))))))))))\n            <-))\n    bod)\n (menv '()))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app (-> (app (app (app p n1) n2) n3) <-) n4)\n (menv '(() () () () () () () ())))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '(())))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '(())))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(λ (n4)\n    (->\n     (app\n      try\n      (λ (n5)\n        (app\n         try\n         (λ (n6)\n           (app\n            try\n            (λ (n7)\n              (app\n               (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n               n7)))))))\n     <-))\n (menv '(() () () () ())))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(λ (n3)\n    (->\n     (app\n      try\n      (λ (n4)\n        (app\n         try\n         (λ (n5)\n           (app\n            try\n            (λ (n6)\n              (app\n               try\n               (λ (n7)\n                 (app\n                  (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                  n7)))))))))\n     <-))\n (menv '(() () () ())))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(λ (n7)\n    (-> (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7) <-))\n (menv '(() () () () () () () ())))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app (-> (app (app p n1) n2) <-) n3)\n (menv '(() () () () () () () ())))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '(())))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 x2) <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list\n 'eval\n '(app or x1 (app not x2) (-> (app not x3) <-))\n (menv '(() () () () () () ())))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app or (-> (app not x4) <-) x1) (menv '(() () () () () () ())))\""
  127
  ((0 0 0)))
'(sat-2
  0
  0
  "\"(list 'eval '(app or x3 (-> x4 <-)) (menv '(() () () () () () ())))\""
  127
  ((0 0 0)))
'(sat-2 0 0 "\"(list 'eval '(app (-> #t <-)) (menv '(())))\"" 127 ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n1)\n     (app\n      try\n      (λ (n2)\n        (app\n         try\n         (λ (n3)\n           (app\n            try\n            (λ (n4)\n              (app\n               try\n               (λ (n5)\n                 (app\n                  try\n                  (λ (n6)\n                    (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))))))))\n (menv '(())))\""
  2
  ((0 0 0)))
'(sat-3 0 0 "\"(list 'eval '(app not (-> x2 <-)) (menv '(())))\"" 17 ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(λ (n1)\n    (->\n     (app\n      try\n      (λ (n2)\n        (app\n         try\n         (λ (n3)\n           (app\n            try\n            (λ (n4)\n              (app\n               try\n               (λ (n5)\n                 (app\n                  try\n                  (λ (n6)\n                    (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))))))\n     <-))\n (menv '(() ())))\""
  100
  ((4 4 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n2)\n      (app\n       try\n       (λ (n3)\n         (app\n          try\n          (λ (n4)\n            (app\n             try\n             (λ (n5)\n               (app\n                try\n                (λ (n6)\n                  (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7))))))))))))\n    <-))\n (menv '(() ())))\""
  100
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(app try (-> (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))) <-))\n (menv '(() () () () () ())))\""
  100
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(λ (n4)\n    (->\n     (app\n      try\n      (λ (n5)\n        (app try (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))\n     <-))\n (menv '(() () () () ())))\""
  100
  ((0 0 0)))
'(sat-3 0 0 "\"(list 'eval '(top) (menv '()))\"" 104 ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  104
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(λ (n2)\n    (->\n     (app\n      try\n      (λ (n3)\n        (app\n         try\n         (λ (n4)\n           (app\n            try\n            (λ (n5)\n              (app\n               try\n               (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))))\n     <-))\n (menv '(() () ())))\""
  104
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app (-> sat-solve-7 <-) phi) (menv '()))\""
  104
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app (-> or <-) x1 x2) (menv '(())))\""
  104
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app display (-> s <-)) (menv '(())))\""
  108
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app (-> not <-) x3) (menv '(())))\""
  108
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n1)\n      (app\n       try\n       (λ (n2)\n         (app\n          try\n          (λ (n3)\n            (app\n             try\n             (λ (n4)\n               (app\n                try\n                (λ (n5)\n                  (app\n                   try\n                   (λ (n6)\n                     (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7))))))))))))))\n    <-))\n (menv '(())))\""
  108
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 (-> n5 <-) n6 n7)\n (menv '(() () () () () () () ())))\""
  110
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(let ((-> _ = (app display (app sat-solve-7 phi)) <-)) bod)\n (menv '()))\""
  114
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(app p n1 (-> n2 <-) n3 n4 n5 n6 n7)\n (menv '(() () () () () () () ())))\""
  114
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 n5 n6 (-> n7 <-))\n (menv '(() () () () () () () ())))\""
  116
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app (-> newline <-)) (menv '(())))\""
  117
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app not (-> x2 <-)) (menv '(())))\""
  117
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app or (-> (app f (app #t)) <-) (app f (app #f))) (menv '(())))\""
  117
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app not (-> x4 <-)) (menv '(())))\""
  117
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 x2) <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  117
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app (-> or <-) (app not x2) (app not x3)) (menv '(())))\""
  117
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(let (_) (-> (app newline) <-)) (menv '()))\""
  117
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(let ((-> _ = (app display s) <-)) bod) (menv '(())))\""
  119
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(app p n1 n2 n3 (-> n4 <-) n5 n6 n7)\n (menv '(() () () () () () () ())))\""
  119
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app or (-> x3 <-) x4) (menv '(())))\""
  119
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n3)\n      (app\n       try\n       (λ (n4)\n         (app\n          try\n          (λ (n5)\n            (app\n             try\n             (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7))))))))))\n    <-))\n (menv '(() () ())))\""
  119
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n2)\n     (app\n      try\n      (λ (n3)\n        (app\n         try\n         (λ (n4)\n           (app\n            try\n            (λ (n5)\n              (app\n               try\n               (λ (n6)\n                 (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))))))\n (menv '(() ())))\""
  119
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app (-> display <-) s) (menv '(())))\""
  119
  ((0 0 0)))
'(sat-3 0 0 "\"(list 'eval '(app (-> #f <-)) (menv '(())))\"" 119 ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app (-> not <-) x3) (menv '(())))\""
  119
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n4)\n     (app\n      try\n      (λ (n5)\n        (app try (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))\n (menv '(() () () ())))\""
  119
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app (-> or <-) (app f (app #t)) (app f (app #f))) (menv '(())))\""
  119
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app println (-> \"trying\" <-)) (menv '(())))\""
  119
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app or x3 (-> x4 <-)) (menv '(())))\""
  119
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n5) (app try (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7))))))\n    <-))\n (menv '(() () () () ())))\""
  119
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app (-> not <-) x4) (menv '(())))\""
  119
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app sat-solve-7 (-> phi <-)) (menv '()))\""
  119
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app (-> or <-) x1 (app not x2) (app not x3)) (menv '(())))\""
  119
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(let (_) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '(())))\""
  119
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(letrec (println phi try sat-solve-7)\n    (-> (let ((_ (app display (app sat-solve-7 phi)))) (app newline)) <-))\n (menv '()))\""
  119
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app or (-> (app not x4) <-) x1) (menv '(())))\""
  119
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(λ (s) (-> (let ((_ (app display s))) (app newline)) <-))\n (menv '(())))\""
  121
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(λ (n7) (-> (app p n1 n2 n3 n4 n5 n6 n7) <-))\n (menv '(() () () () () () () ())))\""
  121
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv '(())))\""
  121
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(let ((-> _ = (app println \"trying\") <-)) bod) (menv '(())))\""
  124
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(let (_) (-> (app newline) <-)) (menv '(())))\""
  124
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '(())))\""
  124
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(letrec (println\n           phi\n           try\n           (->\n            sat-solve-7\n            =\n            (λ (p)\n              (app\n               try\n               (λ (n1)\n                 (app\n                  try\n                  (λ (n2)\n                    (app\n                     try\n                     (λ (n3)\n                       (app\n                        try\n                        (λ (n4)\n                          (app\n                           try\n                           (λ (n5)\n                             (app\n                              try\n                              (λ (n6)\n                                (app\n                                 try\n                                 (λ (n7)\n                                   (app p n1 n2 n3 n4 n5 n6 n7))))))))))))))))\n            <-))\n    bod)\n (menv '()))\""
  124
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(λ (p)\n    (->\n     (app\n      try\n      (λ (n1)\n        (app\n         try\n         (λ (n2)\n           (app\n            try\n            (λ (n3)\n              (app\n               try\n               (λ (n4)\n                 (app\n                  try\n                  (λ (n5)\n                    (app\n                     try\n                     (λ (n6)\n                       (app\n                        try\n                        (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))))))))\n     <-))\n (menv '(())))\""
  124
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app (-> or <-) x3 x4) (menv '(())))\""
  124
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app or x1 (-> x2 <-)) (menv '(())))\""
  124
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app or (app not x4) (-> x1 <-)) (menv '(())))\""
  124
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(λ (n5)\n    (-> (app try (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7))))) <-))\n (menv '(() () () () () ())))\""
  124
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(app p (-> n1 <-) n2 n3 n4 n5 n6 n7)\n (menv '(() () () () () () () ())))\""
  124
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app (-> or <-) x4 x2) (menv '(())))\""
  124
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app (-> not <-) x2) (menv '(())))\""
  124
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '(())))\""
  124
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(app (-> p <-) n1 n2 n3 n4 n5 n6 n7)\n (menv '(() () () () () () () ())))\""
  124
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '(())))\""
  124
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 n5 (-> n6 <-) n7)\n (menv '(() () () () () () () ())))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(app p n1 n2 (-> n3 <-) n4 n5 n6 n7)\n (menv '(() () () () () () () ())))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(letrec (println\n           (->\n            phi\n            =\n            (λ (x1 x2 x3 x4 x5 x6 x7)\n              (app\n               and\n               (app or x1 x2)\n               (app or x1 (app not x2) (app not x3))\n               (app or x3 x4)\n               (app or (app not x4) x1)\n               (app or (app not x2) (app not x3))\n               (app or x4 x2)))\n            <-)\n           try\n           sat-solve-7)\n    bod)\n (menv '()))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(λ (x1 x2 x3 x4 x5 x6 x7)\n    (->\n     (app\n      and\n      (app or x1 x2)\n      (app or x1 (app not x2) (app not x3))\n      (app or x3 x4)\n      (app or (app not x4) x1)\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv '(())))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app (-> println <-) \"trying\") (menv '(())))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (-> (app or (app not x4) x1) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))\n (menv '(() () () () () ())))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(λ (n6) (-> (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7))) <-))\n (menv '(() () () () () () ())))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app or x1 (app not x2) (-> (app not x3) <-)) (menv '(())))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app or x1 (-> (app not x2) <-) (app not x3)) (menv '(())))\""
  126
  ((0 0 0)))
'(sat-3 0 0 "\"(list 'eval '(app (-> newline <-)) (menv '()))\"" 126 ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app or (app not x2) (-> (app not x3) <-)) (menv '(())))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))\n (menv '(() () () () () () ())))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app or (-> x4 <-) x2) (menv '(())))\""
  126
  ((0 0 0)))
'(sat-3 0 0 "\"(list 'eval '(app (-> #t <-)) (menv '(())))\"" 126 ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(letrec ((-> println = (λ (s) (let ((_ (app display s))) (app newline))) <-)\n           phi\n           try\n           sat-solve-7)\n    bod)\n (menv '()))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app or (app f (app #t)) (-> (app f (app #f)) <-)) (menv '(())))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app display (-> (app sat-solve-7 phi) <-)) (menv '()))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app or (-> (app not x2) <-) (app not x3)) (menv '(())))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app (-> not <-) x2) (menv '(())))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app or (-> x1 <-) (app not x2) (app not x3)) (menv '(())))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n3)\n     (app\n      try\n      (λ (n4)\n        (app\n         try\n         (λ (n5)\n           (app\n            try\n            (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))))\n (menv '(() () ())))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app not (-> x3 <-)) (menv '(())))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app not (-> x3 <-)) (menv '(())))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(app try (-> (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)) <-))\n (menv '(() () () () () () ())))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n4)\n      (app\n       try\n       (λ (n5)\n         (app try (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7))))))))\n    <-))\n (menv '(() () () ())))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or x3 x4) <-)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app (-> display <-) (app sat-solve-7 phi)) (menv '()))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '(())))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app or x4 (-> x2 <-)) (menv '(())))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(letrec (println\n           phi\n           (->\n            try\n            =\n            (λ (f)\n              (let ((_ (app println \"trying\")))\n                (app or (app f (app #t)) (app f (app #f)))))\n            <-)\n           sat-solve-7)\n    bod)\n (menv '()))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n5) (app try (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))\n (menv '(() () () () ())))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv '(())))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app or (-> x1 <-) x2) (menv '(())))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(λ (f)\n    (->\n     (let ((_ (app println \"trying\")))\n       (app or (app f (app #t)) (app f (app #f))))\n     <-))\n (menv '(())))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list 'eval '(app (-> or <-) (app not x4) x1) (menv '(())))\""
  126
  ((0 0 0)))
'(sat-3
  0
  0
  "\"(list\n 'eval\n '(λ (n3)\n    (->\n     (app\n      try\n      (λ (n4)\n        (app\n         try\n         (λ (n5)\n           (app\n            try\n            (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))\n     <-))\n (menv '(() () () ())))\""
  126
  ((0 0 0)))
'(tak
  0
  0
  "\"(list\n 'eval\n '(app\n   tak\n   (app tak (app - x 1) y z)\n   (app tak (app - y 1) z x)\n   (-> (app tak (app - z 1) x y) <-))\n (menv '(())))\""
  46
  ((0 0 0)))
'(tak 0 0 "\"(list 'eval '(app - z (-> 1 <-)) (menv '(())))\"" 46 ((0 0 0)))
'(tak
  0
  0
  "\"(list 'eval '(app (-> not <-) (app < y x)) (menv '(())))\""
  46
  ((0 0 0)))
'(tak
  0
  0
  "\"(list 'eval '(app (-> tak <-) (app - x 1) y z) (menv '(())))\""
  46
  ((0 0 0)))
'(tak
  0
  0
  "\"(list 'eval '(letrec (tak) (-> (app tak 32 15 8) <-)) (menv '()))\""
  48
  ((0 0 0)))
'(tak 0 0 "\"(list 'eval '(app - y (-> 1 <-)) (menv '(())))\"" 48 ((0 0 0)))
'(tak
  0
  0
  "\"(list\n 'eval\n '(letrec ((->\n            tak\n            =\n            (λ (x y z)\n              (match\n               (app not (app < y x))\n               ((#t) z)\n               ((#f)\n                (app\n                 tak\n                 (app tak (app - x 1) y z)\n                 (app tak (app - y 1) z x)\n                 (app tak (app - z 1) x y)))))\n            <-))\n    bod)\n (menv '()))\""
  48
  ((0 0 0)))
'(tak 0 0 "\"(list 'eval '(app - (-> x <-) 1) (menv '(())))\"" 48 ((0 0 0)))
'(tak
  0
  0
  "\"(list\n 'eval\n '(match\n   (-> (app not (app < y x)) <-)\n   ((#t) z)\n   ((#f)\n    (app\n     tak\n     (app tak (app - x 1) y z)\n     (app tak (app - y 1) z x)\n     (app tak (app - z 1) x y))))\n (menv '(())))\""
  48
  ((0 0 0)))
'(tak
  0
  0
  "\"(list 'eval '(app (-> tak <-) (app - z 1) x y) (menv '(())))\""
  48
  ((0 0 0)))
'(tak
  0
  0
  "\"(list 'eval '(app tak (-> 32 <-) 15 8) (menv '()))\""
  48
  ((0 0 0)))
'(tak
  0
  0
  "\"(list 'eval '(app tak (app - y 1) z (-> x <-)) (menv '(())))\""
  48
  ((0 0 0)))
'(tak
  0
  0
  "\"(list\n 'eval\n '(match\n   (app not (app < y x))\n   (-> (#t) z <-)\n   ((#f)\n    (app\n     tak\n     (app tak (app - x 1) y z)\n     (app tak (app - y 1) z x)\n     (app tak (app - z 1) x y))))\n (menv '(())))\""
  48
  ((0 0 0)))
'(tak
  0
  0
  "\"(list\n 'eval\n '(app\n   tak\n   (-> (app tak (app - x 1) y z) <-)\n   (app tak (app - y 1) z x)\n   (app tak (app - z 1) x y))\n (menv '(())))\""
  48
  ((0 0 0)))
'(tak 0 0 "\"(list 'eval '(app (-> - <-) z 1) (menv '(())))\"" 48 ((0 0 0)))
'(tak
  0
  0
  "\"(list 'eval '(app (-> tak <-) 32 15 8) (menv '()))\""
  48
  ((0 0 0)))
'(tak
  0
  0
  "\"(list\n 'eval\n '(λ (x y z)\n    (->\n     (match\n      (app not (app < y x))\n      ((#t) z)\n      ((#f)\n       (app\n        tak\n        (app tak (app - x 1) y z)\n        (app tak (app - y 1) z x)\n        (app tak (app - z 1) x y))))\n     <-))\n (menv '(())))\""
  48
  ((0 0 0)))
'(tak
  0
  0
  "\"(list 'eval '(app tak (app - x 1) y (-> z <-)) (menv '(())))\""
  48
  ((0 0 0)))
'(tak
  0
  0
  "\"(list 'eval '(app (-> tak <-) (app - y 1) z x) (menv '(())))\""
  48
  ((0 0 0)))
'(tak 0 0 "\"(list 'eval '(app - (-> y <-) 1) (menv '(())))\"" 48 ((0 0 0)))
'(tak 0 0 "\"(list 'eval '(app (-> < <-) y x) (menv '(())))\"" 48 ((0 0 0)))
'(tak
  0
  0
  "\"(list 'eval '(app tak (app - x 1) (-> y <-) z) (menv '(())))\""
  48
  ((0 0 0)))
'(tak
  0
  0
  "\"(list\n 'eval\n '(app\n   (-> tak <-)\n   (app tak (app - x 1) y z)\n   (app tak (app - y 1) z x)\n   (app tak (app - z 1) x y))\n (menv '(())))\""
  48
  ((0 0 0)))
'(tak
  0
  0
  "\"(list\n 'eval\n '(app\n   tak\n   (app tak (app - x 1) y z)\n   (-> (app tak (app - y 1) z x) <-)\n   (app tak (app - z 1) x y))\n (menv '(())))\""
  48
  ((0 0 0)))
'(tak
  0
  0
  "\"(list 'eval '(app tak (-> (app - z 1) <-) x y) (menv '(())))\""
  48
  ((0 0 0)))
'(tak
  0
  0
  "\"(list\n 'eval\n '(match\n   (app not (app < y x))\n   ((#t) z)\n   (->\n    (#f)\n    (app\n     tak\n     (app tak (app - x 1) y z)\n     (app tak (app - y 1) z x)\n     (app tak (app - z 1) x y))\n    <-))\n (menv '(())))\""
  48
  ((0 0 0)))
'(tak
  0
  0
  "\"(list 'eval '(app tak (app - z 1) x (-> y <-)) (menv '(())))\""
  48
  ((0 0 0)))
'(tak 0 0 "\"(list 'eval '(app - x (-> 1 <-)) (menv '(())))\"" 48 ((0 0 0)))
'(tak 0 0 "\"(list 'eval '(app (-> - <-) y 1) (menv '(())))\"" 48 ((0 0 0)))
'(tak
  0
  0
  "\"(list 'eval '(app tak 32 15 (-> 8 <-)) (menv '()))\""
  48
  ((0 0 0)))
'(tak
  0
  0
  "\"(list 'eval '(app tak (-> (app - y 1) <-) z x) (menv '(())))\""
  48
  ((0 0 0)))
'(tak 0 0 "\"(list 'eval '(app < y (-> x <-)) (menv '(())))\"" 48 ((0 0 0)))
'(tak
  0
  0
  "\"(list 'eval '(app tak (-> (app - x 1) <-) y z) (menv '(())))\""
  48
  ((0 0 0)))
'(tak 0 0 "\"(list 'eval '(top) (menv '()))\"" 49 ((0 0 0)))
'(tak
  0
  0
  "\"(list 'eval '(app not (-> (app < y x) <-)) (menv '(())))\""
  49
  ((0 0 0)))
'(tak
  0
  0
  "\"(list 'eval '(app tak (app - y 1) (-> z <-) x) (menv '(())))\""
  49
  ((0 0 0)))
'(tak 0 0 "\"(list 'eval '(app - (-> z <-) 1) (menv '(())))\"" 49 ((0 0 0)))
'(tak 0 0 "\"(list 'eval '(app (-> - <-) x 1) (menv '(())))\"" 49 ((0 0 0)))
'(tak
  0
  0
  "\"(list 'eval '(app tak (app - z 1) (-> x <-) y) (menv '(())))\""
  49
  ((0 0 0)))
'(tak 0 0 "\"(list 'eval '(app < (-> y <-) x) (menv '(())))\"" 49 ((0 0 0)))
'(tak
  0
  0
  "\"(list 'eval '(app tak 32 (-> 15 <-) 8) (menv '()))\""
  49
  ((0 0 0)))
'(structural-rec
  0
  0
  "\"(list 'eval '(λ (y) (-> (app y y) <-)) (menv '(())))\""
  13
  ((0 0 0)))
'(structural-rec
  0
  0
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (menv '()))\""
  13
  ((0 0 0)))
'(structural-rec
  0
  0
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '(())))\""
  14
  ((0 0 0)))
'(structural-rec
  0
  0
  "\"(list 'eval '(app x (-> x <-)) (menv '(())))\""
  14
  ((0 0 0)))
'(structural-rec
  0
  0
  "\"(list 'eval '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (menv '()))\""
  14
  ((0 0 0)))
'(structural-rec 0 0 "\"(list 'eval '(top) (menv '()))\"" 15 ((0 0 0)))
'(structural-rec
  0
  0
  "\"(list 'eval '(app y (-> y <-)) (menv '(())))\""
  15
  ((0 0 0)))
'(structural-rec
  0
  0
  "\"(list 'eval '(app (-> y <-) y) (menv '(())))\""
  15
  ((0 0 0)))
'(structural-rec
  0
  0
  "\"(list 'eval '(app (-> x <-) x) (menv '(())))\""
  15
  ((0 0 0)))
(list
 'tic-tac-toe
 0
 0
 "\"(list 'eval '(top) (menv '()))\""
 0
 (list
  (exn:misc:match
   "match-let: no matching clause for '((rat ((app X) (app make-ai-action (app X))) (ran play-game () ((app player (app O) (app make-ai-action (app O)))) (bod () (bin letrec zero-player-game (app zero-player-game) ((Tw? (λ (a) (match a ((Tw) (app #t)) (_ (app #f))))) (On? (λ (a) (match a ((..."
   #<continuation-mark-set>
   '((rat
      ((app X) (app make-ai-action (app X)))
      (ran
       play-game
       ()
       ((app player (app O) (app make-ai-action (app O))))
       (bod
        ()
        (bin
         letrec
         zero-player-game
         (app zero-player-game)
         ((Tw? (λ (a) (match a ((Tw) (app #t)) (_ (app #f)))))
          (On? (λ (a) (match a ((On) (app #t)) (_ (app #f)))))
          (Ze? (λ (a) (match a ((Ze) (app #t)) (_ (app #f)))))
          (coord-row
           (λ (a)
             (match
              a
              ((coord x _) x)
              (_ (app error "invalid match for row")))))
          (coord-col
           (λ (a)
             (match
              a
              ((coord _ x) x)
              (_ (app error "invalid match for col")))))
          (coord? (λ (a) (match a ((coord _ _) (app #t)) (_ (app #f)))))
          (O? (λ (a) (match a ((O) (app #t)) (_ (app #f)))))
          (X? (λ (a) (match a ((X) (app #t)) (_ (app #f)))))
          (none? (λ (a) (match a ((none) (app #t)) (_ (app #f)))))
          (some-v
           (λ (a)
             (match a ((some x) x) (_ (app error "invalid match for v")))))
          (some? (λ (a) (match a ((some _) (app #t)) (_ (app #f)))))
          (marked-xo
           (λ (a)
             (match a ((marked x) x) (_ (app error "invalid match for xo")))))
          (marked? (λ (a) (match a ((marked _) (app #t)) (_ (app #f)))))
          (blank? (λ (a) (match a ((blank) (app #t)) (_ (app #f)))))
          (lose? (λ (a) (match a ((lose) (app #t)) (_ (app #f)))))
          (draw? (λ (a) (match a ((draw) (app #t)) (_ (app #f)))))
          (win? (λ (a) (match a ((win) (app #t)) (_ (app #f)))))
          (horizon-outcome
           (λ (a)
             (match
              a
              ((horizon x _) x)
              (_ (app error "invalid match for outcome")))))
          (horizon-step-count
           (λ (a)
             (match
              a
              ((horizon _ x) x)
              (_ (app error "invalid match for step-count")))))
          (horizon? (λ (a) (match a ((horizon _ _) (app #t)) (_ (app #f)))))
          (move-coord
           (λ (a)
             (match
              a
              ((move x _) x)
              (_ (app error "invalid match for coord")))))
          (move-horizon
           (λ (a)
             (match
              a
              ((move _ x) x)
              (_ (app error "invalid match for horizon")))))
          (move? (λ (a) (match a ((move _ _) (app #t)) (_ (app #f)))))
          (player-mark
           (λ (a)
             (match
              a
              ((player x _) x)
              (_ (app error "invalid match for mark")))))
          (player-action
           (λ (a)
             (match
              a
              ((player _ x) x)
              (_ (app error "invalid match for action")))))
          (player? (λ (a) (match a ((player _ _) (app #t)) (_ (app #f)))))
          (is
           (app
            cons
            (app Ze)
            (app cons (app On) (app cons (app Tw) (app nil)))))
          (mark⁻¹ (λ (ma) (match ma ((X) (app O)) ((O) (app X)))))
          (empty-board (λ (co) (app blank)))
          (board-mark
           (λ (co₀ ma bo)
             (λ (co)
               (match
                (app equal? co₀ co)
                ((#t) (app marked ma))
                ((#f) (app board-lookup co bo))))))
          (board-lookup (λ (co bo) (app bo co)))
          (marked-with?
           (λ (b co m)
             (match
              (app b co)
              ((blank) (app #f))
              ((marked m*) (app equal? m m*)))))
          (i⁻¹
           (λ (i) (match i ((Ze) (app Tw)) ((On) (app On)) ((Tw) (app Ze)))))
          (ormap
           (λ (f xs)
             (match
              xs
              ((empty) (app #f))
              ((cons x rest-xs) (app or (app f x) (app ormap f rest-xs))))))
          (andmap
           (λ (f xs)
             (match
              xs
              ((empty) (app #t))
              ((cons x rest-xs) (app and (app f x) (app andmap f rest-xs))))))
          (wins?
           (λ (b m)
             (app
              or
              (app
               ormap
               (λ (r)
                 (app
                  andmap
                  (λ (c) (app marked-with? b (app coord r c) m))
                  is))
               is)
              (app
               ormap
               (λ (c)
                 (app
                  andmap
                  (λ (r) (app marked-with? b (app coord r c) m))
                  is))
               is)
              (app andmap (λ (rc) (app marked-with? b (app coord rc rc) m)) is)
              (app
               andmap
               (λ (rc) (app marked-with? b (app coord rc (app i⁻¹ rc)) m))
               is))))
          (full?
           (λ (b)
             (app
              andmap
              (λ (r)
                (app andmap (λ (c) (app marked? (app b (app coord r c)))) is))
              is)))
          (oc<
           (λ (oc₀ oc₁)
             (match
              oc₀
              ((win) (app #f))
              ((draw) (app equal? oc₁ (app win)))
              ((lose) (app not (app equal? oc₁ (app lose)))))))
          (horizon<
           (λ (h₀ h₁)
             (match
              h₀
              ((horizon oc₀ sc₀)
               (match
                h₁
                ((horizon oc₁ sc₁)
                 (app
                  or
                  (app oc< oc₀ oc₁)
                  (app and (app equal? oc₀ oc₁) (app < sc₀ sc₁)))))))))
          (horizon-add1
           (λ (h) (match h ((horizon oc sc) (app horizon oc (app + sc 1))))))
          (foldl
           (λ (f acc l)
             (match
              l
              ((nil) acc)
              ((cons x xs) (app foldl f (app f acc x) xs)))))
          (fold/coord
           (λ (f x)
             (app
              foldl
              (λ (r x) (app foldl (λ (c x) (app f (app coord r c) x)) x is))
              x
              is)))
          (min-maybe-move
           (λ (mmo mo₁)
             (match
              mmo
              ((some mo₀)
               (app
                some
                (match
                 (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))
                 ((#t) mo₀)
                 ((#f) mo₁))))
              ((none) (app some mo₁)))))
          (max-maybe-move
           (λ (mmo mo₁)
             (match
              mmo
              ((some mo₀)
               (app
                some
                (match
                 (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))
                 ((#t) mo₁)
                 ((#f) mo₀))))
              ((none) (app some mo₁)))))
          (minimax
           (λ (bo this-mark that-mark)
             (app
              fold/coord
              (λ (co mm)
                (match
                 (app blank? (app board-lookup co bo))
                 ((#t)
                  (let ((bo (app board-mark co this-mark bo)))
                    (app
                     min-maybe-move
                     mm
                     (app
                      move
                      co
                      (match
                       (app wins? bo this-mark)
                       ((#f)
                        (match
                         (app full? bo)
                         ((#f)
                          (app
                           horizon-add1
                           (app
                            move-horizon
                            (app
                             some-v
                             (app maximin bo that-mark this-mark)))))
                         (_ (app horizon (app draw) 0))))
                       (_ (app horizon (app lose) 0)))))))
                 ((#f) mm)))
              (app none))))
          (maximin
           (λ (bo this-mark that-mark)
             (app
              fold/coord
              (λ (co mm)
                (match
                 (app blank? (app board-lookup co bo))
                 ((#t)
                  (let ((bo (app board-mark co this-mark bo)))
                    (app
                     max-maybe-move
                     mm
                     (app
                      move
                      co
                      (match
                       (app wins? bo this-mark)
                       ((#f)
                        (match
                         (app full? bo)
                         ((#f)
                          (app
                           horizon-add1
                           (app
                            move-horizon
                            (app
                             some-v
                             (app minimax bo that-mark this-mark)))))
                         (_ (app horizon (app draw) 0))))
                       (_ (app horizon (app win) 0)))))))
                 ((#f) mm)))
              (app none))))
          (human-action
           (λ (bo) (app error (app quote human-action) "not implemented")))
          (make-ai-action
           (λ (ma)
             (λ (bo)
               (app
                move-coord
                (app some-v (app maximin bo ma (app mark⁻¹ ma)))))))
          (draw-board! (λ (bo) (app void)))
          (play-turn
           (λ (bo this-play that-play)
             (let ((_ (app draw-board! bo)))
               (match
                this-play
                ((player mark action)
                 (let ((co
                        (letrec ((loop
                                  (λ ()
                                    (let ((co (app action bo)))
                                      (match
                                       (app blank? (app board-lookup co bo))
                                       ((#t) co)
                                       ((#f) (app loop)))))))
                          (app loop))))
                   (let ((bo (app board-mark co mark bo)))
                     (match
                      (app wins? bo mark)
                      ((#f)
                       (match
                        (app full? bo)
                        ((#f) (app play-turn bo that-play this-play))
                        (_
                         (let ((_ (app draw-board! bo)))
                           (app display "Cat's game.\n")))))
                      (_ (let ((_ (app draw-board! bo))) (app void)))))))))))
          (play-game
           (λ (player-one player-two)
             (app play-turn empty-board player-one player-two)))
          (two-player-game
           (λ ()
             (app
              play-game
              (app player (app X) human-action)
              (app player (app O) human-action))))
          (one-player-game
           (λ ()
             (app
              play-game
              (app player (app X) human-action)
              (app player (app O) (app make-ai-action (app O)))))))
         ()
         (lettypes-bod
          ((Ze)
           (On)
           (Tw)
           (coord row col)
           (X)
           (O)
           (some v)
           (none)
           (blank)
           (marked xo)
           (win)
           (draw)
           (lose)
           (horizon outcome step-count)
           (move coord horizon)
           (player mark action))
          (top))))))
     .
     player)
   (list
    (srcloc
     #<path:/home/tim/context-sensitive-demand-cfa/evaluation/demand.rkt>
     521
     27
     18146
     288)))))
'(app-num
  1
  0
  "\"(list 'eval '(let (_) (-> (app x 2) <-)) (menv '()))\""
  8
  ((0 0 0)))
'(app-num 1 0 "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\"" 9 ((0 0 0)))
'(app-num
  1
  0
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  9
  ((0 0 0)))
'(app-num
  1
  0
  "\"(list 'eval '(let (x) (-> (let ((_ (app x 1))) (app x 2)) <-)) (menv '()))\""
  10
  ((0 0 0)))
'(app-num 1 0 "\"(list 'eval '(app (-> x <-) 1) (menv '()))\"" 11 ((0 0 0)))
'(app-num 1 0 "\"(list 'eval '(top) (menv '()))\"" 12 ((0 0 0)))
'(app-num
  1
  0
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  15
  ((0 0 0)))
'(app-num 1 0 "\"(list 'eval '(app (-> x <-) 2) (menv '()))\"" 15 ((0 0 0)))
'(app-num 1 0 "\"(list 'eval '(app x (-> 2 <-)) (menv '()))\"" 15 ((0 0 0)))
'(app-num
  1
  0
  "\"(list 'eval '(let ((-> _ = (app x 1) <-)) bod) (menv '()))\""
  16
  ((0 0 0)))
'(basic-letrec
  1
  0
  "\"(list 'eval '(app (-> a <-) 2) (menv '()))\""
  2
  ((0 0 0)))
'(basic-letrec 1 0 "\"(list 'eval '(top) (menv '()))\"" 43 ((0 0 0)))
'(basic-letrec
  1
  0
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '((□? (y)))))\""
  43
  ((0 0 0)))
'(basic-letrec
  1
  0
  "\"(list\n 'eval\n '(letrec ((->\n            a\n            =\n            (λ (y)\n              (match (app equal? y 0) ((#t) (app a (app - y 1))) ((#f) y)))\n            <-))\n    bod)\n (menv '()))\""
  43
  ((0 0 0)))
'(basic-letrec
  1
  0
  "\"(list 'eval '(app (-> equal? <-) y 0) (menv '((□? (y)))))\""
  44
  ((0 0 0)))
'(basic-letrec
  1
  0
  "\"(list\n 'eval\n '(match (app equal? y 0) ((#t) (app a (app - y 1))) (-> (#f) y <-))\n (menv '((□? (y)))))\""
  45
  ((0 0 0)))
'(basic-letrec
  1
  0
  "\"(list\n 'eval\n '(match (app equal? y 0) (-> (#t) (app a (app - y 1)) <-) ((#f) y))\n (menv '((□? (y)))))\""
  47
  ((0 0 0)))
'(basic-letrec
  1
  0
  "\"(list 'eval '(app equal? (-> y <-) 0) (menv '((□? (y)))))\""
  48
  ((0 0 0)))
'(basic-letrec
  1
  0
  "\"(list 'eval '(app equal? y (-> 0 <-)) (menv '((□? (y)))))\""
  49
  ((0 0 0)))
'(basic-letrec
  1
  0
  "\"(list 'eval '(app a (-> (app - y 1) <-)) (menv '((□? (y)))))\""
  49
  ((0 0 0)))
'(basic-letrec
  1
  0
  "\"(list 'eval '(letrec (a) (-> (app a 2) <-)) (menv '()))\""
  49
  ((0 0 0)))
'(basic-letrec
  1
  0
  "\"(list\n 'eval\n '(λ (y) (-> (match (app equal? y 0) ((#t) (app a (app - y 1))) ((#f) y)) <-))\n (menv '((□? (y)))))\""
  53
  ((0 0 0)))
'(basic-letrec
  1
  0
  "\"(list 'eval '(app - (-> y <-) 1) (menv '((□? (y)))))\""
  53
  ((0 0 0)))
'(basic-letrec
  1
  0
  "\"(list 'eval '(app (-> a <-) (app - y 1)) (menv '((□? (y)))))\""
  53
  ((0 0 0)))
'(basic-letrec
  1
  0
  "\"(list 'eval '(app (-> - <-) y 1) (menv '((□? (y)))))\""
  53
  ((0 0 0)))
'(basic-letrec
  1
  0
  "\"(list\n 'eval\n '(match (-> (app equal? y 0) <-) ((#t) (app a (app - y 1))) ((#f) y))\n (menv '((□? (y)))))\""
  53
  ((0 0 0)))
'(basic-letrec
  1
  0
  "\"(list 'eval '(app a (-> 2 <-)) (menv '()))\""
  53
  ((0 0 0)))
'(basic-letstar
  1
  0
  "\"(list 'eval '(let* (a (-> b = a <-)) bod) (menv '()))\""
  2
  ((0 0 0)))
'(basic-letstar
  1
  0
  "\"(list 'eval '(let* ((-> a = 10 <-) b) bod) (menv '()))\""
  2
  ((0 0 0)))
'(basic-letstar
  1
  0
  "\"(list 'eval '(let* (a b) (-> a <-)) (menv '()))\""
  3
  ((0 0 0)))
'(basic-letstar 1 0 "\"(list 'eval '(top) (menv '()))\"" 4 ((0 0 0)))
'(constr
  1
  0
  "\"(list 'eval '(match x (-> (cons 1 n) n <-) ((_) x)) (menv '()))\""
  6
  ((0 0 0)))
'(constr
  1
  0
  "\"(list 'eval '(app cons 1 (-> (app nil) <-)) (menv '()))\""
  6
  ((0 0 0)))
'(constr 1 0 "\"(list 'eval '(top) (menv '()))\"" 9 ((0 0 0)))
'(constr
  1
  0
  "\"(list 'eval '(let (x) (-> (match x ((cons 1 n) n) ((_) x)) <-)) (menv '()))\""
  9
  ((0 0 0)))
'(constr
  1
  0
  "\"(list 'eval '(match (-> x <-) ((cons 1 n) n) ((_) x)) (menv '()))\""
  9
  ((0 0 0)))
'(constr 1 0 "\"(list 'eval '(app (-> nil <-)) (menv '()))\"" 9 ((0 0 0)))
'(constr
  1
  0
  "\"(list 'eval '(let ((-> x = (app cons 1 (app nil)) <-)) bod) (menv '()))\""
  9
  ((0 0 0)))
'(constr
  1
  0
  "\"(list 'eval '(match x ((cons 1 n) n) (-> (_) x <-)) (menv '()))\""
  10
  ((0 0 0)))
'(constr
  1
  0
  "\"(list 'eval '(app (-> cons <-) 1 (app nil)) (menv '()))\""
  10
  ((0 0 0)))
'(constr
  1
  0
  "\"(list 'eval '(app cons (-> 1 <-) (app nil)) (menv '()))\""
  10
  ((0 0 0)))
'(constr2
  1
  0
  "\"(list 'eval '(app or (-> (app f (app #t)) <-)) (menv '((□? (f)))))\""
  17
  ((0 0 0)))
'(constr2
  1
  0
  "\"(list 'eval '(λ (f) (-> (app not f) <-)) (menv '((□? (f)))))\""
  25
  ((0 0 0)))
'(constr2
  1
  0
  "\"(list 'eval '(letrec (try) (-> (app try (λ (f) (app not f))) <-)) (menv '()))\""
  29
  ((0 0 0)))
'(constr2
  1
  0
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '((□? (f)))))\""
  33
  ((0 0 0)))
'(constr2
  1
  0
  "\"(list 'eval '(app try (-> (λ (f) (app not f)) <-)) (menv '()))\""
  33
  ((0 0 0)))
'(constr2
  1
  0
  "\"(list 'eval '(λ (f) (-> (app or (app f (app #t))) <-)) (menv '((□? (f)))))\""
  37
  ((0 0 0)))
'(constr2
  1
  0
  "\"(list 'eval '(app (-> try <-) (λ (f) (app not f))) (menv '()))\""
  37
  ((0 0 0)))
'(constr2
  1
  0
  "\"(list 'eval '(app (-> not <-) f) (menv '((□? (f)))))\""
  37
  ((0 0 0)))
'(constr2
  1
  0
  "\"(list\n 'eval\n '(letrec ((-> try = (λ (f) (app or (app f (app #t)))) <-)) bod)\n (menv '()))\""
  37
  ((0 0 0)))
'(constr2
  1
  0
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '((□? (f)))))\""
  37
  ((0 0 0)))
'(constr2 1 0 "\"(list 'eval '(top) (menv '()))\"" 38 ((0 0 0)))
'(constr2
  1
  0
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f)))))\""
  38
  ((0 0 0)))
'(constr2
  1
  0
  "\"(list 'eval '(app (-> or <-) (app f (app #t))) (menv '((□? (f)))))\""
  38
  ((0 0 0)))
'(constr2
  1
  0
  "\"(list 'eval '(app not (-> f <-)) (menv '((□? (f)))))\""
  38
  ((0 0 0)))
'(err 1 0 "\"(list 'eval '(top) (menv '()))\"" 6 ((0 0 0)))
'(err 1 0 "\"(list 'eval '(app x (-> x <-)) (menv '((□? (x)))))\"" 9 ((0 0 0)))
'(err
  1
  0
  "\"(list 'eval '(λ (x) (-> (app x x) <-)) (menv '((□? (x)))))\""
  11
  ((0 0 0)))
'(err
  1
  0
  "\"(list 'eval '(app (-> x <-) x) (menv '((□? (x)))))\""
  11
  ((0 0 0)))
'(err
  1
  0
  "\"(list 'eval '(app (-> (λ (x) (app x x)) <-) 2) (menv '()))\""
  11
  ((0 0 0)))
'(err
  1
  0
  "\"(list 'eval '(app (λ (x) (app x x)) (-> 2 <-)) (menv '()))\""
  11
  ((0 0 0)))
'(id 1 0 "\"(list 'eval '(top) (menv '()))\"" 5 ((0 0 0)))
'(id
  1
  0
  "\"(list 'eval '(app (-> (λ (x) x) <-) (λ (y) y)) (menv '()))\""
  5
  ((0 0 0)))
'(id
  1
  0
  "\"(list 'eval '(app (λ (x) x) (-> (λ (y) y) <-)) (menv '()))\""
  5
  ((0 0 0)))
'(id 1 0 "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\"" 10 ((0 0 0)))
'(id 1 0 "\"(list 'eval '(λ (x) (-> x <-)) (menv '((□? (x)))))\"" 12 ((0 0 0)))
'(let-num 1 0 "\"(list 'eval '(app (-> x <-) 1) (menv '()))\"" 2 ((0 0 0)))
'(let-num
  1
  0
  "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
  2
  ((0 0 0)))
'(let-num
  1
  0
  "\"(list 'eval '(let (x) (-> (app x 1) <-)) (menv '()))\""
  7
  ((0 0 0)))
'(let-num 1 0 "\"(list 'eval '(app x (-> 1 <-)) (menv '()))\"" 7 ((0 0 0)))
'(let-num 1 0 "\"(list 'eval '(top) (menv '()))\"" 8 ((0 0 0)))
'(let-num
  1
  0
  "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\""
  10
  ((0 0 0)))
'(let 1 0 "\"(list 'eval '(let (x) (-> x <-)) (menv '()))\"" 2 ((0 0 0)))
'(let 1 0 "\"(list 'eval '(top) (menv '()))\"" 3 ((0 0 0)))
'(let 1 0 "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\"" 8 ((0 0 0)))
'(let 1
   0
   "\"(list 'eval '(let ((-> x = (λ (y) y) <-)) bod) (menv '()))\""
   8
   ((0 0 0)))
'(multi-param
  1
  0
  "\"(list 'eval '(app x (-> y <-)) (menv '((□? (x y)))))\""
  5
  ((0 0 0)))
'(multi-param
  1
  0
  "\"(list 'eval '(λ (z) (-> z <-)) (menv '((□? (z)))))\""
  11
  ((0 0 0)))
'(multi-param
  1
  0
  "\"(list 'eval '(app (-> x <-) y) (menv '((□? (x y)))))\""
  14
  ((0 0 0)))
'(multi-param
  1
  0
  "\"(list 'eval '(app (λ (x y) (app x y)) (-> (λ (z) z) <-) 2) (menv '()))\""
  14
  ((0 0 0)))
'(multi-param
  1
  0
  "\"(list 'eval '(app (-> (λ (x y) (app x y)) <-) (λ (z) z) 2) (menv '()))\""
  14
  ((0 0 0)))
'(multi-param
  1
  0
  "\"(list 'eval '(λ (x y) (-> (app x y) <-)) (menv '((□? (x y)))))\""
  16
  ((0 0 0)))
'(multi-param
  1
  0
  "\"(list 'eval '(app (λ (x y) (app x y)) (λ (z) z) (-> 2 <-)) (menv '()))\""
  16
  ((0 0 0)))
'(multi-param 1 0 "\"(list 'eval '(top) (menv '()))\"" 17 ((0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app = (-> m <-) 0) (menv '((□? (m n)))))\""
  69
  ((1 1 0)))
'(ack
  1
  0
  "\"(list 'eval '(app (-> = <-) m 0) (menv '((□? (m n)))))\""
  74
  ((0 0 0)))
'(ack
  1
  0
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               ((#f)\n                (match\n                 (app = n 0)\n                 ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  75
  ((0 0 0)))
'(ack 1 0 "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\"" 76 ((0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  76
  ((0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app (-> - <-) n 1) (menv '((□? (m n)))))\""
  81
  ((0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '((□? (m n)))))\""
  166
  ((1 1 0)))
'(ack
  1
  0
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '((□? (m n)))))\""
  166
  ((0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app = (-> n <-) 0) (menv '((□? (m n)))))\""
  168
  ((0 0 0)))
'(ack 1 0 "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\"" 168 ((0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app (-> = <-) n 0) (menv '((□? (m n)))))\""
  170
  ((0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  170
  ((0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '((□? (m n)))))\""
  170
  ((0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  170
  ((0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '((□? (m n)))))\""
  172
  ((0 0 0)))
'(ack
  1
  0
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  174
  ((0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '((□? (m n)))))\""
  176
  ((0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  176
  ((0 0 0)))
'(ack
  1
  0
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '((□? (m n)))))\""
  178
  ((0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '((□? (m n)))))\""
  180
  ((0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '((□? (m n)))))\""
  180
  ((0 0 0)))
'(ack
  1
  0
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   ((#f)\n    (match\n     (app = n 0)\n     ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  182
  ((0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app + (-> n <-) 1) (menv '((□? (m n)))))\""
  184
  ((0 0 0)))
'(ack
  1
  0
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '((□? (m n)))))\""
  184
  ((0 0 0)))
'(ack
  1
  0
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  186
  ((0 0 0)))
'(ack
  1
  0
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> (#f) (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  188
  ((0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '((□? (m n)))))\""
  190
  ((0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  197
  ((0 0 0)))
'(ack
  1
  0
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    (#f)\n    (match\n     (app = n 0)\n     ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  200
  ((0 0 0)))
'(ack 1 0 "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\"" 200 ((0 0 0)))
'(ack 1 0 "\"(list 'eval '(top) (menv '()))\"" 201 ((0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app (-> + <-) n 1) (menv '((□? (m n)))))\""
  202
  ((0 0 0)))
'(ack
  1
  0
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      ((#f)\n       (match\n        (app = n 0)\n        ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '((□? (m n)))))\""
  204
  ((0 0 0)))
'(ack
  1
  0
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  204
  ((0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app - (-> n <-) 1) (menv '((□? (m n)))))\""
  204
  ((0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '((□? (m n)))))\""
  204
  ((0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  204
  ((0 0 0)))
'(ack
  1
  0
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   ((#f)\n    (match\n     (app = n 0)\n     ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '((□? (m n)))))\""
  204
  ((0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  204
  ((0 0 0)))
'(ack
  1
  0
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '((□? (m n)))))\""
  204
  ((0 0 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))\""
  3
  ((0 0 0)))
'(kcfa-2
  1
  0
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 (app #t)))) (app f1 (app #f))) <-))\n (menv '((□? (f1)))))\""
  35
  ((0 0 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(app (-> f1 <-) (app #t)) (menv '((□? (f1)))))\""
  37
  ((0 0 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  52
  ((0 0 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(let (_) (-> (app f2 (app #f)) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  89
  ((1 1 0)))
'(kcfa-2
  1
  0
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 (app #t)))) (app f1 (app #f)))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  89
  ((0 0 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  130
  ((1 1 0)))
'(kcfa-2
  1
  0
  "\"(list\n 'eval\n '(λ (z) (-> (app z x1 x2) <-))\n (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  211
  ((6 6 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f1)))))\""
  212
  ((0 0 0)))
'(kcfa-2 1 0 "\"(list 'eval '(top) (menv '()))\"" 213 ((0 0 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(app (-> f2 <-) (app #t)) (menv '((□? (f2)) (□? (x1)))))\""
  219
  ((0 0 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(let ((-> _ = (app f1 (app #t)) <-)) bod) (menv '((□? (f1)))))\""
  223
  ((0 0 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  241
  ((0 0 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(app (-> f1 <-) (app #f)) (menv '((□? (f1)))))\""
  241
  ((0 0 0)))
'(kcfa-2
  1
  0
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f)))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '((□? (x1)))))\""
  241
  ((0 0 0)))
'(kcfa-2
  1
  0
  "\"(list\n 'eval\n '(let ((-> _ = (app f2 (app #t)) <-)) bod)\n (menv '((□? (f2)) (□? (x1)))))\""
  250
  ((0 0 0)))
'(kcfa-2
  1
  0
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 (app #t)))) (app f2 (app #f))) <-))\n (menv '((□? (f2)) (□? (x1)))))\""
  254
  ((0 0 0)))
'(kcfa-2
  1
  0
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '((□? (x2)) (□? (x1)))))\""
  254
  ((0 0 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(app f1 (-> (app #f) <-)) (menv '((□? (f1)))))\""
  255
  ((0 0 0)))
'(kcfa-2
  1
  0
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 (app #t)))) (app f1 (app #f))))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  255
  ((0 0 0)))
'(kcfa-2
  1
  0
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '((□? (x1)))))\""
  255
  ((0 0 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))\""
  258
  ((0 0 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(app f2 (-> (app #f) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  261
  ((0 0 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(app (-> f2 <-) (app #f)) (menv '((□? (f2)) (□? (x1)))))\""
  261
  ((0 0 0)))
'(kcfa-2
  1
  0
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  261
  ((0 0 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  261
  ((0 0 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(app f1 (-> (app #t) <-)) (menv '((□? (f1)))))\""
  263
  ((0 0 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(app f2 (-> (app #t) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  266
  ((0 0 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(let (_) (-> (app f1 (app #f)) <-)) (menv '((□? (f1)))))\""
  266
  ((0 0 0)))
'(kcfa-2
  1
  0
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  269
  ((0 0 0)))
'(kcfa-2
  1
  0
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '((□? (x1)))))\""
  270
  ((0 0 0)))
'(kcfa-2
  1
  0
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f1)))))\""
  270
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f)))) <-)\n   (λ (x2)\n     (app\n      (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n      (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))))))\n (menv '((□? (x1)))))\""
  2
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list\n 'eval\n '(λ (x3) (-> (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1)) <-))\n (menv '((□? (x3)) (□? (x2)) (□? (x1)))))\""
  48
  ((1 1 0)))
'(kcfa-3
  1
  0
  "\"(list 'eval '(let (_) (-> (app f2 (app #f)) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  120
  ((2 2 0)))
'(kcfa-3
  1
  0
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f1)))))\""
  122
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list\n 'eval\n '(λ (f3) (-> (let ((_ (app f3 (app #t)))) (app f3 (app #f))) <-))\n (menv '((□? (f3)) (□? (x2)) (□? (x1)))))\""
  179
  ((4 4 0)))
'(kcfa-3
  1
  0
  "\"(list\n 'eval\n '(λ (y1 y2 y3) (-> y1 <-))\n (menv '((□? (y1 y2 y3)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  185
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f3)) (□? (x2)) (□? (x1)))))\""
  191
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list 'eval '(app f3 (-> (app #f) <-)) (menv '((□? (f3)) (□? (x2)) (□? (x1)))))\""
  203
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 (app #t)))) (app f2 (app #f))) <-))\n (menv '((□? (f2)) (□? (x1)))))\""
  209
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list 'eval '(let (_) (-> (app f1 (app #f)) <-)) (menv '((□? (f1)))))\""
  216
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list 'eval '(app f2 (-> (app #t) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  228
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list 'eval '(app (-> f1 <-) (app #t)) (menv '((□? (f1)))))\""
  230
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list\n 'eval\n '(app z (-> x1 <-) x2 x3)\n (menv '((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  236
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 (app #t)))) (app f1 (app #f))) <-))\n (menv '((□? (f1)))))\""
  238
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2 x3)) <-) (λ (y1 y2 y3) y1))\n (menv '((□? (x3)) (□? (x2)) (□? (x1)))))\""
  238
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list 'eval '(app f2 (-> (app #f) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  250
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2 x3)) (-> (λ (y1 y2 y3) y1) <-))\n (menv '((□? (x3)) (□? (x2)) (□? (x1)))))\""
  250
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n   (->\n    (λ (x2)\n      (app\n       (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n       (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1)))))\n    <-))\n (menv '((□? (x1)))))\""
  250
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list 'eval '(app f3 (-> (app #t) <-)) (menv '((□? (f3)) (□? (x2)) (□? (x1)))))\""
  256
  ((0 0 0)))
'(kcfa-3 1 0 "\"(list 'eval '(top) (menv '()))\"" 257 ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list 'eval '(app (-> f3 <-) (app #f)) (menv '((□? (f3)) (□? (x2)) (□? (x1)))))\""
  257
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 (app #t)))) (app f1 (app #f)))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n      (λ (x2)\n        (app\n         (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n         (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))))))))\n (menv '()))\""
  257
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list 'eval '(app (-> f2 <-) (app #f)) (menv '((□? (f2)) (□? (x1)))))\""
  257
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))\""
  257
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list 'eval '(app (-> f1 <-) (app #f)) (menv '((□? (f1)))))\""
  257
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list\n 'eval\n '(app z x1 (-> x2 <-) x3)\n (menv '((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  482
  ((26 26 0)))
'(kcfa-3
  1
  0
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 (app #t)))) (app f1 (app #f))))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n       (λ (x2)\n         (app\n          (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n          (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1)))))))\n    <-))\n (menv '()))\""
  482
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list 'eval '(app f1 (-> (app #f) <-)) (menv '((□? (f1)))))\""
  484
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list\n 'eval\n '(app z x1 x2 (-> x3 <-))\n (menv '((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  724
  ((47 47 0)))
'(kcfa-3
  1
  0
  "\"(list\n 'eval\n '(app (-> z <-) x1 x2 x3)\n (menv '((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  805
  ((11 11 0)))
'(kcfa-3
  1
  0
  "\"(list 'eval '(app (-> f3 <-) (app #t)) (menv '((□? (f3)) (□? (x2)) (□? (x1)))))\""
  823
  ((1 1 0)))
'(kcfa-3
  1
  0
  "\"(list 'eval '(app f1 (-> (app #t) <-)) (menv '((□? (f1)))))\""
  824
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list\n 'eval\n '(app\n   (-> (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f)))) <-)\n   (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))))\n (menv '((□? (x2)) (□? (x1)))))\""
  824
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list\n 'eval\n '(λ (z) (-> (app z x1 x2 x3) <-))\n (menv '((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  851
  ((5 5 0)))
'(kcfa-3
  1
  0
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f3)) (□? (x2)) (□? (x1)))))\""
  851
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list\n 'eval\n '(app\n   (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n   (-> (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  851
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list\n 'eval\n '(let (_) (-> (app f3 (app #f)) <-))\n (menv '((□? (f3)) (□? (x2)) (□? (x1)))))\""
  851
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list\n 'eval\n '(let ((-> _ = (app f2 (app #t)) <-)) bod)\n (menv '((□? (f2)) (□? (x1)))))\""
  866
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f1)))))\""
  866
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n      (λ (x2)\n        (app\n         (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n         (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))))))\n     <-))\n (menv '((□? (x1)))))\""
  868
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list\n 'eval\n '(λ (x2)\n    (->\n     (app\n      (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n      (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))))\n     <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  871
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list\n 'eval\n '(let ((-> _ = (app f3 (app #t)) <-)) bod)\n (menv '((□? (f3)) (□? (x2)) (□? (x1)))))\""
  889
  ((1 1 0)))
'(kcfa-3
  1
  0
  "\"(list 'eval '(let ((-> _ = (app f1 (app #t)) <-)) bod) (menv '((□? (f1)))))\""
  891
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))\""
  891
  ((0 0 0)))
'(kcfa-3
  1
  0
  "\"(list 'eval '(app (-> f2 <-) (app #t)) (menv '((□? (f2)) (□? (x1)))))\""
  891
  ((0 0 0)))
