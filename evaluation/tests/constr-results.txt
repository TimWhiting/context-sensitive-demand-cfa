'(expression: (let ((x (app cons 1 nil))) x))
'(query: (((ran cons (1) () (let-bin x x (top))) . nil) ()))
'(clos/con: (nil))
'(literals: (⊥ ⊥ ⊥ ⊥))
'(query: (((rat (1 nil) (let-bin x x (top))) . cons) ()))
'(clos/con: (cons))
'(literals: (⊥ ⊥ ⊥ ⊥))
'(query: (((top) let ((x (app cons 1 nil))) x) ()))
'(clos/con: (cons))
'(literals: (⊥ ⊥ ⊥ ⊥))
'(query: (((let-bod x (app cons 1 nil) (top)) . x) ()))
'(clos/con: (cons))
'(literals: (⊥ ⊥ ⊥ ⊥))
'(query: (((let-bin x x (top)) app cons 1 nil) ()))
'(clos/con: (cons))
'(literals: (⊥ ⊥ ⊥ ⊥))
'(query: (((ran cons () (nil) (let-bin x x (top))) . 1) ()))
'(clos/con: ⊥)
'(literals: (1 ⊥ ⊥ ⊥))
