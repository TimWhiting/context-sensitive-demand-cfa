'(expression: (let ((x (λ (y) y))) (app x 1)))
'(query: (((bod (y) (let-bin x (app x 1) () () (top))) . y) ((□? (y)))))
'(clos/con: ⊥)
'(literals: (1 ⊥ ⊥ ⊥))
'(query: (((let-bod ((x (λ (y) y))) (top)) app x 1) ()))
'(clos/con: ⊥)
'(literals: (1 ⊥ ⊥ ⊥))
'(query: (((top) let ((x (λ (y) y))) (app x 1)) ()))
'(clos/con: ⊥)
'(literals: (1 ⊥ ⊥ ⊥))
'(query: (((let-bin x (app x 1) () () (top)) λ (y) y) ()))
'(clos/con: ((λ (y) y)))
'(literals: (⊥ ⊥ ⊥ ⊥))
'(query: (((rat (1) (let-bod ((x (λ (y) y))) (top))) . x) ()))
'(clos/con: ((λ (y) y)))
'(literals: (⊥ ⊥ ⊥ ⊥))
'(query: (((ran x () () (let-bod ((x (λ (y) y))) (top))) . 1) ()))
'(clos/con: ⊥)
'(literals: (1 ⊥ ⊥ ⊥))
