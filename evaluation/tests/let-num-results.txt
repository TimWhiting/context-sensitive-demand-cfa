'(expression: (let ((x (λ (y) y))) (app x 1)))
'(query: (λ (y) (-> y <-)) ((□? (y))))
'(clos/con: ⊥)
'(literals: (1 ⊥ ⊥ ⊥))
'(query: (let (x) (-> (app x 1) <-)) ())
'(clos/con: ⊥)
'(literals: (1 ⊥ ⊥ ⊥))
'(query: (top) ())
'(clos/con: ⊥)
'(literals: (1 ⊥ ⊥ ⊥))
'(query: (let ((-> x = (λ (y) y) <-)) bod) ())
'(clos/con: ((λ (y) y)))
'(literals: (⊥ ⊥ ⊥ ⊥))
'(query: (app (-> x <-) 1) ())
'(clos/con: ((λ (y) y)))
'(literals: (⊥ ⊥ ⊥ ⊥))
'(query: (app x (-> 1 <-)) ())
'(clos/con: ⊥)
'(literals: (1 ⊥ ⊥ ⊥))
