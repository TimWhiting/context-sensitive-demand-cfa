'(sat-small
  0
  "\"(list\n 'eval\n '(letrec (phi ... sat-solve-2) (-> (app sat-solve-2 phi) <-))\n (menv '()))\""
  46
  ((1 1 0)))
'(sat-small
  0
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app or (-> (app f (app #t)) <-) (app f (app #f))) (menv '(())))\""
  44
  ((1 1 0)))
'(sat-small
  0
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '(())))\""
  6
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app p (-> n1 <-) n2) (menv '(() () ())))\""
  10
  ((0 0 0)))
'(sat-small 0 "\"(list 'eval '(app (-> #f <-)) (menv '(())))\"" 1 ((0 0 0)))
'(sat-small
  0
  "\"(list\n 'eval\n '(letrec (... phi (try (-> (λ (f) ...) <-)) sat-solve-2 ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app (-> sat-solve-2 <-) phi) (menv '()))\""
  2
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '(())))\""
  6
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '(() ())))\""
  1
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app or (app f (app #t)) (-> (app f (app #f)) <-)) (menv '(())))\""
  44
  ((0 1 0)))
'(sat-small
  0
  "\"(list\n 'eval\n '(letrec (... try (sat-solve-2 (-> (λ (p) ...) <-)) () ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(λ (n2) (-> (app p n1 n2) <-)) (menv '(() () ())))\""
  32
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '(() ())))\""
  2
  ((0 0 0)))
'(sat-small
  0
  "\"(list\n 'eval\n '(letrec (... () (phi (-> (λ (x1 x2) ...) <-)) try ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app (-> not <-) x2) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app p n1 (-> n2 <-)) (menv '(() () ())))\""
  10
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app sat-solve-2 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '((top) letrec (phi ... sat-solve-2) ...) (menv '()))\""
  47
  ((1 1 0)))
'(sat-small
  0
  "\"(list 'eval '(app (-> p <-) n1 n2) (menv '(() () ())))\""
  5
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app not (-> x2 <-)) (menv '(())))\""
  16
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app (-> or <-) (app f (app #t)) (app f (app #f))) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(λ (x1 x2) (-> (app or x1 (app not x2)) <-)) (menv '(())))\""
  26
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app or x1 (-> (app not x2) <-)) (menv '(())))\""
  20
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app (-> or <-) x1 (app not x2)) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app or (-> x1 <-) (app not x2)) (menv '(())))\""
  16
  ((0 0 0)))
'(sat-small
  0
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '(())))\""
  44
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '(())))\""
  45
  ((1 1 0)))
'(sat-small 0 "\"(list 'eval '(app (-> #t <-)) (menv '(())))\"" 1 ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(λ (n1) (-> (app try (λ (n2) ...)) <-)) (menv '(() ())))\""
  44
  ((0 0 0)))
'(sat-1 0 "\"(list 'eval '(app (-> or <-) x4 x2) (menv '(())))\"" 1 ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(λ (x1 x2 x3 x4)\n    (->\n     (app\n      and\n      (app or x1 (app not x2) (app not x3))\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv '(())))\""
  49
  ((1 1 0)))
'(sat-1 0 "\"(list 'eval '(app (-> not <-) x3) (menv '(())))\"" 1 ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app sat-solve-4 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app try (-> (λ (n4) ...) <-)) (menv '(() () () ())))\""
  1
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app or x1 (-> (app not x2) <-) (app not x3)) (menv '(())))\""
  20
  ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '(())))\""
  73
  ((2 2 0)))
'(sat-1
  0
  "\"(list 'eval '((top) letrec (phi ... sat-solve-4) ...) (menv '()))\""
  76
  ((2 2 0)))
'(sat-1
  0
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app p n1 n2 (-> n3 <-) n4) (menv '(() () () () ())))\""
  10
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(λ (n2) (-> (app try (λ (n3) ...)) <-)) (menv '(() () ())))\""
  73
  ((2 2 0)))
'(sat-1
  0
  "\"(list 'eval '(λ (n4) (-> (app p n1 n2 n3 n4) <-)) (menv '(() () () () ())))\""
  55
  ((2 2 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '(() ())))\""
  2
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app or x1 (app not x2) (-> (app not x3) <-)) (menv '(())))\""
  20
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app or (-> x1 <-) (app not x2) (app not x3)) (menv '(())))\""
  16
  ((0 0 0)))
'(sat-1 0 "\"(list 'eval '(app (-> not <-) x2) (menv '(())))\"" 1 ((0 0 0)))
'(sat-1 0 "\"(list 'eval '(app not (-> x2 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app p n1 n2 n3 (-> n4 <-)) (menv '(() () () () ())))\""
  10
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app or (app f (app #t)) (-> (app f (app #f)) <-)) (menv '(())))\""
  73
  ((2 2 0)))
'(sat-1 0 "\"(list 'eval '(app not (-> x3 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-1 0 "\"(list 'eval '(app (-> #t <-)) (menv '(())))\"" 1 ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '(())))\""
  10
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app p (-> n1 <-) n2 n3 n4) (menv '(() () () () ())))\""
  10
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> sat-solve-4 <-) phi) (menv '()))\""
  2
  ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 (app not x2) (app not x3))\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv '(())))\""
  24
  ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv '(())))\""
  28
  ((0 0 0)))
'(sat-1 0 "\"(list 'eval '(app (-> #f <-)) (menv '(())))\"" 1 ((0 0 0)))
'(sat-1 0 "\"(list 'eval '(app (-> not <-) x2) (menv '(())))\"" 1 ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app or (-> (app f (app #t)) <-) (app f (app #f))) (menv '(())))\""
  73
  ((2 2 0)))
'(sat-1
  0
  "\"(list 'eval '(app or (-> (app not x2) <-) (app not x3)) (menv '(())))\""
  20
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> or <-) (app f (app #t)) (app f (app #f))) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '(())))\""
  10
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '(())))\""
  74
  ((2 2 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(letrec (... try (sat-solve-4 (-> (λ (p) ...) <-)) () ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> or <-) x1 (app not x2) (app not x3)) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(letrec (... () (phi (-> (λ (x1 x2 x3 x4) ...) <-)) try ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> p <-) n1 n2 n3 n4) (menv '(() () () () ())))\""
  5
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app p n1 (-> n2 <-) n3 n4) (menv '(() () () () ())))\""
  10
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app or (app not x2) (-> (app not x3) <-)) (menv '(())))\""
  20
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> or <-) (app not x2) (app not x3)) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app try (-> (λ (n3) ...) <-)) (menv '(() () ())))\""
  1
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '(() ())))\""
  1
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(λ (n3) (-> (app try (λ (n4) ...)) <-)) (menv '(() () () ())))\""
  73
  ((2 2 0)))
'(sat-1 0 "\"(list 'eval '(app not (-> x2 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-1 0 "\"(list 'eval '(app or (-> x4 <-) x2) (menv '(())))\"" 16 ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  1
  ((0 0 0)))
'(sat-1 0 "\"(list 'eval '(app (-> not <-) x3) (menv '(())))\"" 1 ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> try <-) (λ (n4) ...)) (menv '(() () () ())))\""
  2
  ((0 0 0)))
'(sat-1 0 "\"(list 'eval '(app or x4 (-> x2 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> try <-) (λ (n3) ...)) (menv '(() () ())))\""
  2
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(λ (n1) (-> (app try (λ (n2) ...)) <-)) (menv '(() ())))\""
  73
  ((2 2 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(letrec (... phi (try (-> (λ (f) ...) <-)) sat-solve-4 ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-1 0 "\"(list 'eval '(app not (-> x3 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  32
  ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(letrec (phi ... sat-solve-4) (-> (app sat-solve-4 phi) <-))\n (menv '()))\""
  75
  ((2 2 0)))
'(sat-2
  0
  "\"(list 'eval '(app try (-> (λ (n5) ...) <-)) (menv '(() () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> not <-) x2) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or (app not x4) (-> x1 <-)) (menv '(() () () () () () ())))\""
  16
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (x6) (-> (λ (x7) ...) <-)) (menv '(() () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (x7)\n    (->\n     (app\n      and\n      (app or x1 x2)\n      (app or x1 (app not x2) (app not x3))\n      (app or x3 x4)\n      (app or (app not x4) x1)\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv '(() () () () () () ())))\""
  69
  ((3 3 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (app (app p n1) n2) (-> n3 <-))\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (app (app (app (app (app p n1) n2) n3) n4) n5) (-> n6 <-))\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (-> (app (app (app p n1) n2) n3) <-) n4)\n (menv '(() () () () () () () ())))\""
  11
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '(())))\""
  117
  ((5 6 0)))
'(sat-2
  0
  "\"(list 'eval '(app sat-solve-7 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app not (-> x4 <-)) (menv '(() () () () () () ())))\""
  22
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> try <-) (λ (n4) ...)) (menv '(() () () ())))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (-> or <-) (app not x2) (app not x3))\n (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (n2) (-> (app try (λ (n3) ...)) <-)) (menv '(() () ())))\""
  117
  ((5 5 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  36
  ((1 1 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> not <-) x4) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> try <-) (λ (n3) ...)) (menv '(() () ())))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (app (app (app (app p n1) n2) n3) n4) (-> n5 <-))\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(letrec (phi ... sat-solve-7) (-> (app sat-solve-7 phi) <-))\n (menv '()))\""
  119
  ((6 6 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (-> (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) <-) n7)\n (menv '(() () () () () () () ())))\""
  17
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (-> (app (app (app (app (app p n1) n2) n3) n4) n5) <-) n6)\n (menv '(() () () () () () () ())))\""
  15
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or x1 (-> x2 <-)) (menv '(() () () () () () ())))\""
  18
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app not (-> x3 <-)) (menv '(() () () () () () ())))\""
  20
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app or (-> (app not x2) <-) (app not x3))\n (menv '(() () () () () () ())))\""
  22
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(letrec (... phi (try (-> (λ (f) ...) <-)) sat-solve-7 ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (n7)\n    (-> (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7) <-))\n (menv '(() () () () () () () ())))\""
  87
  ((4 4 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> p <-) n1) (menv '(() () () () () () () ())))\""
  5
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (x2) (-> (λ (x3) ...) <-)) (menv '(() ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> or <-) (app f (app #t)) (app f (app #f))) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or (-> x4 <-) x2) (menv '(() () () () () () ())))\""
  22
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  32
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '((top) letrec (phi ... sat-solve-7) ...) (menv '()))\""
  120
  ((8 8 0)))
'(sat-2
  0
  "\"(list 'eval '(app try (-> (λ (n7) ...) <-)) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2 0 "\"(list 'eval '(app (-> #t <-)) (menv '(())))\"" 1 ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> or <-) x1 x2) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> or <-) x4 x2) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(letrec (... try (sat-solve-7 (-> (λ (p) ...) <-)) () ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '(() ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv '(() () () () () () ())))\""
  30
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) (-> n7 <-))\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (x1) (-> (λ (x2) ...) <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> try <-) (λ (n6) ...)) (menv '(() () () () () ())))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> not <-) x3) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (x3) (-> (λ (x4) ...) <-)) (menv '(() () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> sat-solve-7 <-) phi) (menv '()))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> not <-) x3) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (app (app (app p n1) n2) n3) (-> n4 <-))\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '(())))\""
  118
  ((5 6 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '(())))\""
  16
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (n1) (-> (app try (λ (n2) ...)) <-)) (menv '(() ())))\""
  117
  ((5 6 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (n4) (-> (app try (λ (n5) ...)) <-)) (menv '(() () () () ())))\""
  117
  ((5 5 0)))
'(sat-2
  0
  "\"(list 'eval '(app not (-> x2 <-)) (menv '(() () () () () () ())))\""
  18
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '(())))\""
  16
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (-> (app or (app not x4) x1) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  32
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> or <-) x3 x4) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2 0 "\"(list 'eval '(app (-> #f <-)) (menv '(())))\"" 1 ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (-> (app (app p n1) n2) <-) n3)\n (menv '(() () () () () () () ())))\""
  9
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> (app p n1) <-) n2) (menv '(() () () () () () () ())))\""
  7
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '(() ())))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (n6) (-> (app try (λ (n7) ...)) <-))\n (menv '(() () () () () () ())))\""
  117
  ((5 5 0)))
'(sat-2
  0
  "\"(list 'eval '(app or x3 (-> x4 <-)) (menv '(() () () () () () ())))\""
  22
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or (app f (app #t)) (-> (app f (app #f)) <-)) (menv '(())))\""
  117
  ((6 6 0)))
'(sat-2
  0
  "\"(list 'eval '(app or x4 (-> x2 <-)) (menv '(() () () () () () ())))\""
  18
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app or (app not x2) (-> (app not x3) <-))\n (menv '(() () () () () () ())))\""
  24
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app or x1 (app not x2) (-> (app not x3) <-))\n (menv '(() () () () () () ())))\""
  24
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (x4) (-> (λ (x5) ...) <-)) (menv '(() () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (x5) (-> (λ (x6) ...) <-)) (menv '(() () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> try <-) (λ (n5) ...)) (menv '(() () () () ())))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or (-> x1 <-) x2) (menv '(() () () () () () ())))\""
  16
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (-> or <-) x1 (app not x2) (app not x3))\n (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app or (-> x1 <-) (app not x2) (app not x3))\n (menv '(() () () () () () ())))\""
  16
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> try <-) (λ (n7) ...)) (menv '(() () () () () () ())))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app not (-> x2 <-)) (menv '(() () () () () () ())))\""
  18
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app try (-> (λ (n4) ...) <-)) (menv '(() () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> not <-) x2) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app p (-> n1 <-)) (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (app p n1) (-> n2 <-)) (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or (-> (app not x4) <-) x1) (menv '(() () () () () () ())))\""
  26
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app not (-> x3 <-)) (menv '(() () () () () () ())))\""
  20
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (n5) (-> (app try (λ (n6) ...)) <-))\n (menv '(() () () () () ())))\""
  117
  ((5 5 0)))
'(sat-2
  0
  "\"(list 'eval '(app or (-> (app f (app #t)) <-) (app f (app #f))) (menv '(())))\""
  117
  ((6 6 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (n3) (-> (app try (λ (n4) ...)) <-)) (menv '(() () () ())))\""
  117
  ((5 5 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app or x1 (-> (app not x2) <-) (app not x3))\n (menv '(() () () () () () ())))\""
  22
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app try (-> (λ (n3) ...) <-)) (menv '(() () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (-> (app (app (app (app p n1) n2) n3) n4) <-) n5)\n (menv '(() () () () () () () ())))\""
  13
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app try (-> (λ (n6) ...) <-)) (menv '(() () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(letrec (... () (phi (-> (λ (x1) ...) <-)) try ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 x2) <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  26
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> or <-) (app not x4) x1) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or x3 x4) <-)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  30
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or (-> x3 <-) x4) (menv '(() () () () () () ())))\""
  20
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> try <-) (λ (n6) ...)) (menv '(() () () () () ())))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (-> (app or (app not x4) x1) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  26
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (app not x4) (-> x1 <-)) (menv '(())))\""
  16
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app (-> #f <-)) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(letrec (... try (sat-solve-7 (-> (λ (p) ...) <-)) () ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(λ (n1) (-> (app try (λ (n2) ...)) <-)) (menv '(() ())))\""
  100
  ((6 6 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or x3 x4) <-)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  24
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(let (... () (_ (-> (app display s) <-)) () ...) ...)\n (menv '(())))\""
  6
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app try (-> (λ (n7) ...) <-)) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app not (-> x4 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(let (... () (_ (-> (app println \"trying\") <-)) () ...) ...)\n (menv '(())))\""
  6
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app or (-> x4 <-) x2) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '(())))\""
  16
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(let (_) (-> (app newline) <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(letrec (... phi (try (-> (λ (f) ...) <-)) sat-solve-7 ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app p n1 n2 (-> n3 <-) n4 n5 n6 n7)\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(let (... () (_ (-> (app display (app sat-solve-7 phi)) <-)) () ...) ...)\n (menv '()))\""
  104
  ((5 6 0)))
'(sat-3 0 "\"(list 'eval '(app (-> or <-) x4 x2) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (-> x1 <-) (app not x2) (app not x3)) (menv '(())))\""
  16
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app or x4 (-> x2 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 n5 (-> n6 <-) n7)\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> or <-) x1 (app not x2) (app not x3)) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> println <-) \"trying\") (menv '(())))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(λ (x1 x2 x3 x4 x5 x6 x7)\n    (->\n     (app\n      and\n      (app or x1 x2)\n      (app or x1 (app not x2) (app not x3))\n      (app or x3 x4)\n      (app or (app not x4) x1)\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv '(())))\""
  63
  ((3 3 0)))
'(sat-3 0 "\"(list 'eval '(app (-> not <-) x3) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app (-> p <-) n1 n2 n3 n4 n5 n6 n7)\n (menv '(() () () () () () () ())))\""
  5
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(λ (f) (-> (let (_) ...) <-)) (menv '(())))\""
  100
  ((5 5 0)))
'(sat-3 0 "\"(list 'eval '(app (-> newline <-)) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app p n1 n2 n3 (-> n4 <-) n5 n6 n7)\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '(() ())))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> or <-) (app not x2) (app not x3)) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '(())))\""
  101
  ((5 5 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> try <-) (λ (n4) ...)) (menv '(() () () ())))\""
  2
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app (-> not <-) x3) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> or <-) (app not x4) x1) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or x1 (app not x2) (-> (app not x3) <-)) (menv '(())))\""
  20
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '((top) letrec (println ... sat-solve-7) ...) (menv '()))\""
  4
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (-> (app not x2) <-) (app not x3)) (menv '(())))\""
  20
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app sat-solve-7 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(let (_) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '(())))\""
  100
  ((5 5 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  32
  ((1 1 0)))
'(sat-3
  0
  "\"(list 'eval '(app try (-> (λ (n5) ...) <-)) (menv '(() () () () ())))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (app f (app #t)) (-> (app f (app #f)) <-)) (menv '(())))\""
  100
  ((7 7 0)))
'(sat-3
  0
  "\"(list 'eval '(app display (-> (app sat-solve-7 phi) <-)) (menv '()))\""
  102
  ((8 8 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (-> (app not x4) <-) x1) (menv '(())))\""
  20
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(λ (s) (-> (let (_) ...) <-)) (menv '(())))\""
  3
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app (-> not <-) x4) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app or x1 (-> x2 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app or (-> x1 <-) x2) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app println (-> \"trying\" <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(letrec (println ... sat-solve-7) (-> (let (_) ...) <-))\n (menv '()))\""
  3
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> display <-) (app sat-solve-7 phi)) (menv '()))\""
  1
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app not (-> x2 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(λ (n5) (-> (app try (λ (n6) ...)) <-))\n (menv '(() () () () () ())))\""
  100
  ((8 8 0)))
'(sat-3
  0
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv '(())))\""
  28
  ((1 1 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> sat-solve-7 <-) phi) (menv '()))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 n5 n6 (-> n7 <-))\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(letrec (... println (phi (-> (λ (x1 x2 x3 x4 x5 x6 x7) ...) <-)) try ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(λ (n4) (-> (app try (λ (n5) ...)) <-)) (menv '(() () () () ())))\""
  100
  ((5 6 0)))
'(sat-3 0 "\"(list 'eval '(app not (-> x2 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app p n1 (-> n2 <-) n3 n4 n5 n6 n7)\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(λ (n3) (-> (app try (λ (n4) ...)) <-)) (menv '(() () () ())))\""
  100
  ((5 6 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(λ (n7) (-> (app p n1 n2 n3 n4 n5 n6 n7) <-))\n (menv '(() () () () () () () ())))\""
  69
  ((3 4 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> try <-) (λ (n3) ...)) (menv '(() () ())))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  1
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app (-> #t <-)) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app (-> newline <-)) (menv '()))\"" 1 ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app (-> not <-) x2) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(λ (n2) (-> (app try (λ (n3) ...)) <-)) (menv '(() () ())))\""
  100
  ((5 5 0)))
'(sat-3
  0
  "\"(list 'eval '(app or x1 (-> (app not x2) <-) (app not x3)) (menv '(())))\""
  20
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(letrec (... () (println (-> (λ (s) ...) <-)) phi ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app (-> not <-) x2) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '(() ())))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 x2) <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  24
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app (-> or <-) x1 x2) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (app not x2) (-> (app not x3) <-)) (menv '(())))\""
  20
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> or <-) (app f (app #t)) (app f (app #f))) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(λ (n6) (-> (app try (λ (n7) ...)) <-))\n (menv '(() () () () () () ())))\""
  100
  ((6 6 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '(())))\""
  16
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv '(())))\""
  24
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app not (-> x3 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app try (-> (λ (n3) ...) <-)) (menv '(() () ())))\""
  1
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app or (-> x3 <-) x4) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (-> (app f (app #t)) <-) (app f (app #f))) (menv '(())))\""
  100
  ((6 6 0)))
'(sat-3 0 "\"(list 'eval '(app (-> or <-) x3 x4) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app p (-> n1 <-) n2 n3 n4 n5 n6 n7)\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app (-> display <-) s) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(let (_) (-> (app newline) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app try (-> (λ (n6) ...) <-)) (menv '(() () () () () ())))\""
  1
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app display (-> s <-)) (menv '(())))\"" 4 ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app not (-> x3 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> try <-) (λ (n5) ...)) (menv '(() () () () ())))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app try (-> (λ (n4) ...) <-)) (menv '(() () () ())))\""
  1
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app or x3 (-> x4 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> try <-) (λ (n7) ...)) (menv '(() () () () () () ())))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 (-> n5 <-) n6 n7)\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (a) (-> (match a ...) <-)) (menv '(())))\""
  605
  ((60 62 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> f <-) x) (menv '(())))\""
  16
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(let (... () (_ (-> (app draw-board! bo) <-)) () ...) ...)\n (menv '(())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> l <-) (nil) (cons x xs)) (menv '(())))\""
  17
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ (co mm) (-> (match (app blank? (app board-lookup co bo)) ...) <-))\n (menv '(() ())))\""
  605
  ((68 69 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app blank? (-> (app board-lookup co bo) <-)) (menv '(() ())))\""
  605
  ((60 61 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app horizon< (app move-horizon mo₀) (-> (app move-horizon mo₁) <-))\n (menv '(())))\""
  605
  ((61 62 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app foldl f (app f x acc) (-> xs <-)) (menv '(())))\""
  17
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> cons <-) (app Tw) (app nil)) (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> (app b co) <-) (blank) (marked m*)) (menv '(())))\""
  605
  ((65 66 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match i ((Ze) (-> (app Tw) <-)) (On) (Tw)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... board-lookup (marked-with? (-> (λ (b co m) ...) <-)) i⁻¹ ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app player (app X) (-> (app make-ai-action (app X)) <-))\n (menv '(())))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> marked-with? <-) b (app coord r c) m) (menv '(() () ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> foldl <-) f (app f x acc) xs) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app play-turn (-> empty-board <-) player-one player-two)\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (-> (app blank? (app board-lookup co bo)) <-) (#t) (#f))\n (menv '(() ())))\""
  605
  ((70 71 3)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... foldl (fold/coord (-> (λ (f x) ...) <-)) min-maybe-move ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   oc₀\n   (win)\n   (draw)\n   ((lose) (-> (app not (app equal? oc₁ (app lose))) <-)))\n (menv '(())))\""
  605
  ((70 72 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app marked-with? b (app coord rc (app i⁻¹ rc)) (-> m <-))\n (menv '(() ())))\""
  78
  ((4 4 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> cons <-) (app On) (app cons (app Tw) (app nil)))\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> player <-) (app X) human-action) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   (-> (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) <-)\n   (#t)\n   (#f))\n (menv '(())))\""
  605
  ((61 62 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app b (-> (app coord r c) <-)) (menv '(() () ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> move-coord <-) (app some-v (app maximin bo ma (app mark⁻¹ ma))))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app horizon (-> oc <-) (app + sc 1)) (menv '(())))\""
  614
  ((68 69 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ (r) (-> (app marked-with? b (app coord r c) m) <-))\n (menv '(() () ())))\""
  605
  ((69 71 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> void <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> xs <-) (empty) (cons x rest-xs)) (menv '(())))\""
  25
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-mark co this-mark (-> bo <-)) (menv '(() ())))\""
  8
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> void <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... some-v (marked? (-> (λ (a) ...) <-)) blank? ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app marked-with? b (-> (app coord r c) <-) m) (menv '(() () ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> marked? <-) (app b (app coord r c))) (menv '(() () ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> (app equal? co₀ co) <-) (#t) (#f)) (menv '(() ())))\""
  605
  ((71 73 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (f xs) (-> (match xs ...) <-)) (menv '(())))\""
  605
  ((70 72 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (r) (-> (app andmap (λ (c) ...) is) <-)) (menv '(() ())))\""
  605
  ((66 68 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match a (blank) (_ (-> (app #f) <-))) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app play-turn bo that-play (-> this-play <-)) (menv '(())))\""
  23
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> full? <-) bo) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ (player-one player-two)\n    (-> (app play-turn empty-board player-one player-two) <-))\n (menv '(())))\""
  615
  ((78 80 3)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   or\n   (app ormap (λ (r) ...) is)\n   (app ormap (λ (c) ...) is)\n   (app andmap (λ (rc) ...) is)\n   (-> (app andmap (λ (rc) ...) is) <-))\n (menv '(())))\""
  605
  ((64 65 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-lookup (-> co <-) bo) (menv '(() ())))\""
  605
  ((69 70 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> board-mark <-) co this-mark bo) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ (b m)\n    (->\n     (app\n      or\n      (app ormap (λ (r) ...) is)\n      (app ormap (λ (c) ...) is)\n      (app andmap (λ (rc) ...) is)\n      (app andmap (λ (rc) ...) is))\n     <-))\n (menv '(())))\""
  605
  ((76 78 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app horizon (-> (app draw) <-) 0) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> and <-) (app f x) (app andmap f rest-xs)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app full? bo) (#f) (_ (-> (let (_) ...) <-)))\n (menv '(())))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app error (-> \"invalid match for move-coord\" <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> make-ai-action <-) (app O)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (co) (-> (match (app equal? co₀ co) ...) <-)) (menv '(() ())))\""
  605
  ((72 74 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> player <-) (app O) (app make-ai-action (app O)))\n (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   min-maybe-move\n   mm\n   (-> (app move co (match (app wins? bo this-mark) ...)) <-))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> draw-board! <-) bo) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... is (mark⁻¹ (-> (λ (ma) ...) <-)) empty-board ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app b co) ((blank) (-> (app #f) <-)) (marked m*))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (r x) (-> (app foldl (λ (c x) ...) x is) <-)) (menv '(() ())))\""
  605
  ((70 72 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> move-horizon <-) mo₁) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app player (app O) (-> (app make-ai-action (app O)) <-))\n (menv '(())))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app full? (-> bo <-)) (menv '(() ())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app error (-> \"invalid match for some-v\" <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> equal? <-) co₀ co) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   h₁\n   ((horizon oc₁ sc₁)\n    (->\n     (app or (app oc< oc₀ oc₁) (app and (app equal? oc₀ oc₁) (app < sc₀ sc₁)))\n     <-)))\n (menv '(())))\""
  605
  ((66 67 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (ma) (-> (λ (bo) ...) <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app horizon< (-> (app move-horizon mo₀) <-) (app move-horizon mo₁))\n (menv '(())))\""
  605
  ((71 73 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> equal? <-) m m*) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-lookup (-> co <-) bo) (menv '(() ())))\""
  605
  ((66 68 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(let (co) (-> (match (app blank? (app board-lookup co bo)) ...) <-))\n (menv '(() ())))\""
  605
  ((71 73 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> coord <-) r c) (menv '(() () ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app wins? (-> bo <-) this-mark) (menv '(() ())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app move-horizon (-> (app some-v (app minimax bo that-mark this-mark)) <-))\n (menv '(() ())))\""
  605
  ((72 73 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app horizon< (app move-horizon mo₀) (-> (app move-horizon mo₁) <-))\n (menv '(())))\""
  605
  ((64 66 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... horizon< (horizon-add1 (-> (λ (h) ...) <-)) foldl ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app full? bo) (#f) (_ (-> (app horizon (app draw) 0) <-)))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app wins? bo this-mark) (#f) (_ (-> (app horizon (app win) 0) <-)))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app player (-> (app O) <-) (app make-ai-action (app O)))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app player (app O) (-> (app make-ai-action (app O)) <-))\n (menv '(())))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> player <-) (app O) human-action) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> horizon <-) (app win) 0) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app equal? m (-> m* <-)) (menv '(())))\""
  605
  ((70 72 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> error <-) \"invalid match for move-horizon\") (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app fold/coord (λ (co mm) ...) (-> (app none) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app f (app coord r c) (-> x <-)) (menv '(() () ())))\""
  605
  ((71 73 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app coord r (-> c <-)) (menv '(() () ())))\""
  31
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app ormap (-> (λ (r) ...) <-) is) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> blank? <-) (app board-lookup co bo)) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> X <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(let (... () (bo (-> (app board-mark co mark bo) <-)) () ...) ...)\n (menv '(())))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '((top) lettypes (Ze ... player) ...) (menv '()))\""
  621
  ((70 71 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match l ((nil) (-> acc <-)) (cons x xs)) (menv '(())))\""
  605
  ((68 69 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> wins? <-) bo this-mark) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> loop <-)) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> #t <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> mmo <-) (some mo₀) (none)) (menv '(())))\""
  605
  ((61 62 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(let (bo)\n    (->\n     (app max-maybe-move mm (app move co (match (app wins? bo this-mark) ...)))\n     <-))\n (menv '(() ())))\""
  605
  ((67 68 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app wins? bo mark) (#f) (_ (-> (let (_) ...) <-)))\n (menv '(())))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-mark (-> co <-) mark bo) (menv '(())))\""
  605
  ((68 70 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app < sc₀ (-> sc₁ <-)) (menv '(())))\""
  605
  ((64 66 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app maximin bo that-mark (-> this-mark <-)) (menv '(() ())))\""
  31
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ (c) (-> (app marked-with? b (app coord r c) m) <-))\n (menv '(() () ())))\""
  605
  ((62 63 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... marked? (blank? (-> (λ (a) ...) <-)) move-coord ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> horizon <-) (app draw) 0) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> blank <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> marked-with? <-) b (app coord rc rc) m) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-lookup co (-> bo <-)) (menv '(() ())))\""
  8
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> draw-board! <-) bo) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app foldl (λ (r x) ...) x (-> is <-)) (menv '(())))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app ormap (λ (r) ...) (-> is <-)) (menv '(())))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> andmap <-) f rest-xs) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   (-> or <-)\n   (app oc< oc₀ oc₁)\n   (app and (app equal? oc₀ oc₁) (app < sc₀ sc₁)))\n (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   (-> some <-)\n   (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...))\n (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app player (app O) (-> human-action <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match a (move _ x) (_ (-> (app error \"invalid match for move-horizon\") <-)))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app b co) (blank) ((marked m*) (-> (app equal? m m*) <-)))\n (menv '(())))\""
  605
  ((65 67 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> coord <-) rc rc) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app player (-> (app X) <-) (app make-ai-action (app X)))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app some-v (-> (app minimax bo that-mark this-mark) <-))\n (menv '(() ())))\""
  605
  ((67 69 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... full? (oc< (-> (λ (oc₀ oc₁) ...) <-)) horizon< ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... wins? (full? (-> (λ (b) ...) <-)) oc< ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match i (Ze) ((On) (-> (app On) <-)) (Tw)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app horizon (-> (app draw) <-) 0) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> (app wins? bo mark) <-) (#f) _) (menv '(())))\""
  606
  ((64 66 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> a <-) (marked _) _) (menv '(())))\""
  605
  ((63 64 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app f x (-> acc <-)) (menv '(())))\""
  605
  ((62 64 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   (app blank? (app board-lookup co bo))\n   ((#t) (-> (let (bo) ...) <-))\n   (#f))\n (menv '(() ())))\""
  605
  ((63 65 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match xs ((empty) (-> (app #t) <-)) (cons x rest-xs))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match this-play ((player mark action) (-> (let (co) ...) <-)))\n (menv '(())))\""
  612
  ((62 63 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   (-> play-game <-)\n   (app player (app X) human-action)\n   (app player (app O) (app make-ai-action (app O))))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app blank? (app board-lookup co bo)) (#t) ((#f) (-> mm <-)))\n (menv '(() ())))\""
  605
  ((61 63 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> minimax <-) bo that-mark this-mark) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app + sc (-> 1 <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> full? <-) bo) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app marked? (-> (app b (app coord r c)) <-)) (menv '(() () ())))\""
  605
  ((65 66 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> board-mark <-) co mark bo) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app equal? co₀ (-> co <-)) (menv '(() ())))\""
  605
  ((62 63 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> i⁻¹ <-) rc) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app foldl (-> f <-) (app f x acc) xs) (menv '(())))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   (-> min-maybe-move <-)\n   mm\n   (app move co (match (app wins? bo this-mark) ...)))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app make-ai-action (-> (app O) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app horizon (app draw) (-> 0 <-)) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   xs\n   (empty)\n   ((cons x rest-xs) (-> (app and (app f x) (app andmap f rest-xs)) <-)))\n (menv '(())))\""
  605
  ((66 68 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> equal? <-) oc₁ (app lose)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... () (loop (-> (λ () ...) <-)) () ...) ...)\n (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (...\n           board-mark\n           (board-lookup (-> (λ (co bo) ...) <-))\n           marked-with?\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (r) (-> (app andmap (λ (c) ...) is) <-)) (menv '(() ())))\""
  605
  ((62 63 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app draw-board! (-> bo <-)) (menv '(())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   or\n   (-> (app ormap (λ (r) ...) is) <-)\n   (app ormap (λ (c) ...) is)\n   (app andmap (λ (rc) ...) is)\n   (app andmap (λ (rc) ...) is))\n (menv '(())))\""
  605
  ((62 63 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app coord (-> rc <-) rc) (menv '(() ())))\""
  39
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> horizon <-) (app draw) 0) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app foldl (-> (λ (c x) ...) <-) x is) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ (bo) (-> (app error (app quote human-action) \"not implemented\") <-))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app cons (-> (app On) <-) (app cons (app Tw) (app nil)))\n (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app blank? (app board-lookup co bo)) (#t) ((#f) (-> mm <-)))\n (menv '(() ())))\""
  605
  ((61 62 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app minimax (-> bo <-) that-mark this-mark) (menv '(() ())))\""
  5
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> O <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> move-horizon <-) mo₀) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app quote (-> human-action <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> nil <-)) (menv '()))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> < <-) sc₀ sc₁) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> marked-with? <-) b (app coord r c) m) (menv '(() () ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... mark⁻¹ (empty-board (-> (λ (co) ...) <-)) board-mark ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app wins? (-> bo <-) this-mark) (menv '(() ())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> andmap <-) (λ (r) ...) is) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> #t <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app f (-> x <-) acc) (menv '(())))\""
  24
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app horizon (app draw) (-> 0 <-)) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app move co (-> (match (app wins? bo this-mark) ...) <-))\n (menv '(() ())))\""
  605
  ((61 63 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match a (move x _) (_ (-> (app error \"invalid match for move-coord\") <-)))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match a ((some x) (-> x <-)) _) (menv '(())))\""
  605
  ((72 74 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app full? (-> bo <-)) (menv '(())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> draw <-)) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app or (app f x) (-> (app ormap f rest-xs) <-)) (menv '(())))\""
  605
  ((67 68 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> move <-) co (match (app wins? bo this-mark) ...))\n (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app andmap (-> (λ (c) ...) <-) is) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app marked-with? b (-> (app coord rc (app i⁻¹ rc)) <-) m)\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... marked-with? (i⁻¹ (-> (λ (i) ...) <-)) ormap ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app cons (app On) (-> (app cons (app Tw) (app nil)) <-))\n (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (...\n           play-game\n           (two-player-game (-> (λ () ...) <-))\n           one-player-game\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app horizon (-> (app lose) <-) 0) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app cons (-> (app Tw) <-) (app nil)) (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app b (-> co <-)) (menv '(())))\""
  14
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ ()\n    (->\n     (app\n      play-game\n      (app player (app X) human-action)\n      (app player (app O) (app make-ai-action (app O))))\n     <-))\n (menv '(())))\""
  616
  ((66 68 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app maximin (-> bo <-) that-mark this-mark) (menv '(() ())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> some <-) mo₁) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app some-v (-> (app maximin bo that-mark this-mark) <-))\n (menv '(() ())))\""
  605
  ((64 65 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> board-lookup <-) co bo) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-lookup co (-> bo <-)) (menv '(() ())))\""
  45
  ((2 2 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app ormap (λ (c) ...) (-> is <-)) (menv '(())))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(letrec (loop) (-> (app loop) <-)) (menv '(())))\""
  605
  ((67 68 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> full? <-) bo) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app maximin bo ma (-> (app mark⁻¹ ma) <-)) (menv '(() ())))\""
  24
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> none <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(let (... () (co (-> (app action bo) <-)) () ...) ...)\n (menv '(() ())))\""
  605
  ((62 63 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match a ((move x _) (-> x <-)) _) (menv '(())))\""
  605
  ((70 72 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   or\n   (-> (app oc< oc₀ oc₁) <-)\n   (app and (app equal? oc₀ oc₁) (app < sc₀ sc₁)))\n (menv '(())))\""
  605
  ((65 67 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app marked-with? (-> b <-) (app coord rc (app i⁻¹ rc)) m)\n (menv '(() ())))\""
  16
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app play-turn empty-board player-one (-> player-two <-))\n (menv '(())))\""
  11
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> action <-) bo) (menv '(() ())))\""
  37
  ((2 2 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> #f <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   (-> horizon-add1 <-)\n   (app move-horizon (app some-v (app maximin bo that-mark this-mark))))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> X <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> coord <-) r c) (menv '(() () ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app andmap (-> (λ (rc) ...) <-) is) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match mmo (some mo₀) ((none) (-> (app some mo₁) <-)))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> mark⁻¹ <-) ma) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> Tw <-)) (menv '()))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> error <-) \"invalid match for some-v\") (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (co) (-> (app blank) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match oc₀ (win) ((draw) (-> (app equal? oc₁ (app win)) <-)) (lose))\n (menv '(())))\""
  610
  ((61 63 2)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> On <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> andmap <-) (λ (c) ...) is) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app oc< (-> oc₀ <-) oc₁) (menv '(())))\""
  605
  ((66 68 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (b) (-> (app andmap (λ (r) ...) is) <-)) (menv '(())))\""
  607
  ((73 74 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app coord rc (-> (app i⁻¹ rc) <-)) (menv '(() ())))\""
  55
  ((1 2 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app draw-board! (-> bo <-)) (menv '(())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (...\n           fold/coord\n           (min-maybe-move (-> (λ (mmo mo₁) ...) <-))\n           max-maybe-move\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> O <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> + <-) sc 1) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   min-maybe-move\n   (-> mm <-)\n   (app move co (match (app wins? bo this-mark) ...)))\n (menv '(() ())))\""
  605
  ((67 68 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (f xs) (-> (match xs ...) <-)) (menv '(())))\""
  605
  ((61 62 1)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> win <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app f (-> x <-)) (menv '(())))\""
  32
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app player (-> (app O) <-) human-action) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   xs\n   (empty)\n   ((cons x rest-xs) (-> (app or (app f x) (app ormap f rest-xs)) <-)))\n (menv '(())))\""
  605
  ((61 63 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app move-horizon (-> mo₁ <-)) (menv '(())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   play-game\n   (app player (app X) (app make-ai-action (app X)))\n   (-> (app player (app O) (app make-ai-action (app O))) <-))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   horizon-add1\n   (->\n    (app move-horizon (app some-v (app minimax bo that-mark this-mark)))\n    <-))\n (menv '(() ())))\""
  607
  ((61 62 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match h ((horizon oc sc) (-> (app horizon oc (app + sc 1)) <-)))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ ()\n    (->\n     (app\n      play-game\n      (app player (app X) (app make-ai-action (app X)))\n      (app player (app O) (app make-ai-action (app O))))\n     <-))\n (menv '(())))\""
  616
  ((64 66 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app horizon (app win) (-> 0 <-)) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> draw-board! <-) bo) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> some-v <-) (app maximin bo ma (app mark⁻¹ ma)))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> #f <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-lookup co (-> bo <-)) (menv '(() ())))\""
  11
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> f <-) x acc) (menv '(())))\""
  8
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   or\n   (app ormap (λ (r) ...) is)\n   (app ormap (λ (c) ...) is)\n   (-> (app andmap (λ (rc) ...) is) <-)\n   (app andmap (λ (rc) ...) is))\n (menv '(())))\""
  605
  ((63 64 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> play-turn <-) empty-board player-one player-two)\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (b co m) (-> (match (app b co) ...) <-)) (menv '(())))\""
  605
  ((65 66 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app and (app f x) (-> (app andmap f rest-xs) <-)) (menv '(())))\""
  605
  ((68 69 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> (app full? bo) <-) (#f) _) (menv '(() ())))\""
  608
  ((66 67 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app mark⁻¹ (-> ma <-)) (menv '(() ())))\""
  11
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app horizon (app lose) (-> 0 <-)) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> some <-) mo₁) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app play-turn empty-board (-> player-one <-) player-two)\n (menv '(())))\""
  11
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app player (app X) (-> human-action <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app or (-> (app f x) <-) (app ormap f rest-xs)) (menv '(())))\""
  605
  ((69 71 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app minimax bo that-mark (-> this-mark <-)) (menv '(() ())))\""
  18
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> (app wins? bo this-mark) <-) (#f) _) (menv '(() ())))\""
  605
  ((64 65 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> fold/coord <-) (λ (co mm) ...) (app none)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> xs <-) (empty) (cons x rest-xs)) (menv '(())))\""
  17
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app maximin (-> bo <-) ma (app mark⁻¹ ma)) (menv '(() ())))\""
  38
  ((2 2 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> O <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> display <-) \"Cat's game.\\n\") (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> f <-) x) (menv '(())))\"" 8 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> move-horizon <-) mo₀) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (a) (-> (match a ...) <-)) (menv '(())))\""
  605
  ((66 67 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app coord (-> rc <-) (app i⁻¹ rc)) (menv '(() ())))\""
  39
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> loop <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app some-v (-> (app maximin bo ma (app mark⁻¹ ma)) <-))\n (menv '(() ())))\""
  605
  ((64 65 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(let (... () (co (-> (letrec (loop) ...) <-)) () ...) ...)\n (menv '(())))\""
  605
  ((66 67 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-lookup (-> co <-) bo) (menv '(() ())))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ (rc) (-> (app marked-with? b (app coord rc (app i⁻¹ rc)) m) <-))\n (menv '(() ())))\""
  605
  ((67 68 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> board-lookup <-) co bo) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> O <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> On <-)) (menv '()))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-lookup co (-> bo <-)) (menv '(() ())))\""
  57
  ((2 2 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> andmap <-) (λ (rc) ...) is) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(let (... () (bo (-> (app board-mark co this-mark bo) <-)) () ...) ...)\n (menv '(() ())))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app marked-with? b (-> (app coord rc rc) <-) m) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app horizon< (-> (app move-horizon mo₀) <-) (app move-horizon mo₁))\n (menv '(())))\""
  605
  ((67 68 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> lose <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app cons (-> (app Ze) <-) (app cons (app On) (app cons (app Tw) (app nil))))\n (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> andmap <-) (λ (c) ...) is) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> maximin <-) bo ma (app mark⁻¹ ma)) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> b <-) (app coord r c)) (menv '(() () ())))\""
  16
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> a <-) (blank) _) (menv '(())))\""
  605
  ((74 75 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app andmap (λ (rc) ...) (-> is <-)) (menv '(())))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app equal? (-> oc₁ <-) (app lose)) (menv '(())))\""
  605
  ((62 64 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app move-horizon (-> mo₀ <-)) (menv '(())))\""
  605
  ((62 63 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app play-turn (-> bo <-) that-play this-play) (menv '(())))\""
  5
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> #f <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   (-> or <-)\n   (app ormap (λ (r) ...) is)\n   (app ormap (λ (c) ...) is)\n   (app andmap (λ (rc) ...) is)\n   (app andmap (λ (rc) ...) is))\n (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> play-turn <-) bo that-play this-play) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app equal? (-> oc₁ <-) (app win)) (menv '(())))\""
  606
  ((61 63 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app foldl f (-> (app f x acc) <-) xs) (menv '(())))\""
  605
  ((63 64 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app equal? oc₀ (-> oc₁ <-)) (menv '(())))\""
  605
  ((74 76 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> board-lookup <-) co bo) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app coord rc (-> rc <-)) (menv '(() ())))\""
  39
  ((2 2 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... horizon-add1 (foldl (-> (λ (f acc l) ...) <-)) fold/coord ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app marked-with? (-> b <-) (app coord r c) m) (menv '(() () ())))\""
  16
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match a ((move _ x) (-> x <-)) _) (menv '(())))\""
  605
  ((65 67 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (f x) (-> (app foldl (λ (r x) ...) x is) <-)) (menv '(())))\""
  605
  ((71 73 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app wins? bo (-> mark <-)) (menv '(())))\""
  37
  ((2 2 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> X <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match l (nil) ((cons x xs) (-> (app foldl f (app f x acc) xs) <-)))\n (menv '(())))\""
  605
  ((65 66 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app and (app equal? oc₀ oc₁) (-> (app < sc₀ sc₁) <-))\n (menv '(())))\""
  605
  ((62 64 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> marked <-) ma) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> horizon <-) (app lose) 0) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app foldl (λ (r x) ...) (-> x <-) is) (menv '(())))\""
  8
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> zero-player-game <-)) (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app player (-> (app X) <-) human-action) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> lose <-)) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(let (bo) (-> (match (app wins? bo mark) ...) <-)) (menv '(())))\""
  610
  ((61 63 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> board-lookup <-) co bo) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> some-v <-) (app minimax bo that-mark this-mark))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match ma (X) ((O) (-> (app X) <-))) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app full? bo) (#f) (_ (-> (app horizon (app draw) 0) <-)))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> andmap <-) (λ (rc) ...) is) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> move-horizon <-) (app some-v (app minimax bo that-mark this-mark)))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   (app full? bo)\n   ((#f)\n    (->\n     (app\n      horizon-add1\n      (app move-horizon (app some-v (app maximin bo that-mark this-mark))))\n     <-))\n   _)\n (menv '(() ())))\""
  619
  ((65 66 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> player <-) (app X) (app make-ai-action (app X)))\n (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ ()\n    (->\n     (app\n      play-game\n      (app player (app X) human-action)\n      (app player (app O) human-action))\n     <-))\n (menv '(())))\""
  617
  ((69 71 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> wins? <-) bo this-mark) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> O <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> Ze <-)) (menv '()))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (some-v ... zero-player-game) (-> (app zero-player-game) <-))\n (menv '()))\""
  619
  ((65 67 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... andmap (wins? (-> (λ (b m) ...) <-)) full? ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app coord r (-> c <-)) (menv '(() () ())))\""
  39
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match h₀ ((horizon oc₀ sc₀) (-> (match h₁ ...) <-)))\n (menv '(())))\""
  605
  ((66 67 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> a <-) (move _ x) _) (menv '(())))\""
  605
  ((63 64 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app move co (-> (match (app wins? bo this-mark) ...) <-))\n (menv '(() ())))\""
  605
  ((63 65 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   (-> play-game <-)\n   (app player (app X) (app make-ai-action (app X)))\n   (app player (app O) (app make-ai-action (app O))))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app ormap (-> (λ (c) ...) <-) is) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   (-> horizon-add1 <-)\n   (app move-horizon (app some-v (app minimax bo that-mark this-mark))))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> none <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-mark co (-> this-mark <-) bo) (menv '(() ())))\""
  32
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (...\n           max-maybe-move\n           (minimax (-> (λ (bo this-mark that-mark) ...) <-))\n           maximin\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app fold/coord (λ (co mm) ...) (-> (app none) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> and <-) (app equal? oc₀ oc₁) (app < sc₀ sc₁))\n (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app andmap (-> (λ (r) ...) <-) is) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app andmap (λ (c) ...) (-> is <-)) (menv '(() ())))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... blank? (move-coord (-> (λ (a) ...) <-)) move-horizon ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-mark co this-mark (-> bo <-)) (menv '(() ())))\""
  45
  ((2 2 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(let (_) (-> (app display \"Cat's game.\\n\") <-)) (menv '(())))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ (bo)\n    (-> (app move-coord (app some-v (app maximin bo ma (app mark⁻¹ ma)))) <-))\n (menv '(() ())))\""
  605
  ((70 71 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... maximin (human-action (-> (λ (bo) ...) <-)) make-ai-action ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> marked-with? <-) b (app coord rc (app i⁻¹ rc)) m)\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app some (-> mo₁ <-)) (menv '(())))\""
  5
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> O <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app maximin bo (-> that-mark <-) this-mark) (menv '(() ())))\""
  18
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> move <-) co (match (app wins? bo this-mark) ...))\n (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app foldl (λ (c x) ...) (-> x <-) is) (menv '(() ())))\""
  605
  ((66 67 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app equal? oc₁ (-> (app lose) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   (#t)\n   ((#f) (-> mo₀ <-)))\n (menv '(())))\""
  605
  ((73 74 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app move-horizon (-> mo₁ <-)) (menv '(())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> this-play <-) (player mark action)) (menv '(())))\""
  24
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   (app blank? (app board-lookup co bo))\n   ((#t) (-> (let (bo) ...) <-))\n   (#f))\n (menv '(() ())))\""
  605
  ((69 71 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... oc< (horizon< (-> (λ (h₀ h₁) ...) <-)) horizon-add1 ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (bo this-play that-play) (-> (let (_) ...) <-)) (menv '(())))\""
  614
  ((73 75 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> quote <-) human-action) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (...\n           min-maybe-move\n           (max-maybe-move (-> (λ (mmo mo₁) ...) <-))\n           minimax\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (...\n           two-player-game\n           (one-player-game (-> (λ () ...) <-))\n           zero-player-game\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> cons <-) (app Ze) (app cons (app On) (app cons (app Tw) (app nil))))\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app i⁻¹ (-> rc <-)) (menv '(() ())))\""
  39
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ (co mm) (-> (match (app blank? (app board-lookup co bo)) ...) <-))\n (menv '(() ())))\""
  605
  ((65 67 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   (app full? bo)\n   ((#f)\n    (->\n     (app\n      horizon-add1\n      (app move-horizon (app some-v (app minimax bo that-mark this-mark))))\n     <-))\n   _)\n (menv '(() ())))\""
  619
  ((69 71 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> ma <-) (X) (O)) (menv '(())))\""
  14
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (a) (-> (match a ...) <-)) (menv '(())))\""
  605
  ((62 63 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app move (-> co <-) (match (app wins? bo this-mark) ...))\n (menv '(() ())))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app play-turn bo (-> that-play <-) this-play) (menv '(())))\""
  23
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> fold/coord <-) (λ (co mm) ...) (app none)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(let (co) (-> (let (bo) ...) <-)) (menv '(())))\""
  611
  ((67 68 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app andmap (λ (r) ...) (-> is <-)) (menv '(() ())))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(let (... () (_ (-> (app draw-board! bo) <-)) () ...) ...)\n (menv '(())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app maximin bo (-> ma <-) (app mark⁻¹ ma)) (menv '(() ())))\""
  11
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app blank? (-> (app board-lookup co bo) <-)) (menv '(() ())))\""
  605
  ((62 64 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app not (-> (app equal? oc₁ (app lose)) <-)) (menv '(())))\""
  605
  ((67 69 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (i) (-> (match i ...) <-)) (menv '(())))\""
  52
  ((2 2 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app wins? bo mark) ((#f) (-> (match (app full? bo) ...) <-)) _)\n (menv '(())))\""
  623
  ((69 71 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (-> (app blank? (app board-lookup co bo)) <-) (#t) (#f))\n (menv '(() ())))\""
  605
  ((66 68 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   play-game\n   (app player (app X) human-action)\n   (-> (app player (app O) human-action) <-))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app bo (-> co <-)) (menv '(())))\""
  605
  ((61 62 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app cons (app Ze) (-> (app cons (app On) (app cons (app Tw) (app nil))) <-))\n (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app some (-> mo₁ <-)) (menv '(())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> horizon< <-) (app move-horizon mo₀) (app move-horizon mo₁))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> X <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> ormap <-) f rest-xs) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   (-> max-maybe-move <-)\n   mm\n   (app move co (match (app wins? bo this-mark) ...)))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (f acc l) (-> (match l ...) <-)) (menv '(())))\""
  605
  ((63 65 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app blank? (app board-lookup co bo)) ((#t) (-> co <-)) (#f))\n (menv '(() ())))\""
  605
  ((72 73 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app wins? bo (-> this-mark <-)) (menv '(() ())))\""
  19
  ((0 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app andmap (λ (r) ...) (-> is <-)) (menv '(())))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app and (-> (app equal? oc₀ oc₁) <-) (app < sc₀ sc₁))\n (menv '(())))\""
  605
  ((68 70 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app horizon (-> (app win) <-) 0) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(let (_) (-> (match this-play ...) <-)) (menv '(())))\""
  613
  ((70 72 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app marked-with? (-> b <-) (app coord rc rc) m) (menv '(() ())))\""
  16
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> move-horizon <-) (app some-v (app maximin bo that-mark this-mark)))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app < (-> sc₀ <-) sc₁) (menv '(())))\""
  605
  ((66 67 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> oc₀ <-) (win) (draw) (lose)) (menv '(())))\""
  605
  ((61 62 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-mark co (-> mark <-) bo) (menv '(())))\""
  37
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app full? (-> bo <-)) (menv '(() ())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (ma) (-> (match ma ...) <-)) (menv '(())))\""
  21
  ((1 1 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> #t <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   ((#t) (-> mo₀ <-))\n   (#f))\n (menv '(())))\""
  605
  ((67 68 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... move-coord (move-horizon (-> (λ (a) ...) <-)) is ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(let (... () (_ (-> (app draw-board! bo) <-)) () ...) ...)\n (menv '(())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app action (-> bo <-)) (menv '(() ())))\""
  11
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (bo) (-> (app void) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app oc< oc₀ (-> oc₁ <-)) (menv '(())))\""
  605
  ((64 65 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app ormap f (-> rest-xs <-)) (menv '(())))\""
  17
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> #f <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> i <-) (Ze) (On) (Tw)) (menv '(())))\""
  42
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app error (app quote human-action) (-> \"not implemented\" <-))\n (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   mmo\n   ((some mo₀)\n    (->\n     (app\n      some\n      (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...))\n     <-))\n   (none))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(lettypes Ze ... player (letrec (some-v ... zero-player-game) ...))\n (menv '()))\""
  620
  ((72 73 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app f (-> (app coord r c) <-) x) (menv '(() () ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (...\n           human-action\n           (make-ai-action (-> (λ (ma) ...) <-))\n           draw-board!\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> not <-) (app equal? oc₁ (app lose))) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   play-game\n   (-> (app player (app X) (app make-ai-action (app X))) <-)\n   (app player (app O) (app make-ai-action (app O))))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (h₀ h₁) (-> (match h₀ ...) <-)) (menv '(())))\""
  605
  ((63 65 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app move-coord (-> (app some-v (app maximin bo ma (app mark⁻¹ ma))) <-))\n (menv '(() ())))\""
  605
  ((72 73 1)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> #f <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (...\n           play-turn\n           (play-game (-> (λ (player-one player-two) ...) <-))\n           two-player-game\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> make-ai-action <-) (app O)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   (#t)\n   ((#f) (-> mo₁ <-)))\n (menv '(())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app equal? (-> co₀ <-) co) (menv '(() ())))\""
  605
  ((62 64 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app coord (-> r <-) c) (menv '(() () ())))\""
  39
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> error <-) \"invalid match for move-coord\") (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app foldl (-> (λ (r x) ...) <-) x is) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match oc₀ ((win) (-> (app #f) <-)) (draw) (lose)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match xs ((empty) (-> (app #f) <-)) (cons x rest-xs))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   (app full? bo)\n   ((#f) (-> (app play-turn bo that-play this-play) <-))\n   _)\n (menv '(())))\""
  615
  ((70 72 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (...\n           draw-board!\n           (play-turn (-> (λ (bo this-play that-play) ...) <-))\n           play-game\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> horizon <-) oc (app + sc 1)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> bo <-) co) (menv '(())))\""
  66
  ((3 3 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (co bo) (-> (app bo co) <-)) (menv '(())))\""
  605
  ((62 64 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (-> (app blank? (app board-lookup co bo)) <-) (#t) (#f))\n (menv '(() ())))\""
  605
  ((67 68 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... ormap (andmap (-> (λ (f xs) ...) <-)) wins? ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   (-> some <-)\n   (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...))\n (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> coord <-) r c) (menv '(() () ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ (bo this-mark that-mark)\n    (-> (app fold/coord (λ (co mm) ...) (app none)) <-))\n (menv '(())))\""
  605
  ((60 61 1)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> X <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app coord (-> r <-) c) (menv '(() () ())))\""
  31
  ((2 2 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match a ((blank) (-> (app #t) <-)) _) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app minimax bo (-> that-mark <-) this-mark) (menv '(() ())))\""
  31
  ((2 2 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(let (... () (bo (-> (app board-mark co this-mark bo) <-)) () ...) ...)\n (menv '(() ())))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> oc< <-) oc₀ oc₁) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> h₁ <-) (horizon oc₁ sc₁)) (menv '(())))\""
  605
  ((67 69 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> foldl <-) (λ (c x) ...) x is) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (c) (-> (app andmap (λ (r) ...) is) <-)) (menv '(() ())))\""
  605
  ((60 61 1)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> Ze <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (h) (-> (match h ...) <-)) (menv '(())))\""
  616
  ((63 65 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app make-ai-action (-> (app O) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   or\n   (app oc< oc₀ oc₁)\n   (-> (app and (app equal? oc₀ oc₁) (app < sc₀ sc₁)) <-))\n (menv '(())))\""
  605
  ((62 63 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app coord (-> r <-) c) (menv '(() () ())))\""
  31
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> player <-) (app O) (app make-ai-action (app O)))\n (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> wins? <-) bo mark) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> equal? <-) oc₁ (app win)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ (rc) (-> (app marked-with? b (app coord rc rc) m) <-))\n (menv '(() ())))\""
  605
  ((62 64 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   ((#t) (-> mo₁ <-))\n   (#f))\n (menv '(())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-mark co mark (-> bo <-)) (menv '(())))\""
  11
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> blank? <-) (app board-lookup co bo)) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app marked-with? b (-> (app coord r c) <-) m) (menv '(() () ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app coord r (-> c <-)) (menv '(() () ())))\""
  31
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> (app full? bo) <-) (#f) _) (menv '(())))\""
  608
  ((67 68 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (mmo mo₁) (-> (match mmo ...) <-)) (menv '(())))\""
  605
  ((66 68 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app move (-> co <-) (match (app wins? bo this-mark) ...))\n (menv '(() ())))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   some\n   (->\n    (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...)\n    <-))\n (menv '(())))\""
  605
  ((66 67 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   (-> play-game <-)\n   (app player (app X) human-action)\n   (app player (app O) human-action))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app equal? co₀ co) (#t) ((#f) (-> (app board-lookup co bo) <-)))\n (menv '(() ())))\""
  605
  ((61 62 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app + (-> sc <-) 1) (menv '(())))\""
  614
  ((65 67 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match a ((marked _) (-> (app #t) <-)) _) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (c x) (-> (app f (app coord r c) x) <-)) (menv '(() () ())))\""
  605
  ((64 66 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> a <-) (some x) _) (menv '(())))\""
  605
  ((64 65 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (...\n           move-horizon\n           (is\n            (->\n             (app\n              cons\n              (app Ze)\n              (app cons (app On) (app cons (app Tw) (app nil))))\n             <-))\n           mark⁻¹\n           ...)\n    ...)\n (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app cons (app Tw) (-> (app nil) <-)) (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app draw-board! (-> bo <-)) (menv '(())))\""
  11
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app andmap (-> (λ (r) ...) <-) is) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match ma ((X) (-> (app O) <-)) (O)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app equal? oc₁ (-> (app win) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> blank? <-) (app board-lookup co bo)) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app marked-with? b (app coord rc rc) (-> m <-)) (menv '(() ())))\""
  78
  ((4 4 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   mmo\n   ((some mo₀)\n    (->\n     (app\n      some\n      (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...))\n     <-))\n   (none))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> board-mark <-) co this-mark bo) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> player <-) (app X) human-action) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app marked (-> ma <-)) (menv '(() ())))\""
  78
  ((3 3 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app blank? (-> (app board-lookup co bo) <-)) (menv '(() ())))\""
  605
  ((65 67 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... () (some-v (-> (λ (a) ...) <-)) marked? ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app equal? (-> oc₀ <-) oc₁) (menv '(())))\""
  605
  ((62 64 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> horizon< <-) (app move-horizon mo₀) (app move-horizon mo₁))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app andmap (λ (rc) ...) (-> is <-)) (menv '(())))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> coord <-) r c) (menv '(() () ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app marked-with? b (app coord r c) (-> m <-)) (menv '(() () ())))\""
  78
  ((3 3 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match mmo (some mo₀) ((none) (-> (app some mo₁) <-)))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app foldl (λ (c x) ...) x (-> is <-)) (menv '(() ())))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app blank? (app board-lookup co bo)) (#t) ((#f) (-> (app loop) <-)))\n (menv '(() ())))\""
  605
  ((61 63 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> some-v <-) (app maximin bo that-mark this-mark))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> maximin <-) bo that-mark this-mark) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   horizon-add1\n   (->\n    (app move-horizon (app some-v (app maximin bo that-mark this-mark)))\n    <-))\n (menv '(() ())))\""
  607
  ((64 65 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> equal? <-) oc₀ oc₁) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> draw <-)) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (...\n           minimax\n           (maximin (-> (λ (bo this-mark that-mark) ...) <-))\n           human-action\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app andmap (λ (c) ...) (-> is <-)) (menv '(() ())))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app player (-> (app X) <-) human-action) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> coord <-) rc (app i⁻¹ rc)) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app horizon oc (-> (app + sc 1) <-)) (menv '(())))\""
  617
  ((62 64 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ (bo this-mark that-mark)\n    (-> (app fold/coord (λ (co mm) ...) (app none)) <-))\n (menv '(())))\""
  605
  ((65 67 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app andmap (-> (λ (c) ...) <-) is) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> error <-) (app quote human-action) \"not implemented\")\n (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (oc₀ oc₁) (-> (match oc₀ ...) <-)) (menv '(())))\""
  605
  ((61 62 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   max-maybe-move\n   mm\n   (-> (app move co (match (app wins? bo this-mark) ...)) <-))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app marked-with? b (app coord r c) (-> m <-)) (menv '(() () ())))\""
  78
  ((3 3 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app andmap (-> (λ (rc) ...) <-) is) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> andmap <-) (λ (r) ...) is) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match a (some x) (_ (-> (app error \"invalid match for some-v\") <-)))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app f (-> x <-)) (menv '(())))\""
  24
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> a <-) (move x _) _) (menv '(())))\""
  605
  ((71 72 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app fold/coord (-> (λ (co mm) ...) <-) (app none)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (a) (-> (match a ...) <-)) (menv '(())))\""
  605
  ((72 74 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (co₀ ma bo) (-> (λ (co) ...) <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app wins? bo this-mark) ((#f) (-> (match (app full? bo) ...) <-)) _)\n (menv '(() ())))\""
  625
  ((70 72 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-mark co (-> this-mark <-) bo) (menv '(() ())))\""
  19
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match i (Ze) (On) ((Tw) (-> (app Ze) <-))) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> Tw <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> make-ai-action <-) (app X)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app fold/coord (-> (λ (co mm) ...) <-) (app none)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app marked-with? (-> b <-) (app coord r c) m) (menv '(() () ())))\""
  16
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> b <-) co) (menv '(())))\""
  25
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app move-horizon (-> (app some-v (app maximin bo that-mark this-mark)) <-))\n (menv '(() ())))\""
  605
  ((79 80 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app make-ai-action (-> (app X) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app ormap (-> f <-) rest-xs) (menv '(())))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app player (app X) (-> human-action <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ (c) (-> (app marked? (app b (app coord r c))) <-))\n (menv '(() () ())))\""
  605
  ((64 65 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app coord (-> r <-) c) (menv '(() () ())))\""
  39
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> h <-) (horizon oc sc)) (menv '(())))\""
  613
  ((63 65 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ () (-> (let (co) ...) <-)) (menv '(() ())))\""
  605
  ((69 70 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app andmap (-> f <-) rest-xs) (menv '(())))\""
  15
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... one-player-game (zero-player-game (-> (λ () ...) <-)) () ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app error (-> \"invalid match for move-horizon\" <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-lookup (-> co <-) bo) (menv '(() ())))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-mark (-> co <-) this-mark bo) (menv '(() ())))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> ormap <-) (λ (r) ...) is) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app display (-> \"Cat's game.\\n\" <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app wins? bo (-> this-mark <-)) (menv '(() ())))\""
  32
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> move-horizon <-) mo₁) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app coord r (-> c <-)) (menv '(() () ())))\""
  39
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app player (-> (app O) <-) (app make-ai-action (app O)))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app move-horizon (-> mo₀ <-)) (menv '(())))\""
  605
  ((67 68 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> mmo <-) (some mo₀) (none)) (menv '(())))\""
  605
  ((61 62 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> h₀ <-) (horizon oc₀ sc₀)) (menv '(())))\""
  605
  ((63 64 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app error (-> (app quote human-action) <-) \"not implemented\")\n (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   play-game\n   (-> (app player (app X) human-action) <-)\n   (app player (app O) (app make-ai-action (app O))))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app andmap f (-> rest-xs <-)) (menv '(())))\""
  25
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> f <-) (app coord r c) x) (menv '(() () ())))\""
  6
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (...\n           empty-board\n           (board-mark (-> (λ (co₀ ma bo) ...) <-))\n           board-lookup\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app wins? bo this-mark) ((#f) (-> (match (app full? bo) ...) <-)) _)\n (menv '(() ())))\""
  625
  ((64 66 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> (app full? bo) <-) (#f) _) (menv '(() ())))\""
  608
  ((66 68 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match a (marked _) (_ (-> (app #f) <-))) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   play-game\n   (-> (app player (app X) human-action) <-)\n   (app player (app O) human-action))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   some\n   (->\n    (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...)\n    <-))\n (menv '(())))\""
  605
  ((64 66 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(let (_) (-> (app void) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   play-game\n   (app player (app X) human-action)\n   (-> (app player (app O) (app make-ai-action (app O))) <-))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app wins? (-> bo <-) mark) (menv '(())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> (app wins? bo this-mark) <-) (#f) _) (menv '(() ())))\""
  605
  ((62 63 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (mmo mo₁) (-> (match mmo ...) <-)) (menv '(())))\""
  605
  ((67 68 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> win <-)) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app wins? bo this-mark) (#f) (_ (-> (app horizon (app lose) 0) <-)))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app and (-> (app f x) <-) (app andmap f rest-xs)) (menv '(())))\""
  605
  ((66 67 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... i⁻¹ (ormap (-> (λ (f xs) ...) <-)) andmap ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> foldl <-) (λ (r x) ...) x is) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   max-maybe-move\n   (-> mm <-)\n   (app move co (match (app wins? bo this-mark) ...)))\n (menv '(() ())))\""
  605
  ((60 62 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   or\n   (app ormap (λ (r) ...) is)\n   (-> (app ormap (λ (c) ...) is) <-)\n   (app andmap (λ (rc) ...) is)\n   (app andmap (λ (rc) ...) is))\n (menv '(())))\""
  605
  ((60 61 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(let (bo)\n    (->\n     (app min-maybe-move mm (app move co (match (app wins? bo this-mark) ...)))\n     <-))\n (menv '(() ())))\""
  605
  ((63 64 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (a) (-> (match a ...) <-)) (menv '(())))\""
  605
  ((61 63 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... make-ai-action (draw-board! (-> (λ (bo) ...) <-)) play-turn ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app equal? (-> m <-) m*) (menv '(())))\""
  87
  ((4 4 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   (-> (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) <-)\n   (#t)\n   (#f))\n (menv '(())))\""
  605
  ((69 71 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> ormap <-) (λ (c) ...) is) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app equal? co₀ co) ((#t) (-> (app marked ma) <-)) (#f))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> or <-) (app f x) (app ormap f rest-xs)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-mark (-> co <-) this-mark bo) (menv '(() ())))\""
  7
  ((0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2)))))\""
  24
  ((0 0 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(λ (n1) (-> (app try (λ (n2) ...)) <-))\n (menv '((□? (n1)) (□? (p)))))\""
  108
  ((6 6 0)))
'(sat-small
  1
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '((□? (p)))))\""
  2
  ((0 0 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(λ (x1 x2) (-> (app or x1 (app not x2)) <-))\n (menv '((□? (x1 x2)))))\""
  71
  ((4 4 0)))
'(sat-small
  1
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '((□? (n1)) (□? (p)))))\""
  3
  ((0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(letrec (... try (sat-solve-2 (-> (λ (p) ...) <-)) () ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> or <-) x1 (app not x2)) (menv '((□? (x1 x2)))))\""
  2
  ((0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> sat-solve-2 <-) phi) (menv '()))\""
  2
  ((0 0 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(letrec (phi ... sat-solve-2) (-> (app sat-solve-2 phi) <-))\n (menv '()))\""
  119
  ((6 7 0)))
'(sat-small
  1
  "\"(list 'eval '(app p (-> n1 <-) n2) (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  17
  ((0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2)))))\""
  2
  ((0 0 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(λ (n2) (-> (app p n1 n2) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  91
  ((4 4 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '((□? (p)))))\""
  3
  ((0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app f (app #t)) (app f (app #f)))\n (menv '((□? (f)))))\""
  2
  ((0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f)))))\""
  2
  ((0 0 0)))
'(sat-small
  1
  "\"(list 'eval '((top) letrec (phi ... sat-solve-2) ...) (menv '()))\""
  120
  ((6 6 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> p <-) n1 n2) (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  11
  ((0 0 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(letrec (... () (phi (-> (λ (x1 x2) ...) <-)) try ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(app or (app f (app #t)) (-> (app f (app #f)) <-))\n (menv '((□? (f)))))\""
  113
  ((6 6 0)))
'(sat-small
  1
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '((□? (p)))))\""
  120
  ((6 6 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f)))))\""
  2
  ((0 0 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(letrec (... phi (try (-> (λ (f) ...) <-)) sat-solve-2 ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app p n1 (-> n2 <-)) (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  15
  ((0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app or (-> x1 <-) (app not x2)) (menv '((□? (x1 x2)))))\""
  26
  ((0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '((□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(app or (-> (app f (app #t)) <-) (app f (app #f)))\n (menv '((□? (f)))))\""
  113
  ((7 7 0)))
'(sat-small
  1
  "\"(list 'eval '(app sat-solve-2 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '((□? (f)))))\""
  11
  ((0 0 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '((□? (f)))))\""
  124
  ((10 10 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '((□? (f)))))\""
  11
  ((0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app or x1 (-> (app not x2) <-)) (menv '((□? (x1 x2)))))\""
  30
  ((1 1 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app or x1 (app not x2) (-> (app not x3) <-))\n (menv '((□? (x1 x2 x3 x4)))))\""
  34
  ((1 1 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app (-> or <-) x1 (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app not (-> x3 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  28
  ((1 1 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(letrec (... phi (try (-> (λ (f) ...) <-)) sat-solve-4 ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4)))))\""
  218
  ((41 41 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(λ (n2) (-> (app try (λ (n3) ...)) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  827
  ((205 209 4)))
'(sat-1
  1
  "\"(list 'eval '(app or x4 (-> x2 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  30
  ((1 1 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app or (app f (app #t)) (-> (app f (app #f)) <-))\n (menv '((□? (f)))))\""
  846
  ((205 209 4)))
'(sat-1
  1
  "\"(list\n 'eval\n '(λ (x1 x2 x3 x4)\n    (->\n     (app\n      and\n      (app or x1 (app not x2) (app not x3))\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv '((□? (x1 x2 x3 x4)))))\""
  603
  ((149 152 4)))
'(sat-1
  1
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  30
  ((1 1 0)))
'(sat-1
  1
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '((□? (p)))))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4)))))\""
  85
  ((5 6 0)))
'(sat-1
  1
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1 1 "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(letrec (... () (phi (-> (λ (x1 x2 x3 x4) ...) <-)) try ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> not <-) x3) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(λ (n1) (-> (app try (λ (n2) ...)) <-))\n (menv '((□? (n1)) (□? (p)))))\""
  841
  ((215 219 4)))
'(sat-1
  1
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '((□? (p)))))\""
  853
  ((202 206 5)))
'(sat-1
  1
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '((□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app p n1 (-> n2 <-) n3 n4)\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  21
  ((1 1 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app p n1 n2 n3 (-> n4 <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  17
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> not <-) x3) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> sat-solve-4 <-) phi) (menv '()))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app f (app #t)) (app f (app #f)))\n (menv '((□? (f)))))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app or (-> (app not x2) <-) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  36
  ((2 2 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 (app not x2) (app not x3))\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv '((□? (x1 x2 x3 x4)))))\""
  71
  ((6 6 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(λ (n3) (-> (app try (λ (n4) ...)) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  807
  ((199 203 4)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app (-> p <-) n1 n2 n3 n4)\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  15
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '((□? (f)))))\""
  857
  ((215 220 6)))
'(sat-1
  1
  "\"(list\n 'eval\n '(letrec (phi ... sat-solve-4) (-> (app sat-solve-4 phi) <-))\n (menv '()))\""
  852
  ((205 209 4)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app or (-> x1 <-) (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  32
  ((1 1 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n3) ...))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(λ (n4) (-> (app p n1 n2 n3 n4) <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  752
  ((192 195 5)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n4) ...))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n3) ...) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-1 1 "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app or (-> (app f (app #t)) <-) (app f (app #f)))\n (menv '((□? (f)))))\""
  846
  ((206 210 4)))
'(sat-1
  1
  "\"(list 'eval '(app not (-> x3 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  28
  ((1 1 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app p n1 n2 (-> n3 <-) n4)\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  19
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(letrec (... try (sat-solve-4 (-> (λ (p) ...) <-)) () ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> or <-) x4 x2) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '((□? (p)))))\""
  3
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '((□? (n1)) (□? (p)))))\""
  3
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n4) ...) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '((□? (f)))))\""
  19
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  30
  ((1 1 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app or x1 (-> (app not x2) <-) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  36
  ((1 1 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app p (-> n1 <-) n2 n3 n4)\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  23
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app sat-solve-4 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '((□? (f)))))\""
  19
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '((top) letrec (phi ... sat-solve-4) ...) (menv '()))\""
  853
  ((203 208 5)))
'(sat-1
  1
  "\"(list 'eval '(app or (-> x4 <-) x2) (menv '((□? (x1 x2 x3 x4)))))\""
  26
  ((1 1 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app or (app not x2) (-> (app not x3) <-))\n (menv '((□? (x1 x2 x3 x4)))))\""
  34
  ((1 1 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (app (app (app (app (app p n1) n2) n3) n4) n5) (-> n6 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  22
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  222
  ((29 30 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (-> (app not x2) <-) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  78
  ((4 4 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (-> (app or (app not x4) x1) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  291
  ((57 58 1)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n4) ...) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(sat-2
  1
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '((□? (n1)) (□? (p)))))\""
  3
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> (app (app (app (app p n1) n2) n3) n4) <-) n5)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  33
  ((2 2 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> not <-) x4)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (n7)\n    (-> (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7) <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> (app p n1) <-) n2)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  24
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> not <-) x3)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> (app (app p n1) n2) <-) n3)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  27
  ((0 1 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n3) ...) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (app (app p n1) n2) (-> n3 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  28
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> not <-) x3)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '((□? (f)))))\""
  31
  ((1 1 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> (app (app (app p n1) n2) n3) <-) n4)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  30
  ((1 1 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app p (-> n1 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  32
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (-> x4 <-) x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  134
  ((9 9 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(letrec (phi ... sat-solve-7) (-> (app sat-solve-7 phi) <-))\n (menv '()))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (app f (app #t)) (-> (app f (app #f)) <-))\n (menv '((□? (f)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list 'eval '(λ (x1) (-> (λ (x2) ...) <-)) (menv '((□? (x1)))))\""
  2
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> p <-) n1)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  21
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) <-) n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  39
  ((2 2 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app not (-> x3 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  93
  ((4 5 0)))
'(sat-2
  1
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '((□? (p)))))\""
  3
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (n6) (-> (app try (λ (n7) ...)) <-))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> (app (app (app (app (app p n1) n2) n3) n4) n5) <-) n6)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  36
  ((1 1 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (x6) (-> (λ (x7) ...) <-))\n (menv '((□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  7
  ((0 0 0)))
'(sat-2
  1
  "\"(list 'eval '(app sat-solve-7 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (n2) (-> (app try (λ (n3) ...)) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '((□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-2
  1
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '((□? (p)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app not (-> x4 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  134
  ((9 9 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (n3) (-> (app try (λ (n4) ...)) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app not (-> x2 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  68
  ((2 2 0)))
'(sat-2
  1
  "\"(list 'eval '(app (-> sat-solve-7 <-) phi) (menv '()))\""
  2
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  257
  ((43 44 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (-> (app not x4) <-) x1)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  168
  ((15 15 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n7) ...))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  9
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n6) ...) <-))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  7
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '((□? (f)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or x1 (app not x2) (-> (app not x3) <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  111
  ((7 7 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (x7)\n    (->\n     (app\n      and\n      (app or x1 x2)\n      (app or x1 (app not x2) (app not x3))\n      (app or x3 x4)\n      (app or (app not x4) x1)\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (n5) (-> (app try (λ (n6) ...)) <-))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n5) ...) <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (app (app (app p n1) n2) n3) (-> n4 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  26
  ((0 0 0)))
'(sat-2
  1
  "\"(list 'eval '((top) letrec (phi ... sat-solve-7) ...) (menv '()))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app f (app #t)) (app f (app #f)))\n (menv '((□? (f)))))\""
  2
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (x3) (-> (λ (x4) ...) <-))\n (menv '((□? (x3)) (□? (x2)) (□? (x1)))))\""
  4
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> or <-) x3 x4)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (n1) (-> (app try (λ (n2) ...)) <-))\n (menv '((□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (app not x4) (-> x1 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  53
  ((1 1 0)))
'(sat-2
  1
  "\"(list 'eval '(λ (x2) (-> (λ (x3) ...) <-)) (menv '((□? (x2)) (□? (x1)))))\""
  3
  ((0 0 0)))
'(sat-2
  1
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '((□? (p)))))\""
  2
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n6) ...))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n7) ...) <-))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (x5) (-> (λ (x6) ...) <-))\n (menv '((□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  6
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> not <-) x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n3) ...))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(letrec (... try (sat-solve-7 (-> (λ (p) ...) <-)) () ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (-> (app f (app #t)) <-) (app f (app #f)))\n (menv '((□? (f)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (n4) (-> (app try (λ (n5) ...)) <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '((□? (f)))))\""
  31
  ((1 1 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (app not x2) (-> (app not x3) <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  111
  ((7 7 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or x1 (-> x2 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  68
  ((2 2 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(letrec (... () (phi (-> (λ (x1) ...) <-)) try ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or x3 (-> x4 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  134
  ((8 8 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or x3 x4) <-)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  255
  ((48 49 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> not <-) x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (app p n1) (-> n2 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  30
  ((0 0 0)))
'(sat-2 1 "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 x2) <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  153
  ((14 15 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app not x2) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) (-> n7 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  20
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (x4) (-> (λ (x5) ...) <-))\n (menv '((□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  5
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> or <-) x1 (app not x2) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (-> x1 <-) x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  53
  ((1 1 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n4) ...))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> or <-) x1 x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (-> x1 <-) (app not x2) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  53
  ((1 1 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or x4 (-> x2 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  68
  ((2 2 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app not (-> x2 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  68
  ((3 3 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (-> x3 <-) x4)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  93
  ((4 4 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (app (app (app (app p n1) n2) n3) n4) (-> n5 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  24
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n5) ...))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  7
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(letrec (... phi (try (-> (λ (f) ...) <-)) sat-solve-7 ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> or <-) x4 x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2 1 "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  451
  ((128 131 2)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or x1 (-> (app not x2) <-) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  78
  ((3 3 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app not (-> x3 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  93
  ((4 4 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app not x4) x1)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (-> (app or (app not x4) x1) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  104
  ((11 11 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> display <-) (app sat-solve-7 phi)) (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> newline <-)) (menv '((□? (s)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (n6) (-> (app try (λ (n7) ...)) <-))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or x1 (-> (app not x2) <-) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  45
  ((1 1 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(letrec (... phi (try (-> (λ (f) ...) <-)) sat-solve-7 ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n4) ...))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (x1 x2 x3 x4 x5 x6 x7)\n    (->\n     (app\n      and\n      (app or x1 x2)\n      (app or x1 (app not x2) (app not x3))\n      (app or x3 x4)\n      (app or (app not x4) x1)\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  874
  ((490 499 7)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n3) ...))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or (-> (app not x2) <-) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  45
  ((1 1 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (n5) (-> (app try (λ (n6) ...)) <-))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list\n 'eval\n '(app p n1 n2 (-> n3 <-) n4 n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  28
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(let (_) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '((□? (f)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n7) ...))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  9
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  299
  ((53 54 0)))
'(sat-3
  1
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  39
  ((1 1 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app p (-> n1 <-) n2 n3 n4 n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  32
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '((□? (f)))))\""
  31
  ((1 1 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or (app f (app #t)) (-> (app f (app #f)) <-))\n (menv '((□? (f)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 n5 (-> n6 <-) n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  22
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app not (-> x3 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  37
  ((1 1 0)))
'(sat-3
  1
  "\"(list 'eval '(app not (-> x4 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  35
  ((1 1 0)))
'(sat-3
  1
  "\"(list 'eval '(λ (f) (-> (let (_) ...) <-)) (menv '((□? (f)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list 'eval '(app or (-> x1 <-) x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((1 1 0)))
'(sat-3
  1
  "\"(list 'eval '(app sat-solve-7 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '((top) letrec (println ... sat-solve-7) ...) (menv '()))\""
  4
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(let (_) (-> (app newline) <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '((□? (p)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app f (app #t)) (app f (app #f)))\n (menv '((□? (f)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n5) ...) <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 n5 n6 (-> n7 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  20
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app or x4 (-> x2 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  39
  ((1 1 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> display <-) s) (menv '((□? (s)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n3) ...) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app or (-> x4 <-) x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  35
  ((1 1 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or x1 (app not x2) (-> (app not x3) <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  43
  ((2 2 0)))
'(sat-3
  1
  "\"(list 'eval '(app println (-> \"trying\" <-)) (menv '((□? (f)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '((□? (p)))))\""
  3
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 x2) <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  112
  ((8 8 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (n3) (-> (app try (λ (n4) ...)) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  98
  ((8 8 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  112
  ((8 8 0)))
'(sat-3 1 "\"(list 'eval '(app (-> newline <-)) (menv '()))\"" 1 ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or (-> x1 <-) (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((1 1 0)))
'(sat-3
  1
  "\"(list 'eval '(app not (-> x3 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  37
  ((1 1 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(letrec (... try (sat-solve-7 (-> (λ (p) ...) <-)) () ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or (app not x2) (-> (app not x3) <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  43
  ((1 1 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(let (... () (_ (-> (app display (app sat-solve-7 phi)) <-)) () ...) ...)\n (menv '()))\""
  0
  (#f))
'(sat-3
  1
  "\"(list 'eval '(app (-> not <-) x3) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app display (-> s <-)) (menv '((□? (s)))))\""
  7
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n6) ...))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  8
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app or (-> x3 <-) x4) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  37
  ((1 1 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n6) ...) <-))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  7
  ((0 0 0)))
'(sat-3 1 "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app display (-> (app sat-solve-7 phi) <-)) (menv '()))\""
  0
  (#f))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (n4) (-> (app try (λ (n5) ...)) <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list 'eval '(app (-> or <-) x4 x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> or <-) x3 x4) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(let (... () (_ (-> (app println \"trying\") <-)) () ...) ...)\n (menv '((□? (f)))))\""
  7
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n7) ...) <-))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  8
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or (-> (app not x4) <-) x1)\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((1 1 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> not <-) x3) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or x3 x4) <-)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  96
  ((8 9 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(letrec (println ... sat-solve-7) (-> (let (_) ...) <-))\n (menv '()))\""
  3
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app p n1 (-> n2 <-) n3 n4 n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  30
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (n7) (-> (app p n1 n2 n3 n4 n5 n6 n7) <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list 'eval '(app (-> sat-solve-7 <-) phi) (menv '()))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(let (... () (_ (-> (app display s) <-)) () ...) ...)\n (menv '((□? (s)))))\""
  11
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> or <-) x1 (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(letrec (... () (println (-> (λ (s) ...) <-)) phi ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app not x4) x1)\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3 1 "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> not <-) x4) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '((□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(λ (s) (-> (let (_) ...) <-)) (menv '((□? (s)))))\""
  4
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 (-> n5 <-) n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  24
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  39
  ((1 1 0)))
'(sat-3
  1
  "\"(list 'eval '(let (_) (-> (app newline) <-)) (menv '((□? (s)))))\""
  3
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> p <-) n1 n2 n3 n4 n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  21
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> println <-) \"trying\") (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app or x1 (-> x2 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  39
  ((1 1 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (n1) (-> (app try (λ (n2) ...)) <-))\n (menv '((□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n5) ...))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  7
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '((□? (n1)) (□? (p)))))\""
  3
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or (app not x4) (-> x1 <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((1 1 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> or <-) x1 x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n4) ...) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app p n1 n2 n3 (-> n4 <-) n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  26
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (n2) (-> (app try (λ (n3) ...)) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '((□? (p)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '((□? (f)))))\""
  31
  ((1 1 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or (-> (app f (app #t)) <-) (app f (app #f)))\n (menv '((□? (f)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list 'eval '(app or x3 (-> x4 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  35
  ((1 1 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(letrec (... println (phi (-> (λ (x1 x2 x3 x4 x5 x6 x7) ...) <-)) try ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> O <-)) (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match\n   mmo\n   ((some mo₀)\n    (->\n     (app\n      some\n      (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...))\n     <-))\n   (none))\n (menv '((□? (mmo mo₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> horizon <-) oc (app + sc 1)) (menv '((□? (h)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app player (-> (app O) <-) (app make-ai-action (app O)))\n (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe 1 "\"(list 'eval '(app (-> On <-)) (menv '()))\"" 1 ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> f <-) x) (menv '((□? (f xs)))))\""
  43
  ((3 3 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (app wins? bo this-mark) (#f) (_ (-> (app horizon (app win) 0) <-)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> horizon <-) (app draw) 0)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app player (-> (app X) <-) human-action) (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> marked-with? <-) b (app coord rc rc) m)\n (menv '((□? (rc)) (□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app f (-> x <-)) (menv '((□? (f xs)))))\""
  66
  ((4 5 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app i⁻¹ (-> rc <-)) (menv '((□? (rc)) (□? (b m)))))\""
  72
  ((4 4 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app equal? (-> oc₀ <-) oc₁) (menv '((□? (h₀ h₁)))))\""
  1916
  ((469 478 13)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   (-> min-maybe-move <-)\n   mm\n   (app move co (match (app wins? bo this-mark) ...)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app player (-> (app X) <-) (app make-ai-action (app X)))\n (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (app blank? (app board-lookup co bo)) (#t) ((#f) (-> mm <-)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1918
  ((473 483 14)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app marked-with? b (-> (app coord rc rc) <-) m)\n (menv '((□? (rc)) (□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app horizon (-> oc <-) (app + sc 1)) (menv '((□? (h)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> make-ai-action <-) (app O)) (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> none <-)) (menv '((□? (bo this-mark that-mark)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app andmap (λ (rc) ...) (-> is <-)) (menv '((□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (a) (-> (match a ...) <-)) (menv '((□? (a)))))\""
  1922
  ((459 469 13)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(let (co) (-> (let (bo) ...) <-))\n (menv '((□? (bo this-play that-play)))))\""
  1943
  ((446 455 13)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match mmo (some mo₀) ((none) (-> (app some mo₁) <-)))\n (menv '((□? (mmo mo₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   (-> play-game <-)\n   (app player (app X) human-action)\n   (app player (app O) (app make-ai-action (app O))))\n (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> move-horizon <-) (app some-v (app minimax bo that-mark this-mark)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (b co m)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app f x) (app ormap f rest-xs))\n (menv '((□? (f xs)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (a) (-> (match a ...) <-)) (menv '((□? (a)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (app equal? co₀ co) (#t) ((#f) (-> (app board-lookup co bo) <-)))\n (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  1923
  ((461 471 11)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> loop <-)) (menv '((□? (bo this-play that-play)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> win <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app cons (-> (app On) <-) (app cons (app Tw) (app nil)))\n (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (bo) (-> (app error (app quote human-action) \"not implemented\") <-))\n (menv '((□? (bo)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (app blank? (app board-lookup co bo)) ((#t) (-> co <-)) (#f))\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  1918
  ((480 490 14)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> foldl <-) f (app f x acc) xs) (menv '((□? (f acc l)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (f x) (-> (app foldl (λ (r x) ...) x is) <-))\n (menv '((□? (f x)))))\""
  1917
  ((462 472 10)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   (-> some <-)\n   (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...))\n (menv '((□? (mmo mo₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> andmap <-) f rest-xs) (menv '((□? (f xs)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> error <-) \"invalid match for move-horizon\")\n (menv '((□? (a)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app foldl (-> (λ (r x) ...) <-) x is) (menv '((□? (f x)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app horizon< (app move-horizon mo₀) (-> (app move-horizon mo₁) <-))\n (menv '((□? (mmo mo₁)))))\""
  1915
  ((482 492 13)))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (f xs) (-> (match xs ...) <-)) (menv '((□? (f xs)))))\""
  1929
  ((464 474 13)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match (-> mmo <-) (some mo₀) (none)) (menv '((□? (mmo mo₁)))))\""
  1915
  ((458 467 13)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app cons (-> (app Tw) <-) (app nil)) (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> coord <-) rc rc) (menv '((□? (rc)) (□? (b m)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> draw-board! <-) bo)\n (menv '((□? (bo this-play that-play)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> O <-)) (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (...\n           max-maybe-move\n           (minimax (-> (λ (bo this-mark that-mark) ...) <-))\n           maximin\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app fold/coord (-> (λ (co mm) ...) <-) (app none))\n (menv '((□? (bo this-mark that-mark)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   (-> or <-)\n   (app oc< oc₀ oc₁)\n   (app and (app equal? oc₀ oc₁) (app < sc₀ sc₁)))\n (menv '((□? (h₀ h₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match a ((move x _) (-> x <-)) _) (menv '((□? (a)))))\""
  1918
  ((483 493 14)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (player-one player-two)\n    (-> (app play-turn empty-board player-one player-two) <-))\n (menv '((□? (player-one player-two)))))\""
  1940
  ((461 471 13)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app cons (-> (app Ze) <-) (app cons (app On) (app cons (app Tw) (app nil))))\n (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> b <-) (app coord r c))\n (menv '((□? (c)) (□? (r)) (□? (b)))))\""
  35
  ((1 1 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   max-maybe-move\n   mm\n   (-> (app move co (match (app wins? bo this-mark) ...)) <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app equal? (-> co₀ <-) co) (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  1919
  ((483 493 14)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> andmap <-) (λ (c) ...) is) (menv '((□? (r)) (□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ ()\n    (->\n     (app\n      play-game\n      (app player (app X) (app make-ai-action (app X)))\n      (app player (app O) (app make-ai-action (app O))))\n     <-))\n (menv '((□? ()))))\""
  1936
  ((450 460 13)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app coord (-> r <-) c) (menv '((□? (c)) (□? (r)) (□? (b)))))\""
  75
  ((4 4 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app draw-board! (-> bo <-))\n (menv '((□? (bo this-play that-play)))))\""
  23
  ((1 1 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> equal? <-) co₀ co) (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app ormap (-> f <-) rest-xs) (menv '((□? (f xs)))))\""
  15
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (bo this-mark that-mark)\n    (-> (app fold/coord (λ (co mm) ...) (app none)) <-))\n (menv '((□? (bo this-mark that-mark)))))\""
  1918
  ((466 475 14)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   or\n   (app ormap (λ (r) ...) is)\n   (-> (app ormap (λ (c) ...) is) <-)\n   (app andmap (λ (rc) ...) is)\n   (app andmap (λ (rc) ...) is))\n (menv '((□? (b m)))))\""
  1919
  ((459 469 10)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app full? (-> bo <-)) (menv '((□? (bo this-play that-play)))))\""
  6
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app foldl (-> f <-) (app f x acc) xs) (menv '((□? (f acc l)))))\""
  16
  ((1 1 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app board-lookup co (-> bo <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  90
  ((5 5 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... mark⁻¹ (empty-board (-> (λ (co) ...) <-)) board-mark ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(let (_) (-> (app void) <-))\n (menv '((□? (bo this-play that-play)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app horizon (-> (app win) <-) 0)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> board-lookup <-) co bo)\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> move <-) co (match (app wins? bo this-mark) ...))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (c) (-> (app marked? (app b (app coord r c))) <-))\n (menv '((□? (c)) (□? (r)) (□? (b)))))\""
  1923
  ((435 444 9)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app andmap (-> (λ (rc) ...) <-) is) (menv '((□? (b m)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app board-lookup (-> co <-) bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  12
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> loop <-))\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   ((#t) (-> mo₁ <-))\n   (#f))\n (menv '((□? (mmo mo₁)))))\""
  9
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> some-v <-) (app minimax bo that-mark this-mark))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   min-maybe-move\n   mm\n   (-> (app move co (match (app wins? bo this-mark) ...)) <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... oc< (horizon< (-> (λ (h₀ h₁) ...) <-)) horizon-add1 ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (app wins? bo mark) (#f) (_ (-> (let (_) ...) <-)))\n (menv '((□? (bo this-play that-play)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app and (app f x) (-> (app andmap f rest-xs) <-))\n (menv '((□? (f xs)))))\""
  1919
  ((459 468 9)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app make-ai-action (-> (app O) <-)) (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match oc₀ ((win) (-> (app #f) <-)) (draw) (lose))\n (menv '((□? (oc₀ oc₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app foldl (λ (c x) ...) x (-> is <-))\n (menv '((□? (r x)) (□? (f x)))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app coord r (-> c <-)) (menv '((□? (r)) (□? (c)) (□? (b m)))))\""
  50
  ((2 2 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> action <-) bo)\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  66
  ((5 5 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   (-> or <-)\n   (app ormap (λ (r) ...) is)\n   (app ormap (λ (c) ...) is)\n   (app andmap (λ (rc) ...) is)\n   (app andmap (λ (rc) ...) is))\n (menv '((□? (b m)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (a) (-> (match a ...) <-)) (menv '((□? (a)))))\""
  1922
  ((474 484 13)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> wins? <-) bo mark)\n (menv '((□? (bo this-play that-play)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app marked-with? (-> b <-) (app coord rc rc) m)\n (menv '((□? (rc)) (□? (b m)))))\""
  31
  ((1 1 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match a ((some x) (-> x <-)) _) (menv '((□? (a)))))\""
  1935
  ((469 478 14)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app bo (-> co <-)) (menv '((□? (co bo)))))\""
  1959
  ((482 492 13)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> error <-) \"invalid match for move-coord\")\n (menv '((□? (a)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (-> (app full? bo) <-) (#f) _)\n (menv '((□? (bo this-play that-play)))))\""
  1927
  ((446 455 12)))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (mmo mo₁) (-> (match mmo ...) <-)) (menv '((□? (mmo mo₁)))))\""
  1920
  ((481 491 12)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> cons <-) (app On) (app cons (app Tw) (app nil)))\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (co₀ ma bo) (-> (λ (co) ...) <-)) (menv '((□? (co₀ ma bo)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app equal? oc₁ (-> (app lose) <-)) (menv '((□? (oc₀ oc₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> foldl <-) (λ (r x) ...) x is) (menv '((□? (f x)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (...\n           human-action\n           (make-ai-action (-> (λ (ma) ...) <-))\n           draw-board!\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (...\n           play-turn\n           (play-game (-> (λ (player-one player-two) ...) <-))\n           two-player-game\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> horizon< <-) (app move-horizon mo₀) (app move-horizon mo₁))\n (menv '((□? (mmo mo₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... () (some-v (-> (λ (a) ...) <-)) marked? ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (f xs) (-> (match xs ...) <-)) (menv '((□? (f xs)))))\""
  1922
  ((460 470 12)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match xs ((empty) (-> (app #f) <-)) (cons x rest-xs))\n (menv '((□? (f xs)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app + sc (-> 1 <-)) (menv '((□? (h)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '((top) lettypes (Ze ... player) ...) (menv '()))\""
  1942
  ((469 479 12)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (b m)\n    (->\n     (app\n      or\n      (app ormap (λ (r) ...) is)\n      (app ormap (λ (c) ...) is)\n      (app andmap (λ (rc) ...) is)\n      (app andmap (λ (rc) ...) is))\n     <-))\n (menv '((□? (b m)))))\""
  1935
  ((462 471 10)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match\n   oc₀\n   (win)\n   (draw)\n   ((lose) (-> (app not (app equal? oc₁ (app lose))) <-)))\n (menv '((□? (oc₀ oc₁)))))\""
  1923
  ((486 496 11)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> and <-) (app equal? oc₀ oc₁) (app < sc₀ sc₁))\n (menv '((□? (h₀ h₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (rc) (-> (app marked-with? b (app coord rc rc) m) <-))\n (menv '((□? (rc)) (□? (b m)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app board-mark (-> co <-) this-mark bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  12
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app wins? (-> bo <-) this-mark)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> full? <-) bo) (menv '((□? (bo this-play that-play)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app and (-> (app f x) <-) (app andmap f rest-xs))\n (menv '((□? (f xs)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app marked-with? b (app coord r c) (-> m <-))\n (menv '((□? (c)) (□? (r)) (□? (b m)))))\""
  161
  ((15 15 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app move-horizon (-> mo₀ <-)) (menv '((□? (mmo mo₁)))))\""
  1915
  ((457 467 11)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... horizon-add1 (foldl (-> (λ (f acc l) ...) <-)) fold/coord ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> horizon <-) (app win) 0)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app marked-with? (-> b <-) (app coord rc (app i⁻¹ rc)) m)\n (menv '((□? (rc)) (□? (b m)))))\""
  31
  ((1 1 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (-> (app equal? co₀ co) <-) (#t) (#f))\n (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app cons (app Ze) (-> (app cons (app On) (app cons (app Tw) (app nil))) <-))\n (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> some <-) mo₁) (menv '((□? (mmo mo₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> X <-)) (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> b <-) co) (menv '((□? (b co m)))))\""
  86
  ((9 9 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> lose <-)) (menv '((□? (oc₀ oc₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (...\n           board-mark\n           (board-lookup (-> (λ (co bo) ...) <-))\n           marked-with?\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app board-mark (-> co <-) this-mark bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  12
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> make-ai-action <-) (app O)) (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app < (-> sc₀ <-) sc₁) (menv '((□? (h₀ h₁)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (oc₀ oc₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> error <-) \"invalid match for some-v\") (menv '((□? (a)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (app full? bo) (#f) (_ (-> (app horizon (app draw) 0) <-)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app coord (-> r <-) c) (menv '((□? (r)) (□? (c)) (□? (b m)))))\""
  72
  ((6 6 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app andmap (-> (λ (r) ...) <-) is) (menv '((□? (c)) (□? (b m)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... () (loop (-> (λ () ...) <-)) () ...) ...)\n (menv '((□? (bo this-play that-play)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> coord <-) r c)\n (menv '((□? (c x)) (□? (r x)) (□? (f x)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app coord r (-> c <-)) (menv '((□? (c)) (□? (r)) (□? (b)))))\""
  72
  ((6 6 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(let (bo) (-> (match (app wins? bo mark) ...) <-))\n (menv '((□? (bo this-play that-play)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> Ze <-)) (menv '((□? (i)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app some-v (-> (app maximin bo ma (app mark⁻¹ ma)) <-))\n (menv '((□? (bo)) (□? (ma)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> player <-) (app O) (app make-ai-action (app O)))\n (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app board-mark co mark (-> bo <-))\n (menv '((□? (bo this-play that-play)))))\""
  23
  ((1 1 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match a (move x _) (_ (-> (app error \"invalid match for move-coord\") <-)))\n (menv '((□? (a)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match (-> h₀ <-) (horizon oc₀ sc₀)) (menv '((□? (h₀ h₁)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> X <-)) (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app andmap f (-> rest-xs <-)) (menv '((□? (f xs)))))\""
  52
  ((3 3 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app horizon (-> (app lose) <-) 0)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (loop) (-> (app loop) <-))\n (menv '((□? (bo this-play that-play)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> maximin <-) bo that-mark this-mark)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app marked-with? b (-> (app coord rc (app i⁻¹ rc)) <-) m)\n (menv '((□? (rc)) (□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app board-lookup (-> co <-) bo)\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  1915
  ((461 471 12)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> board-mark <-) co this-mark bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   or\n   (-> (app oc< oc₀ oc₁) <-)\n   (app and (app equal? oc₀ oc₁) (app < sc₀ sc₁)))\n (menv '((□? (h₀ h₁)))))\""
  1917
  ((450 460 12)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app draw-board! (-> bo <-))\n (menv '((□? (bo this-play that-play)))))\""
  6
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app full? (-> bo <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match\n   xs\n   (empty)\n   ((cons x rest-xs) (-> (app and (app f x) (app andmap f rest-xs)) <-)))\n (menv '((□? (f xs)))))\""
  1927
  ((480 490 14)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> f <-) x) (menv '((□? (f xs)))))\""
  19
  ((2 2 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(let (... () (bo (-> (app board-mark co this-mark bo) <-)) () ...) ...)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  6
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app move-horizon (-> mo₁ <-)) (menv '((□? (mmo mo₁)))))\""
  9
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app foldl (λ (c x) ...) (-> x <-) is)\n (menv '((□? (r x)) (□? (f x)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list 'eval '(match i (Ze) (On) ((Tw) (-> (app Ze) <-))) (menv '((□? (i)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app play-turn empty-board (-> player-one <-) player-two)\n (menv '((□? (player-one player-two)))))\""
  18
  ((1 1 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> board-lookup <-) co bo)\n (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (-> (app wins? bo this-mark) <-) (#f) _)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match h₀ ((horizon oc₀ sc₀) (-> (match h₁ ...) <-)))\n (menv '((□? (h₀ h₁)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... one-player-game (zero-player-game (-> (λ () ...) <-)) () ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app ormap (λ (r) ...) (-> is <-)) (menv '((□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> equal? <-) oc₁ (app lose)) (menv '((□? (oc₀ oc₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   or\n   (app ormap (λ (r) ...) is)\n   (app ormap (λ (c) ...) is)\n   (app andmap (λ (rc) ...) is)\n   (-> (app andmap (λ (rc) ...) is) <-))\n (menv '((□? (b m)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(let (bo)\n    (->\n     (app max-maybe-move mm (app move co (match (app wins? bo this-mark) ...)))\n     <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> X <-)) (menv '((□? (ma)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match a (move _ x) (_ (-> (app error \"invalid match for move-horizon\") <-)))\n (menv '((□? (a)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> On <-)) (menv '((□? (i)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... some-v (marked? (-> (λ (a) ...) <-)) blank? ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app player (app X) (-> human-action <-)) (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match\n   xs\n   (empty)\n   ((cons x rest-xs) (-> (app or (app f x) (app ormap f rest-xs)) <-)))\n (menv '((□? (f xs)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list 'eval '(app f (-> x <-)) (menv '((□? (f xs)))))\""
  38
  ((2 2 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match (-> a <-) (some x) _) (menv '((□? (a)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match\n   (app full? bo)\n   ((#f) (-> (app play-turn bo that-play this-play) <-))\n   _)\n (menv '((□? (bo this-play that-play)))))\""
  1937
  ((459 468 12)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match a ((marked _) (-> (app #t) <-)) _) (menv '((□? (a)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> move-horizon <-) mo₁) (menv '((□? (mmo mo₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app maximin bo (-> ma <-) (app mark⁻¹ ma))\n (menv '((□? (bo)) (□? (ma)))))\""
  21
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> marked-with? <-) b (app coord r c) m)\n (menv '((□? (r)) (□? (c)) (□? (b m)))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> board-lookup <-) co bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (r x) (-> (app foldl (λ (c x) ...) x is) <-))\n (menv '((□? (r x)) (□? (f x)))))\""
  1919
  ((463 472 14)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (...\n           empty-board\n           (board-mark (-> (λ (co₀ ma bo) ...) <-))\n           board-lookup\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> coord <-) rc (app i⁻¹ rc))\n (menv '((□? (rc)) (□? (b m)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (a)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (rc) (-> (app marked-with? b (app coord rc (app i⁻¹ rc)) m) <-))\n (menv '((□? (rc)) (□? (b m)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app move (-> co <-) (match (app wins? bo this-mark) ...))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  12
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app error (app quote human-action) (-> \"not implemented\" <-))\n (menv '((□? (bo)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app f x (-> acc <-)) (menv '((□? (f acc l)))))\""
  1916
  ((470 481 10)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> cons <-) (app Tw) (app nil)) (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... andmap (wins? (-> (λ (b m) ...) <-)) full? ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> O <-)) (menv '((□? (ma)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app coord rc (-> (app i⁻¹ rc) <-))\n (menv '((□? (rc)) (□? (b m)))))\""
  91
  ((5 5 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app move-horizon (-> mo₁ <-)) (menv '((□? (mmo mo₁)))))\""
  9
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app andmap (λ (r) ...) (-> is <-)) (menv '((□? (b)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app andmap (-> (λ (c) ...) <-) is) (menv '((□? (r)) (□? (b)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app coord r (-> c <-))\n (menv '((□? (c x)) (□? (r x)) (□? (f x)))))\""
  49
  ((2 2 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(let (... () (_ (-> (app draw-board! bo) <-)) () ...) ...)\n (menv '((□? (bo this-play that-play)))))\""
  6
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app maximin bo that-mark (-> this-mark <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  66
  ((4 4 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(let (_) (-> (app display \"Cat's game.\\n\") <-))\n (menv '((□? (bo this-play that-play)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (...\n           fold/coord\n           (min-maybe-move (-> (λ (mmo mo₁) ...) <-))\n           max-maybe-move\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app wins? bo (-> this-mark <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  68
  ((5 5 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app wins? (-> bo <-) this-mark)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match (-> i <-) (Ze) (On) (Tw)) (menv '((□? (i)))))\""
  78
  ((6 6 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> board-mark <-) co this-mark bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app horizon< (-> (app move-horizon mo₀) <-) (app move-horizon mo₁))\n (menv '((□? (mmo mo₁)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> move-coord <-) (app some-v (app maximin bo ma (app mark⁻¹ ma))))\n (menv '((□? (bo)) (□? (ma)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app maximin (-> bo <-) that-mark this-mark)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match a (blank) (_ (-> (app #f) <-))) (menv '((□? (a)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match i ((Ze) (-> (app Tw) <-)) (On) (Tw)) (menv '((□? (i)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (...\n           play-game\n           (two-player-game (-> (λ () ...) <-))\n           one-player-game\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app some (-> mo₁ <-)) (menv '((□? (mmo mo₁)))))\""
  9
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... ormap (andmap (-> (λ (f xs) ...) <-)) wins? ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f xs)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (app b co) (blank) ((marked m*) (-> (app equal? m m*) <-)))\n (menv '((□? (b co m)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app player (app X) (-> (app make-ai-action (app X)) <-))\n (menv '((□? ()))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app andmap (-> (λ (rc) ...) <-) is) (menv '((□? (b m)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> andmap <-) (λ (rc) ...) is) (menv '((□? (b m)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (b co m) (-> (match (app b co) ...) <-))\n (menv '((□? (b co m)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> player <-) (app X) human-action) (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... is (mark⁻¹ (-> (λ (ma) ...) <-)) empty-board ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> ormap <-) f rest-xs) (menv '((□? (f xs)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> fold/coord <-) (λ (co mm) ...) (app none))\n (menv '((□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app move co (-> (match (app wins? bo this-mark) ...) <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (co) (-> (app blank) <-)) (menv '((□? (co)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> full? <-) bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> horizon <-) (app lose) 0)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app cons (app On) (-> (app cons (app Tw) (app nil)) <-))\n (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... marked-with? (i⁻¹ (-> (λ (i) ...) <-)) ormap ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(let (... () (_ (-> (app draw-board! bo) <-)) () ...) ...)\n (menv '((□? (bo this-play that-play)))))\""
  6
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> marked <-) ma) (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   (-> max-maybe-move <-)\n   mm\n   (app move co (match (app wins? bo this-mark) ...)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app marked-with? b (app coord rc rc) (-> m <-))\n (menv '((□? (rc)) (□? (b m)))))\""
  157
  ((16 17 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app minimax bo (-> that-mark <-) this-mark)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  66
  ((5 5 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app some-v (-> (app maximin bo that-mark this-mark) <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app maximin bo (-> that-mark <-) this-mark)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  44
  ((3 3 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (r) (-> (app andmap (λ (c) ...) is) <-))\n (menv '((□? (r)) (□? (b)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app minimax (-> bo <-) that-mark this-mark)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   play-game\n   (app player (app X) human-action)\n   (-> (app player (app O) human-action) <-))\n (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> some-v <-) (app maximin bo that-mark this-mark))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> wins? <-) bo this-mark)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app play-turn (-> bo <-) that-play this-play)\n (menv '((□? (bo this-play that-play)))))\""
  6
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app coord (-> rc <-) (app i⁻¹ rc))\n (menv '((□? (rc)) (□? (b m)))))\""
  72
  ((5 5 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... full? (oc< (-> (λ (oc₀ oc₁) ...) <-)) horizon< ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match\n   h₁\n   ((horizon oc₁ sc₁)\n    (->\n     (app or (app oc< oc₀ oc₁) (app and (app equal? oc₀ oc₁) (app < sc₀ sc₁)))\n     <-)))\n (menv '((□? (h₀ h₁)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> play-turn <-) bo that-play this-play)\n (menv '((□? (bo this-play that-play)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> coord <-) r c) (menv '((□? (c)) (□? (r)) (□? (b)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (app wins? bo this-mark) ((#f) (-> (match (app full? bo) ...) <-)) _)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> andmap <-) (λ (c) ...) is) (menv '((□? (r)) (□? (b)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app not (-> (app equal? oc₁ (app lose)) <-))\n (menv '((□? (oc₀ oc₁)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> void <-)) (menv '((□? (bo)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> bo <-) co) (menv '((□? (co bo)))))\""
  168
  ((14 14 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match\n   (app full? bo)\n   ((#f)\n    (->\n     (app\n      horizon-add1\n      (app move-horizon (app some-v (app maximin bo that-mark this-mark))))\n     <-))\n   _)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app marked? (-> (app b (app coord r c)) <-))\n (menv '((□? (c)) (□? (r)) (□? (b)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   (#t)\n   ((#f) (-> mo₀ <-)))\n (menv '((□? (mmo mo₁)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match l (nil) ((cons x xs) (-> (app foldl f (app f x acc) xs) <-)))\n (menv '((□? (f acc l)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   play-game\n   (-> (app player (app X) human-action) <-)\n   (app player (app O) (app make-ai-action (app O))))\n (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app horizon< (-> (app move-horizon mo₀) <-) (app move-horizon mo₁))\n (menv '((□? (mmo mo₁)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list 'eval '(match a (marked _) (_ (-> (app #f) <-))) (menv '((□? (a)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> andmap <-) (λ (r) ...) is) (menv '((□? (c)) (□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> full? <-) bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   horizon-add1\n   (->\n    (app move-horizon (app some-v (app minimax bo that-mark this-mark)))\n    <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(let (_) (-> (match this-play ...) <-))\n (menv '((□? (bo this-play that-play)))))\""
  1949
  ((471 481 12)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> move-horizon <-) (app some-v (app maximin bo that-mark this-mark)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> f <-) (app coord r c) x)\n (menv '((□? (c x)) (□? (r x)) (□? (f x)))))\""
  17
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match (-> h <-) (horizon oc sc)) (menv '((□? (h)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list 'eval '(app andmap (λ (c) ...) (-> is <-)) (menv '((□? (r)) (□? (b m)))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app error (-> (app quote human-action) <-) \"not implemented\")\n (menv '((□? (bo)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (-> (app blank? (app board-lookup co bo)) <-) (#t) (#f))\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  0
  (#f))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app error (-> \"invalid match for move-horizon\" <-))\n (menv '((□? (a)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   (-> horizon-add1 <-)\n   (app move-horizon (app some-v (app minimax bo that-mark this-mark))))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> move <-) co (match (app wins? bo this-mark) ...))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (b) (-> (app andmap (λ (r) ...) is) <-)) (menv '((□? (b)))))\""
  1930
  ((457 466 12)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (app equal? co₀ co) ((#t) (-> (app marked ma) <-)) (#f))\n (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app equal? m (-> m* <-)) (menv '((□? (b co m)))))\""
  1919
  ((461 471 14)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> void <-)) (menv '((□? (bo this-play that-play)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app ormap (-> (λ (r) ...) <-) is) (menv '((□? (b m)))))\""
  2
  ((0 0 0)))
