'(sat-small
  0
  "\"(list 'eval '(app or (app f (app #t)) (-> (app f (app #f)) <-)) (menv '(())))\""
  44
  ((1 1 0) (1 1 0) (1 1 0)))
'(sat-small
  0
  "\"(list 'eval '(λ (n1) (-> (app try (λ (n2) ...)) <-)) (menv '(() ())))\""
  44
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-small
  0
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '(() ())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  0
  "\"(list\n 'eval\n '(letrec (try (sat-solve-2 (-> (λ (p) ...) <-)) ()) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app (-> #f <-)) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app not (-> x2 <-)) (menv '(())))\""
  16
  ((0 0 0) (2/3 2/3 1/3) (0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(letrec (() (phi (-> (λ (x1 x2) ...) <-)) try) ...) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app sat-solve-2 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  0
  "\"(list\n 'eval\n '(letrec (phi (try (-> (λ (f) ...) <-)) sat-solve-2) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '(())))\""
  6
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app (-> #t <-)) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  0
  "\"(list\n 'eval\n '(letrec phi ... sat-solve-2 (-> (app sat-solve-2 phi) <-))\n (menv '()))\""
  46
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-small
  0
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '(())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app (-> p <-) n1 n2) (menv '(() () ())))\""
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app (-> sat-solve-2 <-) phi) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  0
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '(())))\""
  44
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-small
  0
  "\"(list 'eval '(app p n1 (-> n2 <-)) (menv '(() () ())))\""
  10
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '(())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(λ (n2) (-> (app p n1 n2) <-)) (menv '(() () ())))\""
  32
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-small
  0
  "\"(list 'eval '(app (-> not <-) x2) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '(() ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app or (-> (app f (app #t)) <-) (app f (app #f))) (menv '(())))\""
  44
  ((1 1 0) (1 1 0) (2/3 2/3 0)))
'(sat-small
  0
  "\"(list 'eval '(app (-> or <-) (app f (app #t)) (app f (app #f))) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app or (-> x1 <-) (app not x2)) (menv '(())))\""
  16
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app p (-> n1 <-) n2) (menv '(() () ())))\""
  10
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app or x1 (-> (app not x2) <-)) (menv '(())))\""
  18
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '(())))\""
  6
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app (-> or <-) x1 (app not x2)) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  0
  "\"(list 'eval '((top) letrec phi ... sat-solve-2 ...) (menv '()))\""
  47
  ((1 1 0) (1 1 0) (1 1 0)))
'(sat-small
  0
  "\"(list 'eval '(λ (x1 x2) (-> (app or x1 (app not x2)) <-)) (menv '(())))\""
  26
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-small
  0
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '(())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '(())))\""
  45
  ((4/3 4/3 0) (4/3 4/3 0) (1 1 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> try <-) (λ (n3) ...)) (menv '(() () ())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 (app not x2) (app not x3))\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv '(())))\""
  22
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-1
  0
  "\"(list 'eval '(app try (-> (λ (n3) ...) <-)) (menv '(() () ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '(())))\""
  74
  ((4 4 0) (4 4 0) (3 3 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> or <-) x4 x2) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app not (-> x2 <-)) (menv '(())))\""
  16
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> or <-) (app not x2) (app not x3)) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app or x4 (-> x2 <-)) (menv '(())))\""
  16
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-1
  0
  "\"(list 'eval '(app p (-> n1 <-) n2 n3 n4) (menv '(() () () () ())))\""
  10
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app not (-> x2 <-)) (menv '(())))\""
  16
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-1
  0
  "\"(list 'eval '(app or (-> (app f (app #t)) <-) (app f (app #f))) (menv '(())))\""
  73
  ((4 13/3 0) (4 4 0) (11/3 11/3 0)))
'(sat-1
  0
  "\"(list 'eval '(app or x1 (-> (app not x2) <-) (app not x3)) (menv '(())))\""
  18
  ((2/3 2/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-1
  0
  "\"(list 'eval '(app p n1 n2 n3 (-> n4 <-)) (menv '(() () () () ())))\""
  10
  ((1/3 1/3 0) (0 0 0) (1/3 1/3 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> #t <-)) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> not <-) x2) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv '(())))\""
  28
  ((1 1 0) (1 1 0) (1 1 0)))
'(sat-1
  0
  "\"(list 'eval '(app not (-> x3 <-)) (menv '(())))\""
  16
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-1
  0
  "\"(list 'eval '(app or x1 (app not x2) (-> (app not x3) <-)) (menv '(())))\""
  18
  ((2/3 2/3 0) (2/3 2/3 0) (1/3 1/3 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> not <-) x2) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> #f <-)) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app or (-> (app not x2) <-) (app not x3)) (menv '(())))\""
  18
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-1
  0
  "\"(list 'eval '(app sat-solve-4 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app or (app f (app #t)) (-> (app f (app #f)) <-)) (menv '(())))\""
  73
  ((11/3 4 0) (13/3 13/3 1/3) (4 4 0)))
'(sat-1
  0
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '(())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> p <-) n1 n2 n3 n4) (menv '(() () () () ())))\""
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app p n1 n2 (-> n3 <-) n4) (menv '(() () () () ())))\""
  10
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(letrec (phi (try (-> (λ (f) ...) <-)) sat-solve-4) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '(())))\""
  73
  ((10/3 10/3 0) (11/3 11/3 0) (11/3 11/3 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '(())))\""
  10
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(λ (n2) (-> (app try (λ (n3) ...)) <-)) (menv '(() () ())))\""
  73
  ((3 3 0) (3 3 0) (10/3 10/3 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '(())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(λ (x1 x2 x3 x4)\n    (->\n     (app\n      and\n      (app or x1 (app not x2) (app not x3))\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv '(())))\""
  49
  ((7/3 7/3 0) (7/3 7/3 0) (7/3 7/3 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '(())))\""
  10
  ((1/3 1/3 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(λ (n1) (-> (app try (λ (n2) ...)) <-)) (menv '(() ())))\""
  73
  ((11/3 11/3 0) (11/3 11/3 0) (11/3 4 0)))
'(sat-1
  0
  "\"(list 'eval '(app try (-> (λ (n4) ...) <-)) (menv '(() () () ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> sat-solve-4 <-) phi) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> or <-) (app f (app #t)) (app f (app #f))) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app or (app not x2) (-> (app not x3) <-)) (menv '(())))\""
  18
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-1
  0
  "\"(list 'eval '(λ (n3) (-> (app try (λ (n4) ...)) <-)) (menv '(() () () ())))\""
  73
  ((3 3 0) (3 3 0) (10/3 11/3 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> try <-) (λ (n4) ...)) (menv '(() () () ())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '(() ())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  32
  ((1 1 0) (1 1 0) (1 1 0)))
'(sat-1
  0
  "\"(list 'eval '(app or (-> x1 <-) (app not x2) (app not x3)) (menv '(())))\""
  16
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(letrec (() (phi (-> (λ (x1 x2 x3 x4) ...) <-)) try) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '(() ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(letrec phi ... sat-solve-4 (-> (app sat-solve-4 phi) <-))\n (menv '()))\""
  75
  ((11/3 11/3 0) (3 3 0) (3 3 0)))
'(sat-1
  0
  "\"(list 'eval '(app p n1 (-> n2 <-) n3 n4) (menv '(() () () () ())))\""
  10
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(letrec (try (sat-solve-4 (-> (λ (p) ...) <-)) ()) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list 'eval '((top) letrec phi ... sat-solve-4 ...) (menv '()))\""
  76
  ((11/3 11/3 0) (11/3 11/3 0) (4 4 0)))
'(sat-1
  0
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '(())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> or <-) x1 (app not x2) (app not x3)) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app or (-> x4 <-) x2) (menv '(())))\""
  16
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> not <-) x3) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(λ (n4) (-> (app p n1 n2 n3 n4) <-)) (menv '(() () () () ())))\""
  55
  ((2 2 0) (2 2 0) (7/3 7/3 0)))
'(sat-1
  0
  "\"(list 'eval '(app not (-> x3 <-)) (menv '(())))\""
  16
  ((0 0 0) (0 0 0) (1/3 1/3 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> not <-) x3) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app try (-> (λ (n7) ...) <-)) (menv '(() () () () () () ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> try <-) (λ (n6) ...)) (menv '(() () () () () ())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> not <-) x2) (menv '(() () () () () () ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or (app not x4) (-> x1 <-)) (menv '(() () () () () () ())))\""
  16
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app or (-> x1 <-) (app not x2) (app not x3))\n (menv '(() () () () () () ())))\""
  16
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> not <-) x2) (menv '(() () () () () () ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (x2) (-> (λ (x3) ...) <-)) (menv '(() ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) (-> n7 <-))\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (n3) (-> (app try (λ (n4) ...)) <-)) (menv '(() () () ())))\""
  117
  ((12 37/3 1/3) (32/3 11 0) (34/3 35/3 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  36
  ((5/3 5/3 0) (5/3 5/3 0) (2 2 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (-> (app (app (app (app p n1) n2) n3) n4) <-) n5)\n (menv '(() () () () () () () ())))\""
  13
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  32
  ((1 1 0) (1 4/3 0) (1 1 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (x4) (-> (λ (x5) ...) <-)) (menv '(() () () ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or (-> x4 <-) x2) (menv '(() () () () () () ())))\""
  22
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app or x1 (app not x2) (-> (app not x3) <-))\n (menv '(() () () () () () ())))\""
  22
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-2
  0
  "\"(list 'eval '(letrec (() (phi (-> (λ (x1) ...) <-)) try) ...) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (x1) (-> (λ (x2) ...) <-)) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (app (app (app (app p n1) n2) n3) n4) (-> n5 <-))\n (menv '(() () () () () () () ())))\""
  10
  ((2/3 2/3 1/3) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> not <-) x3) (menv '(() () () () () () ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or x4 (-> x2 <-)) (menv '(() () () () () () ())))\""
  18
  ((1/3 2/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-2
  0
  "\"(list 'eval '(app not (-> x4 <-)) (menv '(() () () () () () ())))\""
  22
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (-> or <-) x1 (app not x2) (app not x3))\n (menv '(() () () () () () ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '(())))\""
  16
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> or <-) (app not x4) x1) (menv '(() () () () () () ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app or (-> (app not x2) <-) (app not x3))\n (menv '(() () () () () () ())))\""
  20
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-2
  0
  "\"(list 'eval '(app or (app f (app #t)) (-> (app f (app #f)) <-)) (menv '(())))\""
  117
  ((12 37/3 0) (12 37/3 0) (35/3 12 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> p <-) n1) (menv '(() () () () () () () ())))\""
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app try (-> (λ (n6) ...) <-)) (menv '(() () () () () ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (app (app p n1) n2) (-> n3 <-))\n (menv '(() () () () () () () ())))\""
  10
  ((1/3 1/3 0) (0 1/3 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app not (-> x2 <-)) (menv '(() () () () () () ())))\""
  18
  ((1/3 1/3 0) (1/3 1/3 0) (2/3 2/3 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(letrec phi ... sat-solve-7 (-> (app sat-solve-7 phi) <-))\n (menv '()))\""
  119
  ((41/3 14 1/3) (40/3 41/3 0) (12 37/3 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (x7)\n    (->\n     (app\n      and\n      (app or x1 x2)\n      (app or x1 (app not x2) (app not x3))\n      (app or x3 x4)\n      (app or (app not x4) x1)\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv '(() () () () () () ())))\""
  69
  ((28/3 28/3 0) (10 10 0) (10 31/3 1/3)))
'(sat-2
  0
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '(())))\""
  16
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '(())))\""
  118
  ((37/3 38/3 1/3) (12 37/3 0) (37/3 37/3 1/3)))
'(sat-2
  0
  "\"(list 'eval '(app or (-> (app f (app #t)) <-) (app f (app #f))) (menv '(())))\""
  117
  ((38/3 13 0) (41/3 14 0) (38/3 13 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (n1) (-> (app try (λ (n2) ...)) <-)) (menv '(() ())))\""
  117
  ((41/3 14 1/3) (13 40/3 1/3) (12 37/3 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (app (app (app (app (app p n1) n2) n3) n4) n5) (-> n6 <-))\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0) (0 1/3 0) (1/3 1/3 0)))
'(sat-2
  0
  "\"(list 'eval '(app not (-> x3 <-)) (menv '(() () () () () () ())))\""
  20
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app or x1 (-> (app not x2) <-) (app not x3))\n (menv '(() () () () () () ())))\""
  20
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-2
  0
  "\"(list 'eval '(app not (-> x3 <-)) (menv '(() () () () () () ())))\""
  20
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-2
  0
  "\"(list 'eval '(app p (-> n1 <-)) (menv '(() () () () () () () ())))\""
  10
  ((0 0 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-2
  0
  "\"(list 'eval '(app sat-solve-7 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> #t <-)) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (n5) (-> (app try (λ (n6) ...)) <-))\n (menv '(() () () () () ())))\""
  117
  ((44/3 15 1/3) (40/3 41/3 1/3) (38/3 13 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> or <-) (app f (app #t)) (app f (app #f))) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (-> (app (app (app (app (app p n1) n2) n3) n4) n5) <-) n6)\n (menv '(() () () () () () () ())))\""
  15
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-2
  0
  "\"(list 'eval '(app not (-> x2 <-)) (menv '(() () () () () () ())))\""
  18
  ((2/3 2/3 0) (2/3 2/3 0) (1/3 1/3 0)))
'(sat-2
  0
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '(())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (n6) (-> (app try (λ (n7) ...)) <-))\n (menv '(() () () () () () ())))\""
  117
  ((12 37/3 0) (13 13 0) (41/3 14 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> try <-) (λ (n7) ...)) (menv '(() () () () () () ())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> (app p n1) <-) n2) (menv '(() () () () () () () ())))\""
  7
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or x1 (-> x2 <-)) (menv '(() () () () () () ())))\""
  18
  ((1/3 1/3 0) (2/3 2/3 0) (1/3 1/3 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> or <-) x1 x2) (menv '(() () () () () () ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or (-> x1 <-) x2) (menv '(() () () () () () ())))\""
  16
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (-> or <-) (app not x2) (app not x3))\n (menv '(() () () () () () ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv '(() () () () () () ())))\""
  28
  ((1 1 0) (1 1 0) (1 1 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (x6) (-> (λ (x7) ...) <-)) (menv '(() () () () () ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> or <-) x4 x2) (menv '(() () () () () () ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '(())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '((top) letrec phi ... sat-solve-7 ...) (menv '()))\""
  120
  ((31/3 31/3 0) (31/3 31/3 0) (12 12 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> try <-) (λ (n3) ...)) (menv '(() () ())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app or (app not x2) (-> (app not x3) <-))\n (menv '(() () () () () () ())))\""
  22
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (-> (app (app p n1) n2) <-) n3)\n (menv '(() () () () () () () ())))\""
  9
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or (-> x3 <-) x4) (menv '(() () () () () () ())))\""
  20
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> not <-) x4) (menv '(() () () () () () ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> try <-) (λ (n5) ...)) (menv '(() () () () ())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (x3) (-> (λ (x4) ...) <-)) (menv '(() () ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(letrec (try (sat-solve-7 (-> (λ (p) ...) <-)) ()) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or x3 (-> x4 <-)) (menv '(() () () () () () ())))\""
  22
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (n4) (-> (app try (λ (n5) ...)) <-)) (menv '(() () () () ())))\""
  117
  ((10 31/3 0) (34/3 35/3 0) (12 12 0)))
'(sat-2
  0
  "\"(list 'eval '(app try (-> (λ (n3) ...) <-)) (menv '(() () ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (-> (app (app (app p n1) n2) n3) <-) n4)\n (menv '(() () () () () () () ())))\""
  11
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app try (-> (λ (n5) ...) <-)) (menv '(() () () () ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (app (app (app p n1) n2) n3) (-> n4 <-))\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> try <-) (λ (n4) ...)) (menv '(() () () ())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '(() ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '(() ())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (n2) (-> (app try (λ (n3) ...)) <-)) (menv '(() () ())))\""
  117
  ((40/3 41/3 1/3) (32/3 11 1/3) (31/3 32/3 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> or <-) x3 x4) (menv '(() () () () () () ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> #f <-)) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '(())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (n7)\n    (-> (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7) <-))\n (menv '(() () () () () () () ())))\""
  87
  ((10 31/3 0) (31/3 31/3 0) (32/3 11 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or x3 x4) <-)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  28
  ((1 1 0) (1 1 0) (1 1 0)))
'(sat-2
  0
  "\"(list 'eval '(app or (-> (app not x4) <-) x1) (menv '(() () () () () () ())))\""
  24
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-2
  0
  "\"(list 'eval '(app try (-> (λ (n4) ...) <-)) (menv '(() () () ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 x2) <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  24
  ((1 1 0) (1 1 0) (1 1 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (-> (app or (app not x4) x1) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  32
  ((1 1 0) (1 1 0) (1 1 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> sat-solve-7 <-) phi) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (app p n1) (-> n2 <-)) (menv '(() () () () () () () ())))\""
  10
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (x5) (-> (λ (x6) ...) <-)) (menv '(() () () () ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '(())))\""
  117
  ((12 37/3 0) (12 37/3 0) (11 34/3 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> not <-) x3) (menv '(() () () () () () ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (-> (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) <-) n7)\n (menv '(() () () () () () () ())))\""
  17
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(letrec (phi (try (-> (λ (f) ...) <-)) sat-solve-7) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app p n1 n2 n3 (-> n4 <-) n5 n6 n7)\n (menv '(() () () () () () () ())))\""
  10
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app p n1 n2 (-> n3 <-) n4 n5 n6 n7)\n (menv '(() () () () () () () ())))\""
  10
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  32
  ((2 2 0) (2 7/3 0) (2 2 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (-> (app f (app #t)) <-) (app f (app #f))) (menv '(())))\""
  100
  ((12 37/3 0) (31/3 31/3 0) (32/3 11 0)))
'(sat-3
  0
  "\"(list 'eval '(λ (n3) (-> (app try (λ (n4) ...)) <-)) (menv '(() () () ())))\""
  100
  ((38/3 13 1/3) (34/3 35/3 0) (11 34/3 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 x2) <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  22
  ((1 1 0) (1 1 0) (1 1 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> or <-) x1 (app not x2) (app not x3)) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app display (-> (app sat-solve-7 phi) <-)) (menv '()))\""
  102
  ((15 15 1/3) (44/3 15 1/3) (41/3 14 0)))
'(sat-3
  0
  "\"(list 'eval '(app or x1 (-> (app not x2) <-) (app not x3)) (menv '(())))\""
  18
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(letrec (try (sat-solve-7 (-> (λ (p) ...) <-)) ()) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> display <-) s) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> sat-solve-7 <-) phi) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '((top) letrec println ... sat-solve-7 ...) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 (-> n5 <-) n6 n7)\n (menv '(() () () () () () () ())))\""
  10
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-3
  0
  "\"(list 'eval '(app println (-> \"trying\" <-)) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(λ (n7) (-> (app p n1 n2 n3 n4 n5 n6 n7) <-))\n (menv '(() () () () () () () ())))\""
  69
  ((10 31/3 0) (10 31/3 0) (11 34/3 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app p (-> n1 <-) n2 n3 n4 n5 n6 n7)\n (menv '(() () () () () () () ())))\""
  10
  ((1/3 1/3 0) (0 0 0) (0 1/3 0)))
'(sat-3
  0
  "\"(list 'eval '(app not (-> x3 <-)) (menv '(())))\""
  16
  ((1/3 1/3 0) (2/3 2/3 0) (1/3 1/3 0)))
'(sat-3
  0
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '(() ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(letrec (println (phi (-> (λ (x1 x2 x3 x4 x5 x6 x7) ...) <-)) try) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (app not x2) (-> (app not x3) <-)) (menv '(())))\""
  18
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-3
  0
  "\"(list 'eval '(app try (-> (λ (n5) ...) <-)) (menv '(() () () () ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> not <-) x3) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (app not x4) (-> x1 <-)) (menv '(())))\""
  16
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> not <-) x2) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(λ (s) (-> (let _ ... _ ...) <-)) (menv '(())))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv '(())))\""
  22
  ((1 1 0) (1 1 0) (1 1 0)))
'(sat-3
  0
  "\"(list 'eval '(app or x3 (-> x4 <-)) (menv '(())))\""
  16
  ((1/3 1/3 0) (1/3 1/3 0) (2/3 2/3 0)))
'(sat-3
  0
  "\"(list 'eval '(app not (-> x2 <-)) (menv '(())))\""
  16
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> try <-) (λ (n4) ...)) (menv '(() () () ())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(λ (x1 x2 x3 x4 x5 x6 x7)\n    (->\n     (app\n      and\n      (app or x1 x2)\n      (app or x1 (app not x2) (app not x3))\n      (app or x3 x4)\n      (app or (app not x4) x1)\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv '(())))\""
  63
  ((32/3 11 0) (32/3 11 0) (32/3 11 0)))
'(sat-3
  0
  "\"(list 'eval '(let _ ... _ (-> (app newline) <-)) (menv '(())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 n5 (-> n6 <-) n7)\n (menv '(() () () () () () () ())))\""
  10
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-3
  0
  "\"(list 'eval '(app try (-> (λ (n4) ...) <-)) (menv '(() () () ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> or <-) (app not x4) x1) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or x4 (-> x2 <-)) (menv '(())))\""
  16
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> not <-) x2) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '(())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(λ (n5) (-> (app try (λ (n6) ...)) <-))\n (menv '(() () () () () ())))\""
  100
  ((38/3 13 1/3) (13 13 1/3) (37/3 37/3 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (-> x3 <-) x4) (menv '(())))\""
  16
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> or <-) x4 x2) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> display <-) (app sat-solve-7 phi)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> #t <-)) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (-> x4 <-) x2) (menv '(())))\""
  16
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-3
  0
  "\"(list 'eval '(app not (-> x3 <-)) (menv '(())))\""
  16
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> or <-) (app not x2) (app not x3)) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> or <-) (app f (app #t)) (app f (app #f))) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(let (() (_ (-> (app display s) <-)) ()) ...) (menv '(())))\""
  6
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv '(())))\""
  28
  ((1 1 0) (1 1 0) (1 1 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> try <-) (λ (n7) ...)) (menv '(() () () () () () ())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(λ (n2) (-> (app try (λ (n3) ...)) <-)) (menv '(() () ())))\""
  100
  ((15 46/3 1/3) (40/3 40/3 0) (35/3 12 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> #f <-)) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or x1 (app not x2) (-> (app not x3) <-)) (menv '(())))\""
  18
  ((2/3 2/3 0) (1 1 0) (2/3 2/3 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '(())))\""
  16
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-3
  0
  "\"(list 'eval '(app try (-> (λ (n7) ...) <-)) (menv '(() () () () () () ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> println <-) \"trying\") (menv '(())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(λ (f) (-> (let _ ... _ ...) <-)) (menv '(())))\""
  100
  ((14 14 1/3) (14 43/3 1/3) (43/3 44/3 0)))
'(sat-3
  0
  "\"(list 'eval '(app try (-> (λ (n3) ...) <-)) (menv '(() () ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app try (-> (λ (n6) ...) <-)) (menv '(() () () () () ())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or x1 (-> x2 <-)) (menv '(())))\""
  16
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-3
  0
  "\"(list 'eval '(λ (n4) (-> (app try (λ (n5) ...)) <-)) (menv '(() () () () ())))\""
  100
  ((38/3 13 0) (14 43/3 0) (13 40/3 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> newline <-)) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(letrec (() (println (-> (λ (s) ...) <-)) phi) ...) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> newline <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> not <-) x4) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(let (() (_ (-> (app display (app sat-solve-7 phi)) <-)) ()) ...)\n (menv '()))\""
  104
  ((15 46/3 0) (41/3 14 0) (41/3 14 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app p n1 (-> n2 <-) n3 n4 n5 n6 n7)\n (menv '(() () () () () () () ())))\""
  10
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-3
  0
  "\"(list 'eval '(let (() (_ (-> (app println \"trying\") <-)) ()) ...) (menv '(())))\""
  6
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or x3 x4) <-)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  22
  ((1 1 0) (1 1 0) (4/3 5/3 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> try <-) (λ (n3) ...)) (menv '(() () ())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '(() ())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app (-> p <-) n1 n2 n3 n4 n5 n6 n7)\n (menv '(() () () () () () () ())))\""
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (-> (app not x2) <-) (app not x3)) (menv '(())))\""
  18
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-3
  0
  "\"(list 'eval '(app not (-> x2 <-)) (menv '(())))\""
  16
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 2/3 0)))
'(sat-3
  0
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '(())))\""
  101
  ((46/3 47/3 0) (46/3 16 0) (49/3 50/3 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (-> x1 <-) x2) (menv '(())))\""
  16
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-3
  0
  "\"(list 'eval '(λ (n1) (-> (app try (λ (n2) ...)) <-)) (menv '(() ())))\""
  100
  ((37/3 38/3 0) (40/3 41/3 0) (41/3 14 0)))
'(sat-3
  0
  "\"(list 'eval '(app not (-> x4 <-)) (menv '(())))\""
  16
  ((1/3 1/3 0) (1/3 1/3 0) (2/3 2/3 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> or <-) x3 x4) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> try <-) (λ (n6) ...)) (menv '(() () () () () ())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(letrec (phi (try (-> (λ (f) ...) <-)) sat-solve-7) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (app f (app #t)) (-> (app f (app #f)) <-)) (menv '(())))\""
  100
  ((12 37/3 0) (13 40/3 1/3) (37/3 38/3 0)))
'(sat-3
  0
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app display (-> s <-)) (menv '(())))\""
  4
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> not <-) x3) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> or <-) x1 x2) (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '(())))\""
  16
  ((1/3 2/3 0) (1/3 2/3 0) (2/3 2/3 0)))
'(sat-3
  0
  "\"(list 'eval '(app sat-solve-7 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(letrec println ... sat-solve-7 (-> (let _ ... _ ...) <-))\n (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> try <-) (λ (n5) ...)) (menv '(() () () () ())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 n5 n6 (-> n7 <-))\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (-> x1 <-) (app not x2) (app not x3)) (menv '(())))\""
  16
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-3
  0
  "\"(list 'eval '(let _ ... _ (-> (app newline) <-)) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (-> (app or (app not x4) x1) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  26
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(let _ ... _ (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '(())))\""
  100
  ((10 10 0) (10 10 0) (10 31/3 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (-> (app not x4) <-) x1) (menv '(())))\""
  18
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-3
  0
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '(())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '(())))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(λ (n6) (-> (app try (λ (n7) ...)) <-))\n (menv '(() () () () () () ())))\""
  100
  ((41/3 14 0) (35/3 12 0) (44/3 44/3 0)))
'(sat-small
  1
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '((□? (n1)) (□? (p)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app or x1 (-> (app not x2) <-)) (menv '((□? (x1 x2)))))\""
  28
  ((1 1 0) (1 1 0) (1 1 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '((□? (f)))))\""
  11
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '((□? (f)))))\""
  11
  ((1/3 1/3 0) (0 0 0) (1/3 1/3 0)))
'(sat-small
  1
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '((□? (p)))))\""
  120
  ((10 31/3 0) (32/3 11 1/3) (31/3 32/3 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '((□? (n1)) (□? (p)))))\""
  4
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(letrec phi ... sat-solve-2 (-> (app sat-solve-2 phi) <-))\n (menv '()))\""
  119
  ((9 9 0) (29/3 29/3 0) (31/3 32/3 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> p <-) n1 n2) (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  11
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '((□? (f)))))\""
  124
  ((28/3 28/3 0) (10 31/3 0) (31/3 32/3 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(letrec (phi (try (-> (λ (f) ...) <-)) sat-solve-2) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  1
  "\"(list 'eval '((top) letrec phi ... sat-solve-2 ...) (menv '()))\""
  120
  ((9 28/3 0) (23/3 23/3 0) (8 8 0)))
'(sat-small
  1
  "\"(list 'eval '(letrec (() (phi (-> (λ (x1 x2) ...) <-)) try) ...) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(letrec (try (sat-solve-2 (-> (λ (p) ...) <-)) ()) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '((□? (p)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(λ (x1 x2) (-> (app or x1 (app not x2)) <-))\n (menv '((□? (x1 x2)))))\""
  71
  ((5 5 0) (14/3 5 0) (5 16/3 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app or (-> x1 <-) (app not x2)) (menv '((□? (x1 x2)))))\""
  26
  ((1 1 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(λ (n2) (-> (app p n1 n2) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  91
  ((17/3 17/3 0) (16/3 17/3 0) (20/3 20/3 0)))
'(sat-small
  1
  "\"(list 'eval '(app p (-> n1 <-) n2) (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  17
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> sat-solve-2 <-) phi) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> or <-) x1 (app not x2)) (menv '((□? (x1 x2)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '((□? (p)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app f (app #t)) (app f (app #f)))\n (menv '((□? (f)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app sat-solve-2 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(λ (n1) (-> (app try (λ (n2) ...)) <-))\n (menv '((□? (n1)) (□? (p)))))\""
  108
  ((7 7 0) (8 8 0) (20/3 20/3 0)))
'(sat-small
  1
  "\"(list 'eval '(app p n1 (-> n2 <-)) (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  15
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-small
  1
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2)))))\""
  24
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(app or (app f (app #t)) (-> (app f (app #f)) <-))\n (menv '((□? (f)))))\""
  113
  ((7 7 0) (7 7 0) (7 7 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(app or (-> (app f (app #t)) <-) (app f (app #f)))\n (menv '((□? (f)))))\""
  113
  ((29/3 10 0) (28/3 29/3 0) (25/3 25/3 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(λ (n2) (-> (app try (λ (n3) ...)) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-1
  1
  "\"(list\n 'eval\n '(letrec (phi (try (-> (λ (f) ...) <-)) sat-solve-4) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 (app not x2) (app not x3))\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv '((□? (x1 x2 x3 x4)))))\""
  69
  ((17/3 6 0) (17/3 6 0) (6 6 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4)))))\""
  85
  ((19/3 20/3 0) (20/3 20/3 0) (8 8 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(λ (n3) (-> (app try (λ (n4) ...)) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-1
  1
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(letrec (try (sat-solve-4 (-> (λ (p) ...) <-)) ()) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '((□? (p)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app or (-> (app not x2) <-) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  34
  ((5/3 5/3 0) (5/3 5/3 0) (4/3 4/3 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '((□? (f)))))\""
  0
  (#f #f #f))
'(sat-1
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n3) ...))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  30
  ((5/3 5/3 0) (4/3 5/3 0) (4/3 5/3 0)))
'(sat-1
  1
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '((□? (p)))))\""
  0
  (#f #f #f))
'(sat-1
  1
  "\"(list\n 'eval\n '(app or (app f (app #t)) (-> (app f (app #f)) <-))\n (menv '((□? (f)))))\""
  0
  (#f #f #f))
'(sat-1
  1
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '((□? (n1)) (□? (p)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app or (app not x2) (-> (app not x3) <-))\n (menv '((□? (x1 x2 x3 x4)))))\""
  32
  ((4/3 4/3 0) (4/3 4/3 0) (4/3 4/3 0)))
'(sat-1
  1
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '((□? (p)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app p n1 n2 (-> n3 <-) n4)\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  19
  ((1/3 1/3 0) (1/3 1/3 0) (2/3 2/3 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> or <-) x4 x2) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> not <-) x3) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(letrec (() (phi (-> (λ (x1 x2 x3 x4) ...) <-)) try) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(letrec phi ... sat-solve-4 (-> (app sat-solve-4 phi) <-))\n (menv '()))\""
  0
  (#f #f #f))
'(sat-1
  1
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  30
  ((1 1 0) (1 1 0) (1 1 0)))
'(sat-1
  1
  "\"(list 'eval '(app sat-solve-4 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '((□? (n1)) (□? (p)))))\""
  4
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app or x4 (-> x2 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  30
  ((1 1 0) (1 1 0) (1 1 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(λ (n4) (-> (app p n1 n2 n3 n4) <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-1
  1
  "\"(list 'eval '(app not (-> x3 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  28
  ((1 1 0) (1 1 0) (1 1 0)))
'(sat-1
  1
  "\"(list 'eval '(app or (-> x4 <-) x2) (menv '((□? (x1 x2 x3 x4)))))\""
  26
  ((1 1 0) (1 1 0) (1 1 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app or x1 (-> (app not x2) <-) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  34
  ((4/3 4/3 0) (4/3 4/3 0) (4/3 4/3 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app or x1 (app not x2) (-> (app not x3) <-))\n (menv '((□? (x1 x2 x3 x4)))))\""
  32
  ((4/3 4/3 0) (4/3 4/3 0) (4/3 4/3 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> not <-) x3) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(λ (n1) (-> (app try (λ (n2) ...)) <-))\n (menv '((□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-1
  1
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app or (-> (app f (app #t)) <-) (app f (app #f)))\n (menv '((□? (f)))))\""
  0
  (#f #f #f))
'(sat-1
  1
  "\"(list\n 'eval\n '(app p n1 n2 n3 (-> n4 <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  17
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 1 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app f (app #t)) (app f (app #f)))\n (menv '((□? (f)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app or (-> x1 <-) (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  32
  ((1 1 0) (1 1 0) (1 1 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '((□? (f)))))\""
  19
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(λ (x1 x2 x3 x4)\n    (->\n     (app\n      and\n      (app or x1 (app not x2) (app not x3))\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv '((□? (x1 x2 x3 x4)))))\""
  603
  ((500/3 170 11/3) #f #f))
'(sat-1
  1
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  1
  "\"(list 'eval '((top) letrec phi ... sat-solve-4 ...) (menv '()))\""
  0
  (#f #f #f))
'(sat-1
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n4) ...) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4)))))\""
  218
  ((121/3 41 1) (107/3 109/3 1/3) (113/3 115/3 2/3)))
'(sat-1
  1
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '((□? (f)))))\""
  19
  ((1 1 0) (1 1 0) (1 1 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> sat-solve-4 <-) phi) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n4) ...))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app (-> or <-) x1 (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app p (-> n1 <-) n2 n3 n4)\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  23
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n3) ...) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  4
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app not (-> x3 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  28
  ((5/3 5/3 0) (5/3 5/3 0) (5/3 5/3 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app (-> p <-) n1 n2 n3 n4)\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  15
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app p n1 (-> n2 <-) n3 n4)\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  21
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (-> (app f (app #t)) <-) (app f (app #f)))\n (menv '((□? (f)))))\""
  0
  (#f #f #f))
'(sat-2
  1
  "\"(list\n 'eval\n '(letrec phi ... sat-solve-7 (-> (app sat-solve-7 phi) <-))\n (menv '()))\""
  0
  (#f #f #f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or x3 x4) <-)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  253
  ((143/3 146/3 1) (148/3 151/3 1) (140/3 143/3 2/3)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (-> (app or (app not x4) x1) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  291
  ((57 175/3 1) (56 172/3 4/3) (73 224/3 1)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (-> x4 <-) x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  134
  ((52/3 18 0) (19 20 0) (58/3 20 1/3)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (-> (app not x2) <-) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  76
  ((13/3 13/3 0) (5 5 0) (5 5 0)))
'(sat-2
  1
  "\"(list 'eval '(letrec (() (phi (-> (λ (x1) ...) <-)) try) ...) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or x3 (-> x4 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  134
  ((28/3 28/3 0) (29/3 29/3 0) (28/3 29/3 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app not (-> x2 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  68
  ((7/3 8/3 0) (8/3 8/3 0) (8/3 8/3 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> not <-) x4)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (app not x4) (-> x1 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  53
  ((4/3 4/3 0) (4/3 4/3 0) (4/3 4/3 0)))
'(sat-2
  1
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '((□? (n1)) (□? (p)))))\""
  4
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> (app (app (app p n1) n2) n3) <-) n4)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  30
  ((4/3 4/3 0) (4/3 4/3 0) (4/3 4/3 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> or <-) x4 x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (n1) (-> (app try (λ (n2) ...)) <-))\n (menv '((□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-2
  1
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '((□? (p)))))\""
  0
  (#f #f #f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> p <-) n1)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  21
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-2
  1
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app p (-> n1 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  32
  ((1 1 0) (2/3 1 0) (2/3 2/3 0)))
'(sat-2
  1
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '((□? (p)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n3) ...) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  4
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (-> x1 <-) x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  53
  ((5/3 5/3 0) (5/3 5/3 0) (2 2 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (n6) (-> (app try (λ (n7) ...)) <-))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-2
  1
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '((□? (p)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(letrec (phi (try (-> (λ (f) ...) <-)) sat-solve-7) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (x4) (-> (λ (x5) ...) <-))\n (menv '((□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  0
  (#f #f #f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> or <-) x3 x4)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (n2) (-> (app try (λ (n3) ...)) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  222
  ((94/3 32 2/3) (34 104/3 2/3) (30 92/3 1/3)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (app (app (app (app p n1) n2) n3) n4) (-> n5 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  24
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (n3) (-> (app try (λ (n4) ...)) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n6) ...))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list 'eval '((top) letrec phi ... sat-solve-7 ...) (menv '()))\""
  0
  (#f #f #f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (app (app (app p n1) n2) n3) (-> n4 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  26
  ((1 1 0) (1 1 0) (2/3 1 0)))
'(sat-2
  1
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '((□? (n1)) (□? (p)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list 'eval '(λ (x2) (-> (λ (x3) ...) <-)) (menv '((□? (x2)) (□? (x1)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (-> (app not x4) <-) x1)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  166
  ((17 52/3 0) (53/3 18 0) (50/3 17 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (app (app p n1) n2) (-> n3 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  28
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (n7)\n    (-> (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7) <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  0
  (#f #f #f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n4) ...) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (-> x1 <-) (app not x2) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  53
  ((4/3 4/3 0) (4/3 4/3 0) (4/3 4/3 0)))
'(sat-2
  1
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  255
  ((46 140/3 2/3) (140/3 143/3 1) (55 56 2/3)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n5) ...) <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (app p n1) (-> n2 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  30
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) (-> n7 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  20
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> not <-) x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or x1 (-> (app not x2) <-) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  76
  ((11/3 11/3 0) (4 4 0) (11/3 4 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n6) ...) <-))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  7
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> or <-) x1 x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> not <-) x3)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) <-) n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  39
  ((3 3 0) (7/3 7/3 0) (2 7/3 0)))
'(sat-2
  1
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or x4 (-> x2 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  68
  ((8/3 8/3 0) (8/3 3 0) (8/3 8/3 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app not x2) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '((□? (f)))))\""
  0
  (#f #f #f))
'(sat-2
  1
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '((□? (f)))))\""
  31
  ((5/3 5/3 0) (5/3 5/3 0) (5/3 5/3 0)))
'(sat-2
  1
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '((□? (f)))))\""
  31
  ((5/3 5/3 0) (5/3 5/3 0) (5/3 5/3 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (x3) (-> (λ (x4) ...) <-))\n (menv '((□? (x3)) (□? (x2)) (□? (x1)))))\""
  4
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (x7)\n    (->\n     (app\n      and\n      (app or x1 x2)\n      (app or x1 (app not x2) (app not x3))\n      (app or x3 x4)\n      (app or (app not x4) x1)\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  0
  (#f #f #f))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (n4) (-> (app try (λ (n5) ...)) <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app not (-> x3 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  93
  ((14/3 14/3 0) (5 5 0) (17/3 17/3 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n5) ...))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  7
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n7) ...) <-))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list 'eval '(λ (x1) (-> (λ (x2) ...) <-)) (menv '((□? (x1)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> (app p n1) <-) n2)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  24
  ((1/3 2/3 0) (1/3 1/3 0) (1/3 2/3 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or x1 (app not x2) (-> (app not x3) <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  109
  ((22/3 23/3 0) (23/3 8 0) (22/3 23/3 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n4) ...))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list 'eval '(app sat-solve-7 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app not (-> x3 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  93
  ((13/3 14/3 0) (14/3 14/3 0) (13/3 13/3 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(letrec (try (sat-solve-7 (-> (λ (p) ...) <-)) ()) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or x1 (-> x2 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  68
  ((8/3 8/3 0) (8/3 8/3 0) (7/3 8/3 0)))
'(sat-2
  1
  "\"(list 'eval '(app (-> sat-solve-7 <-) phi) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app not x4) x1)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n7) ...))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  9
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> (app (app p n1) n2) <-) n3)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  27
  ((1 1 0) (1 1 0) (1 1 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> or <-) x1 (app not x2) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app f (app #t)) (app f (app #f)))\n (menv '((□? (f)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 x2) <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  151
  ((50/3 17 1/3) (46/3 47/3 0) (50/3 52/3 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n3) ...))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app not (-> x2 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  68
  ((7/3 8/3 0) (8/3 8/3 0) (8/3 8/3 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (-> x3 <-) x4)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  93
  ((13/3 13/3 0) (14/3 14/3 0) (13/3 13/3 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app not (-> x4 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  134
  ((28/3 28/3 0) (31/3 31/3 0) (29/3 10 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> (app (app (app (app (app p n1) n2) n3) n4) n5) <-) n6)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  36
  ((5/3 5/3 0) (5/3 2 0) (5/3 2 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (app f (app #t)) (-> (app f (app #f)) <-))\n (menv '((□? (f)))))\""
  0
  (#f #f #f))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (n5) (-> (app try (λ (n6) ...)) <-))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> (app (app (app (app p n1) n2) n3) n4) <-) n5)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  33
  ((4/3 5/3 0) (5/3 5/3 0) (5/3 5/3 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (app (app (app (app (app p n1) n2) n3) n4) n5) (-> n6 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  22
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> not <-) x3)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (x6) (-> (λ (x7) ...) <-))\n (menv '((□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  7
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> not <-) x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (app not x2) (-> (app not x3) <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  109
  ((23/3 23/3 0) (23/3 23/3 0) (22/3 23/3 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (x5) (-> (λ (x6) ...) <-))\n (menv '((□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  6
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (n5) (-> (app try (λ (n6) ...)) <-))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> or <-) x1 (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> newline <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '((□? (n1)) (□? (p)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or x1 (-> (app not x2) <-) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  43
  ((2 2 0) (2 2 0) (2 2 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> newline <-)) (menv '((□? (s)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n7) ...))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  9
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n4) ...))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app not (-> x4 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  35
  ((4/3 4/3 0) (4/3 4/3 0) (5/3 5/3 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(letrec (phi (try (-> (λ (f) ...) <-)) sat-solve-7) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 (-> n5 <-) n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  24
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-3
  1
  "\"(list 'eval '((top) letrec println ... sat-solve-7 ...) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or (-> (app not x2) <-) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  43
  ((5/3 5/3 0) (5/3 5/3 0) (5/3 5/3 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or (-> x1 <-) (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((4/3 4/3 0) (4/3 4/3 0) (5/3 5/3 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (n4) (-> (app try (λ (n5) ...)) <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-3
  1
  "\"(list 'eval '(let _ ... _ (-> (app newline) <-)) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> display <-) (app sat-solve-7 phi)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or x3 x4) <-)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  94
  ((28/3 29/3 0) (37/3 38/3 0) (40/3 40/3 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n3) ...) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  4
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (n6) (-> (app try (λ (n7) ...)) <-))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-3
  1
  "\"(list 'eval '(app (-> or <-) x3 x4) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 n5 n6 (-> n7 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  20
  ((2/3 2/3 0) (2/3 2/3 0) (1 1 0)))
'(sat-3
  1
  "\"(list 'eval '(app display (-> s <-)) (menv '((□? (s)))))\""
  7
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> not <-) x4) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app or x3 (-> x4 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  35
  ((5/3 5/3 0) (5/3 5/3 0) (5/3 5/3 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or (app not x2) (-> (app not x3) <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((7/3 7/3 0) (7/3 7/3 0) (5/3 5/3 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(let (() (_ (-> (app println \"trying\") <-)) ()) ...)\n (menv '((□? (f)))))\""
  7
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app p (-> n1 <-) n2 n3 n4 n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  32
  ((1/3 2/3 0) (1/3 1/3 0) (2/3 2/3 0)))
'(sat-3
  1
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '((□? (p)))))\""
  0
  (#f #f #f))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or (app f (app #t)) (-> (app f (app #f)) <-))\n (menv '((□? (f)))))\""
  0
  (#f #f #f))
'(sat-3
  1
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '((□? (p)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(letrec (println (phi (-> (λ (x1 x2 x3 x4 x5 x6 x7) ...) <-)) try) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app p n1 (-> n2 <-) n3 n4 n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  30
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  299
  ((161/3 166/3 2/3) (188/3 191/3 4/3) (158/3 161/3 2/3)))
'(sat-3
  1
  "\"(list 'eval '(app or (-> x1 <-) x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((4/3 5/3 0) (5/3 5/3 0) (2 2 0)))
'(sat-3
  1
  "\"(list 'eval '(app or x1 (-> x2 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  39
  ((4/3 4/3 0) (4/3 4/3 0) (4/3 4/3 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> display <-) s) (menv '((□? (s)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n6) ...))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> not <-) x3) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or x1 (app not x2) (-> (app not x3) <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((2 2 0) (7/3 7/3 0) (7/3 7/3 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(let (() (_ (-> (app display (app sat-solve-7 phi)) <-)) ()) ...)\n (menv '()))\""
  0
  (#f #f #f))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  96
  ((25/3 26/3 0) (10 31/3 0) (28/3 29/3 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or (-> (app f (app #t)) <-) (app f (app #f)))\n (menv '((□? (f)))))\""
  0
  (#f #f #f))
'(sat-3
  1
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app not (-> x3 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  37
  ((4/3 4/3 0) (5/3 5/3 0) (4/3 4/3 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  112
  ((9 28/3 0) (29/3 10 1/3) (26/3 9 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n5) ...))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  7
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '((□? (f)))))\""
  31
  ((5/3 5/3 0) (5/3 5/3 0) (2 2 0)))
'(sat-3
  1
  "\"(list 'eval '(let (() (_ (-> (app display s) <-)) ()) ...) (menv '((□? (s)))))\""
  11
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-3
  1
  "\"(list 'eval '(app not (-> x3 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  37
  ((7/3 7/3 0) (7/3 7/3 0) (5/3 5/3 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n4) ...) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app display (-> (app sat-solve-7 phi) <-)) (menv '()))\""
  0
  (#f #f #f))
'(sat-3
  1
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  39
  ((5/3 5/3 0) (5/3 5/3 0) (5/3 5/3 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (n3) (-> (app try (λ (n4) ...)) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-3
  1
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n6) ...) <-))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  7
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (n2) (-> (app try (λ (n3) ...)) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-3
  1
  "\"(list 'eval '(app (-> or <-) x1 x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app println (-> \"trying\" <-)) (menv '((□? (f)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '((□? (p)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> not <-) x3) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 x2) <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  110
  ((9 28/3 0) (29/3 10 0) (31/3 32/3 0)))
'(sat-3
  1
  "\"(list 'eval '(app or (-> x4 <-) x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  35
  ((2 2 0) (2 2 0) (7/3 8/3 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (n1) (-> (app try (λ (n2) ...)) <-))\n (menv '((□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (n7) (-> (app p n1 n2 n3 n4 n5 n6 n7) <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  0
  (#f #f #f))
'(sat-3
  1
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '((□? (f)))))\""
  31
  ((5/3 2 0) (5/3 5/3 0) (5/3 5/3 0)))
'(sat-3
  1
  "\"(list 'eval '(letrec (() (println (-> (λ (s) ...) <-)) phi) ...) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or (-> (app not x4) <-) x1)\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  39
  ((5/3 5/3 0) (2 2 0) (2 2 0)))
'(sat-3
  1
  "\"(list 'eval '(λ (f) (-> (let _ ... _ ...) <-)) (menv '((□? (f)))))\""
  0
  (#f #f #f))
'(sat-3
  1
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '((□? (n1)) (□? (p)))))\""
  4
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  39
  ((4/3 5/3 0) (5/3 5/3 0) (4/3 4/3 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app p n1 n2 n3 (-> n4 <-) n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  26
  ((1 1 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 n5 (-> n6 <-) n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  22
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-3
  1
  "\"(list 'eval '(app or (-> x3 <-) x4) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  37
  ((2 2 0) (4/3 4/3 0) (4/3 4/3 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app f (app #t)) (app f (app #f)))\n (menv '((□? (f)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app p n1 n2 (-> n3 <-) n4 n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  28
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-3
  1
  "\"(list 'eval '(let _ ... _ (-> (app newline) <-)) (menv '((□? (s)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(λ (s) (-> (let _ ... _ ...) <-)) (menv '((□? (s)))))\""
  4
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> or <-) x4 x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> p <-) n1 n2 n3 n4 n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  21
  ((1/3 2/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (x1 x2 x3 x4 x5 x6 x7)\n    (->\n     (app\n      and\n      (app or x1 x2)\n      (app or x1 (app not x2) (app not x3))\n      (app or x3 x4)\n      (app or (app not x4) x1)\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  0
  (#f #f #f))
'(sat-3
  1
  "\"(list 'eval '(app or x4 (-> x2 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  39
  ((5/3 5/3 0) (4/3 4/3 0) (4/3 4/3 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (-> (app or (app not x4) x1) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  104
  ((25/3 26/3 0) (26/3 9 0) (25/3 26/3 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or (app not x4) (-> x1 <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((4/3 4/3 0) (4/3 4/3 0) (4/3 4/3 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(let _ ... _ (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '((□? (f)))))\""
  0
  (#f #f #f))
'(sat-3
  1
  "\"(list 'eval '(app (-> sat-solve-7 <-) phi) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app sat-solve-7 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(letrec println ... sat-solve-7 (-> (let _ ... _ ...) <-))\n (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n7) ...) <-))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(letrec (try (sat-solve-7 (-> (λ (p) ...) <-)) ()) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app not x4) x1)\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n5) ...) <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> println <-) \"trying\") (menv '((□? (f)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n3) ...))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  2
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '((□? (f)))))\""
  198
  ((22 67/3 1/3) (68/3 23 2/3) (22 67/3 1/3)))
'(sat-small
  2
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  2
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '((□? (p)))))\""
  152
  ((40/3 41/3 0) (13 40/3 0) (40/3 41/3 0)))
'(sat-small
  2
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '((□? (n1)) (□? (p)))))\""
  4
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  2
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2)))))\""
  28
  ((4/3 4/3 0) (5/3 5/3 0) (4/3 4/3 0)))
'(sat-small
  2
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '((□? (f)))))\""
  13
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-small
  2
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  2
  "\"(list 'eval '(app (-> p <-) n1 n2) (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  11
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  2
  "\"(list\n 'eval\n '(letrec (phi (try (-> (λ (f) ...) <-)) sat-solve-2) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  2
  "\"(list 'eval '(app or (-> x1 <-) (app not x2)) (menv '((□? (x1 x2)))))\""
  27
  ((1 1 0) (1 1 0) (1 1 0)))
'(sat-small
  2
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '((□? (f)))))\""
  13
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-small
  2
  "\"(list\n 'eval\n '(λ (x1 x2) (-> (app or x1 (app not x2)) <-))\n (menv '((□? (x1 x2)))))\""
  97
  ((29/3 10 0) (29/3 10 0) (10 31/3 0)))
'(sat-small
  2
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  2
  "\"(list 'eval '(app p n1 (-> n2 <-)) (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  16
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-small
  2
  "\"(list 'eval '(app sat-solve-2 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  2
  "\"(list 'eval '(app or x1 (-> (app not x2) <-)) (menv '((□? (x1 x2)))))\""
  36
  ((2 2 0) (2 2 0) (2 2 0)))
'(sat-small
  2
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '((□? (p)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  2
  "\"(list 'eval '(app (-> sat-solve-2 <-) phi) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  2
  "\"(list 'eval '(app (-> or <-) x1 (app not x2)) (menv '((□? (x1 x2)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  2
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '((□? (p)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  2
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  2
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  2
  "\"(list\n 'eval\n '(λ (n2) (-> (app p n1 n2) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  117
  ((26/3 26/3 0) (26/3 26/3 0) (10 10 0)))
'(sat-small
  2
  "\"(list 'eval '((top) letrec phi ... sat-solve-2 ...) (menv '()))\""
  145
  ((37/3 38/3 0) (13 13 0) (37/3 38/3 0)))
'(sat-small
  2
  "\"(list\n 'eval\n '(app or (app f (app #t)) (-> (app f (app #f)) <-))\n (menv '((□? (f)))))\""
  157
  ((41/3 14 0) (41/3 14 0) (14 43/3 1/3)))
'(sat-small
  2
  "\"(list\n 'eval\n '(letrec (try (sat-solve-2 (-> (λ (p) ...) <-)) ()) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  2
  "\"(list\n 'eval\n '(λ (n1) (-> (app try (λ (n2) ...)) <-))\n (menv '((□? (n1)) (□? (p)))))\""
  139
  ((34/3 34/3 0) (38/3 13 0) (34/3 34/3 0)))
'(sat-small
  2
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '((□? (n1)) (□? (p)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  2
  "\"(list\n 'eval\n '(app (-> or <-) (app f (app #t)) (app f (app #f)))\n (menv '((□? (f)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  2
  "\"(list 'eval '(app p (-> n1 <-) n2) (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  18
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-small
  2
  "\"(list\n 'eval\n '(app or (-> (app f (app #t)) <-) (app f (app #f)))\n (menv '((□? (f)))))\""
  157
  ((34/3 35/3 0) (34/3 35/3 0) (40/3 41/3 0)))
'(sat-small
  2
  "\"(list 'eval '(letrec (() (phi (-> (λ (x1 x2) ...) <-)) try) ...) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-small
  2
  "\"(list\n 'eval\n '(letrec phi ... sat-solve-2 (-> (app sat-solve-2 phi) <-))\n (menv '()))\""
  144
  ((29/3 29/3 0) (29/3 10 0) (29/3 10 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app or (-> x1 <-) (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  33
  ((1 1 0) (1 1 0) (1 1 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app (-> or <-) (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n3) ...))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '((□? (f)))))\""
  23
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app (-> or <-) x1 (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app or (-> (app not x2) <-) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  36
  ((4/3 4/3 0) (4/3 4/3 0) (4/3 4/3 0)))
'(sat-1
  2
  "\"(list 'eval '(app or x4 (-> x2 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  32
  ((1 1 0) (1 4/3 0) (1 1 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app or (-> (app f (app #t)) <-) (app f (app #f)))\n (menv '((□? (f)))))\""
  0
  (#f #f #f))
'(sat-1
  2
  "\"(list\n 'eval\n '(letrec (phi (try (-> (λ (f) ...) <-)) sat-solve-4) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app (-> not <-) x3) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '((□? (p)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4)))))\""
  100
  ((23/3 8 0) (23/3 8 0) (23/3 8 0)))
'(sat-1
  2
  "\"(list 'eval '(app (-> or <-) x4 x2) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app p n1 (-> n2 <-) n3 n4)\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  22
  ((1/3 1/3 0) (2/3 2/3 0) (1/3 1/3 0)))
'(sat-1
  2
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '((□? (p)))))\""
  0
  (#f #f #f))
'(sat-1
  2
  "\"(list\n 'eval\n '(app or (app f (app #t)) (-> (app f (app #f)) <-))\n (menv '((□? (f)))))\""
  0
  (#f #f #f))
'(sat-1
  2
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app sat-solve-4 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '((□? (n1)) (□? (p)))))\""
  4
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '((□? (p)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(λ (x1 x2 x3 x4)\n    (->\n     (app\n      and\n      (app or x1 (app not x2) (app not x3))\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv '((□? (x1 x2 x3 x4)))))\""
  0
  (#f #f #f))
'(sat-1
  2
  "\"(list\n 'eval\n '(app p n1 n2 (-> n3 <-) n4)\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  20
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(letrec (() (phi (-> (λ (x1 x2 x3 x4) ...) <-)) try) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app (-> or <-) (app f (app #t)) (app f (app #f)))\n (menv '((□? (f)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app (-> not <-) x3) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app or (-> x4 <-) x2) (menv '((□? (x1 x2 x3 x4)))))\""
  30
  ((5/3 5/3 0) (4/3 4/3 0) (4/3 5/3 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(λ (n1) (-> (app try (λ (n2) ...)) <-))\n (menv '((□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-1
  2
  "\"(list\n 'eval\n '(λ (n2) (-> (app try (λ (n3) ...)) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-1
  2
  "\"(list\n 'eval\n '(letrec phi ... sat-solve-4 (-> (app sat-solve-4 phi) <-))\n (menv '()))\""
  0
  (#f #f #f))
'(sat-1
  2
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  2
  "\"(list 'eval '((top) letrec phi ... sat-solve-4 ...) (menv '()))\""
  0
  (#f #f #f))
'(sat-1
  2
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app or (app not x2) (-> (app not x3) <-))\n (menv '((□? (x1 x2 x3 x4)))))\""
  34
  ((4/3 5/3 0) (4/3 5/3 0) (4/3 4/3 0)))
'(sat-1
  2
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app or x1 (app not x2) (-> (app not x3) <-))\n (menv '((□? (x1 x2 x3 x4)))))\""
  34
  ((4/3 4/3 0) (4/3 4/3 0) (4/3 4/3 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4)))))\""
  245
  ((139/3 142/3 2/3) (136/3 139/3 2/3) (47 48 2/3)))
'(sat-1
  2
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app try (-> (λ (n4) ...) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app not (-> x3 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  30
  ((1 1 0) (1 1 0) (1 1 0)))
'(sat-1
  2
  "\"(list 'eval '(app not (-> x3 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  30
  ((4/3 4/3 0) (1 1 0) (1 1 0)))
'(sat-1
  2
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '((□? (f)))))\""
  23
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app or x1 (-> (app not x2) <-) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  36
  ((7/3 7/3 0) (4/3 4/3 0) (4/3 4/3 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(letrec (try (sat-solve-4 (-> (λ (p) ...) <-)) ()) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 (app not x2) (app not x3))\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv '((□? (x1 x2 x3 x4)))))\""
  80
  ((28/3 28/3 0) (25/3 26/3 0) (9 28/3 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(λ (n3) (-> (app try (λ (n4) ...)) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-1
  2
  "\"(list\n 'eval\n '(λ (n4) (-> (app p n1 n2 n3 n4) <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-1
  2
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  32
  ((4/3 4/3 0) (4/3 4/3 0) (1 4/3 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app try (-> (λ (n3) ...) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  4
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  32
  ((1 1 0) (4/3 4/3 0) (4/3 4/3 0)))
'(sat-1
  2
  "\"(list 'eval '(app (-> sat-solve-4 <-) phi) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app p (-> n1 <-) n2 n3 n4)\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  24
  ((1/3 1/3 0) (1/3 1/3 0) (2/3 2/3 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app (-> p <-) n1 n2 n3 n4)\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  15
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n4) ...))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app p n1 n2 n3 (-> n4 <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  18
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '((□? (f)))))\""
  0
  (#f #f #f))
'(sat-1
  2
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '((□? (n1)) (□? (p)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app not (-> x4 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  150
  ((32/3 11 0) (29/3 29/3 0) (28/3 29/3 0)))
'(sat-2
  2
  "\"(list 'eval '(app sat-solve-7 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) <-) n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  45
  ((8/3 8/3 0) (7/3 7/3 0) (7/3 7/3 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (x7)\n    (->\n     (app\n      and\n      (app or x1 x2)\n      (app or x1 (app not x2) (app not x3))\n      (app or x3 x4)\n      (app or (app not x4) x1)\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  0
  (#f #f #f))
'(sat-2
  2
  "\"(list\n 'eval\n '(app not (-> x2 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  72
  ((3 3 0) (3 3 0) (10/3 11/3 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  272
  ((143/3 146/3 2/3) (143/3 146/3 1) (47 48 2/3)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> not <-) x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (app not x2) (-> (app not x3) <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  117
  ((25/3 26/3 0) (29/3 10 0) (25/3 26/3 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (n7)\n    (-> (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7) <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  0
  (#f #f #f))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> or <-) x4 x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> or <-) x1 (app not x2) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '((□? (p)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> not <-) x4)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> or <-) (app not x4) x1)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (app f (app #t)) (-> (app f (app #f)) <-))\n (menv '((□? (f)))))\""
  0
  (#f #f #f))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (app not x4) (-> x1 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  54
  ((5/3 5/3 0) (5/3 5/3 0) (4/3 4/3 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (x5) (-> (λ (x6) ...) <-))\n (menv '((□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  6
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(letrec phi ... sat-solve-7 (-> (app sat-solve-7 phi) <-))\n (menv '()))\""
  0
  (#f #f #f))
'(sat-2
  2
  "\"(list\n 'eval\n '(app try (-> (λ (n3) ...) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  4
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list 'eval '(λ (x1) (-> (λ (x2) ...) <-)) (menv '((□? (x1)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or x3 x4) <-)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  282
  ((182/3 62 4/3) (60 184/3 2/3) (199/3 203/3 1)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or x1 (-> x2 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  72
  ((8/3 8/3 0) (8/3 8/3 0) (8/3 3 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n4) ...))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (app (app (app (app p n1) n2) n3) n4) (-> n5 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  25
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n5) ...))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  7
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> (app p n1) <-) n2)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  25
  ((2/3 2/3 0) (1/3 1/3 0) (2/3 2/3 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app not (-> x2 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  72
  ((8/3 3 0) (11/3 11/3 0) (3 3 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '((□? (f)))))\""
  0
  (#f #f #f))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (-> (app not x2) <-) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  80
  ((4 4 0) (13/3 13/3 0) (5 5 0)))
'(sat-2
  2
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '((□? (f)))))\""
  38
  ((5/3 5/3 0) (5/3 5/3 0) (5/3 5/3 0)))
'(sat-2
  2
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '((□? (n1)) (□? (p)))))\""
  4
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> (app (app (app p n1) n2) n3) <-) n4)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  33
  ((4/3 4/3 0) (4/3 4/3 0) (4/3 4/3 0)))
'(sat-2
  2
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app not (-> x3 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  101
  ((6 19/3 0) (19/3 19/3 0) (14/3 14/3 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app p (-> n1 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  33
  ((2/3 2/3 0) (1 1 0) (1 1 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app try (-> (λ (n4) ...) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (app p n1) (-> n2 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  31
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-2
  2
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (n2) (-> (app try (λ (n3) ...)) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> or <-) x3 x4)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (app (app (app (app (app p n1) n2) n3) n4) n5) (-> n6 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  23
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-2
  2
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '((□? (p)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '((□? (n1)) (□? (p)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (n5) (-> (app try (λ (n6) ...)) <-))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-2
  2
  "\"(list\n 'eval\n '(app try (-> (λ (n6) ...) <-))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  7
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (-> (app or (app not x4) x1) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  307
  ((169/3 173/3 1) (175/3 179/3 1) (166/3 170/3 2/3)))
'(sat-2
  2
  "\"(list\n 'eval\n '(letrec (phi (try (-> (λ (f) ...) <-)) sat-solve-7) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> or <-) (app not x2) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 x2) <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  167
  ((62/3 21 1/3) (61/3 62/3 0) (23 70/3 1/3)))
'(sat-2
  2
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> not <-) x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list 'eval '(λ (x2) (-> (λ (x3) ...) <-)) (menv '((□? (x2)) (□? (x1)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (n6) (-> (app try (λ (n7) ...)) <-))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (-> x3 <-) x4)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  101
  ((14/3 5 0) (14/3 14/3 0) (5 5 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n6) ...))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (n1) (-> (app try (λ (n2) ...)) <-))\n (menv '((□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-2
  2
  "\"(list\n 'eval\n '(app not (-> x3 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  101
  ((14/3 5 0) (14/3 14/3 0) (14/3 14/3 0)))
'(sat-2
  2
  "\"(list 'eval '((top) letrec phi ... sat-solve-7 ...) (menv '()))\""
  0
  (#f #f #f))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (n4) (-> (app try (λ (n5) ...)) <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> (app (app p n1) n2) <-) n3)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  29
  ((2/3 1 0) (2/3 1 0) (2/3 1 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or x1 (-> (app not x2) <-) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  80
  ((16/3 16/3 0) (4 4 0) (4 4 0)))
'(sat-2
  2
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '((□? (f)))))\""
  38
  ((5/3 5/3 0) (5/3 5/3 0) (5/3 5/3 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(letrec (try (sat-solve-7 (-> (λ (p) ...) <-)) ()) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app try (-> (λ (n7) ...) <-))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) (-> n7 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  21
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (x4) (-> (λ (x5) ...) <-))\n (menv '((□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (x3) (-> (λ (x4) ...) <-))\n (menv '((□? (x3)) (□? (x2)) (□? (x1)))))\""
  4
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (-> x1 <-) x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  54
  ((4/3 4/3 0) (5/3 5/3 0) (4/3 4/3 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (-> (app not x4) <-) x1)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  182
  ((62/3 21 1/3) (61/3 21 0) (58/3 20 1/3)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (n3) (-> (app try (λ (n4) ...)) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (-> (app f (app #t)) <-) (app f (app #f)))\n (menv '((□? (f)))))\""
  0
  (#f #f #f))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (x6) (-> (λ (x7) ...) <-))\n (menv '((□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  7
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list 'eval '(app (-> sat-solve-7 <-) phi) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (-> x4 <-) x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  150
  ((29/3 10 0) (10 31/3 0) (29/3 10 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> not <-) x3)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '((□? (p)))))\""
  0
  (#f #f #f))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  243
  ((35 107/3 2/3) (110/3 112/3 2/3) (104/3 106/3 2/3)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  0
  (#f #f #f))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or x4 (-> x2 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  72
  ((8/3 8/3 0) (8/3 3 0) (8/3 8/3 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app try (-> (λ (n5) ...) <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> p <-) n1)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  21
  ((1/3 1/3 0) (0 0 0) (0 1/3 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> or <-) x1 x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (app (app p n1) n2) (-> n3 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  29
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (app (app (app p n1) n2) n3) (-> n4 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  27
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n7) ...))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  9
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> (app (app (app (app (app p n1) n2) n3) n4) n5) <-) n6)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  41
  ((2 2 0) (2 2 0) (2 2 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or x3 (-> x4 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  150
  ((29/3 10 0) (29/3 10 0) (29/3 10 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> (app (app (app (app p n1) n2) n3) n4) <-) n5)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  37
  ((5/3 5/3 0) (5/3 5/3 0) (5/3 5/3 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (-> x1 <-) (app not x2) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  54
  ((4/3 4/3 0) (4/3 4/3 0) (4/3 4/3 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or x1 (app not x2) (-> (app not x3) <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  117
  ((8 25/3 0) (28/3 28/3 0) (25/3 26/3 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> not <-) x3)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> or <-) (app f (app #t)) (app f (app #f)))\n (menv '((□? (f)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n3) ...))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-2
  2
  "\"(list 'eval '(letrec (() (phi (-> (λ (x1) ...) <-)) try) ...) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(letrec (println (phi (-> (λ (x1 x2 x3 x4 x5 x6 x7) ...) <-)) try) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 x2) <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  124
  ((13 40/3 1/3) (35/3 35/3 0) (34/3 35/3 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app or (app not x2) (-> (app not x3) <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  43
  ((5/3 5/3 0) (11/3 11/3 0) (8/3 8/3 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(λ (n3) (-> (app try (λ (n4) ...)) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-3
  2
  "\"(list 'eval '(app (-> println <-) \"trying\") (menv '((□? (f)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app (-> or <-) (app not x4) x1)\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(letrec (() (println (-> (λ (s) ...) <-)) phi) ...) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or x3 x4) <-)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  109
  ((35/3 12 0) (34/3 35/3 0) (32/3 11 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (-> (app or (app not x4) x1) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  106
  ((26/3 9 0) (31/3 31/3 0) (35/3 12 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app p n1 n2 (-> n3 <-) n4 n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  29
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '((□? (p)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '((□? (f)))))\""
  38
  ((5/3 5/3 0) (5/3 5/3 0) (5/3 5/3 0)))
'(sat-3
  2
  "\"(list 'eval '(app or (-> x4 <-) x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  37
  ((4/3 4/3 0) (4/3 4/3 0) (4/3 4/3 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(letrec (phi (try (-> (λ (f) ...) <-)) sat-solve-7) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> newline <-)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app or (-> x1 <-) x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  42
  ((4/3 4/3 0) (5/3 5/3 0) (5/3 5/3 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app or x1 (-> (app not x2) <-) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  45
  ((5/3 5/3 0) (5/3 2 0) (5/3 2 0)))
'(sat-3
  2
  "\"(list 'eval '(app println (-> \"trying\" <-)) (menv '((□? (f)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> sat-solve-7 <-) phi) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app not (-> x4 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  37
  ((4/3 5/3 0) (4/3 5/3 0) (5/3 5/3 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app or (app not x4) (-> x1 <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  42
  ((4/3 4/3 0) (4/3 4/3 0) (4/3 4/3 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 n5 n6 (-> n7 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  21
  ((2/3 2/3 0) (2/3 2/3 0) (1 1 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(λ (n4) (-> (app try (λ (n5) ...)) <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-3
  2
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '((□? (f)))))\""
  38
  ((5/3 2 0) (5/3 2 0) (2 2 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> display <-) (app sat-solve-7 phi)) (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app try (-> (λ (n3) ...) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  4
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(let _ ... _ (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '((□? (f)))))\""
  0
  (#f #f #f))
'(sat-3
  2
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '((□? (n1)) (□? (p)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(let (() (_ (-> (app println \"trying\") <-)) ()) ...)\n (menv '((□? (f)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app try (-> (λ (n5) ...) <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> not <-) x3) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '((□? (p)))))\""
  0
  (#f #f #f))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> or <-) x1 x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(letrec println ... sat-solve-7 (-> (let _ ... _ ...) <-))\n (menv '()))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app or (-> x3 <-) x4) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  39
  ((4/3 4/3 0) (5/3 5/3 0) (5/3 5/3 0)))
'(sat-3
  2
  "\"(list 'eval '(app sat-solve-7 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(λ (n5) (-> (app try (λ (n6) ...)) <-))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-3
  2
  "\"(list\n 'eval\n '(λ (n2) (-> (app try (λ (n3) ...)) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-3
  2
  "\"(list 'eval '(app not (-> x3 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  39
  ((5/3 5/3 0) (5/3 5/3 0) (4/3 5/3 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app p (-> n1 <-) n2 n3 n4 n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  33
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> or <-) x3 x4) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '((□? (p)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  127
  ((11 11 0) (34/3 34/3 0) (35/3 12 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app try (-> (λ (n6) ...) <-))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  7
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> display <-) s) (menv '((□? (s)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((4/3 4/3 0) (4/3 4/3 0) (5/3 5/3 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app p n1 (-> n2 <-) n3 n4 n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  31
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n6) ...))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app or x3 (-> x4 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  37
  ((5/3 5/3 0) (5/3 5/3 0) (4/3 4/3 0)))
'(sat-3
  2
  "\"(list 'eval '(app display (-> s <-)) (menv '((□? (s)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  99
  ((10 31/3 0) (10 31/3 0) (9 9 0)))
'(sat-3
  2
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((5/3 5/3 0) (5/3 5/3 0) (5/3 5/3 0)))
'(sat-3
  2
  "\"(list 'eval '(λ (f) (-> (let _ ... _ ...) <-)) (menv '((□? (f)))))\""
  0
  (#f #f #f))
'(sat-3
  2
  "\"(list\n 'eval\n '(app or (-> (app not x4) <-) x1)\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((5/3 5/3 0) (7/3 7/3 0) (5/3 5/3 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app or x1 (app not x2) (-> (app not x3) <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  43
  ((5/3 5/3 0) (2 2 0) (2 2 0)))
'(sat-3
  2
  "\"(list 'eval '(app or x4 (-> x2 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((5/3 5/3 0) (7/3 7/3 0) (4/3 5/3 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n5) ...))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  7
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(λ (n6) (-> (app try (λ (n7) ...)) <-))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-3
  2
  "\"(list\n 'eval\n '(app or (-> (app not x2) <-) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  45
  ((2 2 0) (2 2 0) (5/3 5/3 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app p n1 n2 n3 (-> n4 <-) n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  27
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app (-> or <-) (app f (app #t)) (app f (app #f)))\n (menv '((□? (f)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(λ (s) (-> (let _ ... _ ...) <-)) (menv '((□? (s)))))\""
  4
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n7) ...))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  9
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> newline <-)) (menv '((□? (s)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(λ (n1) (-> (app try (λ (n2) ...)) <-))\n (menv '((□? (n1)) (□? (p)))))\""
  0
  (#f #f #f))
'(sat-3
  2
  "\"(list 'eval '(let (() (_ (-> (app display s) <-)) ()) ...) (menv '((□? (s)))))\""
  12
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-3
  2
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app display (-> (app sat-solve-7 phi) <-)) (menv '()))\""
  0
  (#f #f #f))
'(sat-3
  2
  "\"(list\n 'eval\n '(app (-> or <-) (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> not <-) x3) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list 'eval '((top) letrec println ... sat-solve-7 ...) (menv '()))\""
  4
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> or <-) x4 x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(let _ ... _ (-> (app newline) <-)) (menv '((□? (s)))))\""
  3
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(let _ ... _ (-> (app newline) <-)) (menv '()))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 n5 (-> n6 <-) n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  23
  ((2/3 2/3 0) (2/3 2/3 0) (2/3 2/3 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app try (-> (λ (n4) ...) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app or (-> (app f (app #t)) <-) (app f (app #f)))\n (menv '((□? (f)))))\""
  0
  (#f #f #f))
'(sat-3
  2
  "\"(list\n 'eval\n '(app or (app f (app #t)) (-> (app f (app #f)) <-))\n (menv '((□? (f)))))\""
  0
  (#f #f #f))
'(sat-3
  2
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 (-> n5 <-) n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  25
  ((1 1 0) (4/3 5/3 0) (5/3 3 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n4) ...))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app (-> p <-) n1 n2 n3 n4 n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  21
  ((1/3 1/3 0) (1/3 1/3 0) (1/3 1/3 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(letrec (try (sat-solve-7 (-> (λ (p) ...) <-)) ()) ...)\n (menv '()))\""
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(let (() (_ (-> (app display (app sat-solve-7 phi)) <-)) ()) ...)\n (menv '()))\""
  0
  (#f #f #f))
'(sat-3
  2
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '((□? (n1)) (□? (p)))))\""
  4
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  326
  ((247/3 84 7/3) (260/3 89 2) (79 241/3 2)))
'(sat-3
  2
  "\"(list\n 'eval\n '(λ (n7) (-> (app p n1 n2 n3 n4 n5 n6 n7) <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  0
  (#f #f #f))
'(sat-3
  2
  "\"(list\n 'eval\n '(app or (-> x1 <-) (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  42
  ((2 2 0) (2 2 0) (2 2 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app try (-> (λ (n7) ...) <-))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  8
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app not (-> x3 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  39
  ((5/3 5/3 0) (2 2 0) (2 2 0)))
'(sat-3
  2
  "\"(list 'eval '(app or x1 (-> x2 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((4/3 4/3 0) (4/3 5/3 0) (5/3 5/3 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app (-> or <-) x1 (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> not <-) x4) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n3) ...))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f)))))\""
  2
  ((0 0 0) (0 0 0) (0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(λ (x1 x2 x3 x4 x5 x6 x7)\n    (->\n     (app\n      and\n      (app or x1 x2)\n      (app or x1 (app not x2) (app not x3))\n      (app or x3 x4)\n      (app or (app not x4) x1)\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  0
  (#f #f #f))
