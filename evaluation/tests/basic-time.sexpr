'(sat-small
  0
  "\"(list 'eval '(app p n1 (-> n2 <-)) (menv '(() () ())))\""
  10
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '(() ())))\""
  2
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app (-> p <-) n1 n2) (menv '(() () ())))\""
  5
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '((top) letrec (phi ... sat-solve-2) ...) (menv '()))\""
  47
  ((1 1 0)))
'(sat-small
  0
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '(())))\""
  6
  ((0 0 0)))
'(sat-small
  0
  "\"(list\n 'eval\n '(letrec (... phi (try (-> (λ (f) ...) <-)) sat-solve-2 ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-small
  0
  "\"(list\n 'eval\n '(letrec (phi ... sat-solve-2) (-> (app sat-solve-2 phi) <-))\n (menv '()))\""
  46
  ((1 1 0)))
'(sat-small
  0
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '(() ())))\""
  1
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '(())))\""
  45
  ((1 1 0)))
'(sat-small
  0
  "\"(list 'eval '(app not (-> x2 <-)) (menv '(())))\""
  16
  ((0 0 0)))
'(sat-small 0 "\"(list 'eval '(app (-> #t <-)) (menv '(())))\"" 1 ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app or (app f (app #t)) (-> (app f (app #f)) <-)) (menv '(())))\""
  44
  ((1 1 0)))
'(sat-small
  0
  "\"(list 'eval '(app (-> not <-) x2) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '(())))\""
  6
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(λ (n1) (-> (app try (λ (n2) ...)) <-)) (menv '(() ())))\""
  44
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app (-> or <-) (app f (app #t)) (app f (app #f))) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app (-> or <-) x1 (app not x2)) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-small 0 "\"(list 'eval '(app (-> #f <-)) (menv '(())))\"" 1 ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app or (-> (app f (app #t)) <-) (app f (app #f))) (menv '(())))\""
  44
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app (-> sat-solve-2 <-) phi) (menv '()))\""
  2
  ((0 0 0)))
'(sat-small
  0
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '(())))\""
  44
  ((2 2 1)))
'(sat-small
  0
  "\"(list\n 'eval\n '(letrec (... () (phi (-> (λ (x1 x2) ...) <-)) try ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app sat-solve-2 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app or (-> x1 <-) (app not x2)) (menv '(())))\""
  16
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app or x1 (-> (app not x2) <-)) (menv '(())))\""
  20
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(λ (n2) (-> (app p n1 n2) <-)) (menv '(() () ())))\""
  32
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(λ (x1 x2) (-> (app or x1 (app not x2)) <-)) (menv '(())))\""
  26
  ((0 0 0)))
'(sat-small
  0
  "\"(list\n 'eval\n '(letrec (... try (sat-solve-2 (-> (λ (p) ...) <-)) () ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-small
  0
  "\"(list 'eval '(app p (-> n1 <-) n2) (menv '(() () ())))\""
  10
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> try <-) (λ (n3) ...)) (menv '(() () ())))\""
  2
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app sat-solve-4 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 (app not x2) (app not x3))\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv '(())))\""
  24
  ((0 0 0)))
'(sat-1 0 "\"(list 'eval '(app or (-> x4 <-) x2) (menv '(())))\"" 16 ((0 0 0)))
'(sat-1 0 "\"(list 'eval '(app not (-> x3 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> or <-) (app f (app #t)) (app f (app #f))) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app or (-> (app not x2) <-) (app not x3)) (menv '(())))\""
  20
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-1 0 "\"(list 'eval '(app (-> #f <-)) (menv '(())))\"" 1 ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv '(())))\""
  28
  ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  1
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(λ (n3) (-> (app try (λ (n4) ...)) <-)) (menv '(() () () ())))\""
  73
  ((2 2 0)))
'(sat-1 0 "\"(list 'eval '(app (-> not <-) x3) (menv '(())))\"" 1 ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '(())))\""
  74
  ((3 3 0)))
'(sat-1
  0
  "\"(list 'eval '(app or (app not x2) (-> (app not x3) <-)) (menv '(())))\""
  20
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '(())))\""
  10
  ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(letrec (... () (phi (-> (λ (x1 x2 x3 x4) ...) <-)) try ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '(())))\""
  73
  ((2 2 0)))
'(sat-1 0 "\"(list 'eval '(app (-> not <-) x2) (menv '(())))\"" 1 ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '(() ())))\""
  1
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app or (-> (app f (app #t)) <-) (app f (app #f))) (menv '(())))\""
  73
  ((2 2 0)))
'(sat-1
  0
  "\"(list 'eval '(app p n1 (-> n2 <-) n3 n4) (menv '(() () () () ())))\""
  10
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> sat-solve-4 <-) phi) (menv '()))\""
  2
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app p (-> n1 <-) n2 n3 n4) (menv '(() () () () ())))\""
  10
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app or x1 (-> (app not x2) <-) (app not x3)) (menv '(())))\""
  20
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> p <-) n1 n2 n3 n4) (menv '(() () () () ())))\""
  5
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> or <-) (app not x2) (app not x3)) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(λ (n4) (-> (app p n1 n2 n3 n4) <-)) (menv '(() () () () ())))\""
  55
  ((1 1 0)))
'(sat-1 0 "\"(list 'eval '(app (-> not <-) x2) (menv '(())))\"" 1 ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(λ (n2) (-> (app try (λ (n3) ...)) <-)) (menv '(() () ())))\""
  73
  ((2 2 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '(() ())))\""
  2
  ((0 0 0)))
'(sat-1 0 "\"(list 'eval '(app (-> not <-) x3) (menv '(())))\"" 1 ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(λ (n1) (-> (app try (λ (n2) ...)) <-)) (menv '(() ())))\""
  73
  ((2 2 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> try <-) (λ (n4) ...)) (menv '(() () () ())))\""
  2
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app p n1 n2 (-> n3 <-) n4) (menv '(() () () () ())))\""
  10
  ((0 0 0)))
'(sat-1 0 "\"(list 'eval '(app (-> #t <-)) (menv '(())))\"" 1 ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app or x1 (app not x2) (-> (app not x3) <-)) (menv '(())))\""
  20
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> or <-) x1 (app not x2) (app not x3)) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-1 0 "\"(list 'eval '(app not (-> x3 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  32
  ((0 1 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(letrec (phi ... sat-solve-4) (-> (app sat-solve-4 phi) <-))\n (menv '()))\""
  75
  ((3 3 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-1 0 "\"(list 'eval '(app (-> or <-) x4 x2) (menv '(())))\"" 1 ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app try (-> (λ (n3) ...) <-)) (menv '(() () ())))\""
  1
  ((0 0 0)))
'(sat-1 0 "\"(list 'eval '(app not (-> x2 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app try (-> (λ (n4) ...) <-)) (menv '(() () () ())))\""
  1
  ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(λ (x1 x2 x3 x4)\n    (->\n     (app\n      and\n      (app or x1 (app not x2) (app not x3))\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv '(())))\""
  49
  ((1 1 0)))
'(sat-1
  0
  "\"(list 'eval '(app p n1 n2 n3 (-> n4 <-)) (menv '(() () () () ())))\""
  10
  ((0 0 0)))
'(sat-1 0 "\"(list 'eval '(app not (-> x2 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(letrec (... try (sat-solve-4 (-> (λ (p) ...) <-)) () ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(letrec (... phi (try (-> (λ (f) ...) <-)) sat-solve-4 ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app or (app f (app #t)) (-> (app f (app #f)) <-)) (menv '(())))\""
  73
  ((2 2 0)))
'(sat-1
  0
  "\"(list 'eval '((top) letrec (phi ... sat-solve-4) ...) (menv '()))\""
  76
  ((2 2 0)))
'(sat-1 0 "\"(list 'eval '(app or x4 (-> x2 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '(())))\""
  10
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app or (-> x1 <-) (app not x2) (app not x3)) (menv '(())))\""
  16
  ((0 0 0)))
'(sat-2 0 "\"(list 'eval '(app (-> #f <-)) (menv '(())))\"" 1 ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (app (app p n1) n2) (-> n3 <-))\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> try <-) (λ (n5) ...)) (menv '(() () () () ())))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> or <-) (app f (app #t)) (app f (app #f))) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '(() ())))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app try (-> (λ (n3) ...) <-)) (menv '(() () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (n1) (-> (app try (λ (n2) ...)) <-)) (menv '(() ())))\""
  117
  ((6 6 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> or <-) x1 x2) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app try (-> (λ (n6) ...) <-)) (menv '(() () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (-> (app (app (app p n1) n2) n3) <-) n4)\n (menv '(() () () () () () () ())))\""
  11
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> not <-) x2) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(letrec (... () (phi (-> (λ (x1) ...) <-)) try ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> try <-) (λ (n7) ...)) (menv '(() () () () () () ())))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app not (-> x2 <-)) (menv '(() () () () () () ())))\""
  18
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (app p n1) (-> n2 <-)) (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (x1) (-> (λ (x2) ...) <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or (app f (app #t)) (-> (app f (app #f)) <-)) (menv '(())))\""
  117
  ((6 6 0)))
'(sat-2
  0
  "\"(list 'eval '(app not (-> x3 <-)) (menv '(() () () () () () ())))\""
  20
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> or <-) (app not x4) x1) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app or (app not x2) (-> (app not x3) <-))\n (menv '(() () () () () () ())))\""
  24
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app p (-> n1 <-)) (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (-> (app or (app not x4) x1) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  32
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> sat-solve-7 <-) phi) (menv '()))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or (-> x3 <-) x4) (menv '(() () () () () () ())))\""
  20
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (x2) (-> (λ (x3) ...) <-)) (menv '(() ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> not <-) x4) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> not <-) x3) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> or <-) x4 x2) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (n3) (-> (app try (λ (n4) ...)) <-)) (menv '(() () () ())))\""
  117
  ((6 6 0)))
'(sat-2
  0
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '(() ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app or (-> (app not x2) <-) (app not x3))\n (menv '(() () () () () () ())))\""
  22
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (x4) (-> (λ (x5) ...) <-)) (menv '(() () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (n7)\n    (-> (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7) <-))\n (menv '(() () () () () () () ())))\""
  87
  ((4 4 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(letrec (phi ... sat-solve-7) (-> (app sat-solve-7 phi) <-))\n (menv '()))\""
  119
  ((6 6 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(letrec (... try (sat-solve-7 (-> (λ (p) ...) <-)) () ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> not <-) x3) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (-> or <-) (app not x2) (app not x3))\n (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (x3) (-> (λ (x4) ...) <-)) (menv '(() () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (n5) (-> (app try (λ (n6) ...)) <-))\n (menv '(() () () () () ())))\""
  117
  ((6 6 0)))
'(sat-2
  0
  "\"(list 'eval '(app or (-> x1 <-) x2) (menv '(() () () () () () ())))\""
  16
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or (app not x4) (-> x1 <-)) (menv '(() () () () () () ())))\""
  16
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 x2) <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  26
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv '(() () () () () () ())))\""
  30
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (n6) (-> (app try (λ (n7) ...)) <-))\n (menv '(() () () () () () ())))\""
  117
  ((6 6 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app or (-> x1 <-) (app not x2) (app not x3))\n (menv '(() () () () () () ())))\""
  16
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '(())))\""
  16
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (x6) (-> (λ (x7) ...) <-)) (menv '(() () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or (-> x4 <-) x2) (menv '(() () () () () () ())))\""
  22
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  32
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '(())))\""
  118
  ((6 6 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (x7)\n    (->\n     (app\n      and\n      (app or x1 x2)\n      (app or x1 (app not x2) (app not x3))\n      (app or x3 x4)\n      (app or (app not x4) x1)\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv '(() () () () () () ())))\""
  69
  ((3 4 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  36
  ((1 1 0)))
'(sat-2
  0
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app or x1 (app not x2) (-> (app not x3) <-))\n (menv '(() () () () () () ())))\""
  24
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (n2) (-> (app try (λ (n3) ...)) <-)) (menv '(() () ())))\""
  117
  ((6 6 0)))
'(sat-2
  0
  "\"(list 'eval '(app not (-> x2 <-)) (menv '(() () () () () () ())))\""
  18
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> try <-) (λ (n4) ...)) (menv '(() () () ())))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) (-> n7 <-))\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (-> (app (app p n1) n2) <-) n3)\n (menv '(() () () () () () () ())))\""
  9
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app sat-solve-7 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or (-> (app not x4) <-) x1) (menv '(() () () () () () ())))\""
  26
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '(())))\""
  16
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app try (-> (λ (n5) ...) <-)) (menv '(() () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (-> (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) <-) n7)\n (menv '(() () () () () () () ())))\""
  17
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '(())))\""
  117
  ((6 6 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> try <-) (λ (n3) ...)) (menv '(() () ())))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> (app p n1) <-) n2) (menv '(() () () () () () () ())))\""
  7
  ((0 0 0)))
'(sat-2 0 "\"(list 'eval '(app (-> #t <-)) (menv '(())))\"" 1 ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or x1 (-> x2 <-)) (menv '(() () () () () () ())))\""
  18
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (app (app (app (app (app p n1) n2) n3) n4) n5) (-> n6 <-))\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (n4) (-> (app try (λ (n5) ...)) <-)) (menv '(() () () () ())))\""
  117
  ((6 6 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> not <-) x2) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app try (-> (λ (n7) ...) <-)) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or x4 (-> x2 <-)) (menv '(() () () () () () ())))\""
  18
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (-> or <-) x1 (app not x2) (app not x3))\n (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (-> (app (app (app (app (app p n1) n2) n3) n4) n5) <-) n6)\n (menv '(() () () () () () () ())))\""
  15
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(letrec (... phi (try (-> (λ (f) ...) <-)) sat-solve-7 ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or x3 (-> x4 <-)) (menv '(() () () () () () ())))\""
  22
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '((top) letrec (phi ... sat-solve-7) ...) (menv '()))\""
  120
  ((6 6 0)))
'(sat-2
  0
  "\"(list 'eval '(app not (-> x4 <-)) (menv '(() () () () () () ())))\""
  22
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> try <-) (λ (n6) ...)) (menv '(() () () () () ())))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(λ (x5) (-> (λ (x6) ...) <-)) (menv '(() () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (app (app (app (app p n1) n2) n3) n4) (-> n5 <-))\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app or x1 (-> (app not x2) <-) (app not x3))\n (menv '(() () () () () () ())))\""
  22
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or x3 x4) <-)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  30
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> p <-) n1) (menv '(() () () () () () () ())))\""
  5
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app try (-> (λ (n4) ...) <-)) (menv '(() () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> or <-) x3 x4) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app not (-> x3 <-)) (menv '(() () () () () () ())))\""
  20
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (app (app (app p n1) n2) n3) (-> n4 <-))\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (-> (app (app (app (app p n1) n2) n3) n4) <-) n5)\n (menv '(() () () () () () () ())))\""
  13
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or (-> (app f (app #t)) <-) (app f (app #f))) (menv '(())))\""
  117
  ((6 6 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(letrec (... phi (try (-> (λ (f) ...) <-)) sat-solve-7 ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (-> (app f (app #t)) <-) (app f (app #f))) (menv '(())))\""
  100
  ((7 7 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> or <-) (app not x2) (app not x3)) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> display <-) (app sat-solve-7 phi)) (menv '()))\""
  1
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app not (-> x2 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (-> x1 <-) (app not x2) (app not x3)) (menv '(())))\""
  16
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app (-> or <-) x4 x2) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (app not x4) (-> x1 <-)) (menv '(())))\""
  16
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app or x1 (-> x2 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app p (-> n1 <-) n2 n3 n4 n5 n6 n7)\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(λ (n2) (-> (app try (λ (n3) ...)) <-)) (menv '(() () ())))\""
  100
  ((5 5 0)))
'(sat-3 0 "\"(list 'eval '(app (-> #f <-)) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(λ (x1 x2 x3 x4 x5 x6 x7)\n    (->\n     (app\n      and\n      (app or x1 x2)\n      (app or x1 (app not x2) (app not x3))\n      (app or x3 x4)\n      (app or (app not x4) x1)\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv '(())))\""
  63
  ((3 4 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> or <-) x1 (app not x2) (app not x3)) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app display (-> s <-)) (menv '(())))\"" 4 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (app not x2) (-> (app not x3) <-)) (menv '(())))\""
  20
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (-> (app not x4) <-) x1) (menv '(())))\""
  20
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> println <-) \"trying\") (menv '(())))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app p n1 n2 n3 (-> n4 <-) n5 n6 n7)\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app try (-> (λ (n5) ...) <-)) (menv '(() () () () ())))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> try <-) (λ (n5) ...)) (menv '(() () () () ())))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '((top) letrec (println ... sat-solve-7) ...) (menv '()))\""
  4
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(λ (n3) (-> (app try (λ (n4) ...)) <-)) (menv '(() () () ())))\""
  100
  ((5 5 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(let (... () (_ (-> (app display (app sat-solve-7 phi)) <-)) () ...) ...)\n (menv '()))\""
  104
  ((6 6 0)))
'(sat-3
  0
  "\"(list 'eval '(app sat-solve-7 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app not (-> x2 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(letrec (println ... sat-solve-7) (-> (let (_) ...) <-))\n (menv '()))\""
  3
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '(() ())))\""
  1
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app or (-> x3 <-) x4) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> try <-) (λ (n7) ...)) (menv '(() () () () () () ())))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 n5 n6 (-> n7 <-))\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(let (... () (_ (-> (app println \"trying\") <-)) () ...) ...)\n (menv '(())))\""
  6
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '(() ())))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app not (-> x3 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app or (-> x4 <-) x2) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app (-> not <-) x4) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app (-> not <-) x2) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app (-> #t <-)) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app or x3 (-> x4 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(let (_) (-> (app newline) <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(let (_) (-> (app newline) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> sat-solve-7 <-) phi) (menv '()))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app (-> not <-) x3) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(letrec (... println (phi (-> (λ (x1 x2 x3 x4 x5 x6 x7) ...) <-)) try ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app try (-> (λ (n7) ...) <-)) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> try <-) (λ (n3) ...)) (menv '(() () ())))\""
  2
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app (-> or <-) x3 x4) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 n5 (-> n6 <-) n7)\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app (-> not <-) x2) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app p n1 (-> n2 <-) n3 n4 n5 n6 n7)\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv '(())))\""
  24
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(let (... () (_ (-> (app display s) <-)) () ...) ...)\n (menv '(())))\""
  6
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app display (-> (app sat-solve-7 phi) <-)) (menv '()))\""
  102
  ((5 6 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  32
  ((1 1 0)))
'(sat-3 0 "\"(list 'eval '(app (-> not <-) x3) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or x1 (-> (app not x2) <-) (app not x3)) (menv '(())))\""
  20
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(λ (f) (-> (let (_) ...) <-)) (menv '(())))\""
  100
  ((5 5 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> or <-) (app f (app #t)) (app f (app #f))) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(letrec (... () (println (-> (λ (s) ...) <-)) phi ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or x1 (app not x2) (-> (app not x3) <-)) (menv '(())))\""
  20
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app println (-> \"trying\" <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(let (_) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '(())))\""
  100
  ((6 6 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (-> (app or (app not x4) x1) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  26
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> try <-) (λ (n6) ...)) (menv '(() () () () () ())))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(λ (n1) (-> (app try (λ (n2) ...)) <-)) (menv '(() ())))\""
  100
  ((5 5 0)))
'(sat-3 0 "\"(list 'eval '(app (-> display <-) s) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (app f (app #t)) (-> (app f (app #f)) <-)) (menv '(())))\""
  100
  ((5 5 0)))
'(sat-3
  0
  "\"(list 'eval '(app try (-> (λ (n4) ...) <-)) (menv '(() () () ())))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app (-> p <-) n1 n2 n3 n4 n5 n6 n7)\n (menv '(() () () () () () () ())))\""
  5
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  1
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app not (-> x3 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app (-> newline <-)) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '(())))\""
  16
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 (-> n5 <-) n6 n7)\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app try (-> (λ (n6) ...) <-)) (menv '(() () () () () ())))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app try (-> (λ (n3) ...) <-)) (menv '(() () ())))\""
  1
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app or x4 (-> x2 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(λ (n6) (-> (app try (λ (n7) ...)) <-))\n (menv '(() () () () () () ())))\""
  100
  ((6 6 0)))
'(sat-3 0 "\"(list 'eval '(app not (-> x4 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '(())))\""
  101
  ((5 5 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> try <-) (λ (n4) ...)) (menv '(() () () ())))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(λ (n7) (-> (app p n1 n2 n3 n4 n5 n6 n7) <-))\n (menv '(() () () () () () () ())))\""
  69
  ((3 4 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 x2) <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  24
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app or (-> x1 <-) x2) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> or <-) (app not x4) x1) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(λ (n5) (-> (app try (λ (n6) ...)) <-))\n (menv '(() () () () () ())))\""
  100
  ((5 5 0)))
'(sat-3
  0
  "\"(list 'eval '(λ (n4) (-> (app try (λ (n5) ...)) <-)) (menv '(() () () () ())))\""
  100
  ((6 6 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (-> (app not x2) <-) (app not x3)) (menv '(())))\""
  20
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app (-> or <-) x1 x2) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or x3 x4) <-)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  24
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(λ (s) (-> (let (_) ...) <-)) (menv '(())))\""
  3
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv '(())))\""
  28
  ((0 1 0)))
'(sat-3 0 "\"(list 'eval '(app (-> newline <-)) (menv '()))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app p n1 n2 (-> n3 <-) n4 n5 n6 n7)\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '(())))\""
  16
  ((1 1 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(letrec (... try (sat-solve-7 (-> (λ (p) ...) <-)) () ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> board-mark <-) co this-mark bo) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (r x) (-> (app foldl (λ (c x) ...) x is) <-)) (menv '(() ())))\""
  605
  ((61 63 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app wins? (-> bo <-) this-mark) (menv '(() ())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> full? <-) bo) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app play-turn empty-board player-one (-> player-two <-))\n (menv '(())))\""
  11
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app + (-> sc <-) 1) (menv '(())))\""
  614
  ((61 62 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app horizon (-> oc <-) (app + sc 1)) (menv '(())))\""
  614
  ((60 62 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ (co mm) (-> (match (app blank? (app board-lookup co bo)) ...) <-))\n (menv '(() ())))\""
  605
  ((62 64 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app horizon< (app move-horizon mo₀) (-> (app move-horizon mo₁) <-))\n (menv '(())))\""
  605
  ((62 63 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app some-v (-> (app minimax bo that-mark this-mark) <-))\n (menv '(() ())))\""
  605
  ((66 68 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(let (_) (-> (app display \"Cat's game.\\n\") <-)) (menv '(())))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app coord r (-> c <-)) (menv '(() () ())))\""
  39
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   some\n   (->\n    (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...)\n    <-))\n (menv '(())))\""
  605
  ((61 62 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-mark (-> co <-) mark bo) (menv '(())))\""
  605
  ((68 69 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> (app full? bo) <-) (#f) _) (menv '(())))\""
  608
  ((71 73 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> fold/coord <-) (λ (co mm) ...) (app none)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> xs <-) (empty) (cons x rest-xs)) (menv '(())))\""
  25
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app player (-> (app O) <-) (app make-ai-action (app O)))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(let (... () (bo (-> (app board-mark co this-mark bo) <-)) () ...) ...)\n (menv '(() ())))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> h₁ <-) (horizon oc₁ sc₁)) (menv '(())))\""
  605
  ((73 74 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app horizon< (-> (app move-horizon mo₀) <-) (app move-horizon mo₁))\n (menv '(())))\""
  605
  ((65 67 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (c x) (-> (app f (app coord r c) x) <-)) (menv '(() () ())))\""
  605
  ((63 65 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (f acc l) (-> (match l ...) <-)) (menv '(())))\""
  605
  ((61 63 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ (c) (-> (app marked? (app b (app coord r c))) <-))\n (menv '(() () ())))\""
  605
  ((60 62 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app coord (-> rc <-) (app i⁻¹ rc)) (menv '(() ())))\""
  39
  ((2 2 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   play-game\n   (app player (app X) human-action)\n   (-> (app player (app O) human-action) <-))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (ma) (-> (match ma ...) <-)) (menv '(())))\""
  21
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app ormap (-> (λ (r) ...) <-) is) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app foldl (λ (r x) ...) x (-> is <-)) (menv '(())))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app blank? (app board-lookup co bo)) (#t) ((#f) (-> mm <-)))\n (menv '(() ())))\""
  605
  ((60 61 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   (-> or <-)\n   (app ormap (λ (r) ...) is)\n   (app ormap (λ (c) ...) is)\n   (app andmap (λ (rc) ...) is)\n   (app andmap (λ (rc) ...) is))\n (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app some (-> mo₁ <-)) (menv '(())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> display <-) \"Cat's game.\\n\") (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... () (some-v (-> (λ (a) ...) <-)) marked? ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app ormap (λ (r) ...) (-> is <-)) (menv '(())))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-mark co mark (-> bo <-)) (menv '(())))\""
  11
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app horizon< (-> (app move-horizon mo₀) <-) (app move-horizon mo₁))\n (menv '(())))\""
  605
  ((61 62 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> coord <-) r c) (menv '(() () ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app cons (-> (app Tw) <-) (app nil)) (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> void <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(let (... () (bo (-> (app board-mark co this-mark bo) <-)) () ...) ...)\n (menv '(() ())))\""
  4
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> X <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... wins? (full? (-> (λ (b) ...) <-)) oc< ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> Tw <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app cons (app Ze) (-> (app cons (app On) (app cons (app Tw) (app nil))) <-))\n (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app wins? bo mark) (#f) (_ (-> (let (_) ...) <-)))\n (menv '(())))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> marked? <-) (app b (app coord r c))) (menv '(() () ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app andmap (λ (c) ...) (-> is <-)) (menv '(() ())))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app maximin bo (-> that-mark <-) this-mark) (menv '(() ())))\""
  18
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   (-> play-game <-)\n   (app player (app X) (app make-ai-action (app X)))\n   (app player (app O) (app make-ai-action (app O))))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (...\n           two-player-game\n           (one-player-game (-> (λ () ...) <-))\n           zero-player-game\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> make-ai-action <-) (app O)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> draw-board! <-) bo) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app wins? (-> bo <-) this-mark) (menv '(() ())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> some-v <-) (app minimax bo that-mark this-mark))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> board-lookup <-) co bo) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app error (-> \"invalid match for move-coord\" <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... maximin (human-action (-> (λ (bo) ...) <-)) make-ai-action ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ (bo this-mark that-mark)\n    (-> (app fold/coord (λ (co mm) ...) (app none)) <-))\n (menv '(())))\""
  605
  ((61 62 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app some-v (-> (app maximin bo that-mark this-mark) <-))\n (menv '(() ())))\""
  605
  ((66 67 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ ()\n    (->\n     (app\n      play-game\n      (app player (app X) human-action)\n      (app player (app O) (app make-ai-action (app O))))\n     <-))\n (menv '(())))\""
  616
  ((72 73 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   (#t)\n   ((#f) (-> mo₁ <-)))\n (menv '(())))\""
  5
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> X <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> move-horizon <-) mo₁) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ (c) (-> (app marked-with? b (app coord r c) m) <-))\n (menv '(() () ())))\""
  605
  ((60 62 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   (app blank? (app board-lookup co bo))\n   ((#t) (-> (let (bo) ...) <-))\n   (#f))\n (menv '(() ())))\""
  605
  ((64 65 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app coord r (-> c <-)) (menv '(() () ())))\""
  39
  ((2 2 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app andmap (λ (r) ...) (-> is <-)) (menv '(())))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app and (app f x) (-> (app andmap f rest-xs) <-)) (menv '(())))\""
  605
  ((67 69 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app equal? m (-> m* <-)) (menv '(())))\""
  605
  ((71 73 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match xs ((empty) (-> (app #f) <-)) (cons x rest-xs))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... is (mark⁻¹ (-> (λ (ma) ...) <-)) empty-board ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app play-turn (-> empty-board <-) player-one player-two)\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match i (Ze) ((On) (-> (app On) <-)) (Tw)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app move-horizon (-> mo₀ <-)) (menv '(())))\""
  605
  ((76 77 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> cons <-) (app Ze) (app cons (app On) (app cons (app Tw) (app nil))))\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> f <-) (app coord r c) x) (menv '(() () ())))\""
  6
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   mmo\n   ((some mo₀)\n    (->\n     (app\n      some\n      (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...))\n     <-))\n   (none))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '((top) lettypes (Ze ... player) ...) (menv '()))\""
  621
  ((67 69 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app wins? bo this-mark) ((#f) (-> (match (app full? bo) ...) <-)) _)\n (menv '(() ())))\""
  625
  ((70 72 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app equal? (-> m <-) m*) (menv '(())))\""
  87
  ((5 5 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> marked-with? <-) b (app coord r c) m) (menv '(() () ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> horizon< <-) (app move-horizon mo₀) (app move-horizon mo₁))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> O <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... marked-with? (i⁻¹ (-> (λ (i) ...) <-)) ormap ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app equal? (-> oc₀ <-) oc₁) (menv '(())))\""
  605
  ((70 71 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... board-lookup (marked-with? (-> (λ (b co m) ...) <-)) i⁻¹ ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... horizon-add1 (foldl (-> (λ (f acc l) ...) <-)) fold/coord ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app wins? bo this-mark) ((#f) (-> (match (app full? bo) ...) <-)) _)\n (menv '(() ())))\""
  625
  ((70 72 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app full? (-> bo <-)) (menv '(() ())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app and (-> (app f x) <-) (app andmap f rest-xs)) (menv '(())))\""
  605
  ((70 72 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   play-game\n   (-> (app player (app X) human-action) <-)\n   (app player (app O) human-action))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app i⁻¹ (-> rc <-)) (menv '(() ())))\""
  39
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> error <-) \"invalid match for move-coord\") (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> loop <-)) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> On <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> nil <-)) (menv '()))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app minimax (-> bo <-) that-mark this-mark) (menv '(() ())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(let (bo)\n    (->\n     (app max-maybe-move mm (app move co (match (app wins? bo this-mark) ...)))\n     <-))\n (menv '(() ())))\""
  605
  ((68 70 3)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> board-mark <-) co this-mark bo) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   horizon-add1\n   (->\n    (app move-horizon (app some-v (app maximin bo that-mark this-mark)))\n    <-))\n (menv '(() ())))\""
  607
  ((79 81 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app ormap (-> (λ (c) ...) <-) is) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> oc₀ <-) (win) (draw) (lose)) (menv '(())))\""
  605
  ((77 79 3)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app move co (-> (match (app wins? bo this-mark) ...) <-))\n (menv '(() ())))\""
  605
  ((78 80 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (co) (-> (match (app equal? co₀ co) ...) <-)) (menv '(() ())))\""
  605
  ((77 79 2)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> Ze <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-mark co (-> this-mark <-) bo) (menv '(() ())))\""
  32
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app marked-with? (-> b <-) (app coord r c) m) (menv '(() () ())))\""
  16
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> b <-) (app coord r c)) (menv '(() () ())))\""
  16
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   (-> play-game <-)\n   (app player (app X) human-action)\n   (app player (app O) (app make-ai-action (app O))))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> andmap <-) (λ (rc) ...) is) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app some (-> mo₁ <-)) (menv '(())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app horizon (-> (app draw) <-) 0) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app marked-with? b (-> (app coord r c) <-) m) (menv '(() () ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> #f <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app marked-with? (-> b <-) (app coord rc (app i⁻¹ rc)) m)\n (menv '(() ())))\""
  16
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ (co mm) (-> (match (app blank? (app board-lookup co bo)) ...) <-))\n (menv '(() ())))\""
  605
  ((78 81 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... ormap (andmap (-> (λ (f xs) ...) <-)) wins? ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app foldl (λ (c x) ...) (-> x <-) is) (menv '(() ())))\""
  605
  ((73 75 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> coord <-) r c) (menv '(() () ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> horizon <-) (app lose) 0) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (...\n           empty-board\n           (board-mark (-> (λ (co₀ ma bo) ...) <-))\n           board-lookup\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app ormap f (-> rest-xs <-)) (menv '(())))\""
  17
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> h <-) (horizon oc sc)) (menv '(())))\""
  613
  ((71 72 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   or\n   (app ormap (λ (r) ...) is)\n   (app ormap (λ (c) ...) is)\n   (app andmap (λ (rc) ...) is)\n   (-> (app andmap (λ (rc) ...) is) <-))\n (menv '(())))\""
  605
  ((70 72 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app horizon (-> (app win) <-) 0) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app equal? (-> oc₁ <-) (app win)) (menv '(())))\""
  606
  ((69 70 2)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> #f <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (h) (-> (match h ...) <-)) (menv '(())))\""
  616
  ((72 74 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> maximin <-) bo ma (app mark⁻¹ ma)) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app f (-> x <-)) (menv '(())))\""
  32
  ((2 2 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app move (-> co <-) (match (app wins? bo this-mark) ...))\n (menv '(() ())))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app some-v (-> (app maximin bo ma (app mark⁻¹ ma)) <-))\n (menv '(() ())))\""
  605
  ((69 71 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match ma (X) ((O) (-> (app X) <-))) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> #t <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app marked-with? b (app coord rc (app i⁻¹ rc)) (-> m <-))\n (menv '(() ())))\""
  78
  ((3 3 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app ormap (-> f <-) rest-xs) (menv '(())))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app move-horizon (-> (app some-v (app minimax bo that-mark this-mark)) <-))\n (menv '(() ())))\""
  605
  ((66 67 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ (rc) (-> (app marked-with? b (app coord rc rc) m) <-))\n (menv '(() ())))\""
  605
  ((67 68 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app play-turn (-> bo <-) that-play this-play) (menv '(())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app foldl (λ (c x) ...) x (-> is <-)) (menv '(() ())))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app make-ai-action (-> (app O) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> #f <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> some <-) mo₁) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app equal? oc₁ (-> (app win) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... () (loop (-> (λ () ...) <-)) () ...) ...)\n (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app equal? co₀ co) ((#t) (-> (app marked ma) <-)) (#f))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... mark⁻¹ (empty-board (-> (λ (co) ...) <-)) board-mark ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app f x (-> acc <-)) (menv '(())))\""
  605
  ((61 62 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app draw-board! (-> bo <-)) (menv '(())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app cons (-> (app Ze) <-) (app cons (app On) (app cons (app Tw) (app nil))))\n (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app action (-> bo <-)) (menv '(() ())))\""
  11
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match l (nil) ((cons x xs) (-> (app foldl f (app f x acc) xs) <-)))\n (menv '(())))\""
  605
  ((62 63 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (...\n           min-maybe-move\n           (max-maybe-move (-> (λ (mmo mo₁) ...) <-))\n           minimax\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app fold/coord (λ (co mm) ...) (-> (app none) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (ma) (-> (λ (bo) ...) <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(let (... () (co (-> (letrec (loop) ...) <-)) () ...) ...)\n (menv '(())))\""
  605
  ((62 64 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> player <-) (app O) human-action) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app marked-with? (-> b <-) (app coord rc rc) m) (menv '(() ())))\""
  16
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... andmap (wins? (-> (λ (b m) ...) <-)) full? ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app play-turn empty-board (-> player-one <-) player-two)\n (menv '(())))\""
  11
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app move (-> co <-) (match (app wins? bo this-mark) ...))\n (menv '(() ())))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   min-maybe-move\n   (-> mm <-)\n   (app move co (match (app wins? bo this-mark) ...)))\n (menv '(() ())))\""
  605
  ((65 66 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match a ((blank) (-> (app #t) <-)) _) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(let (... () (_ (-> (app draw-board! bo) <-)) () ...) ...)\n (menv '(())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> i⁻¹ <-) rc) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   min-maybe-move\n   mm\n   (-> (app move co (match (app wins? bo this-mark) ...)) <-))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> draw-board! <-) bo) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> loop <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app coord r (-> c <-)) (menv '(() () ())))\""
  31
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app error (-> (app quote human-action) <-) \"not implemented\")\n (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match a (move _ x) (_ (-> (app error \"invalid match for move-horizon\") <-)))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app full? (-> bo <-)) (menv '(())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app draw-board! (-> bo <-)) (menv '(())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app horizon (app draw) (-> 0 <-)) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> player <-) (app O) (app make-ai-action (app O)))\n (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> andmap <-) (λ (rc) ...) is) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> (app wins? bo mark) <-) (#f) _) (menv '(())))\""
  606
  ((67 68 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   max-maybe-move\n   (-> mm <-)\n   (app move co (match (app wins? bo this-mark) ...)))\n (menv '(() ())))\""
  605
  ((69 70 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (r) (-> (app andmap (λ (c) ...) is) <-)) (menv '(() ())))\""
  605
  ((63 64 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app maximin bo ma (-> (app mark⁻¹ ma) <-)) (menv '(() ())))\""
  24
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... marked? (blank? (-> (λ (a) ...) <-)) move-coord ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> or <-) (app f x) (app ormap f rest-xs)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> full? <-) bo) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match oc₀ (win) ((draw) (-> (app equal? oc₁ (app win)) <-)) (lose))\n (menv '(())))\""
  610
  ((75 76 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app wins? bo mark) ((#f) (-> (match (app full? bo) ...) <-)) _)\n (menv '(())))\""
  623
  ((70 71 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> some-v <-) (app maximin bo ma (app mark⁻¹ ma)))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> coord <-) r c) (menv '(() () ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app blank? (app board-lookup co bo)) (#t) ((#f) (-> mm <-)))\n (menv '(() ())))\""
  605
  ((60 62 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   some\n   (->\n    (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...)\n    <-))\n (menv '(())))\""
  605
  ((68 70 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match this-play ((player mark action) (-> (let (co) ...) <-)))\n (menv '(())))\""
  612
  ((65 67 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   play-game\n   (-> (app player (app X) (app make-ai-action (app X))) <-)\n   (app player (app O) (app make-ai-action (app O))))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> X <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> andmap <-) (λ (r) ...) is) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> none <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match a ((some x) (-> x <-)) _) (menv '(())))\""
  605
  ((67 69 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (c) (-> (app andmap (λ (r) ...) is) <-)) (menv '(() ())))\""
  605
  ((65 67 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ (bo)\n    (-> (app move-coord (app some-v (app maximin bo ma (app mark⁻¹ ma)))) <-))\n (menv '(() ())))\""
  605
  ((61 63 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> marked <-) ma) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> a <-) (some x) _) (menv '(())))\""
  605
  ((61 63 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app player (app O) (-> human-action <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app coord rc (-> (app i⁻¹ rc) <-)) (menv '(() ())))\""
  55
  ((1 2 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> marked-with? <-) b (app coord r c) m) (menv '(() () ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> (app full? bo) <-) (#f) _) (menv '(() ())))\""
  608
  ((65 67 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app minimax bo that-mark (-> this-mark <-)) (menv '(() ())))\""
  18
  ((0 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app play-turn bo (-> that-play <-) this-play) (menv '(())))\""
  23
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-lookup (-> co <-) bo) (menv '(() ())))\""
  605
  ((71 72 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> foldl <-) (λ (r x) ...) x is) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... oc< (horizon< (-> (λ (h₀ h₁) ...) <-)) horizon-add1 ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match a ((move _ x) (-> x <-)) _) (menv '(())))\""
  605
  ((68 70 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app draw-board! (-> bo <-)) (menv '(())))\""
  11
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... horizon< (horizon-add1 (-> (λ (h) ...) <-)) foldl ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> ormap <-) (λ (c) ...) is) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   mmo\n   ((some mo₀)\n    (->\n     (app\n      some\n      (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...))\n     <-))\n   (none))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match h ((horizon oc sc) (-> (app horizon oc (app + sc 1)) <-)))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... i⁻¹ (ormap (-> (λ (f xs) ...) <-)) andmap ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> xs <-) (empty) (cons x rest-xs)) (menv '(())))\""
  17
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> a <-) (marked _) _) (menv '(())))\""
  605
  ((75 77 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app player (app X) (-> (app make-ai-action (app X)) <-))\n (menv '(())))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> some <-) mo₁) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app equal? (-> oc₁ <-) (app lose)) (menv '(())))\""
  605
  ((79 81 3)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (...\n           minimax\n           (maximin (-> (λ (bo this-mark that-mark) ...) <-))\n           human-action\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (b co m) (-> (match (app b co) ...) <-)) (menv '(())))\""
  605
  ((78 80 3)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-mark co this-mark (-> bo <-)) (menv '(() ())))\""
  8
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... full? (oc< (-> (λ (oc₀ oc₁) ...) <-)) horizon< ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (f xs) (-> (match xs ...) <-)) (menv '(())))\""
  605
  ((67 69 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> blank? <-) (app board-lookup co bo)) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app or (app f x) (-> (app ormap f rest-xs) <-)) (menv '(())))\""
  605
  ((66 68 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app marked-with? b (-> (app coord rc (app i⁻¹ rc)) <-) m)\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> move-horizon <-) mo₀) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   (-> or <-)\n   (app oc< oc₀ oc₁)\n   (app and (app equal? oc₀ oc₁) (app < sc₀ sc₁)))\n (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app full? bo) (#f) (_ (-> (let (_) ...) <-)))\n (menv '(())))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> player <-) (app X) human-action) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app bo (-> co <-)) (menv '(())))\""
  605
  ((70 72 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app quote (-> human-action <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app b (-> (app coord r c) <-)) (menv '(() () ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(let (... () (bo (-> (app board-mark co mark bo) <-)) () ...) ...)\n (menv '(())))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app marked-with? b (-> (app coord rc rc) <-) m) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app andmap (λ (r) ...) (-> is <-)) (menv '(() ())))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app player (-> (app O) <-) human-action) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> error <-) \"invalid match for move-horizon\") (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> board-mark <-) co mark bo) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app move-horizon (-> mo₁ <-)) (menv '(())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app horizon< (app move-horizon mo₀) (-> (app move-horizon mo₁) <-))\n (menv '(())))\""
  605
  ((66 68 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   (-> (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) <-)\n   (#t)\n   (#f))\n (menv '(())))\""
  605
  ((86 88 3)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app foldl (-> (λ (c x) ...) <-) x is) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> (app equal? co₀ co) <-) (#t) (#f)) (menv '(() ())))\""
  605
  ((73 75 3)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> move <-) co (match (app wins? bo this-mark) ...))\n (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(let (... () (co (-> (app action bo) <-)) () ...) ...)\n (menv '(() ())))\""
  605
  ((66 68 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app fold/coord (-> (λ (co mm) ...) <-) (app none)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app cons (app On) (-> (app cons (app Tw) (app nil)) <-))\n (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app play-turn bo that-play (-> this-play <-)) (menv '(())))\""
  23
  ((2 2 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   horizon-add1\n   (->\n    (app move-horizon (app some-v (app minimax bo that-mark this-mark)))\n    <-))\n (menv '(() ())))\""
  607
  ((81 83 3)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app coord (-> r <-) c) (menv '(() () ())))\""
  39
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app not (-> (app equal? oc₁ (app lose)) <-)) (menv '(())))\""
  605
  ((65 67 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app andmap (-> (λ (r) ...) <-) is) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app < sc₀ (-> sc₁ <-)) (menv '(())))\""
  605
  ((73 75 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-mark co this-mark (-> bo <-)) (menv '(() ())))\""
  45
  ((2 2 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match h₀ ((horizon oc₀ sc₀) (-> (match h₁ ...) <-)))\n (menv '(())))\""
  605
  ((68 71 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> marked-with? <-) b (app coord rc rc) m) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-lookup co (-> bo <-)) (menv '(() ())))\""
  11
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> draw-board! <-) bo) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ (player-one player-two)\n    (-> (app play-turn empty-board player-one player-two) <-))\n (menv '(())))\""
  615
  ((69 71 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app horizon (app win) (-> 0 <-)) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app error (-> \"invalid match for move-horizon\" <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> X <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> (app full? bo) <-) (#f) _) (menv '(() ())))\""
  608
  ((66 68 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> horizon <-) (app draw) 0) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> wins? <-) bo this-mark) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> horizon< <-) (app move-horizon mo₀) (app move-horizon mo₁))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> action <-) bo) (menv '(() ())))\""
  37
  ((2 2 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   or\n   (-> (app ormap (λ (r) ...) is) <-)\n   (app ormap (λ (c) ...) is)\n   (app andmap (λ (rc) ...) is)\n   (app andmap (λ (rc) ...) is))\n (menv '(())))\""
  605
  ((74 76 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app horizon (-> (app draw) <-) 0) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   ((#t) (-> mo₀ <-))\n   (#f))\n (menv '(())))\""
  605
  ((77 79 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> maximin <-) bo that-mark this-mark) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app cons (app Tw) (-> (app nil) <-)) (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   or\n   (app ormap (λ (r) ...) is)\n   (-> (app ormap (λ (c) ...) is) <-)\n   (app andmap (λ (rc) ...) is)\n   (app andmap (λ (rc) ...) is))\n (menv '(())))\""
  605
  ((68 70 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app coord (-> r <-) c) (menv '(() () ())))\""
  39
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(let (bo) (-> (match (app wins? bo mark) ...) <-)) (menv '(())))\""
  610
  ((69 71 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (mmo mo₁) (-> (match mmo ...) <-)) (menv '(())))\""
  605
  ((91 95 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> player <-) (app X) (app make-ai-action (app X)))\n (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> coord <-) rc (app i⁻¹ rc)) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (...\n           play-game\n           (two-player-game (-> (λ () ...) <-))\n           one-player-game\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app full? bo) (#f) (_ (-> (app horizon (app draw) 0) <-)))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app player (app X) (-> human-action <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(let (co) (-> (match (app blank? (app board-lookup co bo)) ...) <-))\n (menv '(() ())))\""
  605
  ((85 87 2)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> O <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (a) (-> (match a ...) <-)) (menv '(())))\""
  605
  ((82 84 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> equal? <-) m m*) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> ma <-) (X) (O)) (menv '(())))\""
  14
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> move-horizon <-) (app some-v (app minimax bo that-mark this-mark)))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> lose <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... some-v (marked? (-> (λ (a) ...) <-)) blank? ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app move-coord (-> (app some-v (app maximin bo ma (app mark⁻¹ ma))) <-))\n (menv '(() ())))\""
  605
  ((69 72 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match i (Ze) (On) ((Tw) (-> (app Ze) <-))) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-lookup (-> co <-) bo) (menv '(() ())))\""
  605
  ((67 68 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app andmap (λ (c) ...) (-> is <-)) (menv '(() ())))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match a ((marked _) (-> (app #t) <-)) _) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-lookup (-> co <-) bo) (menv '(() ())))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> f <-) x) (menv '(())))\""
  16
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   (app full? bo)\n   ((#f) (-> (app play-turn bo that-play this-play) <-))\n   _)\n (menv '(())))\""
  615
  ((70 72 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> (app wins? bo this-mark) <-) (#f) _) (menv '(() ())))\""
  605
  ((67 69 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app player (app O) (-> (app make-ai-action (app O)) <-))\n (menv '(())))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (h₀ h₁) (-> (match h₀ ...) <-)) (menv '(())))\""
  605
  ((75 77 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app equal? oc₀ (-> oc₁ <-)) (menv '(())))\""
  605
  ((83 90 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-lookup co (-> bo <-)) (menv '(() ())))\""
  8
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app horizon oc (-> (app + sc 1) <-)) (menv '(())))\""
  617
  ((69 71 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app minimax bo (-> that-mark <-) this-mark) (menv '(() ())))\""
  31
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   xs\n   (empty)\n   ((cons x rest-xs) (-> (app or (app f x) (app ormap f rest-xs)) <-)))\n (menv '(())))\""
  605
  ((85 87 3)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (co) (-> (app blank) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app mark⁻¹ (-> ma <-)) (menv '(() ())))\""
  11
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app b (-> co <-)) (menv '(())))\""
  14
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> #t <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app wins? bo this-mark) (#f) (_ (-> (app horizon (app win) 0) <-)))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app player (-> (app X) <-) human-action) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> full? <-) bo) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   or\n   (app ormap (λ (r) ...) is)\n   (app ormap (λ (c) ...) is)\n   (-> (app andmap (λ (rc) ...) is) <-)\n   (app andmap (λ (rc) ...) is))\n (menv '(())))\""
  605
  ((80 83 3)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> b <-) co) (menv '(())))\""
  25
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app display (-> \"Cat's game.\\n\" <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app b co) ((blank) (-> (app #f) <-)) (marked m*))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (a) (-> (match a ...) <-)) (menv '(())))\""
  605
  ((81 82 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-mark (-> co <-) this-mark bo) (menv '(() ())))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> equal? <-) oc₁ (app win)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app ormap (λ (c) ...) (-> is <-)) (menv '(())))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app blank? (app board-lookup co bo)) (#t) ((#f) (-> (app loop) <-)))\n (menv '(() ())))\""
  605
  ((68 70 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> move-horizon <-) mo₀) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app maximin (-> bo <-) ma (app mark⁻¹ ma)) (menv '(() ())))\""
  38
  ((2 2 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> horizon <-) oc (app + sc 1)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (...\n           fold/coord\n           (min-maybe-move (-> (λ (mmo mo₁) ...) <-))\n           max-maybe-move\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (-> (app blank? (app board-lookup co bo)) <-) (#t) (#f))\n (menv '(() ())))\""
  605
  ((70 71 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> none <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   (-> some <-)\n   (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...))\n (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> this-play <-) (player mark action)) (menv '(())))\""
  24
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app cons (-> (app On) <-) (app cons (app Tw) (app nil)))\n (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> l <-) (nil) (cons x xs)) (menv '(())))\""
  17
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(let (co) (-> (let (bo) ...) <-)) (menv '(())))\""
  611
  ((84 87 3)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app wins? bo (-> this-mark <-)) (menv '(() ())))\""
  32
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> cons <-) (app Tw) (app nil)) (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> andmap <-) (λ (c) ...) is) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   (-> max-maybe-move <-)\n   mm\n   (app move co (match (app wins? bo this-mark) ...)))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app fold/coord (-> (λ (co mm) ...) <-) (app none)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app foldl (-> f <-) (app f x acc) xs) (menv '(())))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> blank <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (co bo) (-> (app bo co) <-)) (menv '(())))\""
  605
  ((79 81 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app horizon (-> (app lose) <-) 0) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app wins? bo (-> this-mark <-)) (menv '(() ())))\""
  19
  ((1 1 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> #t <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app f (-> x <-)) (menv '(())))\""
  24
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app oc< (-> oc₀ <-) oc₁) (menv '(())))\""
  605
  ((64 65 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> a <-) (move x _) _) (menv '(())))\""
  605
  ((68 69 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ (b m)\n    (->\n     (app\n      or\n      (app ormap (λ (r) ...) is)\n      (app ormap (λ (c) ...) is)\n      (app andmap (λ (rc) ...) is)\n      (app andmap (λ (rc) ...) is))\n     <-))\n (menv '(())))\""
  605
  ((63 64 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app + sc (-> 1 <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(let (... () (_ (-> (app draw-board! bo) <-)) () ...) ...)\n (menv '(())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app blank? (-> (app board-lookup co bo) <-)) (menv '(() ())))\""
  605
  ((74 76 3)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app andmap (-> (λ (c) ...) <-) is) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   (app full? bo)\n   ((#f)\n    (->\n     (app\n      horizon-add1\n      (app move-horizon (app some-v (app minimax bo that-mark this-mark))))\n     <-))\n   _)\n (menv '(() ())))\""
  619
  ((74 76 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app andmap (λ (rc) ...) (-> is <-)) (menv '(())))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app coord r (-> c <-)) (menv '(() () ())))\""
  31
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> some-v <-) (app maximin bo that-mark this-mark))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app wins? (-> bo <-) mark) (menv '(())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> ormap <-) (λ (r) ...) is) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(letrec (loop) (-> (app loop) <-)) (menv '(())))\""
  605
  ((68 70 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> bo <-) co) (menv '(())))\""
  66
  ((4 4 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   (-> horizon-add1 <-)\n   (app move-horizon (app some-v (app maximin bo that-mark this-mark))))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> h₀ <-) (horizon oc₀ sc₀)) (menv '(())))\""
  605
  ((81 83 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app maximin bo (-> ma <-) (app mark⁻¹ ma)) (menv '(() ())))\""
  11
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   (-> horizon-add1 <-)\n   (app move-horizon (app some-v (app minimax bo that-mark this-mark))))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(let (... () (_ (-> (app draw-board! bo) <-)) () ...) ...)\n (menv '(())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   xs\n   (empty)\n   ((cons x rest-xs) (-> (app and (app f x) (app andmap f rest-xs)) <-)))\n (menv '(())))\""
  605
  ((74 76 3)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> void <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app < (-> sc₀ <-) sc₁) (menv '(())))\""
  605
  ((66 68 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> < <-) sc₀ sc₁) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app marked? (-> (app b (app coord r c)) <-)) (menv '(() () ())))\""
  605
  ((69 71 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app and (-> (app equal? oc₀ oc₁) <-) (app < sc₀ sc₁))\n (menv '(())))\""
  605
  ((66 68 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   play-game\n   (app player (app X) (app make-ai-action (app X)))\n   (-> (app player (app O) (app make-ai-action (app O))) <-))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   play-game\n   (app player (app X) human-action)\n   (-> (app player (app O) (app make-ai-action (app O))) <-))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> board-lookup <-) co bo) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app player (app X) (-> human-action <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (...\n           max-maybe-move\n           (minimax (-> (λ (bo this-mark that-mark) ...) <-))\n           maximin\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app marked-with? b (app coord rc rc) (-> m <-)) (menv '(() ())))\""
  78
  ((4 4 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app blank? (-> (app board-lookup co bo) <-)) (menv '(() ())))\""
  605
  ((71 73 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app move-horizon (-> mo₀ <-)) (menv '(())))\""
  605
  ((66 68 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app foldl (-> (λ (r x) ...) <-) x is) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   (app full? bo)\n   ((#f)\n    (->\n     (app\n      horizon-add1\n      (app move-horizon (app some-v (app maximin bo that-mark this-mark))))\n     <-))\n   _)\n (menv '(() ())))\""
  619
  ((68 70 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> and <-) (app equal? oc₀ oc₁) (app < sc₀ sc₁))\n (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> board-lookup <-) co bo) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match a ((move x _) (-> x <-)) _) (menv '(())))\""
  605
  ((67 69 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-lookup co (-> bo <-)) (menv '(() ())))\""
  45
  ((2 2 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app horizon (app lose) (-> 0 <-)) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   play-game\n   (-> (app player (app X) human-action) <-)\n   (app player (app O) (app make-ai-action (app O))))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> i <-) (Ze) (On) (Tw)) (menv '(())))\""
  42
  ((2 2 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> O <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app coord rc (-> rc <-)) (menv '(() ())))\""
  39
  ((1 2 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> #f <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app equal? (-> co₀ <-) co) (menv '(() ())))\""
  605
  ((70 72 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (a) (-> (match a ...) <-)) (menv '(())))\""
  605
  ((66 68 3)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app f (app coord r c) (-> x <-)) (menv '(() () ())))\""
  605
  ((65 67 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app equal? co₀ (-> co <-)) (menv '(() ())))\""
  605
  ((65 67 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(let (_) (-> (app void) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> mmo <-) (some mo₀) (none)) (menv '(())))\""
  605
  ((67 69 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(lettypes Ze ... player (letrec (some-v ... zero-player-game) ...))\n (menv '()))\""
  620
  ((69 71 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> andmap <-) (λ (c) ...) is) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   (-> (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) <-)\n   (#t)\n   (#f))\n (menv '(())))\""
  605
  ((67 69 3)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-mark co (-> this-mark <-) bo) (menv '(() ())))\""
  19
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> fold/coord <-) (λ (co mm) ...) (app none)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (-> (app blank? (app board-lookup co bo)) <-) (#t) (#f))\n (menv '(() ())))\""
  605
  ((66 68 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(let (_) (-> (match this-play ...) <-)) (menv '(())))\""
  613
  ((69 72 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ ()\n    (->\n     (app\n      play-game\n      (app player (app X) human-action)\n      (app player (app O) human-action))\n     <-))\n (menv '(())))\""
  617
  ((68 70 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app make-ai-action (-> (app X) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app player (-> (app X) <-) (app make-ai-action (app X)))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> (app wins? bo this-mark) <-) (#f) _) (menv '(() ())))\""
  605
  ((68 69 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> mark⁻¹ <-) ma) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app fold/coord (λ (co mm) ...) (-> (app none) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> player <-) (app X) human-action) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> blank? <-) (app board-lookup co bo)) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> O <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ (bo) (-> (app error (app quote human-action) \"not implemented\") <-))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app b co) (blank) ((marked m*) (-> (app equal? m m*) <-)))\n (menv '(())))\""
  605
  ((65 67 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match mmo (some mo₀) ((none) (-> (app some mo₁) <-)))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app player (-> (app X) <-) human-action) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> coord <-) r c) (menv '(() () ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app foldl f (app f x acc) (-> xs <-)) (menv '(())))\""
  17
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app maximin bo that-mark (-> this-mark <-)) (menv '(() ())))\""
  31
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (i) (-> (match i ...) <-)) (menv '(())))\""
  52
  ((1 2 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match a (marked _) (_ (-> (app #f) <-))) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app wins? bo this-mark) (#f) (_ (-> (app horizon (app lose) 0) <-)))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (...\n           board-mark\n           (board-lookup (-> (λ (co bo) ...) <-))\n           marked-with?\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> andmap <-) (λ (r) ...) is) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> cons <-) (app On) (app cons (app Tw) (app nil)))\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app blank? (app board-lookup co bo)) ((#t) (-> co <-)) (#f))\n (menv '(() ())))\""
  605
  ((99 102 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (a) (-> (match a ...) <-)) (menv '(())))\""
  605
  ((68 69 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ () (-> (let (co) ...) <-)) (menv '(() ())))\""
  605
  ((82 85 3)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app andmap (-> f <-) rest-xs) (menv '(())))\""
  15
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app horizon (app draw) (-> 0 <-)) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> move-coord <-) (app some-v (app maximin bo ma (app mark⁻¹ ma))))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app f (-> x <-) acc) (menv '(())))\""
  24
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (bo this-play that-play) (-> (let (_) ...) <-)) (menv '(())))\""
  614
  ((110 115 6)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... one-player-game (zero-player-game (-> (λ () ...) <-)) () ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> quote <-) human-action) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app or (-> (app f x) <-) (app ormap f rest-xs)) (menv '(())))\""
  605
  ((87 89 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app error (-> \"invalid match for some-v\" <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> equal? <-) oc₀ oc₁) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (co₀ ma bo) (-> (λ (co) ...) <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> marked-with? <-) b (app coord rc (app i⁻¹ rc)) m)\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match mmo (some mo₀) ((none) (-> (app some mo₁) <-)))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match l ((nil) (-> acc <-)) (cons x xs)) (menv '(())))\""
  605
  ((81 83 3)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   (-> play-game <-)\n   (app player (app X) human-action)\n   (app player (app O) human-action))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app player (app O) (-> (app make-ai-action (app O)) <-))\n (menv '(())))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app foldl f (-> (app f x acc) <-) xs) (menv '(())))\""
  605
  ((72 73 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app marked-with? b (-> (app coord r c) <-) m) (menv '(() () ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match ma ((X) (-> (app O) <-)) (O)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app marked-with? b (app coord r c) (-> m <-)) (menv '(() () ())))\""
  78
  ((4 4 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> win <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> move-horizon <-) (app some-v (app maximin bo that-mark this-mark)))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   (app blank? (app board-lookup co bo))\n   ((#t) (-> (let (bo) ...) <-))\n   (#f))\n (menv '(() ())))\""
  605
  ((71 73 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app error (app quote human-action) (-> \"not implemented\" <-))\n (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-lookup (-> co <-) bo) (menv '(() ())))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> not <-) (app equal? oc₁ (app lose))) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (b) (-> (app andmap (λ (r) ...) is) <-)) (menv '(())))\""
  607
  ((65 66 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app full? (-> bo <-)) (menv '(() ())))\""
  5
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> #f <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-lookup co (-> bo <-)) (menv '(() ())))\""
  57
  ((3 3 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> make-ai-action <-) (app O)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-mark (-> co <-) this-mark bo) (menv '(() ())))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app coord (-> r <-) c) (menv '(() () ())))\""
  31
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match a (some x) (_ (-> (app error \"invalid match for some-v\") <-)))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> + <-) sc 1) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (a) (-> (match a ...) <-)) (menv '(())))\""
  605
  ((68 70 2)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> On <-)) (menv '()))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app coord (-> r <-) c) (menv '(() () ())))\""
  31
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> lose <-)) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   or\n   (-> (app oc< oc₀ oc₁) <-)\n   (app and (app equal? oc₀ oc₁) (app < sc₀ sc₁)))\n (menv '(())))\""
  605
  ((71 73 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... blank? (move-coord (-> (λ (a) ...) <-)) move-horizon ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (r) (-> (app andmap (λ (c) ...) is) <-)) (menv '(() ())))\""
  605
  ((68 69 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> play-turn <-) empty-board player-one player-two)\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> (app b co) <-) (blank) (marked m*)) (menv '(())))\""
  605
  ((66 68 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (some-v ... zero-player-game) (-> (app zero-player-game) <-))\n (menv '()))\""
  619
  ((70 72 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> error <-) (app quote human-action) \"not implemented\")\n (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match oc₀ ((win) (-> (app #f) <-)) (draw) (lose)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> O <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app andmap f (-> rest-xs <-)) (menv '(())))\""
  25
  ((1 1 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> f <-) x) (menv '(())))\"" 8 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> wins? <-) bo this-mark) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... foldl (fold/coord (-> (λ (f x) ...) <-)) min-maybe-move ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> O <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app andmap (-> (λ (r) ...) <-) is) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app full? bo) (#f) (_ (-> (app horizon (app draw) 0) <-)))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app move-horizon (-> mo₁ <-)) (menv '(())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> and <-) (app f x) (app andmap f rest-xs)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app coord (-> rc <-) rc) (menv '(() ())))\""
  39
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (...\n           draw-board!\n           (play-turn (-> (λ (bo this-play that-play) ...) <-))\n           play-game\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app marked-with? b (app coord r c) (-> m <-)) (menv '(() () ())))\""
  78
  ((3 3 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app f (-> (app coord r c) <-) x) (menv '(() () ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> move <-) co (match (app wins? bo this-mark) ...))\n (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ (rc) (-> (app marked-with? b (app coord rc (app i⁻¹ rc)) m) <-))\n (menv '(() ())))\""
  605
  ((63 64 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   (#t)\n   ((#f) (-> mo₀ <-)))\n (menv '(())))\""
  605
  ((63 64 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   or\n   (app oc< oc₀ oc₁)\n   (-> (app and (app equal? oc₀ oc₁) (app < sc₀ sc₁)) <-))\n (menv '(())))\""
  605
  ((69 70 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ (r) (-> (app marked-with? b (app coord r c) m) <-))\n (menv '(() () ())))\""
  605
  ((69 70 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app and (app equal? oc₀ oc₁) (-> (app < sc₀ sc₁) <-))\n (menv '(())))\""
  605
  ((67 68 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app andmap (-> (λ (c) ...) <-) is) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(let (bo)\n    (->\n     (app min-maybe-move mm (app move co (match (app wins? bo this-mark) ...)))\n     <-))\n (menv '(() ())))\""
  605
  ((66 67 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> foldl <-) (λ (c x) ...) x is) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> blank? <-) (app board-lookup co bo)) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app player (-> (app O) <-) (app make-ai-action (app O)))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   oc₀\n   (win)\n   (draw)\n   ((lose) (-> (app not (app equal? oc₁ (app lose))) <-)))\n (menv '(())))\""
  605
  ((75 76 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> win <-)) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app andmap (-> (λ (rc) ...) <-) is) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> draw <-)) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> draw <-)) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> play-turn <-) bo that-play this-play) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app equal? oc₁ (-> (app lose) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match xs ((empty) (-> (app #t) <-)) (cons x rest-xs))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ (bo this-mark that-mark)\n    (-> (app fold/coord (λ (co mm) ...) (app none)) <-))\n (menv '(())))\""
  605
  ((66 67 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> coord <-) rc rc) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   ((#t) (-> mo₁ <-))\n   (#f))\n (menv '(())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app marked-with? (-> b <-) (app coord r c) m) (menv '(() () ())))\""
  16
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (app equal? co₀ co) (#t) ((#f) (-> (app board-lookup co bo) <-)))\n (menv '(() ())))\""
  605
  ((69 70 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app andmap (λ (rc) ...) (-> is <-)) (menv '(())))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... make-ai-action (draw-board! (-> (λ (bo) ...) <-)) play-turn ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> oc< <-) oc₀ oc₁) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> horizon <-) (app win) 0) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (f xs) (-> (match xs ...) <-)) (menv '(())))\""
  605
  ((69 71 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app board-mark co (-> mark <-) bo) (menv '(())))\""
  37
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> a <-) (blank) _) (menv '(())))\""
  605
  ((66 68 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app oc< oc₀ (-> oc₁ <-)) (menv '(())))\""
  605
  ((62 64 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (... move-coord (move-horizon (-> (λ (a) ...) <-)) is ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app (-> player <-) (app O) (app make-ai-action (app O)))\n (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   (-> some <-)\n   (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...))\n (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> Tw <-)) (menv '()))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app make-ai-action (-> (app O) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(λ ()\n    (->\n     (app\n      play-game\n      (app player (app X) (app make-ai-action (app X)))\n      (app player (app O) (app make-ai-action (app O))))\n     <-))\n (menv '(())))\""
  616
  ((70 71 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> zero-player-game <-)) (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> f <-) x acc) (menv '(())))\""
  8
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app move co (-> (match (app wins? bo this-mark) ...) <-))\n (menv '(() ())))\""
  605
  ((60 62 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> board-lookup <-) co bo) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (...\n           human-action\n           (make-ai-action (-> (λ (ma) ...) <-))\n           draw-board!\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   (-> min-maybe-move <-)\n   mm\n   (app move co (match (app wins? bo this-mark) ...)))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> foldl <-) f (app f x acc) xs) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> wins? <-) bo mark) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> move-horizon <-) mo₁) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> ormap <-) f rest-xs) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app\n   max-maybe-move\n   mm\n   (-> (app move co (match (app wins? bo this-mark) ...)) <-))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app wins? bo (-> mark <-)) (menv '(())))\""
  37
  ((1 1 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match a (blank) (_ (-> (app #f) <-))) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> equal? <-) co₀ co) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app marked (-> ma <-)) (menv '(() ())))\""
  78
  ((6 6 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app foldl (λ (r x) ...) (-> x <-) is) (menv '(())))\""
  8
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (...\n           move-horizon\n           (is\n            (->\n             (app\n              cons\n              (app Ze)\n              (app cons (app On) (app cons (app Tw) (app nil))))\n             <-))\n           mark⁻¹\n           ...)\n    ...)\n (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> error <-) \"invalid match for some-v\") (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> X <-)) (menv '(())))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match i ((Ze) (-> (app Tw) <-)) (On) (Tw)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (bo) (-> (app void) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app maximin (-> bo <-) that-mark this-mark) (menv '(() ())))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> andmap <-) f rest-xs) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> a <-) (move _ x) _) (menv '(())))\""
  605
  ((68 69 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(letrec (...\n           play-turn\n           (play-game (-> (λ (player-one player-two) ...) <-))\n           two-player-game\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> minimax <-) bo that-mark this-mark) (menv '(() ())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app andmap (-> (λ (rc) ...) <-) is) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(match (-> mmo <-) (some mo₀) (none)) (menv '(())))\""
  605
  ((68 70 2)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match\n   h₁\n   ((horizon oc₁ sc₁)\n    (->\n     (app or (app oc< oc₀ oc₁) (app and (app equal? oc₀ oc₁) (app < sc₀ sc₁)))\n     <-)))\n (menv '(())))\""
  605
  ((84 85 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (f x) (-> (app foldl (λ (r x) ...) x is) <-)) (menv '(())))\""
  605
  ((73 75 2)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> equal? <-) oc₁ (app lose)) (menv '(())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match (-> (app blank? (app board-lookup co bo)) <-) (#t) (#f))\n (menv '(() ())))\""
  605
  ((65 67 2)))
'(tic-tac-toe 0 "\"(list 'eval '(app (-> Ze <-)) (menv '()))\"" 1 ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> make-ai-action <-) (app X)) (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(app move-horizon (-> (app some-v (app maximin bo that-mark this-mark)) <-))\n (menv '(() ())))\""
  605
  ((65 67 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app (-> horizon <-) (app draw) 0) (menv '(() ())))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(app blank? (-> (app board-lookup co bo) <-)) (menv '(() ())))\""
  605
  ((61 63 1)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (oc₀ oc₁) (-> (match oc₀ ...) <-)) (menv '(())))\""
  605
  ((66 68 1)))
'(tic-tac-toe
  0
  "\"(list\n 'eval\n '(match a (move x _) (_ (-> (app error \"invalid match for move-coord\") <-)))\n (menv '(())))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  0
  "\"(list 'eval '(λ (mmo mo₁) (-> (match mmo ...) <-)) (menv '(())))\""
  605
  ((63 64 1)))
'(sat-small
  1
  "\"(list\n 'eval\n '(letrec (phi ... sat-solve-2) (-> (app sat-solve-2 phi) <-))\n (menv '()))\""
  119
  ((8 8 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '((□? (p)))))\""
  3
  ((0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app or (-> x1 <-) (app not x2)) (menv '((□? (x1 x2)))))\""
  26
  ((0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '((□? (p)))))\""
  2
  ((0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app f (app #t)) (app f (app #f)))\n (menv '((□? (f)))))\""
  2
  ((0 0 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '((□? (f)))))\""
  124
  ((10 10 0)))
'(sat-small
  1
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f)))))\""
  2
  ((0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> sat-solve-2 <-) phi) (menv '()))\""
  2
  ((0 0 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(λ (n2) (-> (app p n1 n2) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  91
  ((6 6 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '((□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(letrec (... try (sat-solve-2 (-> (λ (p) ...) <-)) () ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> or <-) x1 (app not x2)) (menv '((□? (x1 x2)))))\""
  2
  ((0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '((□? (f)))))\""
  11
  ((0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '((□? (p)))))\""
  120
  ((8 9 0)))
'(sat-small
  1
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2)))))\""
  24
  ((0 0 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(λ (n1) (-> (app try (λ (n2) ...)) <-))\n (menv '((□? (n1)) (□? (p)))))\""
  108
  ((7 7 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(letrec (... phi (try (-> (λ (f) ...) <-)) sat-solve-2 ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '((□? (n1)) (□? (p)))))\""
  3
  ((0 0 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(app or (-> (app f (app #t)) <-) (app f (app #f)))\n (menv '((□? (f)))))\""
  113
  ((7 7 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '((□? (f)))))\""
  11
  ((0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app p (-> n1 <-) n2) (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  17
  ((0 0 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(letrec (... () (phi (-> (λ (x1 x2) ...) <-)) try ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app or x1 (-> (app not x2) <-)) (menv '((□? (x1 x2)))))\""
  30
  ((1 1 0)))
'(sat-small
  1
  "\"(list 'eval '(app sat-solve-2 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f)))))\""
  2
  ((0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> p <-) n1 n2) (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  11
  ((0 0 0)))
'(sat-small
  1
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2)))))\""
  2
  ((0 0 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(app or (app f (app #t)) (-> (app f (app #f)) <-))\n (menv '((□? (f)))))\""
  113
  ((7 7 0)))
'(sat-small
  1
  "\"(list 'eval '((top) letrec (phi ... sat-solve-2) ...) (menv '()))\""
  120
  ((7 7 0)))
'(sat-small
  1
  "\"(list\n 'eval\n '(λ (x1 x2) (-> (app or x1 (app not x2)) <-))\n (menv '((□? (x1 x2)))))\""
  71
  ((3 4 0)))
'(sat-small
  1
  "\"(list 'eval '(app p n1 (-> n2 <-)) (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  15
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '((□? (p)))))\""
  3
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> sat-solve-4 <-) phi) (menv '()))\""
  2
  ((0 0 0)))
'(sat-1 1 "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  30
  ((1 1 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app or (-> (app f (app #t)) <-) (app f (app #f)))\n (menv '((□? (f)))))\""
  846
  ((210 215 4)))
'(sat-1
  1
  "\"(list 'eval '(app (-> not <-) x3) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 (app not x2) (app not x3))\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv '((□? (x1 x2 x3 x4)))))\""
  71
  ((5 5 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n3) ...))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(λ (n4) (-> (app p n1 n2 n3 n4) <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  752
  ((187 191 4)))
'(sat-1
  1
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app or x4 (-> x2 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  30
  ((1 1 0)))
'(sat-1
  1
  "\"(list 'eval '(app or (-> x4 <-) x2) (menv '((□? (x1 x2 x3 x4)))))\""
  26
  ((1 1 0)))
'(sat-1
  1
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '((□? (n1)) (□? (p)))))\""
  3
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app p (-> n1 <-) n2 n3 n4)\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  23
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app or (app not x2) (-> (app not x3) <-))\n (menv '((□? (x1 x2 x3 x4)))))\""
  34
  ((1 1 0)))
'(sat-1
  1
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '((□? (p)))))\""
  853
  ((219 223 4)))
'(sat-1
  1
  "\"(list 'eval '(app (-> not <-) x3) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4)))))\""
  218
  ((35 36 1)))
'(sat-1
  1
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  30
  ((1 1 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app f (app #t)) (app f (app #f)))\n (menv '((□? (f)))))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n4) ...) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n4) ...))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(letrec (... try (sat-solve-4 (-> (λ (p) ...) <-)) () ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-1 1 "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app or x1 (app not x2) (-> (app not x3) <-))\n (menv '((□? (x1 x2 x3 x4)))))\""
  34
  ((1 1 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(λ (n2) (-> (app try (λ (n3) ...)) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  827
  ((212 216 4)))
'(sat-1
  1
  "\"(list\n 'eval\n '(letrec (phi ... sat-solve-4) (-> (app sat-solve-4 phi) <-))\n (menv '()))\""
  852
  ((210 214 6)))
'(sat-1
  1
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4)))))\""
  85
  ((5 6 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '((□? (f)))))\""
  857
  ((218 222 4)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app not (-> x3 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  28
  ((1 1 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app or (-> x1 <-) (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  32
  ((1 1 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(λ (n3) (-> (app try (λ (n4) ...)) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  807
  ((193 197 5)))
'(sat-1
  1
  "\"(list\n 'eval\n '(λ (x1 x2 x3 x4)\n    (->\n     (app\n      and\n      (app or x1 (app not x2) (app not x3))\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv '((□? (x1 x2 x3 x4)))))\""
  603
  ((177 180 4)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '((□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app p n1 (-> n2 <-) n3 n4)\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  21
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app p n1 n2 (-> n3 <-) n4)\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  19
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '((top) letrec (phi ... sat-solve-4) ...) (menv '()))\""
  853
  ((229 234 8)))
'(sat-1
  1
  "\"(list\n 'eval\n '(letrec (... phi (try (-> (λ (f) ...) <-)) sat-solve-4 ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '((□? (p)))))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app not (-> x3 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  28
  ((1 1 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app or (app f (app #t)) (-> (app f (app #f)) <-))\n (menv '((□? (f)))))\""
  846
  ((208 212 4)))
'(sat-1
  1
  "\"(list\n 'eval\n '(λ (n1) (-> (app try (λ (n2) ...)) <-))\n (menv '((□? (n1)) (□? (p)))))\""
  841
  ((208 212 5)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n3) ...) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '((□? (f)))))\""
  19
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app or (-> (app not x2) <-) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  36
  ((1 1 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app or x1 (-> (app not x2) <-) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  36
  ((1 1 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '((□? (f)))))\""
  19
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(letrec (... () (phi (-> (λ (x1 x2 x3 x4) ...) <-)) try ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app (-> or <-) x1 (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app sat-solve-4 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> or <-) x4 x2) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app p n1 n2 n3 (-> n4 <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  17
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app (-> p <-) n1 n2 n3 n4)\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  15
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (app not x2) (-> (app not x3) <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  111
  ((7 7 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app not (-> x2 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  68
  ((3 3 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> or <-) x1 (app not x2) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n7) ...) <-))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (-> (app or (app not x4) x1) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  291
  ((57 58 1)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (n2) (-> (app try (λ (n3) ...)) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (x3) (-> (λ (x4) ...) <-))\n (menv '((□? (x3)) (□? (x2)) (□? (x1)))))\""
  4
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or x3 x4) <-)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  255
  ((49 50 1)))
'(sat-2
  1
  "\"(list\n 'eval\n '(letrec (phi ... sat-solve-7) (-> (app sat-solve-7 phi) <-))\n (menv '()))\""
  0
  (#f))
'(sat-2
  1
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '((□? (p)))))\""
  3
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app not (-> x4 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  134
  ((9 10 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  451
  ((127 130 2)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or x4 (-> x2 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  68
  ((2 2 0)))
'(sat-2
  1
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '((□? (f)))))\""
  31
  ((1 1 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (-> (app not x4) <-) x1)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  168
  ((16 17 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> (app (app (app p n1) n2) n3) <-) n4)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  30
  ((1 1 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> not <-) x4)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app p (-> n1 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  32
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (x5) (-> (λ (x6) ...) <-))\n (menv '((□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  6
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app not (-> x3 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  93
  ((4 4 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (app (app p n1) n2) (-> n3 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  28
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 x2) <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  153
  ((13 13 0)))
'(sat-2
  1
  "\"(list 'eval '(app sat-solve-7 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> or <-) x3 x4)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2 1 "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> (app (app (app (app p n1) n2) n3) n4) <-) n5)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  33
  ((1 1 0)))
'(sat-2
  1
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '((□? (p)))))\""
  2
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (app not x4) (-> x1 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  53
  ((1 1 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (n1) (-> (app try (λ (n2) ...)) <-))\n (menv '((□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (app (app (app (app p n1) n2) n3) n4) (-> n5 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  24
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (n7)\n    (-> (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7) <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  0
  (#f))
'(sat-2 1 "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (app (app (app (app (app p n1) n2) n3) n4) n5) (-> n6 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  22
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (n6) (-> (app try (λ (n7) ...)) <-))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n7) ...))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  9
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n6) ...) <-))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  7
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (x7)\n    (->\n     (app\n      and\n      (app or x1 x2)\n      (app or x1 (app not x2) (app not x3))\n      (app or x3 x4)\n      (app or (app not x4) x1)\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (-> x1 <-) (app not x2) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  53
  ((1 1 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (app p n1) (-> n2 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  30
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (x4) (-> (λ (x5) ...) <-))\n (menv '((□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  5
  ((0 0 0)))
'(sat-2
  1
  "\"(list 'eval '(λ (x1) (-> (λ (x2) ...) <-)) (menv '((□? (x1)))))\""
  2
  ((0 0 0)))
'(sat-2
  1
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '((□? (n1)) (□? (p)))))\""
  3
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  222
  ((34 34 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n4) ...))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (n5) (-> (app try (λ (n6) ...)) <-))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (n3) (-> (app try (λ (n4) ...)) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (-> (app f (app #t)) <-) (app f (app #f)))\n (menv '((□? (f)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n3) ...))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> or <-) x1 x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> not <-) x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list 'eval '((top) letrec (phi ... sat-solve-7) ...) (menv '()))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> not <-) x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '((□? (f)))))\""
  31
  ((1 1 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (x6) (-> (λ (x7) ...) <-))\n (menv '((□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  7
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> (app (app (app (app (app p n1) n2) n3) n4) n5) <-) n6)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  36
  ((1 1 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or x1 (-> (app not x2) <-) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  78
  ((4 4 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(letrec (... phi (try (-> (λ (f) ...) <-)) sat-solve-7 ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (app (app (app p n1) n2) n3) (-> n4 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  26
  ((0 0 0)))
'(sat-2
  1
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) <-) n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  39
  ((2 2 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or x1 (app not x2) (-> (app not x3) <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  111
  ((7 7 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (-> x3 <-) x4)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  93
  ((5 5 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or x1 (-> x2 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  68
  ((2 2 0)))
'(sat-2
  1
  "\"(list 'eval '(λ (x2) (-> (λ (x3) ...) <-)) (menv '((□? (x2)) (□? (x1)))))\""
  3
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n5) ...))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  7
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (n4) (-> (app try (λ (n5) ...)) <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (app f (app #t)) (-> (app f (app #f)) <-))\n (menv '((□? (f)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app f (app #t)) (app f (app #f)))\n (menv '((□? (f)))))\""
  2
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(letrec (... try (sat-solve-7 (-> (λ (p) ...) <-)) () ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n5) ...) <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '((□? (f)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app not x2) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(letrec (... () (phi (-> (λ (x1) ...) <-)) try ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-2
  1
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '((□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (-> (app not x2) <-) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  78
  ((3 3 0)))
'(sat-2
  1
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '((□? (p)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> not <-) x3)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n4) ...) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n6) ...))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  257
  ((42 43 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) (-> n7 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  20
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app not (-> x3 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  93
  ((4 4 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> (app (app p n1) n2) <-) n3)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  27
  ((1 1 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n3) ...) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app not x4) x1)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (-> x1 <-) x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  53
  ((1 1 0)))
'(sat-2
  1
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> or <-) x4 x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or x3 (-> x4 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  134
  ((8 8 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> not <-) x3)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (-> x4 <-) x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  134
  ((9 9 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app not (-> x2 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  68
  ((4 4 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> p <-) n1)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  21
  ((0 0 0)))
'(sat-2
  1
  "\"(list 'eval '(app (-> sat-solve-7 <-) phi) (menv '()))\""
  2
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> (app p n1) <-) n2)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  24
  ((1 1 0)))
'(sat-3
  1
  "\"(list 'eval '(app or x4 (-> x2 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  39
  ((1 1 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n5) ...) <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n7) ...) <-))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  8
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n6) ...) <-))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  7
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or (app not x2) (-> (app not x3) <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  43
  ((1 1 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or (-> (app f (app #t)) <-) (app f (app #f)))\n (menv '((□? (f)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list 'eval '(app (-> display <-) (app sat-solve-7 phi)) (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or (-> x1 <-) (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((2 2 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 n5 n6 (-> n7 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  20
  ((1 1 0)))
'(sat-3
  1
  "\"(list 'eval '(λ (f) (-> (let (_) ...) <-)) (menv '((□? (f)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n3) ...) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> not <-) x3) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(let (... () (_ (-> (app println \"trying\") <-)) () ...) ...)\n (menv '((□? (f)))))\""
  7
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '((□? (n1)) (□? (p)))))\""
  3
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app sat-solve-7 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (-> (app or (app not x4) x1) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  104
  ((10 10 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (n5) (-> (app try (λ (n6) ...)) <-))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list 'eval '(app println (-> \"trying\" <-)) (menv '((□? (f)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (n7) (-> (app p n1 n2 n3 n4 n5 n6 n7) <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  1012
  ((897 914 14)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app not x4) x1)\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(let (... () (_ (-> (app display (app sat-solve-7 phi)) <-)) () ...) ...)\n (menv '()))\""
  0
  (#f))
'(sat-3
  1
  "\"(list 'eval '(app (-> display <-) s) (menv '((□? (s)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or (-> (app not x4) <-) x1)\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((2 2 0)))
'(sat-3
  1
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  39
  ((1 1 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> not <-) x4) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app not (-> x4 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  35
  ((1 1 0)))
'(sat-3
  1
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '((□? (p)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app p n1 (-> n2 <-) n3 n4 n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  30
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or (app not x4) (-> x1 <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((1 1 0)))
'(sat-3 1 "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  39
  ((1 1 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(letrec (... () (println (-> (λ (s) ...) <-)) phi ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(letrec (... try (sat-solve-7 (-> (λ (p) ...) <-)) () ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 n5 (-> n6 <-) n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  22
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or (-> (app not x2) <-) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  45
  ((1 1 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> sat-solve-7 <-) phi) (menv '()))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> or <-) x1 (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> println <-) \"trying\") (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or (app f (app #t)) (-> (app f (app #f)) <-))\n (menv '((□? (f)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '((□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app not (-> x3 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  37
  ((2 2 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (n6) (-> (app try (λ (n7) ...)) <-))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or x1 (-> (app not x2) <-) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  45
  ((1 1 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app p n1 n2 n3 (-> n4 <-) n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  26
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> or <-) x1 x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> or <-) x4 x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(let (_) (-> (app newline) <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '((□? (f)))))\""
  31
  ((1 1 0)))
'(sat-3
  1
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '((□? (p)))))\""
  2
  ((0 0 0)))
'(sat-3 1 "\"(list 'eval '(app (-> newline <-)) (menv '()))\"" 1 ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app f (app #t)) (app f (app #f)))\n (menv '((□? (f)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 (-> n5 <-) n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  24
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(let (_) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '((□? (f)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(λ (s) (-> (let (_) ...) <-)) (menv '((□? (s)))))\""
  4
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(letrec (... phi (try (-> (λ (f) ...) <-)) sat-solve-7 ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> p <-) n1 n2 n3 n4 n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  21
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> not <-) x3) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app display (-> s <-)) (menv '((□? (s)))))\""
  7
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n5) ...))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  7
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or x3 x4) <-)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  96
  ((8 8 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '((□? (f)))))\""
  31
  ((1 1 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (n1) (-> (app try (λ (n2) ...)) <-))\n (menv '((□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n4) ...))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app or (-> x1 <-) x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((3 3 0)))
'(sat-3
  1
  "\"(list 'eval '(app not (-> x3 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  37
  ((5 5 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (n4) (-> (app try (λ (n5) ...)) <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list 'eval '((top) letrec (println ... sat-solve-7) ...) (menv '()))\""
  4
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  299
  ((51 52 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (n3) (-> (app try (λ (n4) ...)) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list\n 'eval\n '(letrec (println ... sat-solve-7) (-> (let (_) ...) <-))\n (menv '()))\""
  3
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n3) ...))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app display (-> (app sat-solve-7 phi) <-)) (menv '()))\""
  0
  (#f))
'(sat-3
  1
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '((□? (p)))))\""
  3
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app p n1 n2 (-> n3 <-) n4 n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  28
  ((0 0 0)))
'(sat-3 1 "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(let (_) (-> (app newline) <-)) (menv '((□? (s)))))\""
  3
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> newline <-)) (menv '((□? (s)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  98
  ((8 8 0)))
'(sat-3
  1
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (n2) (-> (app try (λ (n3) ...)) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 x2) <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  112
  ((9 9 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(let (... () (_ (-> (app display s) <-)) () ...) ...)\n (menv '((□? (s)))))\""
  11
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n4) ...) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app or (-> x4 <-) x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  35
  ((1 1 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app p (-> n1 <-) n2 n3 n4 n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  32
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or x1 (app not x2) (-> (app not x3) <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  43
  ((1 1 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (x1 x2 x3 x4 x5 x6 x7)\n    (->\n     (app\n      and\n      (app or x1 x2)\n      (app or x1 (app not x2) (app not x3))\n      (app or x3 x4)\n      (app or (app not x4) x1)\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  874
  ((704 717 17)))
'(sat-3
  1
  "\"(list\n 'eval\n '(letrec (... println (phi (-> (λ (x1 x2 x3 x4 x5 x6 x7) ...) <-)) try ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n6) ...))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  8
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app or (-> x3 <-) x4) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  37
  ((1 1 0)))
'(sat-3
  1
  "\"(list 'eval '(app or x3 (-> x4 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  35
  ((1 1 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n7) ...))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  9
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app or x1 (-> x2 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  39
  ((1 1 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  112
  ((8 8 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> or <-) x3 x4) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app board-lookup (-> co <-) bo)\n (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  1956
  ((639 651 16)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (-> (app b co) <-) (blank) (marked m*))\n (menv '((□? (b co m)))))\""
  1918
  ((656 669 19)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match (-> mmo <-) (some mo₀) (none)) (menv '((□? (mmo mo₁)))))\""
  1915
  ((469 478 15)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (f x) (-> (app foldl (λ (r x) ...) x is) <-))\n (menv '((□? (f x)))))\""
  1917
  ((493 502 14)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match i (Ze) ((On) (-> (app On) <-)) (Tw)) (menv '((□? (i)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> marked-with? <-) b (app coord r c) m)\n (menv '((□? (r)) (□? (c)) (□? (b m)))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (...\n           move-horizon\n           (is\n            (->\n             (app\n              cons\n              (app Ze)\n              (app cons (app On) (app cons (app Tw) (app nil))))\n             <-))\n           mark⁻¹\n           ...)\n    ...)\n (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... some-v (marked? (-> (λ (a) ...) <-)) blank? ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   (#t)\n   ((#f) (-> mo₁ <-)))\n (menv '((□? (mmo mo₁)))))\""
  9
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (app equal? co₀ co) (#t) ((#f) (-> (app board-lookup co bo) <-)))\n (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  1923
  ((490 499 12)))
'(tic-tac-toe 1 "\"(list 'eval '(app (-> nil <-)) (menv '()))\"" 1 ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   max-maybe-move\n   (-> mm <-)\n   (app move co (match (app wins? bo this-mark) ...)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1915
  ((498 508 16)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app + sc (-> 1 <-)) (menv '((□? (h)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (oc₀ oc₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match (-> h <-) (horizon oc sc)) (menv '((□? (h)))))\""
  2003
  ((614 626 16)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app equal? (-> m <-) m*) (menv '((□? (b co m)))))\""
  212
  ((16 16 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app move co (-> (match (app wins? bo this-mark) ...) <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1915
  ((457 467 11)))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (co bo) (-> (app bo co) <-)) (menv '((□? (co bo)))))\""
  1918
  ((478 488 13)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app make-ai-action (-> (app O) <-)) (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   or\n   (app ormap (λ (r) ...) is)\n   (-> (app ormap (λ (c) ...) is) <-)\n   (app andmap (λ (rc) ...) is)\n   (app andmap (λ (rc) ...) is))\n (menv '((□? (b m)))))\""
  1919
  ((503 513 15)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match mmo (some mo₀) ((none) (-> (app some mo₁) <-)))\n (menv '((□? (mmo mo₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (h) (-> (match h ...) <-)) (menv '((□? (h)))))\""
  2012
  ((697 710 37)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app move (-> co <-) (match (app wins? bo this-mark) ...))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  12
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app cons (-> (app Tw) <-) (app nil)) (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> move <-) co (match (app wins? bo this-mark) ...))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app board-lookup (-> co <-) bo)\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  1915
  ((469 480 14)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> draw-board! <-) bo)\n (menv '((□? (bo this-play that-play)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app marked-with? (-> b <-) (app coord rc (app i⁻¹ rc)) m)\n (menv '((□? (rc)) (□? (b m)))))\""
  31
  ((1 1 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app cons (-> (app On) <-) (app cons (app Tw) (app nil)))\n (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match a ((move x _) (-> x <-)) _) (menv '((□? (a)))))\""
  1918
  ((529 540 15)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> lose <-)) (menv '((□? (oc₀ oc₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> i⁻¹ <-) rc) (menv '((□? (rc)) (□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> equal? <-) oc₁ (app win)) (menv '((□? (oc₀ oc₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... andmap (wins? (-> (λ (b m) ...) <-)) full? ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app andmap (-> (λ (c) ...) <-) is) (menv '((□? (r)) (□? (b)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app marked-with? b (app coord rc (app i⁻¹ rc)) (-> m <-))\n (menv '((□? (rc)) (□? (b m)))))\""
  157
  ((28 29 1)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app maximin (-> bo <-) ma (app mark⁻¹ ma))\n (menv '((□? (bo)) (□? (ma)))))\""
  67
  ((10 10 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(let (... () (co (-> (app action bo) <-)) () ...) ...)\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  1915
  ((544 554 17)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app foldl (λ (c x) ...) (-> x <-) is)\n (menv '((□? (r x)) (□? (f x)))))\""
  1915
  ((620 633 17)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> and <-) (app f x) (app andmap f rest-xs))\n (menv '((□? (f xs)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app foldl f (-> (app f x acc) <-) xs) (menv '((□? (f acc l)))))\""
  1915
  ((458 468 14)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app horizon (app draw) (-> 0 <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app ormap (λ (c) ...) (-> is <-)) (menv '((□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app play-turn bo that-play (-> this-play <-))\n (menv '((□? (bo this-play that-play)))))\""
  43
  ((3 3 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app board-mark co mark (-> bo <-))\n (menv '((□? (bo this-play that-play)))))\""
  23
  ((1 1 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> move-horizon <-) mo₀) (menv '((□? (mmo mo₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> board-mark <-) co this-mark bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   play-game\n   (app player (app X) (app make-ai-action (app X)))\n   (-> (app player (app O) (app make-ai-action (app O))) <-))\n (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app board-lookup (-> co <-) bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  12
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app display (-> \"Cat's game.\\n\" <-))\n (menv '((□? (bo this-play that-play)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (c) (-> (app marked? (app b (app coord r c))) <-))\n (menv '((□? (c)) (□? (r)) (□? (b)))))\""
  1923
  ((515 524 15)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(let (... () (bo (-> (app board-mark co this-mark bo) <-)) () ...) ...)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  6
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> error <-) \"invalid match for move-horizon\")\n (menv '((□? (a)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (r x) (-> (app foldl (λ (c x) ...) x is) <-))\n (menv '((□? (r x)) (□? (f x)))))\""
  1919
  ((495 504 17)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> quote <-) human-action) (menv '((□? (bo)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   (-> play-game <-)\n   (app player (app X) (app make-ai-action (app X)))\n   (app player (app O) (app make-ai-action (app O))))\n (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> horizon <-) (app draw) 0)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app play-turn empty-board (-> player-one <-) player-two)\n (menv '((□? (player-one player-two)))))\""
  18
  ((1 1 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> make-ai-action <-) (app O)) (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> move-horizon <-) (app some-v (app minimax bo that-mark this-mark)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app some-v (-> (app maximin bo that-mark this-mark) <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1920
  ((612 624 15)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (app wins? bo this-mark) ((#f) (-> (match (app full? bo) ...) <-)) _)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1995
  ((553 565 16)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app player (app X) (-> (app make-ai-action (app X)) <-))\n (menv '((□? ()))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (bo this-mark that-mark)\n    (-> (app fold/coord (λ (co mm) ...) (app none)) <-))\n (menv '((□? (bo this-mark that-mark)))))\""
  1918
  ((469 479 14)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (a)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> cons <-) (app Ze) (app cons (app On) (app cons (app Tw) (app nil))))\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (a) (-> (match a ...) <-)) (menv '((□? (a)))))\""
  1922
  ((472 482 13)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (-> (app blank? (app board-lookup co bo)) <-) (#t) (#f))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1919
  ((469 479 14)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> full? <-) bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (c) (-> (app andmap (λ (r) ...) is) <-))\n (menv '((□? (c)) (□? (b m)))))\""
  1923
  ((449 459 13)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> draw-board! <-) bo)\n (menv '((□? (bo this-play that-play)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app wins? bo (-> this-mark <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  68
  ((4 4 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   (-> play-game <-)\n   (app player (app X) human-action)\n   (app player (app O) human-action))\n (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app board-lookup co (-> bo <-))\n (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  140
  ((10 11 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app player (-> (app X) <-) (app make-ai-action (app X)))\n (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app play-turn (-> empty-board <-) player-one player-two)\n (menv '((□? (player-one player-two)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app equal? (-> oc₀ <-) oc₁) (menv '((□? (h₀ h₁)))))\""
  1916
  ((474 485 15)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match (-> l <-) (nil) (cons x xs)) (menv '((□? (f acc l)))))\""
  29
  ((1 1 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app play-turn bo (-> that-play <-) this-play)\n (menv '((□? (bo this-play that-play)))))\""
  43
  ((3 3 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app full? (-> bo <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> board-mark <-) co mark bo)\n (menv '((□? (bo this-play that-play)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(let (... () (co (-> (letrec (loop) ...) <-)) () ...) ...)\n (menv '((□? (bo this-play that-play)))))\""
  1915
  ((544 555 14)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> coord <-) r c)\n (menv '((□? (c x)) (□? (r x)) (□? (f x)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app equal? (-> co₀ <-) co) (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  1919
  ((500 511 16)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> wins? <-) bo this-mark)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   horizon-add1\n   (->\n    (app move-horizon (app some-v (app maximin bo that-mark this-mark)))\n    <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1946
  ((506 517 14)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> minimax <-) bo that-mark this-mark)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match a (some x) (_ (-> (app error \"invalid match for some-v\") <-)))\n (menv '((□? (a)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   min-maybe-move\n   (-> mm <-)\n   (app move co (match (app wins? bo this-mark) ...)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1915
  ((477 487 13)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app foldl (λ (r x) ...) x (-> is <-)) (menv '((□? (f x)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   (-> some <-)\n   (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...))\n (menv '((□? (mmo mo₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app f (app coord r c) (-> x <-))\n (menv '((□? (c x)) (□? (r x)) (□? (f x)))))\""
  1924
  ((492 502 15)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match (-> xs <-) (empty) (cons x rest-xs)) (menv '((□? (f xs)))))\""
  52
  ((3 3 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app < sc₀ (-> sc₁ <-)) (menv '((□? (h₀ h₁)))))\""
  1916
  ((489 499 13)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> blank? <-) (app board-lookup co bo))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> coord <-) r c) (menv '((□? (r)) (□? (c)) (□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match i (Ze) (On) ((Tw) (-> (app Ze) <-))) (menv '((□? (i)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> Tw <-)) (menv '((□? (i)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app horizon (-> (app lose) <-) 0)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... foldl (fold/coord (-> (λ (f x) ...) <-)) min-maybe-move ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> action <-) bo)\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  66
  ((5 5 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (app wins? bo this-mark) (#f) (_ (-> (app horizon (app win) 0) <-)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> maximin <-) bo that-mark this-mark)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> some-v <-) (app maximin bo ma (app mark⁻¹ ma)))\n (menv '((□? (bo)) (□? (ma)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (co) (-> (app blank) <-)) (menv '((□? (co)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app minimax (-> bo <-) that-mark this-mark)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app coord (-> r <-) c) (menv '((□? (c)) (□? (r)) (□? (b)))))\""
  75
  ((4 4 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app andmap (-> (λ (rc) ...) <-) is) (menv '((□? (b m)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app b (-> (app coord r c) <-))\n (menv '((□? (c)) (□? (r)) (□? (b)))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... horizon-add1 (foldl (-> (λ (f acc l) ...) <-)) fold/coord ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (rc) (-> (app marked-with? b (app coord rc (app i⁻¹ rc)) m) <-))\n (menv '((□? (rc)) (□? (b m)))))\""
  1920
  ((463 473 16)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> some-v <-) (app maximin bo that-mark this-mark))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> coord <-) rc rc) (menv '((□? (rc)) (□? (b m)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (loop) (-> (app loop) <-))\n (menv '((□? (bo this-play that-play)))))\""
  1915
  ((534 545 15)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (player-one player-two)\n    (-> (app play-turn empty-board player-one player-two) <-))\n (menv '((□? (player-one player-two)))))\""
  1940
  ((458 468 13)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> wins? <-) bo this-mark)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match\n   xs\n   (empty)\n   ((cons x rest-xs) (-> (app and (app f x) (app andmap f rest-xs)) <-)))\n (menv '((□? (f xs)))))\""
  1927
  ((465 475 14)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> X <-)) (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app equal? oc₁ (-> (app win) <-)) (menv '((□? (oc₀ oc₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> void <-)) (menv '((□? (bo this-play that-play)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> foldl <-) (λ (c x) ...) x is)\n (menv '((□? (r x)) (□? (f x)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match h₀ ((horizon oc₀ sc₀) (-> (match h₁ ...) <-)))\n (menv '((□? (h₀ h₁)))))\""
  1930
  ((460 470 13)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> blank? <-) (app board-lookup co bo))\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match h ((horizon oc sc) (-> (app horizon oc (app + sc 1)) <-)))\n (menv '((□? (h)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app player (-> (app X) <-) human-action) (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app board-mark co (-> this-mark <-) bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  68
  ((4 4 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> ormap <-) (λ (c) ...) is) (menv '((□? (b m)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> equal? <-) oc₁ (app lose)) (menv '((□? (oc₀ oc₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... oc< (horizon< (-> (λ (h₀ h₁) ...) <-)) horizon-add1 ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app coord (-> rc <-) (app i⁻¹ rc))\n (menv '((□? (rc)) (□? (b m)))))\""
  72
  ((5 5 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app move-horizon (-> mo₀ <-)) (menv '((□? (mmo mo₁)))))\""
  1915
  ((651 663 27)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   horizon-add1\n   (->\n    (app move-horizon (app some-v (app minimax bo that-mark this-mark)))\n    <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1957
  ((496 506 14)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app move co (-> (match (app wins? bo this-mark) ...) <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1915
  ((623 636 19)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app error (app quote human-action) (-> \"not implemented\" <-))\n (menv '((□? (bo)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> blank <-)) (menv '((□? (co)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   max-maybe-move\n   mm\n   (-> (app move co (match (app wins? bo this-mark) ...)) <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app horizon (-> (app draw) <-) 0)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> full? <-) bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app andmap (-> (λ (rc) ...) <-) is) (menv '((□? (b m)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app some (-> mo₁ <-)) (menv '((□? (mmo mo₁)))))\""
  9
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> make-ai-action <-) (app O)) (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app coord r (-> c <-)) (menv '((□? (c)) (□? (r)) (□? (b m)))))\""
  72
  ((6 6 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app error (-> \"invalid match for move-coord\" <-))\n (menv '((□? (a)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> move-coord <-) (app some-v (app maximin bo ma (app mark⁻¹ ma))))\n (menv '((□? (bo)) (□? (ma)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (...\n           human-action\n           (make-ai-action (-> (λ (ma) ...) <-))\n           draw-board!\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> equal? <-) co₀ co) (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (b m)\n    (->\n     (app\n      or\n      (app ormap (λ (r) ...) is)\n      (app ormap (λ (c) ...) is)\n      (app andmap (λ (rc) ...) is)\n      (app andmap (λ (rc) ...) is))\n     <-))\n (menv '((□? (b m)))))\""
  1935
  ((473 483 11)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app foldl (-> (λ (c x) ...) <-) x is)\n (menv '((□? (r x)) (□? (f x)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> error <-) \"invalid match for move-coord\")\n (menv '((□? (a)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app minimax bo that-mark (-> this-mark <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  44
  ((2 2 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (co mm) (-> (match (app blank? (app board-lookup co bo)) ...) <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1929
  ((546 556 16)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app horizon (app lose) (-> 0 <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> horizon <-) (app win) 0)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... ormap (andmap (-> (λ (f xs) ...) <-)) wins? ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match this-play ((player mark action) (-> (let (co) ...) <-)))\n (menv '((□? (bo this-play that-play)))))\""
  1946
  ((482 492 16)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app marked-with? b (-> (app coord rc (app i⁻¹ rc)) <-) m)\n (menv '((□? (rc)) (□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (a) (-> (match a ...) <-)) (menv '((□? (a)))))\""
  1921
  ((627 639 21)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> lose <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app foldl (-> f <-) (app f x acc) xs) (menv '((□? (f acc l)))))\""
  16
  ((1 1 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> + <-) sc 1) (menv '((□? (h)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... marked-with? (i⁻¹ (-> (λ (i) ...) <-)) ormap ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> coord <-) r c) (menv '((□? (c)) (□? (r)) (□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match\n   (app full? bo)\n   ((#f) (-> (app play-turn bo that-play this-play) <-))\n   _)\n (menv '((□? (bo this-play that-play)))))\""
  1937
  ((465 475 13)))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (f xs) (-> (match xs ...) <-)) (menv '((□? (f xs)))))\""
  1929
  ((484 494 14)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app draw-board! (-> bo <-))\n (menv '((□? (bo this-play that-play)))))\""
  23
  ((1 1 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match (-> a <-) (some x) _) (menv '((□? (a)))))\""
  1932
  ((490 499 15)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app blank? (-> (app board-lookup co bo) <-))\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  1915
  ((470 479 11)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app maximin bo (-> that-mark <-) this-mark)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  44
  ((2 2 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app marked-with? b (app coord r c) (-> m <-))\n (menv '((□? (c)) (□? (r)) (□? (b m)))))\""
  161
  ((12 12 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app horizon< (-> (app move-horizon mo₀) <-) (app move-horizon mo₁))\n (menv '((□? (mmo mo₁)))))\""
  1915
  ((448 458 13)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app some-v (-> (app maximin bo ma (app mark⁻¹ ma)) <-))\n (menv '((□? (bo)) (□? (ma)))))\""
  1915
  ((444 454 9)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... is (mark⁻¹ (-> (λ (ma) ...) <-)) empty-board ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> wins? <-) bo mark)\n (menv '((□? (bo this-play that-play)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... () (some-v (-> (λ (a) ...) <-)) marked? ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app move-horizon (-> (app some-v (app maximin bo that-mark this-mark)) <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1933
  ((471 480 13)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> zero-player-game <-)) (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> andmap <-) (λ (r) ...) is) (menv '((□? (b)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   or\n   (app oc< oc₀ oc₁)\n   (-> (app and (app equal? oc₀ oc₁) (app < sc₀ sc₁)) <-))\n (menv '((□? (h₀ h₁)))))\""
  1925
  ((495 505 14)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> f <-) x acc) (menv '((□? (f acc l)))))\""
  20
  ((1 1 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> board-lookup <-) co bo)\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(let (bo) (-> (match (app wins? bo mark) ...) <-))\n (menv '((□? (bo this-play that-play)))))\""
  1940
  ((543 554 17)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (app full? bo) (#f) (_ (-> (app horizon (app draw) 0) <-)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   (#t)\n   ((#f) (-> mo₀ <-)))\n (menv '((□? (mmo mo₁)))))\""
  1916
  ((460 470 14)))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (a) (-> (match a ...) <-)) (menv '((□? (a)))))\""
  1922
  ((459 469 13)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app marked-with? b (app coord r c) (-> m <-))\n (menv '((□? (r)) (□? (c)) (□? (b m)))))\""
  161
  ((12 12 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app horizon (-> (app draw) <-) 0)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   play-game\n   (app player (app X) human-action)\n   (-> (app player (app O) (app make-ai-action (app O))) <-))\n (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... i⁻¹ (ormap (-> (λ (f xs) ...) <-)) andmap ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app cons (-> (app Ze) <-) (app cons (app On) (app cons (app Tw) (app nil))))\n (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app andmap (-> (λ (r) ...) <-) is) (menv '((□? (b)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> fold/coord <-) (λ (co mm) ...) (app none))\n (menv '((□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match\n   h₁\n   ((horizon oc₁ sc₁)\n    (->\n     (app or (app oc< oc₀ oc₁) (app and (app equal? oc₀ oc₁) (app < sc₀ sc₁)))\n     <-)))\n (menv '((□? (h₀ h₁)))))\""
  1929
  ((462 471 13)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (app blank? (app board-lookup co bo)) (#t) ((#f) (-> (app loop) <-)))\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  1921
  ((614 626 18)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match a ((blank) (-> (app #t) <-)) _) (menv '((□? (a)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app marked-with? b (-> (app coord rc rc) <-) m)\n (menv '((□? (rc)) (□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (-> this-play <-) (player mark action))\n (menv '((□? (bo this-play that-play)))))\""
  46
  ((4 4 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app maximin bo ma (-> (app mark⁻¹ ma) <-))\n (menv '((□? (bo)) (□? (ma)))))\""
  43
  ((3 3 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app or (-> (app f x) <-) (app ormap f rest-xs))\n (menv '((□? (f xs)))))\""
  1917
  ((456 466 14)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (co) (-> (match (app equal? co₀ co) ...) <-))\n (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  2003
  ((577 589 14)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> not <-) (app equal? oc₁ (app lose)))\n (menv '((□? (oc₀ oc₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app coord rc (-> (app i⁻¹ rc) <-))\n (menv '((□? (rc)) (□? (b m)))))\""
  91
  ((4 5 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> none <-)) (menv '((□? (bo this-mark that-mark)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (app wins? bo mark) ((#f) (-> (match (app full? bo) ...) <-)) _)\n (menv '((□? (bo this-play that-play)))))\""
  1964
  ((654 668 28)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app marked-with? (-> b <-) (app coord r c) m)\n (menv '((□? (r)) (□? (c)) (□? (b m)))))\""
  35
  ((1 1 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app equal? co₀ (-> co <-)) (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  1947
  ((514 525 18)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (-> (app wins? bo this-mark) <-) (#f) _)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1915
  ((460 470 14)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app maximin bo that-mark (-> this-mark <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  66
  ((6 6 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> cons <-) (app On) (app cons (app Tw) (app nil)))\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (b co m) (-> (match (app b co) ...) <-))\n (menv '((□? (b co m)))))\""
  1925
  ((469 478 14)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> player <-) (app O) (app make-ai-action (app O)))\n (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app fold/coord (-> (λ (co mm) ...) <-) (app none))\n (menv '((□? (bo this-mark that-mark)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match\n   mmo\n   ((some mo₀)\n    (->\n     (app\n      some\n      (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...))\n     <-))\n   (none))\n (menv '((□? (mmo mo₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app maximin bo (-> ma <-) (app mark⁻¹ ma))\n (menv '((□? (bo)) (□? (ma)))))\""
  21
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app draw-board! (-> bo <-))\n (menv '((□? (bo this-play that-play)))))\""
  6
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> board-lookup <-) co bo)\n (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... full? (oc< (-> (λ (oc₀ oc₁) ...) <-)) horizon< ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> marked-with? <-) b (app coord r c) m)\n (menv '((□? (c)) (□? (r)) (□? (b m)))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> win <-)) (menv '((□? (oc₀ oc₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (-> (app equal? co₀ co) <-) (#t) (#f))\n (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  1968
  ((724 738 34)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   or\n   (app ormap (λ (r) ...) is)\n   (app ormap (λ (c) ...) is)\n   (-> (app andmap (λ (rc) ...) is) <-)\n   (app andmap (λ (rc) ...) is))\n (menv '((□? (b m)))))\""
  1919
  ((457 467 12)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app wins? (-> bo <-) this-mark)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app move-horizon (-> mo₀ <-)) (menv '((□? (mmo mo₁)))))\""
  1915
  ((700 714 31)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   some\n   (->\n    (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...)\n    <-))\n (menv '((□? (mmo mo₁)))))\""
  1920
  ((512 521 17)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> b <-) co) (menv '((□? (b co m)))))\""
  86
  ((5 6 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match\n   xs\n   (empty)\n   ((cons x rest-xs) (-> (app or (app f x) (app ormap f rest-xs)) <-)))\n (menv '((□? (f xs)))))\""
  1921
  ((462 472 14)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   (-> or <-)\n   (app oc< oc₀ oc₁)\n   (app and (app equal? oc₀ oc₁) (app < sc₀ sc₁)))\n (menv '((□? (h₀ h₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (bo) (-> (app error (app quote human-action) \"not implemented\") <-))\n (menv '((□? (bo)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> error <-) \"invalid match for some-v\") (menv '((□? (a)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> marked-with? <-) b (app coord rc rc) m)\n (menv '((□? (rc)) (□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match\n   (app blank? (app board-lookup co bo))\n   ((#t) (-> (let (bo) ...) <-))\n   (#f))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1921
  ((495 505 16)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> full? <-) bo) (menv '((□? (bo this-play that-play)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app horizon (-> (app win) <-) 0)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (app blank? (app board-lookup co bo)) ((#t) (-> co <-)) (#f))\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  1918
  ((629 641 29)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match\n   mmo\n   ((some mo₀)\n    (->\n     (app\n      some\n      (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...))\n     <-))\n   (none))\n (menv '((□? (mmo mo₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app fold/coord (λ (co mm) ...) (-> (app none) <-))\n (menv '((□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app f (-> (app coord r c) <-) x)\n (menv '((□? (c x)) (□? (r x)) (□? (f x)))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> move-horizon <-) mo₁) (menv '((□? (mmo mo₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   play-game\n   (-> (app player (app X) (app make-ai-action (app X))) <-)\n   (app player (app O) (app make-ai-action (app O))))\n (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (b) (-> (app andmap (λ (r) ...) is) <-)) (menv '((□? (b)))))\""
  1930
  ((472 482 13)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(let (... () (_ (-> (app draw-board! bo) <-)) () ...) ...)\n (menv '((□? (bo this-play that-play)))))\""
  6
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app draw-board! (-> bo <-))\n (menv '((□? (bo this-play that-play)))))\""
  6
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> coord <-) r c) (menv '((□? (c)) (□? (r)) (□? (b)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (app equal? co₀ co) ((#t) (-> (app marked ma) <-)) (#f))\n (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match (-> h₁ <-) (horizon oc₁ sc₁)) (menv '((□? (h₀ h₁)))))\""
  1915
  ((457 467 11)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app full? (-> bo <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> void <-)) (menv '((□? (bo)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (-> (app full? bo) <-) (#f) _)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1930
  ((485 496 14)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (app b co) ((blank) (-> (app #f) <-)) (marked m*))\n (menv '((□? (b co m)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app and (-> (app f x) <-) (app andmap f rest-xs))\n (menv '((□? (f xs)))))\""
  1919
  ((614 626 18)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match (-> xs <-) (empty) (cons x rest-xs)) (menv '((□? (f xs)))))\""
  28
  ((1 1 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app andmap (λ (rc) ...) (-> is <-)) (menv '((□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> horizon <-) (app lose) 0)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app oc< (-> oc₀ <-) oc₁) (menv '((□? (h₀ h₁)))))\""
  1915
  ((489 501 15)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match l (nil) ((cons x xs) (-> (app foldl f (app f x acc) xs) <-)))\n (menv '((□? (f acc l)))))\""
  1917
  ((498 508 15)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app marked-with? (-> b <-) (app coord rc rc) m)\n (menv '((□? (rc)) (□? (b m)))))\""
  31
  ((1 1 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app horizon oc (-> (app + sc 1) <-)) (menv '((□? (h)))))\""
  2015
  ((570 582 16)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (...\n           draw-board!\n           (play-turn (-> (λ (bo this-play that-play) ...) <-))\n           play-game\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(let (co) (-> (let (bo) ...) <-))\n (menv '((□? (bo this-play that-play)))))\""
  1943
  ((477 488 13)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> move-horizon <-) mo₀) (menv '((□? (mmo mo₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> ormap <-) (λ (r) ...) is) (menv '((□? (b m)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app horizon (app win) (-> 0 <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (...\n           two-player-game\n           (one-player-game (-> (λ () ...) <-))\n           zero-player-game\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app error (-> \"invalid match for move-horizon\" <-))\n (menv '((□? (a)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> equal? <-) oc₀ oc₁) (menv '((□? (h₀ h₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app player (app X) (-> human-action <-)) (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app equal? m (-> m* <-)) (menv '((□? (b co m)))))\""
  1919
  ((504 514 13)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   (-> min-maybe-move <-)\n   mm\n   (app move co (match (app wins? bo this-mark) ...)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> display <-) \"Cat's game.\\n\")\n (menv '((□? (bo this-play that-play)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... make-ai-action (draw-board! (-> (λ (bo) ...) <-)) play-turn ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app maximin (-> bo <-) that-mark this-mark)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app andmap (λ (c) ...) (-> is <-)) (menv '((□? (r)) (□? (b)))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> move-horizon <-) (app some-v (app maximin bo that-mark this-mark)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (bo)\n    (-> (app move-coord (app some-v (app maximin bo ma (app mark⁻¹ ma)))) <-))\n (menv '((□? (bo)) (□? (ma)))))\""
  1925
  ((513 523 16)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app marked-with? b (-> (app coord r c) <-) m)\n (menv '((□? (r)) (□? (c)) (□? (b m)))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> coord <-) rc (app i⁻¹ rc))\n (menv '((□? (rc)) (□? (b m)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app f (-> x <-)) (menv '((□? (f xs)))))\""
  66
  ((4 4 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(let (bo)\n    (->\n     (app max-maybe-move mm (app move co (match (app wins? bo this-mark) ...)))\n     <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1921
  ((471 482 11)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app blank? (-> (app board-lookup co bo) <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1915
  ((492 502 14)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> O <-)) (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (app b co) (blank) ((marked m*) (-> (app equal? m m*) <-)))\n (menv '((□? (b co m)))))\""
  1922
  ((521 533 16)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ ()\n    (->\n     (app\n      play-game\n      (app player (app X) human-action)\n      (app player (app O) (app make-ai-action (app O))))\n     <-))\n (menv '((□? ()))))\""
  1936
  ((535 550 17)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> move <-) co (match (app wins? bo this-mark) ...))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app + (-> sc <-) 1) (menv '((□? (h)))))\""
  2006
  ((604 617 18)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app cons (app Ze) (-> (app cons (app On) (app cons (app Tw) (app nil))) <-))\n (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> blank? <-) (app board-lookup co bo))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app player (app X) (-> human-action <-)) (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(let (... () (bo (-> (app board-mark co this-mark bo) <-)) () ...) ...)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  6
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (-> (app wins? bo mark) <-) (#f) _)\n (menv '((□? (bo this-play that-play)))))\""
  1928
  ((590 601 16)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> draw <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (r) (-> (app andmap (λ (c) ...) is) <-))\n (menv '((□? (r)) (□? (b m)))))\""
  1923
  ((443 453 14)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app coord (-> r <-) c) (menv '((□? (c)) (□? (r)) (□? (b m)))))\""
  50
  ((2 2 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app wins? bo (-> mark <-))\n (menv '((□? (bo this-play that-play)))))\""
  61
  ((4 4 0)))
'(tic-tac-toe 1 "\"(list 'eval '(app (-> Tw <-)) (menv '()))\"" 1 ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> player <-) (app X) human-action) (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app error (-> \"invalid match for some-v\" <-)) (menv '((□? (a)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> andmap <-) (λ (rc) ...) is) (menv '((□? (b m)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> win <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match a ((marked _) (-> (app #t) <-)) _) (menv '((□? (a)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> move-horizon <-) mo₁) (menv '((□? (mmo mo₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... maximin (human-action (-> (λ (bo) ...) <-)) make-ai-action ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app make-ai-action (-> (app O) <-)) (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app andmap (-> f <-) rest-xs) (menv '((□? (f xs)))))\""
  35
  ((2 2 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app board-mark (-> co <-) this-mark bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  12
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app move-horizon (-> mo₁ <-)) (menv '((□? (mmo mo₁)))))\""
  9
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (-> (app blank? (app board-lookup co bo)) <-) (#t) (#f))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1921
  ((480 489 13)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> X <-)) (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (app full? bo) (#f) (_ (-> (app horizon (app draw) 0) <-)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app play-turn (-> bo <-) that-play this-play)\n (menv '((□? (bo this-play that-play)))))\""
  6
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match a ((some x) (-> x <-)) _) (menv '((□? (a)))))\""
  1935
  ((467 477 14)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app not (-> (app equal? oc₁ (app lose)) <-))\n (menv '((□? (oc₀ oc₁)))))\""
  1921
  ((583 594 15)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app foldl (λ (c x) ...) x (-> is <-))\n (menv '((□? (r x)) (□? (f x)))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (some-v ... zero-player-game) (-> (app zero-player-game) <-))\n (menv '()))\""
  1940
  ((440 449 9)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app and (app f x) (-> (app andmap f rest-xs) <-))\n (menv '((□? (f xs)))))\""
  1919
  ((473 482 10)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app bo (-> co <-)) (menv '((□? (co bo)))))\""
  1959
  ((505 516 13)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> b <-) (app coord r c))\n (menv '((□? (c)) (□? (r)) (□? (b)))))\""
  35
  ((1 1 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   (-> play-game <-)\n   (app player (app X) human-action)\n   (app player (app O) (app make-ai-action (app O))))\n (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> f <-) x) (menv '((□? (f xs)))))\""
  19
  ((1 1 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (...\n           board-mark\n           (board-lookup (-> (λ (co bo) ...) <-))\n           marked-with?\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(let (... () (bo (-> (app board-mark co mark bo) <-)) () ...) ...)\n (menv '((□? (bo this-play that-play)))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> bo <-) co) (menv '((□? (co bo)))))\""
  168
  ((13 13 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app player (-> (app X) <-) human-action) (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (bo this-mark that-mark)\n    (-> (app fold/coord (λ (co mm) ...) (app none)) <-))\n (menv '((□? (bo this-mark that-mark)))))\""
  1917
  ((462 472 13)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app player (app O) (-> human-action <-)) (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (-> (app blank? (app board-lookup co bo)) <-) (#t) (#f))\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  1921
  ((460 470 13)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app action (-> bo <-))\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  26
  ((2 2 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... board-lookup (marked-with? (-> (λ (b co m) ...) <-)) i⁻¹ ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (...\n           empty-board\n           (board-mark (-> (λ (co₀ ma bo) ...) <-))\n           board-lookup\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app andmap (λ (r) ...) (-> is <-)) (menv '((□? (c)) (□? (b m)))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match (-> a <-) (blank) _) (menv '((□? (a)))))\""
  1917
  ((455 465 14)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app board-mark (-> co <-) mark bo)\n (menv '((□? (bo this-play that-play)))))\""
  1915
  ((532 542 13)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   some\n   (->\n    (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...)\n    <-))\n (menv '((□? (mmo mo₁)))))\""
  1920
  ((451 460 12)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app and (-> (app equal? oc₀ oc₁) <-) (app < sc₀ sc₁))\n (menv '((□? (h₀ h₁)))))\""
  1919
  ((464 474 12)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f xs)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> Ze <-)) (menv '((□? (i)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... one-player-game (zero-player-game (-> (λ () ...) <-)) () ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app equal? (-> oc₁ <-) (app lose)) (menv '((□? (oc₀ oc₁)))))\""
  1917
  ((463 473 12)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match mmo (some mo₀) ((none) (-> (app some mo₁) <-)))\n (menv '((□? (mmo mo₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app board-mark (-> co <-) this-mark bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  12
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> foldl <-) f (app f x acc) xs) (menv '((□? (f acc l)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app board-lookup co (-> bo <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  90
  ((5 5 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> horizon <-) (app draw) 0)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe 1 "\"(list 'eval '(app (-> Ze <-)) (menv '()))\"" 1 ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app andmap (λ (r) ...) (-> is <-)) (menv '((□? (b)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> horizon< <-) (app move-horizon mo₀) (app move-horizon mo₁))\n (menv '((□? (mmo mo₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> X <-)) (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... wins? (full? (-> (λ (b) ...) <-)) oc< ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ ()\n    (->\n     (app\n      play-game\n      (app player (app X) human-action)\n      (app player (app O) human-action))\n     <-))\n (menv '((□? ()))))\""
  1938
  ((442 452 13)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app board-mark co this-mark (-> bo <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  14
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match (-> a <-) (marked _) _) (menv '((□? (a)))))\""
  1917
  ((548 560 19)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (...\n           fold/coord\n           (min-maybe-move (-> (λ (mmo mo₁) ...) <-))\n           max-maybe-move\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app b (-> co <-)) (menv '((□? (b co m)))))\""
  26
  ((1 1 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> O <-)) (menv '((□? (ma)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app blank? (-> (app board-lookup co bo) <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1915
  ((482 492 14)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app equal? oc₀ (-> oc₁ <-)) (menv '((□? (h₀ h₁)))))\""
  1916
  ((450 459 14)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> cons <-) (app Tw) (app nil)) (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match (-> h₀ <-) (horizon oc₀ sc₀)) (menv '((□? (h₀ h₁)))))\""
  1915
  ((479 489 14)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match a (blank) (_ (-> (app #f) <-))) (menv '((□? (a)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app coord r (-> c <-)) (menv '((□? (c)) (□? (r)) (□? (b)))))\""
  72
  ((4 4 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match\n   (app blank? (app board-lookup co bo))\n   ((#t) (-> (let (bo) ...) <-))\n   (#f))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1924
  ((616 630 22)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   play-game\n   (-> (app player (app X) human-action) <-)\n   (app player (app O) (app make-ai-action (app O))))\n (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match (-> oc₀ <-) (win) (draw) (lose)) (menv '((□? (oc₀ oc₁)))))\""
  1917
  ((467 477 15)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match a (marked _) (_ (-> (app #f) <-))) (menv '((□? (a)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(let (bo)\n    (->\n     (app min-maybe-move mm (app move co (match (app wins? bo this-mark) ...)))\n     <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1919
  ((443 452 11)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app full? (-> bo <-)) (menv '((□? (bo this-play that-play)))))\""
  6
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (app wins? bo this-mark) ((#f) (-> (match (app full? bo) ...) <-)) _)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  2018
  ((533 544 14)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app ormap f (-> rest-xs <-)) (menv '((□? (f xs)))))\""
  28
  ((1 1 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app foldl (λ (r x) ...) (-> x <-) is) (menv '((□? (f x)))))\""
  13
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> fold/coord <-) (λ (co mm) ...) (app none))\n (menv '((□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (a) (-> (match a ...) <-)) (menv '((□? (a)))))\""
  1982
  ((680 694 21)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(let (_) (-> (match this-play ...) <-))\n (menv '((□? (bo this-play that-play)))))\""
  1949
  ((474 484 12)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app f x (-> acc <-)) (menv '((□? (f acc l)))))\""
  1916
  ((473 483 15)))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (mmo mo₁) (-> (match mmo ...) <-)) (menv '((□? (mmo mo₁)))))\""
  1920
  ((463 473 14)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app andmap f (-> rest-xs <-)) (menv '((□? (f xs)))))\""
  52
  ((4 4 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app make-ai-action (-> (app X) <-)) (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match a (move _ x) (_ (-> (app error \"invalid match for move-horizon\") <-)))\n (menv '((□? (a)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app < (-> sc₀ <-) sc₁) (menv '((□? (h₀ h₁)))))\""
  1916
  ((458 468 13)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> some <-) mo₁) (menv '((□? (mmo mo₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> horizon< <-) (app move-horizon mo₀) (app move-horizon mo₁))\n (menv '((□? (mmo mo₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   (-> some <-)\n   (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...))\n (menv '((□? (mmo mo₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app board-lookup co (-> bo <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  14
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> < <-) sc₀ sc₁) (menv '((□? (h₀ h₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app some-v (-> (app minimax bo that-mark this-mark) <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1923
  ((472 482 14)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> play-turn <-) empty-board player-one player-two)\n (menv '((□? (player-one player-two)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> O <-)) (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match oc₀ ((win) (-> (app #f) <-)) (draw) (lose))\n (menv '((□? (oc₀ oc₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app marked (-> ma <-)) (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  157
  ((11 12 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> X <-)) (menv '((□? (ma)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (ma) (-> (λ (bo) ...) <-)) (menv '((□? (ma)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> some <-) mo₁) (menv '((□? (mmo mo₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app marked-with? b (-> (app coord r c) <-) m)\n (menv '((□? (c)) (□? (r)) (□? (b m)))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> draw-board! <-) bo)\n (menv '((□? (bo this-play that-play)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(let (_) (-> (app void) <-))\n (menv '((□? (bo this-play that-play)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app fold/coord (λ (co mm) ...) (-> (app none) <-))\n (menv '((□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... horizon< (horizon-add1 (-> (λ (h) ...) <-)) foldl ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app coord (-> r <-) c) (menv '((□? (r)) (□? (c)) (□? (b m)))))\""
  72
  ((4 4 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> foldl <-) (λ (r x) ...) x is) (menv '((□? (f x)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> f <-) x) (menv '((□? (f xs)))))\""
  43
  ((3 3 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app f (-> x <-) acc) (menv '((□? (f acc l)))))\""
  39
  ((2 2 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app equal? oc₁ (-> (app lose) <-)) (menv '((□? (oc₀ oc₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (app blank? (app board-lookup co bo)) (#t) ((#f) (-> mm <-)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1917
  ((473 482 13)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   min-maybe-move\n   mm\n   (-> (app move co (match (app wins? bo this-mark) ...)) <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   or\n   (app ormap (λ (r) ...) is)\n   (app ormap (λ (c) ...) is)\n   (app andmap (λ (rc) ...) is)\n   (-> (app andmap (λ (rc) ...) is) <-))\n (menv '((□? (b m)))))\""
  1919
  ((475 485 14)))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (h₀ h₁) (-> (match h₀ ...) <-)) (menv '((□? (h₀ h₁)))))\""
  1931
  ((459 469 10)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> andmap <-) f rest-xs) (menv '((□? (f xs)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (-> (app wins? bo this-mark) <-) (#f) _)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1915
  ((461 471 9)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(lettypes Ze ... player (letrec (some-v ... zero-player-game) ...))\n (menv '()))\""
  1941
  ((454 463 13)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> andmap <-) (λ (r) ...) is) (menv '((□? (c)) (□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app player (-> (app O) <-) human-action) (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> andmap <-) (λ (c) ...) is) (menv '((□? (r)) (□? (b)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match oc₀ (win) ((draw) (-> (app equal? oc₁ (app win)) <-)) (lose))\n (menv '((□? (oc₀ oc₁)))))\""
  1926
  ((459 469 13)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app andmap (-> (λ (r) ...) <-) is) (menv '((□? (c)) (□? (b m)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app error (-> (app quote human-action) <-) \"not implemented\")\n (menv '((□? (bo)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ ()\n    (->\n     (app\n      play-game\n      (app player (app X) (app make-ai-action (app X)))\n      (app player (app O) (app make-ai-action (app O))))\n     <-))\n (menv '((□? ()))))\""
  1936
  ((453 463 14)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app oc< oc₀ (-> oc₁ <-)) (menv '((□? (h₀ h₁)))))\""
  1915
  ((464 474 13)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app coord (-> r <-) c)\n (menv '((□? (c x)) (□? (r x)) (□? (f x)))))\""
  52
  ((4 4 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (r) (-> (app marked-with? b (app coord r c) m) <-))\n (menv '((□? (r)) (□? (c)) (□? (b m)))))\""
  1920
  ((477 486 14)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> O <-)) (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app marked? (-> (app b (app coord r c)) <-))\n (menv '((□? (c)) (□? (r)) (□? (b)))))\""
  1915
  ((477 487 13)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (c x) (-> (app f (app coord r c) x) <-))\n (menv '((□? (c x)) (□? (r x)) (□? (f x)))))\""
  1929
  ((490 501 14)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match\n   (-> (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) <-)\n   (#t)\n   (#f))\n (menv '((□? (mmo mo₁)))))\""
  1917
  ((476 486 14)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> ormap <-) f rest-xs) (menv '((□? (f xs)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app board-lookup co (-> bo <-))\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  26
  ((1 1 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(let (... () (_ (-> (app draw-board! bo) <-)) () ...) ...)\n (menv '((□? (bo this-play that-play)))))\""
  6
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app horizon (app draw) (-> 0 <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app equal? (-> oc₁ <-) (app win)) (menv '((□? (oc₀ oc₁)))))\""
  1918
  ((501 581 16)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match (-> mmo <-) (some mo₀) (none)) (menv '((□? (mmo mo₁)))))\""
  1915
  ((468 479 11)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app andmap (λ (c) ...) (-> is <-)) (menv '((□? (r)) (□? (b m)))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> play-turn <-) bo that-play this-play)\n (menv '((□? (bo this-play that-play)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app cons (app Tw) (-> (app nil) <-)) (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app horizon< (app move-horizon mo₀) (-> (app move-horizon mo₁) <-))\n (menv '((□? (mmo mo₁)))))\""
  1915
  ((480 489 11)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app andmap (-> (λ (c) ...) <-) is) (menv '((□? (r)) (□? (b m)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match a ((move _ x) (-> x <-)) _) (menv '((□? (a)))))\""
  1965
  ((493 503 13)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match (-> ma <-) (X) (O)) (menv '((□? (ma)))))\""
  29
  ((1 1 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> marked? <-) (app b (app coord r c)))\n (menv '((□? (c)) (□? (r)) (□? (b)))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (oc₀ oc₁) (-> (match oc₀ ...) <-)) (menv '((□? (oc₀ oc₁)))))\""
  1927
  ((453 463 13)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app ormap (-> f <-) rest-xs) (menv '((□? (f xs)))))\""
  15
  ((1 1 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> horizon <-) oc (app + sc 1)) (menv '((□? (h)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app coord r (-> c <-)) (menv '((□? (r)) (□? (c)) (□? (b m)))))\""
  50
  ((2 2 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (...\n           max-maybe-move\n           (minimax (-> (λ (bo this-mark that-mark) ...) <-))\n           maximin\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app wins? (-> bo <-) this-mark)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   (-> horizon-add1 <-)\n   (app move-horizon (app some-v (app maximin bo that-mark this-mark))))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app marked-with? b (app coord rc rc) (-> m <-))\n (menv '((□? (rc)) (□? (b m)))))\""
  157
  ((13 14 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (...\n           play-game\n           (two-player-game (-> (λ () ...) <-))\n           one-player-game\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app coord r (-> c <-))\n (menv '((□? (c x)) (□? (r x)) (□? (f x)))))\""
  49
  ((2 2 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> O <-)) (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app player (-> (app O) <-) (app make-ai-action (app O)))\n (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match (-> i <-) (Ze) (On) (Tw)) (menv '((□? (i)))))\""
  78
  ((4 4 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app board-mark co (-> this-mark <-) bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  47
  ((3 3 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> X <-)) (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (bo this-play that-play) (-> (let (_) ...) <-))\n (menv '((□? (bo this-play that-play)))))\""
  1952
  ((454 463 13)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   (-> horizon-add1 <-)\n   (app move-horizon (app some-v (app minimax bo that-mark this-mark))))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '((top) lettypes (Ze ... player) ...) (menv '()))\""
  1942
  ((466 476 14)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match xs ((empty) (-> (app #t) <-)) (cons x rest-xs))\n (menv '((□? (f xs)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> none <-)) (menv '((□? (bo this-mark that-mark)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (rc) (-> (app marked-with? b (app coord rc rc) m) <-))\n (menv '((□? (rc)) (□? (b m)))))\""
  1920
  ((462 471 14)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (app full? bo) (#f) (_ (-> (let (_) ...) <-)))\n (menv '((□? (bo this-play that-play)))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app andmap (λ (rc) ...) (-> is <-)) (menv '((□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(let (co) (-> (match (app blank? (app board-lookup co bo)) ...) <-))\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  1933
  ((516 527 14)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (a)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... blank? (move-coord (-> (λ (a) ...) <-)) move-horizon ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app horizon< (app move-horizon mo₀) (-> (app move-horizon mo₁) <-))\n (menv '((□? (mmo mo₁)))))\""
  1915
  ((464 474 13)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (app blank? (app board-lookup co bo)) (#t) ((#f) (-> mm <-)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1918
  ((486 496 15)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> f <-) (app coord r c) x)\n (menv '((□? (c x)) (□? (r x)) (□? (f x)))))\""
  17
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (co₀ ma bo) (-> (λ (co) ...) <-)) (menv '((□? (co₀ ma bo)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> draw <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app quote (-> human-action <-)) (menv '((□? (bo)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app foldl f (app f x acc) (-> xs <-)) (menv '((□? (f acc l)))))\""
  29
  ((1 1 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app move-horizon (-> mo₁ <-)) (menv '((□? (mmo mo₁)))))\""
  9
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match\n   (app full? bo)\n   ((#f)\n    (->\n     (app\n      horizon-add1\n      (app move-horizon (app some-v (app minimax bo that-mark this-mark))))\n     <-))\n   _)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1985
  ((521 532 13)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> andmap <-) (λ (rc) ...) is) (menv '((□? (b m)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app play-turn empty-board player-one (-> player-two <-))\n (menv '((□? (player-one player-two)))))\""
  18
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app board-lookup (-> co <-) bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  12
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app and (app equal? oc₀ oc₁) (-> (app < sc₀ sc₁) <-))\n (menv '((□? (h₀ h₁)))))\""
  1919
  ((481 491 14)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> player <-) (app O) human-action) (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app f (-> x <-)) (menv '((□? (f xs)))))\""
  38
  ((2 2 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> loop <-))\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (-> (app full? bo) <-) (#f) _)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1928
  ((468 477 14)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app ormap (-> (λ (c) ...) <-) is) (menv '((□? (b m)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (...\n           min-maybe-move\n           (max-maybe-move (-> (λ (mmo mo₁) ...) <-))\n           minimax\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> loop <-)) (menv '((□? (bo this-play that-play)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app move-coord (-> (app some-v (app maximin bo ma (app mark⁻¹ ma))) <-))\n (menv '((□? (bo)) (□? (ma)))))\""
  1915
  ((484 494 18)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> error <-) (app quote human-action) \"not implemented\")\n (menv '((□? (bo)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match (-> a <-) (move x _) _) (menv '((□? (a)))))\""
  1917
  ((462 471 11)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... mark⁻¹ (empty-board (-> (λ (co) ...) <-)) board-mark ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> board-lookup <-) co bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (f acc l) (-> (match l ...) <-)) (menv '((□? (f acc l)))))\""
  1921
  ((461 471 14)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... () (loop (-> (λ () ...) <-)) () ...) ...)\n (menv '((□? (bo this-play that-play)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app fold/coord (-> (λ (co mm) ...) <-) (app none))\n (menv '((□? (bo this-mark that-mark)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app player (app O) (-> (app make-ai-action (app O)) <-))\n (menv '((□? ()))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (bo) (-> (app void) <-)) (menv '((□? (bo)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> make-ai-action <-) (app X)) (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match l ((nil) (-> acc <-)) (cons x xs))\n (menv '((□? (f acc l)))))\""
  1918
  ((473 483 14)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match ma ((X) (-> (app O) <-)) (O)) (menv '((□? (ma)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(let (_) (-> (app display \"Cat's game.\\n\") <-))\n (menv '((□? (bo this-play that-play)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> mark⁻¹ <-) ma) (menv '((□? (bo)) (□? (ma)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   (-> or <-)\n   (app ormap (λ (r) ...) is)\n   (app ormap (λ (c) ...) is)\n   (app andmap (λ (rc) ...) is)\n   (app andmap (λ (rc) ...) is))\n (menv '((□? (b m)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... marked? (blank? (-> (λ (a) ...) <-)) move-coord ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> marked-with? <-) b (app coord rc (app i⁻¹ rc)) m)\n (menv '((□? (rc)) (□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match\n   (-> (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) <-)\n   (#t)\n   (#f))\n (menv '((□? (mmo mo₁)))))\""
  1917
  ((439 449 9)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> oc< <-) oc₀ oc₁) (menv '((□? (h₀ h₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ () (-> (let (co) ...) <-))\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  1936
  ((521 532 15)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app wins? bo (-> this-mark <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  47
  ((3 3 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app f x) (app ormap f rest-xs))\n (menv '((□? (f xs)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> player <-) (app X) human-action) (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   or\n   (-> (app oc< oc₀ oc₁) <-)\n   (app and (app equal? oc₀ oc₁) (app < sc₀ sc₁)))\n (menv '((□? (h₀ h₁)))))\""
  1917
  ((461 471 12)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (app wins? bo mark) (#f) (_ (-> (let (_) ...) <-)))\n (menv '((□? (bo this-play that-play)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app coord (-> rc <-) rc) (menv '((□? (rc)) (□? (b m)))))\""
  72
  ((4 4 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app some (-> mo₁ <-)) (menv '((□? (mmo mo₁)))))\""
  9
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app coord rc (-> rc <-)) (menv '((□? (rc)) (□? (b m)))))\""
  72
  ((4 4 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (a)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> and <-) (app equal? oc₀ oc₁) (app < sc₀ sc₁))\n (menv '((□? (h₀ h₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app minimax bo (-> that-mark <-) this-mark)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  66
  ((4 4 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   (-> max-maybe-move <-)\n   mm\n   (app move co (match (app wins? bo this-mark) ...)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match ma (X) ((O) (-> (app X) <-))) (menv '((□? (ma)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app foldl (-> (λ (r x) ...) <-) x is) (menv '((□? (f x)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (f xs) (-> (match xs ...) <-)) (menv '((□? (f xs)))))\""
  1922
  ((462 473 14)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app board-mark co this-mark (-> bo <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  90
  ((7 7 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (r) (-> (app andmap (λ (c) ...) is) <-))\n (menv '((□? (r)) (□? (b)))))\""
  1923
  ((497 507 14)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app player (app O) (-> (app make-ai-action (app O)) <-))\n (menv '((□? ()))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app horizon (-> oc <-) (app + sc 1)) (menv '((□? (h)))))\""
  2006
  ((559 571 14)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (...\n           play-turn\n           (play-game (-> (λ (player-one player-two) ...) <-))\n           two-player-game\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app board-mark co (-> mark <-) bo)\n (menv '((□? (bo this-play that-play)))))\""
  61
  ((4 4 0)))
'(tic-tac-toe 1 "\"(list 'eval '(app (-> On <-)) (menv '()))\"" 1 ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> marked <-) ma) (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (... move-coord (move-horizon (-> (λ (a) ...) <-)) is ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app ormap (-> (λ (r) ...) <-) is) (menv '((□? (b m)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> board-lookup <-) co bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app mark⁻¹ (-> ma <-)) (menv '((□? (bo)) (□? (ma)))))\""
  21
  ((1 1 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> maximin <-) bo ma (app mark⁻¹ ma))\n (menv '((□? (bo)) (□? (ma)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> andmap <-) (λ (c) ...) is) (menv '((□? (r)) (□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app wins? (-> bo <-) mark)\n (menv '((□? (bo this-play that-play)))))\""
  6
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match\n   (app full? bo)\n   ((#f)\n    (->\n     (app\n      horizon-add1\n      (app move-horizon (app some-v (app maximin bo that-mark this-mark))))\n     <-))\n   _)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1970
  ((510 521 14)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (c) (-> (app marked-with? b (app coord r c) m) <-))\n (menv '((□? (c)) (□? (r)) (□? (b m)))))\""
  1920
  ((440 450 12)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app or (app f x) (-> (app ormap f rest-xs) <-))\n (menv '((□? (f xs)))))\""
  1917
  ((490 501 16)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   ((#t) (-> mo₀ <-))\n   (#f))\n (menv '((□? (mmo mo₁)))))\""
  1916
  ((486 496 15)))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (mmo mo₁) (-> (match mmo ...) <-)) (menv '((□? (mmo mo₁)))))\""
  1920
  ((483 493 13)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app ormap (λ (r) ...) (-> is <-)) (menv '((□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (app wins? bo this-mark) (#f) (_ (-> (app horizon (app lose) 0) <-)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   ((#t) (-> mo₁ <-))\n   (#f))\n (menv '((□? (mmo mo₁)))))\""
  9
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app horizon< (-> (app move-horizon mo₀) <-) (app move-horizon mo₁))\n (menv '((□? (mmo mo₁)))))\""
  1915
  ((452 461 11)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> board-mark <-) co this-mark bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (a) (-> (match a ...) <-)) (menv '((□? (a)))))\""
  1944
  ((512 523 14)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> equal? <-) m m*) (menv '((□? (b co m)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app move-horizon (-> (app some-v (app minimax bo that-mark this-mark)) <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1940
  ((477 487 13)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app cons (app On) (-> (app cons (app Tw) (app nil)) <-))\n (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (a)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match a (move x _) (_ (-> (app error \"invalid match for move-coord\") <-)))\n (menv '((□? (a)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(letrec (...\n           minimax\n           (maximin (-> (λ (bo this-mark that-mark) ...) <-))\n           human-action\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> player <-) (app X) (app make-ai-action (app X)))\n (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f xs)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   play-game\n   (-> (app player (app X) human-action) <-)\n   (app player (app O) human-action))\n (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   or\n   (-> (app ormap (λ (r) ...) is) <-)\n   (app ormap (λ (c) ...) is)\n   (app andmap (λ (rc) ...) is)\n   (app andmap (λ (rc) ...) is))\n (menv '((□? (b m)))))\""
  1919
  ((465 474 9)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match\n   oc₀\n   (win)\n   (draw)\n   ((lose) (-> (app not (app equal? oc₁ (app lose))) <-)))\n (menv '((□? (oc₀ oc₁)))))\""
  1923
  ((451 461 13)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> On <-)) (menv '((□? (i)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (ma) (-> (match ma ...) <-)) (menv '((□? (ma)))))\""
  41
  ((1 1 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app move (-> co <-) (match (app wins? bo this-mark) ...))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  12
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app\n   play-game\n   (app player (app X) human-action)\n   (-> (app player (app O) human-action) <-))\n (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (b co m)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match (-> a <-) (move _ x) _) (menv '((□? (a)))))\""
  1962
  ((515 526 14)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app i⁻¹ (-> rc <-)) (menv '((□? (rc)) (□? (b m)))))\""
  72
  ((4 5 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(match i ((Ze) (-> (app Tw) <-)) (On) (Tw)) (menv '((□? (i)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app marked-with? (-> b <-) (app coord r c) m)\n (menv '((□? (c)) (□? (r)) (□? (b m)))))\""
  35
  ((1 1 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app player (-> (app O) <-) (app make-ai-action (app O)))\n (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match (-> (app full? bo) <-) (#f) _)\n (menv '((□? (bo this-play that-play)))))\""
  1927
  ((468 478 16)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(match xs ((empty) (-> (app #f) <-)) (cons x rest-xs))\n (menv '((□? (f xs)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(app (-> O <-)) (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> player <-) (app O) (app make-ai-action (app O)))\n (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(λ (co mm) (-> (match (app blank? (app board-lookup co bo)) ...) <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  1936
  ((508 518 14)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(app (-> some-v <-) (app minimax bo that-mark this-mark))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  1
  "\"(list 'eval '(λ (i) (-> (match i ...) <-)) (menv '((□? (i)))))\""
  95
  ((15 15 3)))
'(tic-tac-toe
  1
  "\"(list\n 'eval\n '(let (... () (_ (-> (app draw-board! bo) <-)) () ...) ...)\n (menv '((□? (bo this-play that-play)))))\""
  6
  ((0 0 0)))
'(sat-small
  2
  "\"(list 'eval '((top) letrec (phi ... sat-solve-2) ...) (menv '()))\""
  145
  ((12 12 0)))
'(sat-small
  2
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '((□? (f)))))\""
  13
  ((0 0 0)))
'(sat-small
  2
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f)))))\""
  2
  ((0 0 0)))
'(sat-small
  2
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f)))))\""
  2
  ((0 0 0)))
'(sat-small
  2
  "\"(list\n 'eval\n '(app or (-> (app f (app #t)) <-) (app f (app #f)))\n (menv '((□? (f)))))\""
  157
  ((15 15 0)))
'(sat-small
  2
  "\"(list\n 'eval\n '(λ (n2) (-> (app p n1 n2) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  117
  ((8 8 0)))
'(sat-small
  2
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '((□? (p)))))\""
  3
  ((0 0 0)))
'(sat-small
  2
  "\"(list 'eval '(app p (-> n1 <-) n2) (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  18
  ((0 0 0)))
'(sat-small
  2
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '((□? (f)))))\""
  198
  ((17 17 0)))
'(sat-small
  2
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2)))))\""
  2
  ((0 0 0)))
'(sat-small
  2
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '((□? (f)))))\""
  13
  ((0 0 0)))
'(sat-small
  2
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '((□? (n1)) (□? (p)))))\""
  3
  ((0 0 0)))
'(sat-small
  2
  "\"(list\n 'eval\n '(λ (n1) (-> (app try (λ (n2) ...)) <-))\n (menv '((□? (n1)) (□? (p)))))\""
  139
  ((11 11 0)))
'(sat-small
  2
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-small
  2
  "\"(list\n 'eval\n '(λ (x1 x2) (-> (app or x1 (app not x2)) <-))\n (menv '((□? (x1 x2)))))\""
  97
  ((6 6 0)))
'(sat-small
  2
  "\"(list 'eval '(app or x1 (-> (app not x2) <-)) (menv '((□? (x1 x2)))))\""
  38
  ((1 1 0)))
'(sat-small
  2
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-small
  2
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '((□? (p)))))\""
  152
  ((10 10 0)))
'(sat-small
  2
  "\"(list\n 'eval\n '(letrec (... () (phi (-> (λ (x1 x2) ...) <-)) try ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-small
  2
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2)))))\""
  28
  ((1 1 0)))
'(sat-small
  2
  "\"(list 'eval '(app (-> or <-) x1 (app not x2)) (menv '((□? (x1 x2)))))\""
  2
  ((0 0 0)))
'(sat-small
  2
  "\"(list 'eval '(app (-> p <-) n1 n2) (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  11
  ((0 0 0)))
'(sat-small
  2
  "\"(list\n 'eval\n '(letrec (... phi (try (-> (λ (f) ...) <-)) sat-solve-2 ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-small
  2
  "\"(list 'eval '(app sat-solve-2 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-small
  2
  "\"(list\n 'eval\n '(letrec (... try (sat-solve-2 (-> (λ (p) ...) <-)) () ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-small
  2
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '((□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-small
  2
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '((□? (p)))))\""
  2
  ((0 0 0)))
'(sat-small
  2
  "\"(list\n 'eval\n '(app or (app f (app #t)) (-> (app f (app #f)) <-))\n (menv '((□? (f)))))\""
  157
  ((10 10 0)))
'(sat-small
  2
  "\"(list 'eval '(app (-> sat-solve-2 <-) phi) (menv '()))\""
  2
  ((0 0 0)))
'(sat-small
  2
  "\"(list 'eval '(app or (-> x1 <-) (app not x2)) (menv '((□? (x1 x2)))))\""
  27
  ((0 0 0)))
'(sat-small
  2
  "\"(list\n 'eval\n '(app (-> or <-) (app f (app #t)) (app f (app #f)))\n (menv '((□? (f)))))\""
  2
  ((0 0 0)))
'(sat-small
  2
  "\"(list 'eval '(app p n1 (-> n2 <-)) (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  16
  ((0 0 0)))
'(sat-small
  2
  "\"(list\n 'eval\n '(letrec (phi ... sat-solve-2) (-> (app sat-solve-2 phi) <-))\n (menv '()))\""
  144
  ((11 11 0)))
'(sat-1
  2
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '((□? (f)))))\""
  23
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app (-> p <-) n1 n2 n3 n4)\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  15
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(letrec (phi ... sat-solve-4) (-> (app sat-solve-4 phi) <-))\n (menv '()))\""
  932
  ((262 267 7)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app or x1 (-> (app not x2) <-) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  38
  ((1 1 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app or (app not x2) (-> (app not x3) <-))\n (menv '((□? (x1 x2 x3 x4)))))\""
  36
  ((1 1 0)))
'(sat-1
  2
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app or (-> (app not x2) <-) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  38
  ((1 1 0)))
'(sat-1
  2
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  32
  ((1 1 0)))
'(sat-1
  2
  "\"(list 'eval '(app or x4 (-> x2 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  32
  ((1 1 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app or (app f (app #t)) (-> (app f (app #f)) <-))\n (menv '((□? (f)))))\""
  1063
  ((294 300 8)))
'(sat-1
  2
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '((□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4)))))\""
  245
  ((38 39 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app or (-> x1 <-) (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  33
  ((1 1 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(λ (n4) (-> (app p n1 n2 n3 n4) <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  838
  ((242 248 6)))
'(sat-1
  2
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app (-> or <-) (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app (-> not <-) x3) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(letrec (... try (sat-solve-4 (-> (λ (p) ...) <-)) () ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(letrec (... phi (try (-> (λ (f) ...) <-)) sat-solve-4 ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  32
  ((1 1 0)))
'(sat-1 2 "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(λ (n1) (-> (app try (λ (n2) ...)) <-))\n (menv '((□? (n1)) (□? (p)))))\""
  927
  ((273 278 7)))
'(sat-1
  2
  "\"(list 'eval '((top) letrec (phi ... sat-solve-4) ...) (menv '()))\""
  933
  ((382 390 16)))
'(sat-1 2 "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app try (-> (λ (n4) ...) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app or (-> (app f (app #t)) <-) (app f (app #f)))\n (menv '((□? (f)))))\""
  1063
  ((283 289 7)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n3) ...))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(λ (n3) (-> (app try (λ (n4) ...)) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  881
  ((291 295 8)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app p (-> n1 <-) n2 n3 n4)\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  24
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app p n1 n2 n3 (-> n4 <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  18
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(λ (x1 x2 x3 x4)\n    (->\n     (app\n      and\n      (app or x1 (app not x2) (app not x3))\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv '((□? (x1 x2 x3 x4)))))\""
  689
  ((258 263 8)))
'(sat-1
  2
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '((□? (p)))))\""
  940
  ((269 274 6)))
'(sat-1
  2
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '((□? (n1)) (□? (p)))))\""
  3
  ((0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app or (-> x4 <-) x2) (menv '((□? (x1 x2 x3 x4)))))\""
  30
  ((1 1 0)))
'(sat-1
  2
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '((□? (f)))))\""
  23
  ((0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app not (-> x3 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  30
  ((1 1 0)))
'(sat-1
  2
  "\"(list 'eval '(app (-> sat-solve-4 <-) phi) (menv '()))\""
  2
  ((0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '((□? (f)))))\""
  1226
  ((314 321 7)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app p n1 n2 (-> n3 <-) n4)\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  20
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app try (-> (λ (n3) ...) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4)))))\""
  100
  ((8 8 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(λ (n2) (-> (app try (λ (n3) ...)) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  907
  ((259 264 7)))
'(sat-1
  2
  "\"(list 'eval '(app sat-solve-4 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app (-> or <-) x1 (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app (-> not <-) x3) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app or x1 (app not x2) (-> (app not x3) <-))\n (menv '((□? (x1 x2 x3 x4)))))\""
  36
  ((1 1 0)))
'(sat-1
  2
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '((□? (p)))))\""
  2
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 (app not x2) (app not x3))\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv '((□? (x1 x2 x3 x4)))))\""
  82
  ((9 10 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app p n1 (-> n2 <-) n3 n4)\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  22
  ((0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '((□? (p)))))\""
  3
  ((0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app not (-> x3 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  30
  ((1 1 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(letrec (... () (phi (-> (λ (x1 x2 x3 x4) ...) <-)) try ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app (-> or <-) x4 x2) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n4) ...))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app (-> or <-) (app f (app #t)) (app f (app #f)))\n (menv '((□? (f)))))\""
  2
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (n6) (-> (app try (λ (n7) ...)) <-))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  274
  ((56 57 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app not (-> x4 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  150
  ((11 11 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> not <-) x3)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app try (-> (λ (n7) ...) <-))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  8
  ((0 0 0)))
'(sat-2
  2
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '((□? (p)))))\""
  3
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> not <-) x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  2
  "\"(list 'eval '((top) letrec (phi ... sat-solve-7) ...) (menv '()))\""
  0
  (#f))
'(sat-2
  2
  "\"(list\n 'eval\n '(letrec (... () (phi (-> (λ (x1) ...) <-)) try ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> (app (app (app (app p n1) n2) n3) n4) <-) n5)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  37
  ((2 2 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) (-> n7 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  21
  ((1 1 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (app (app (app (app p n1) n2) n3) n4) (-> n5 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  25
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app not (-> x3 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  101
  ((5 5 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (app not x2) (-> (app not x3) <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  119
  ((8 8 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '((□? (f)))))\""
  0
  (#f))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (app (app (app (app (app p n1) n2) n3) n4) n5) (-> n6 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  23
  ((0 0 0)))
'(sat-2 2 "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(letrec (... try (sat-solve-7 (-> (λ (p) ...) <-)) () ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (x4) (-> (λ (x5) ...) <-))\n (menv '((□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  5
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(letrec (... phi (try (-> (λ (f) ...) <-)) sat-solve-7 ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (-> x1 <-) x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  54
  ((1 1 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> (app (app (app p n1) n2) n3) <-) n4)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  33
  ((1 1 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> not <-) x3)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (x3) (-> (λ (x4) ...) <-))\n (menv '((□? (x3)) (□? (x2)) (□? (x1)))))\""
  4
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app p (-> n1 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  33
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> p <-) n1)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  21
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> (app p n1) <-) n2)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  25
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n4) ...))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (n1) (-> (app try (λ (n2) ...)) <-))\n (menv '((□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or x1 (-> x2 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  72
  ((2 2 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n5) ...))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  7
  ((0 0 0)))
'(sat-2
  2
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '((□? (f)))))\""
  38
  ((1 1 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 x2) <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  169
  ((16 16 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> or <-) (app not x2) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> or <-) x1 (app not x2) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (-> (app not x4) <-) x1)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  184
  ((24 24 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app try (-> (λ (n5) ...) <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app try (-> (λ (n3) ...) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (app p n1) (-> n2 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  31
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (-> x1 <-) (app not x2) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  54
  ((1 1 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or x1 (app not x2) (-> (app not x3) <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  119
  ((8 8 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> or <-) x1 x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  2
  "\"(list 'eval '(λ (x2) (-> (λ (x3) ...) <-)) (menv '((□? (x2)) (□? (x1)))))\""
  3
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (n5) (-> (app try (λ (n6) ...)) <-))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (x6) (-> (λ (x7) ...) <-))\n (menv '((□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  7
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> or <-) x4 x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n6) ...))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  8
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (-> x3 <-) x4)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  101
  ((5 5 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) <-) n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  45
  ((3 3 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (n4) (-> (app try (λ (n5) ...)) <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-2
  2
  "\"(list\n 'eval\n '(app not (-> x2 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  72
  ((2 2 0)))
'(sat-2
  2
  "\"(list 'eval '(λ (x1) (-> (λ (x2) ...) <-)) (menv '((□? (x1)))))\""
  2
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (n2) (-> (app try (λ (n3) ...)) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-2
  2
  "\"(list 'eval '(app sat-solve-7 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or x3 (-> x4 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  150
  ((10 10 0)))
'(sat-2 2 "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (app (app p n1) n2) (-> n3 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  29
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app try (-> (λ (n4) ...) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> or <-) (app not x4) x1)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app try (-> (λ (n6) ...) <-))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  7
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> not <-) x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (-> x4 <-) x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  150
  ((10 10 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> or <-) (app f (app #t)) (app f (app #f)))\n (menv '((□? (f)))))\""
  2
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (n7)\n    (-> (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7) <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  0
  (#f))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (-> (app f (app #t)) <-) (app f (app #f)))\n (menv '((□? (f)))))\""
  0
  (#f))
'(sat-2
  2
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '((□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-2
  2
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '((□? (f)))))\""
  38
  ((1 1 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n3) ...))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(sat-2
  2
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '((□? (p)))))\""
  0
  (#f))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> not <-) x4)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (app f (app #t)) (-> (app f (app #f)) <-))\n (menv '((□? (f)))))\""
  0
  (#f))
'(sat-2
  2
  "\"(list\n 'eval\n '(letrec (phi ... sat-solve-7) (-> (app sat-solve-7 phi) <-))\n (menv '()))\""
  0
  (#f))
'(sat-2
  2
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (x7)\n    (->\n     (app\n      and\n      (app or x1 x2)\n      (app or x1 (app not x2) (app not x3))\n      (app or x3 x4)\n      (app or (app not x4) x1)\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  0
  (#f))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (-> (app or (app not x4) x1) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  307
  ((71 73 2)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  484
  ((163 166 2)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or x3 x4) <-)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  284
  ((43 44 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (n3) (-> (app try (λ (n4) ...)) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (app not x4) (-> x1 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  54
  ((1 1 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (x5) (-> (λ (x6) ...) <-))\n (menv '((□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  6
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (app (app (app p n1) n2) n3) (-> n4 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  27
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or x4 (-> x2 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  72
  ((2 2 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or x1 (-> (app not x2) <-) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  82
  ((4 4 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> (app (app p n1) n2) <-) n3)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  29
  ((1 1 0)))
'(sat-2
  2
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-2
  2
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '((□? (n1)) (□? (p)))))\""
  3
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> (app (app (app (app (app p n1) n2) n3) n4) n5) <-) n6)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  41
  ((2 2 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app not (-> x2 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  72
  ((2 2 0)))
'(sat-2
  2
  "\"(list 'eval '(app (-> sat-solve-7 <-) phi) (menv '()))\""
  2
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (-> (app not x2) <-) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  82
  ((3 3 0)))
'(sat-2
  2
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '((□? (p)))))\""
  2
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  243
  ((37 38 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app not (-> x3 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  101
  ((4 4 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n7) ...))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  9
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> or <-) x3 x4)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app or (app f (app #t)) (-> (app f (app #f)) <-))\n (menv '((□? (f)))))\""
  0
  (#f))
'(sat-3
  2
  "\"(list\n 'eval\n '(app or x1 (app not x2) (-> (app not x3) <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  45
  ((1 1 0)))
'(sat-3 2 "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app p n1 (-> n2 <-) n3 n4 n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  31
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(letrec (... println (phi (-> (λ (x1 x2 x3 x4 x5 x6 x7) ...) <-)) try ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app or x1 (-> (app not x2) <-) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  47
  ((1 1 0)))
'(sat-3 2 "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> try <-) (λ (n2) ...)) (menv '((□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app (-> or <-) (app not x4) x1)\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> try <-) (λ (n1) ...)) (menv '((□? (p)))))\""
  3
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app not (-> x3 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  39
  ((1 1 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  127
  ((10 10 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(let (... () (_ (-> (app println \"trying\") <-)) () ...) ...)\n (menv '((□? (f)))))\""
  8
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> not <-) x4) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '((□? (f)))))\""
  38
  ((2 2 0)))
'(sat-3
  2
  "\"(list 'eval '(app not (-> x4 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  37
  ((1 1 0)))
'(sat-3
  2
  "\"(list 'eval '(let (_) (-> (app newline) <-)) (menv '((□? (s)))))\""
  3
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(letrec (... phi (try (-> (λ (f) ...) <-)) sat-solve-7 ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(letrec (... () (println (-> (λ (s) ...) <-)) phi ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((1 1 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app try (-> (λ (n7) ...) <-))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  8
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app sat-solve-7 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app or (app not x2) (-> (app not x3) <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  45
  ((2 2 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  101
  ((9 9 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(let (... () (_ (-> (app display (app sat-solve-7 phi)) <-)) () ...) ...)\n (menv '()))\""
  0
  (#f))
'(sat-3
  2
  "\"(list\n 'eval\n '(letrec (... try (sat-solve-7 (-> (λ (p) ...) <-)) () ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n3) ...))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app or (-> x3 <-) x4) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  39
  ((1 1 0)))
'(sat-3
  2
  "\"(list 'eval '(let (_) (-> (app newline) <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 n5 (-> n6 <-) n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  23
  ((1 1 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app (-> or <-) x1 (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app not (-> x3 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  39
  ((2 2 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> or <-) x1 x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> not <-) x3) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app display (-> (app sat-solve-7 phi) <-)) (menv '()))\""
  0
  (#f))
'(sat-3
  2
  "\"(list 'eval '(app or x3 (-> x4 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  37
  ((1 1 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app or (-> (app f (app #t)) <-) (app f (app #f)))\n (menv '((□? (f)))))\""
  0
  (#f))
'(sat-3
  2
  "\"(list\n 'eval\n '(letrec (println ... sat-solve-7) (-> (let (_) ...) <-))\n (menv '()))\""
  3
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(λ (n3) (-> (app try (λ (n4) ...)) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-3
  2
  "\"(list\n 'eval\n '(app p (-> n1 <-) n2 n3 n4 n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  33
  ((1 1 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or x3 x4) <-)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  111
  ((30 31 1)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app try (-> (λ (n3) ...) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app display (-> s <-)) (menv '((□? (s)))))\""
  8
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app (-> or <-) (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n4) ...))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app (-> or <-) (app f (app #t)) (app f (app #f)))\n (menv '((□? (f)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app or (-> x1 <-) (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  42
  ((3 3 0)))
'(sat-3
  2
  "\"(list 'eval '(λ (p) (-> (app try (λ (n1) ...)) <-)) (menv '((□? (p)))))\""
  0
  (#f))
'(sat-3
  2
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '((□? (f)))))\""
  38
  ((2 2 0)))
'(sat-3
  2
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 n5 n6 (-> n7 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  21
  ((1 1 0)))
'(sat-3
  2
  "\"(list 'eval '(app try (-> (λ (n1) ...) <-)) (menv '((□? (p)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> sat-solve-7 <-) phi) (menv '()))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(λ (f) (-> (let (_) ...) <-)) (menv '((□? (f)))))\""
  0
  (#f))
'(sat-3
  2
  "\"(list\n 'eval\n '(app or (-> (app not x4) <-) x1)\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  43
  ((2 2 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> newline <-)) (menv '((□? (s)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> display <-) (app sat-solve-7 phi)) (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(λ (n5) (-> (app try (λ (n6) ...)) <-))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-3
  2
  "\"(list\n 'eval\n '(λ (n7) (-> (app p n1 n2 n3 n4 n5 n6 n7) <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  0
  (#f))
'(sat-3
  2
  "\"(list\n 'eval\n '(app p n1 n2 (-> n3 <-) n4 n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  29
  ((1 1 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> not <-) x3) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app or (-> (app not x2) <-) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  47
  ((2 2 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n5) ...))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  7
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> println <-) \"trying\") (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  326
  ((85 87 1)))
'(sat-3
  2
  "\"(list 'eval '(app (-> display <-) s) (menv '((□? (s)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 x2) <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  126
  ((10 10 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(λ (n6) (-> (app try (λ (n7) ...)) <-))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-3
  2
  "\"(list 'eval '(app (-> or <-) x3 x4) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app try (-> (λ (n5) ...) <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(let (... () (_ (-> (app display s) <-)) () ...) ...)\n (menv '((□? (s)))))\""
  12
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n6) ...))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  8
  ((0 0 0)))
'(sat-3 2 "\"(list 'eval '(app (-> newline <-)) (menv '()))\"" 1 ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(λ (n2) (-> (app try (λ (n3) ...)) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-3
  2
  "\"(list 'eval '(app or (-> x4 <-) x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  37
  ((6 6 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> or <-) x4 x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app try (-> (λ (n2) ...) <-)) (menv '((□? (n1)) (□? (p)))))\""
  3
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app or (app not x4) (-> x1 <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  42
  ((2 2 0)))
'(sat-3
  2
  "\"(list 'eval '(app or x1 (-> x2 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((2 2 0)))
'(sat-3
  2
  "\"(list 'eval '(λ (s) (-> (let (_) ...) <-)) (menv '((□? (s)))))\""
  4
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app or (-> x1 <-) x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  42
  ((2 2 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (-> (app or (app not x4) x1) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  106
  ((18 18 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((2 2 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(let (_) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '((□? (f)))))\""
  0
  (#f))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app (-> p <-) n1 n2 n3 n4 n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  21
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app p n1 n2 n3 (-> n4 <-) n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  27
  ((1 1 0)))
'(sat-3
  2
  "\"(list 'eval '((top) letrec (println ... sat-solve-7) ...) (menv '()))\""
  4
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(λ (n4) (-> (app try (λ (n5) ...)) <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-3
  2
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n7) ...))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  9
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app println (-> \"trying\" <-)) (menv '((□? (f)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(λ (x1 x2 x3 x4 x5 x6 x7)\n    (->\n     (app\n      and\n      (app or x1 x2)\n      (app or x1 (app not x2) (app not x3))\n      (app or x3 x4)\n      (app or (app not x4) x1)\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  914
  ((810 824 74)))
'(sat-3
  2
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(λ (n1) (-> (app try (λ (n2) ...)) <-))\n (menv '((□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-3
  2
  "\"(list 'eval '(app or x4 (-> x2 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((2 2 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 (-> n5 <-) n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  25
  ((1 1 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app try (-> (λ (n6) ...) <-))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  7
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app try (-> (λ (n4) ...) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> board-mark <-) co mark bo)\n (menv '((□? (bo this-play that-play)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app board-mark co this-mark (-> bo <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  16
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app some (-> mo₁ <-)) (menv '((□? (mmo mo₁)))))\""
  10
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app coord (-> rc <-) (app i⁻¹ rc))\n (menv '((□? (rc)) (□? (b m)))))\""
  105
  ((13 14 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app error (-> \"invalid match for move-coord\" <-))\n (menv '((□? (a)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match (-> (app wins? bo this-mark) <-) (#f) _)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app coord rc (-> rc <-)) (menv '((□? (rc)) (□? (b m)))))\""
  105
  ((10 10 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> Tw <-)) (menv '((□? (i)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app i⁻¹ (-> rc <-)) (menv '((□? (rc)) (□? (b m)))))\""
  105
  ((9 9 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app and (app equal? oc₀ oc₁) (-> (app < sc₀ sc₁) <-))\n (menv '((□? (h₀ h₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (... wins? (full? (-> (λ (b) ...) <-)) oc< ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(match a ((blank) (-> (app #t) <-)) _) (menv '((□? (a)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> lose <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app maximin (-> bo <-) ma (app mark⁻¹ ma))\n (menv '((□? (bo)) (□? (ma)))))\""
  86
  ((8 8 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match mmo (some mo₀) ((none) (-> (app some mo₁) <-)))\n (menv '((□? (mmo mo₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   max-maybe-move\n   (-> mm <-)\n   (app move co (match (app wins? bo this-mark) ...)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match (-> (app wins? bo mark) <-) (#f) _)\n (menv '((□? (bo this-play that-play)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app marked-with? b (-> (app coord r c) <-) m)\n (menv '((□? (c)) (□? (r)) (□? (b m)))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (b co m)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app coord (-> rc <-) rc) (menv '((□? (rc)) (□? (b m)))))\""
  105
  ((23 23 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app horizon (app draw) (-> 0 <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> and <-) (app f x) (app andmap f rest-xs))\n (menv '((□? (f xs)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app coord rc (-> (app i⁻¹ rc) <-))\n (menv '((□? (rc)) (□? (b m)))))\""
  136
  ((25 25 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app fold/coord (-> (λ (co mm) ...) <-) (app none))\n (menv '((□? (bo this-mark that-mark)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app blank? (-> (app board-lookup co bo) <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app wins? bo (-> this-mark <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  75
  ((5 5 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   or\n   (app ormap (λ (r) ...) is)\n   (app ormap (λ (c) ...) is)\n   (-> (app andmap (λ (rc) ...) is) <-)\n   (app andmap (λ (rc) ...) is))\n (menv '((□? (b m)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match a (some x) (_ (-> (app error \"invalid match for some-v\") <-)))\n (menv '((□? (a)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (...\n           two-player-game\n           (one-player-game (-> (λ () ...) <-))\n           zero-player-game\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> loop <-)) (menv '((□? (bo this-play that-play)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f xs)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app wins? bo (-> this-mark <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  53
  ((3 3 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match xs ((empty) (-> (app #f) <-)) (cons x rest-xs))\n (menv '((□? (f xs)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match oc₀ (win) ((draw) (-> (app equal? oc₁ (app win)) <-)) (lose))\n (menv '((□? (oc₀ oc₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   play-game\n   (-> (app player (app X) (app make-ai-action (app X))) <-)\n   (app player (app O) (app make-ai-action (app O))))\n (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> andmap <-) f rest-xs) (menv '((□? (f xs)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app coord (-> r <-) c) (menv '((□? (r)) (□? (c)) (□? (b m)))))\""
  105
  ((11 12 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(λ (b co m) (-> (match (app b co) ...) <-))\n (menv '((□? (b co m)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app maximin bo (-> that-mark <-) this-mark)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  50
  ((3 3 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> move-horizon <-) mo₁) (menv '((□? (mmo mo₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   play-game\n   (app player (app X) (app make-ai-action (app X)))\n   (-> (app player (app O) (app make-ai-action (app O))) <-))\n (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app coord r (-> c <-)) (menv '((□? (c)) (□? (r)) (□? (b m)))))\""
  105
  ((12 12 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app move-horizon (-> mo₀ <-)) (menv '((□? (mmo mo₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> foldl <-) f (app f x acc) xs) (menv '((□? (f acc l)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app horizon (-> (app lose) <-) 0)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app coord (-> r <-) c) (menv '((□? (c)) (□? (r)) (□? (b)))))\""
  114
  ((12 12 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match\n   (-> (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) <-)\n   (#t)\n   (#f))\n (menv '((□? (mmo mo₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> foldl <-) (λ (c x) ...) x is)\n (menv '((□? (r x)) (□? (f x)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app foldl (λ (r x) ...) x (-> is <-)) (menv '((□? (f x)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> draw <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app horizon (-> (app win) <-) 0)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> marked <-) ma) (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> O <-)) (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app player (app O) (-> human-action <-)) (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(match (-> mmo <-) (some mo₀) (none)) (menv '((□? (mmo mo₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (...\n           max-maybe-move\n           (minimax (-> (λ (bo this-mark that-mark) ...) <-))\n           maximin\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (... marked? (blank? (-> (λ (a) ...) <-)) move-coord ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> fold/coord <-) (λ (co mm) ...) (app none))\n (menv '((□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app marked-with? (-> b <-) (app coord r c) m)\n (menv '((□? (c)) (□? (r)) (□? (b m)))))\""
  41
  ((1 1 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> b <-) (app coord r c))\n (menv '((□? (c)) (□? (r)) (□? (b)))))\""
  41
  ((1 1 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> draw-board! <-) bo)\n (menv '((□? (bo this-play that-play)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(λ (a) (-> (match a ...) <-)) (menv '((□? (a)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app cons (-> (app Ze) <-) (app cons (app On) (app cons (app Tw) (app nil))))\n (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app or (app f x) (-> (app ormap f rest-xs) <-))\n (menv '((□? (f xs)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app play-turn (-> bo <-) that-play this-play)\n (menv '((□? (bo this-play that-play)))))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(λ (bo this-play that-play) (-> (let (_) ...) <-))\n (menv '((□? (bo this-play that-play)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app error (-> \"invalid match for some-v\" <-)) (menv '((□? (a)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(λ ()\n    (->\n     (app\n      play-game\n      (app player (app X) human-action)\n      (app player (app O) human-action))\n     <-))\n (menv '((□? ()))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app coord r (-> c <-)) (menv '((□? (r)) (□? (c)) (□? (b m)))))\""
  68
  ((5 6 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(let (... () (co (-> (letrec (loop) ...) <-)) () ...) ...)\n (menv '((□? (bo this-play that-play)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(λ (a) (-> (match a ...) <-)) (menv '((□? (a)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> horizon <-) oc (app + sc 1)) (menv '((□? (h)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(λ ()\n    (->\n     (app\n      play-game\n      (app player (app X) human-action)\n      (app player (app O) (app make-ai-action (app O))))\n     <-))\n (menv '((□? ()))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (... ormap (andmap (-> (λ (f xs) ...) <-)) wins? ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match (app blank? (app board-lookup co bo)) (#t) ((#f) (-> mm <-)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> andmap <-) (λ (rc) ...) is) (menv '((□? (b m)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(λ (rc) (-> (app marked-with? b (app coord rc rc) m) <-))\n (menv '((□? (rc)) (□? (b m)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(λ (r x) (-> (app foldl (λ (c x) ...) x is) <-))\n (menv '((□? (r x)) (□? (f x)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (a)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app blank? (-> (app board-lookup co bo) <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app board-mark co mark (-> bo <-))\n (menv '((□? (bo this-play that-play)))))\""
  38
  ((2 2 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> < <-) sc₀ sc₁) (menv '((□? (h₀ h₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> andmap <-) (λ (r) ...) is) (menv '((□? (c)) (□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app and (-> (app f x) <-) (app andmap f rest-xs))\n (menv '((□? (f xs)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(λ (f x) (-> (app foldl (λ (r x) ...) x is) <-))\n (menv '((□? (f x)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app coord (-> r <-) c)\n (menv '((□? (c x)) (□? (r x)) (□? (f x)))))\""
  75
  ((6 6 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app andmap (λ (r) ...) (-> is <-)) (menv '((□? (c)) (□? (b m)))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (... horizon< (horizon-add1 (-> (λ (h) ...) <-)) foldl ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   min-maybe-move\n   mm\n   (-> (app move co (match (app wins? bo this-mark) ...)) <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app equal? oc₁ (-> (app lose) <-)) (menv '((□? (oc₀ oc₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app play-turn bo that-play (-> this-play <-))\n (menv '((□? (bo this-play that-play)))))\""
  63
  ((9 10 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> minimax <-) bo that-mark this-mark)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app full? (-> bo <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  8
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app error (-> \"invalid match for move-horizon\" <-))\n (menv '((□? (a)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app move co (-> (match (app wins? bo this-mark) ...) <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app or (-> (app f x) <-) (app ormap f rest-xs))\n (menv '((□? (f xs)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match xs ((empty) (-> (app #t) <-)) (cons x rest-xs))\n (menv '((□? (f xs)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   (#t)\n   ((#f) (-> mo₀ <-)))\n (menv '((□? (mmo mo₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(match (-> xs <-) (empty) (cons x rest-xs)) (menv '((□? (f xs)))))\""
  80
  ((16 17 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app move co (-> (match (app wins? bo this-mark) ...) <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (oc₀ oc₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app make-ai-action (-> (app O) <-)) (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app andmap (λ (r) ...) (-> is <-)) (menv '((□? (b)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(λ (bo) (-> (app error (app quote human-action) \"not implemented\") <-))\n (menv '((□? (bo)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> X <-)) (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> player <-) (app X) human-action) (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match (-> (app blank? (app board-lookup co bo)) <-) (#t) (#f))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app full? (-> bo <-)) (menv '((□? (bo this-play that-play)))))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app maximin (-> bo <-) that-mark this-mark)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  8
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match (app wins? bo this-mark) (#f) (_ (-> (app horizon (app win) 0) <-)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> error <-) \"invalid match for move-horizon\")\n (menv '((□? (a)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app foldl (-> (λ (c x) ...) <-) x is)\n (menv '((□? (r x)) (□? (f x)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(let (co) (-> (let (bo) ...) <-))\n (menv '((□? (bo this-play that-play)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> move <-) co (match (app wins? bo this-mark) ...))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app play-turn empty-board (-> player-one <-) player-two)\n (menv '((□? (player-one player-two)))))\""
  21
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> equal? <-) co₀ co) (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app not (-> (app equal? oc₁ (app lose)) <-))\n (menv '((□? (oc₀ oc₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match\n   xs\n   (empty)\n   ((cons x rest-xs) (-> (app or (app f x) (app ormap f rest-xs)) <-)))\n (menv '((□? (f xs)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app b (-> (app coord r c) <-))\n (menv '((□? (c)) (□? (r)) (□? (b)))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app board-mark co this-mark (-> bo <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  114
  ((8 8 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app board-mark (-> co <-) mark bo)\n (menv '((□? (bo this-play that-play)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> wins? <-) bo this-mark)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> draw-board! <-) bo)\n (menv '((□? (bo this-play that-play)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app oc< oc₀ (-> oc₁ <-)) (menv '((□? (h₀ h₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> horizon <-) (app win) 0)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app play-turn (-> empty-board <-) player-one player-two)\n (menv '((□? (player-one player-two)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app andmap (-> (λ (r) ...) <-) is) (menv '((□? (c)) (□? (b m)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app ormap (-> f <-) rest-xs) (menv '((□? (f xs)))))\""
  24
  ((2 2 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (... is (mark⁻¹ (-> (λ (ma) ...) <-)) empty-board ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app horizon< (-> (app move-horizon mo₀) <-) (app move-horizon mo₁))\n (menv '((□? (mmo mo₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app wins? (-> bo <-) this-mark)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  8
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app player (app O) (-> (app make-ai-action (app O)) <-))\n (menv '((□? ()))))\""
  6
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(λ (rc) (-> (app marked-with? b (app coord rc (app i⁻¹ rc)) m) <-))\n (menv '((□? (rc)) (□? (b m)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (...\n           board-mark\n           (board-lookup (-> (λ (co bo) ...) <-))\n           marked-with?\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (... some-v (marked? (-> (λ (a) ...) <-)) blank? ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app board-mark co (-> this-mark <-) bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  75
  ((4 4 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> player <-) (app X) (app make-ai-action (app X)))\n (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app board-mark (-> co <-) this-mark bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  14
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app marked-with? b (-> (app coord r c) <-) m)\n (menv '((□? (r)) (□? (c)) (□? (b m)))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> wins? <-) bo mark)\n (menv '((□? (bo this-play that-play)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(λ (f acc l) (-> (match l ...) <-)) (menv '((□? (f acc l)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app marked-with? (-> b <-) (app coord rc rc) m)\n (menv '((□? (rc)) (□? (b m)))))\""
  37
  ((1 1 0)))
'(tic-tac-toe 2 "\"(list 'eval '(app (-> On <-)) (menv '()))\"" 1 ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app f x (-> acc <-)) (menv '((□? (f acc l)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> marked-with? <-) b (app coord rc (app i⁻¹ rc)) m)\n (menv '((□? (rc)) (□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match\n   (app blank? (app board-lookup co bo))\n   ((#t) (-> (let (bo) ...) <-))\n   (#f))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(λ (co bo) (-> (app bo co) <-)) (menv '((□? (co bo)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(λ (h₀ h₁) (-> (match h₀ ...) <-)) (menv '((□? (h₀ h₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (... horizon-add1 (foldl (-> (λ (f acc l) ...) <-)) fold/coord ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> O <-)) (menv '((□? (ma)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   (-> horizon-add1 <-)\n   (app move-horizon (app some-v (app minimax bo that-mark this-mark))))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(match (-> a <-) (marked _) _) (menv '((□? (a)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (... mark⁻¹ (empty-board (-> (λ (co) ...) <-)) board-mark ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match (app blank? (app board-lookup co bo)) (#t) ((#f) (-> mm <-)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app full? (-> bo <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  8
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> f <-) x acc) (menv '((□? (f acc l)))))\""
  32
  ((3 3 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app board-lookup (-> co <-) bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  14
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(match i (Ze) ((On) (-> (app On) <-)) (Tw)) (menv '((□? (i)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app bo (-> co <-)) (menv '((□? (co bo)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   horizon-add1\n   (->\n    (app move-horizon (app some-v (app minimax bo that-mark this-mark)))\n    <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app player (-> (app O) <-) (app make-ai-action (app O)))\n (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app foldl (λ (c x) ...) x (-> is <-))\n (menv '((□? (r x)) (□? (f x)))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match\n   (app full? bo)\n   ((#f)\n    (->\n     (app\n      horizon-add1\n      (app move-horizon (app some-v (app maximin bo that-mark this-mark))))\n     <-))\n   _)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(λ (oc₀ oc₁) (-> (match oc₀ ...) <-)) (menv '((□? (oc₀ oc₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> oc< <-) oc₀ oc₁) (menv '((□? (h₀ h₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> play-turn <-) empty-board player-one player-two)\n (menv '((□? (player-one player-two)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> ormap <-) (λ (r) ...) is) (menv '((□? (b m)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app + (-> sc <-) 1) (menv '((□? (h)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (... one-player-game (zero-player-game (-> (λ () ...) <-)) () ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(λ (h) (-> (match h ...) <-)) (menv '((□? (h)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app foldl (λ (c x) ...) (-> x <-) is)\n (menv '((□? (r x)) (□? (f x)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app wins? (-> bo <-) this-mark)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  8
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app board-lookup co (-> bo <-))\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  43
  ((2 2 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app board-lookup (-> co <-) bo)\n (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app make-ai-action (-> (app O) <-)) (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app move-coord (-> (app some-v (app maximin bo ma (app mark⁻¹ ma))) <-))\n (menv '((□? (bo)) (□? (ma)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> equal? <-) oc₀ oc₁) (menv '((□? (h₀ h₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app some-v (-> (app minimax bo that-mark this-mark) <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match (-> (app equal? co₀ co) <-) (#t) (#f))\n (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (... oc< (horizon< (-> (λ (h₀ h₁) ...) <-)) horizon-add1 ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app player (app X) (-> human-action <-)) (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app cons (-> (app Tw) <-) (app nil)) (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> O <-)) (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match mmo (some mo₀) ((none) (-> (app some mo₁) <-)))\n (menv '((□? (mmo mo₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> some <-) mo₁) (menv '((□? (mmo mo₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> horizon< <-) (app move-horizon mo₀) (app move-horizon mo₁))\n (menv '((□? (mmo mo₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(λ (bo this-mark that-mark)\n    (-> (app fold/coord (λ (co mm) ...) (app none)) <-))\n (menv '((□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(λ ()\n    (->\n     (app\n      play-game\n      (app player (app X) (app make-ai-action (app X)))\n      (app player (app O) (app make-ai-action (app O))))\n     <-))\n (menv '((□? ()))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   (-> or <-)\n   (app oc< oc₀ oc₁)\n   (app and (app equal? oc₀ oc₁) (app < sc₀ sc₁)))\n (menv '((□? (h₀ h₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> f <-) (app coord r c) x)\n (menv '((□? (c x)) (□? (r x)) (□? (f x)))))\""
  19
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match (app wins? bo mark) ((#f) (-> (match (app full? bo) ...) <-)) _)\n (menv '((□? (bo this-play that-play)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app andmap (-> f <-) rest-xs) (menv '((□? (f xs)))))\""
  56
  ((8 8 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (... board-lookup (marked-with? (-> (λ (b co m) ...) <-)) i⁻¹ ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   or\n   (-> (app oc< oc₀ oc₁) <-)\n   (app and (app equal? oc₀ oc₁) (app < sc₀ sc₁)))\n (menv '((□? (h₀ h₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match l ((nil) (-> acc <-)) (cons x xs))\n (menv '((□? (f acc l)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match (app full? bo) (#f) (_ (-> (app horizon (app draw) 0) <-)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(let (... () (_ (-> (app draw-board! bo) <-)) () ...) ...)\n (menv '((□? (bo this-play that-play)))))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(let (_) (-> (app void) <-))\n (menv '((□? (bo this-play that-play)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app board-mark (-> co <-) this-mark bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  14
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> display <-) \"Cat's game.\\n\")\n (menv '((□? (bo this-play that-play)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match (app blank? (app board-lookup co bo)) ((#t) (-> co <-)) (#f))\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match (app equal? co₀ co) (#t) ((#f) (-> (app board-lookup co bo) <-)))\n (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(match (-> h <-) (horizon oc sc)) (menv '((□? (h)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app f (-> (app coord r c) <-) x)\n (menv '((□? (c x)) (□? (r x)) (□? (f x)))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(λ (i) (-> (match i ...) <-)) (menv '((□? (i)))))\""
  138
  ((13 14 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app equal? (-> co₀ <-) co) (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (...\n           fold/coord\n           (min-maybe-move (-> (λ (mmo mo₁) ...) <-))\n           max-maybe-move\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> andmap <-) (λ (c) ...) is) (menv '((□? (r)) (□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app equal? (-> m <-) m*) (menv '((□? (b co m)))))\""
  289
  ((36 37 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (...\n           move-horizon\n           (is\n            (->\n             (app\n              cons\n              (app Ze)\n              (app cons (app On) (app cons (app Tw) (app nil))))\n             <-))\n           mark⁻¹\n           ...)\n    ...)\n (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> ormap <-) f rest-xs) (menv '((□? (f xs)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> board-mark <-) co this-mark bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> i⁻¹ <-) rc) (menv '((□? (rc)) (□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (some-v ... zero-player-game) (-> (app zero-player-game) <-))\n (menv '()))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(λ (bo)\n    (-> (app move-coord (app some-v (app maximin bo ma (app mark⁻¹ ma)))) <-))\n (menv '((□? (bo)) (□? (ma)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match (-> (app blank? (app board-lookup co bo)) <-) (#t) (#f))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app some-v (-> (app maximin bo that-mark this-mark) <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app move-horizon (-> (app some-v (app maximin bo that-mark this-mark)) <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> player <-) (app O) human-action) (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> move-horizon <-) mo₀) (menv '((□? (mmo mo₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> blank <-)) (menv '((□? (co)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app marked-with? (-> b <-) (app coord r c) m)\n (menv '((□? (r)) (□? (c)) (□? (b m)))))\""
  41
  ((1 1 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(λ (a) (-> (match a ...) <-)) (menv '((□? (a)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app move-horizon (-> (app some-v (app minimax bo that-mark this-mark)) <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match (app full? bo) (#f) (_ (-> (let (_) ...) <-)))\n (menv '((□? (bo this-play that-play)))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> none <-)) (menv '((□? (bo this-mark that-mark)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app board-lookup (-> co <-) bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  14
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app foldl f (-> (app f x acc) <-) xs) (menv '((□? (f acc l)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match a (move _ x) (_ (-> (app error \"invalid match for move-horizon\") <-)))\n (menv '((□? (a)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app foldl (-> (λ (r x) ...) <-) x is) (menv '((□? (f x)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(let (_) (-> (match this-play ...) <-))\n (menv '((□? (bo this-play that-play)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app player (-> (app O) <-) human-action) (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> coord <-) rc rc) (menv '((□? (rc)) (□? (b m)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app move-horizon (-> mo₁ <-)) (menv '((□? (mmo mo₁)))))\""
  10
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> X <-)) (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app move (-> co <-) (match (app wins? bo this-mark) ...))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  14
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app andmap (-> (λ (rc) ...) <-) is) (menv '((□? (b m)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app blank? (-> (app board-lookup co bo) <-))\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> draw-board! <-) bo)\n (menv '((□? (bo this-play that-play)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app marked-with? b (-> (app coord rc (app i⁻¹ rc)) <-) m)\n (menv '((□? (rc)) (□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match\n   (-> (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) <-)\n   (#t)\n   (#f))\n (menv '((□? (mmo mo₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app fold/coord (λ (co mm) ...) (-> (app none) <-))\n (menv '((□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app cons (app Ze) (-> (app cons (app On) (app cons (app Tw) (app nil))) <-))\n (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app ormap (-> (λ (c) ...) <-) is) (menv '((□? (b m)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> b <-) co) (menv '((□? (b co m)))))\""
  96
  ((5 5 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> O <-)) (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> andmap <-) (λ (r) ...) is) (menv '((□? (b)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> cons <-) (app On) (app cons (app Tw) (app nil)))\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(match a (blank) (_ (-> (app #f) <-))) (menv '((□? (a)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app player (-> (app X) <-) (app make-ai-action (app X)))\n (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> horizon <-) (app draw) 0)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app < (-> sc₀ <-) sc₁) (menv '((□? (h₀ h₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app board-lookup co (-> bo <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  16
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(λ (a) (-> (match a ...) <-)) (menv '((□? (a)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   or\n   (app ormap (λ (r) ...) is)\n   (-> (app ormap (λ (c) ...) is) <-)\n   (app andmap (λ (rc) ...) is)\n   (app andmap (λ (rc) ...) is))\n (menv '((□? (b m)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (...\n           human-action\n           (make-ai-action (-> (λ (ma) ...) <-))\n           draw-board!\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app foldl f (app f x acc) (-> xs <-)) (menv '((□? (f acc l)))))\""
  41
  ((3 3 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app andmap (-> (λ (c) ...) <-) is) (menv '((□? (r)) (□? (b)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app marked-with? b (app coord rc rc) (-> m <-))\n (menv '((□? (rc)) (□? (b m)))))\""
  206
  ((23 24 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match this-play ((player mark action) (-> (let (co) ...) <-)))\n (menv '((□? (bo this-play that-play)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app ormap (λ (r) ...) (-> is <-)) (menv '((□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> X <-)) (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> board-mark <-) co this-mark bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> quote <-) human-action) (menv '((□? (bo)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> Ze <-)) (menv '((□? (i)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> On <-)) (menv '((□? (i)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app minimax (-> bo <-) that-mark this-mark)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  8
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   (#t)\n   ((#f) (-> mo₁ <-)))\n (menv '((□? (mmo mo₁)))))\""
  10
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app horizon oc (-> (app + sc 1) <-)) (menv '((□? (h)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> X <-)) (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app move-horizon (-> mo₀ <-)) (menv '((□? (mmo mo₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app andmap (-> (λ (r) ...) <-) is) (menv '((□? (b)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match a (move x _) (_ (-> (app error \"invalid match for move-coord\") <-)))\n (menv '((□? (a)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(let (co) (-> (match (app blank? (app board-lookup co bo)) ...) <-))\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> coord <-) r c) (menv '((□? (c)) (□? (r)) (□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (a)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> lose <-)) (menv '((□? (oc₀ oc₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(λ (r) (-> (app marked-with? b (app coord r c) m) <-))\n (menv '((□? (r)) (□? (c)) (□? (b m)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   or\n   (-> (app ormap (λ (r) ...) is) <-)\n   (app ormap (λ (c) ...) is)\n   (app andmap (λ (rc) ...) is)\n   (app andmap (λ (rc) ...) is))\n (menv '((□? (b m)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> some <-) mo₁) (menv '((□? (mmo mo₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app mark⁻¹ (-> ma <-)) (menv '((□? (bo)) (□? (ma)))))\""
  24
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app play-turn bo (-> that-play <-) this-play)\n (menv '((□? (bo this-play that-play)))))\""
  63
  ((9 9 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app marked (-> ma <-)) (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  206
  ((22 23 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (... blank? (move-coord (-> (λ (a) ...) <-)) move-horizon ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app horizon< (app move-horizon mo₀) (-> (app move-horizon mo₁) <-))\n (menv '((□? (mmo mo₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app equal? (-> oc₁ <-) (app lose)) (menv '((□? (oc₀ oc₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match oc₀ ((win) (-> (app #f) <-)) (draw) (lose))\n (menv '((□? (oc₀ oc₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app minimax bo that-mark (-> this-mark <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  50
  ((3 3 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   some\n   (->\n    (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...)\n    <-))\n (menv '((□? (mmo mo₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match (app b co) ((blank) (-> (app #f) <-)) (marked m*))\n (menv '((□? (b co m)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> equal? <-) oc₁ (app win)) (menv '((□? (oc₀ oc₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   (-> horizon-add1 <-)\n   (app move-horizon (app some-v (app maximin bo that-mark this-mark))))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(let (... () (bo (-> (app board-mark co this-mark bo) <-)) () ...) ...)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> mark⁻¹ <-) ma) (menv '((□? (bo)) (□? (ma)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   or\n   (app oc< oc₀ oc₁)\n   (-> (app and (app equal? oc₀ oc₁) (app < sc₀ sc₁)) <-))\n (menv '((□? (h₀ h₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match (-> (app full? bo) <-) (#f) _)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(match a ((move x _) (-> x <-)) _) (menv '((□? (a)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app board-lookup co (-> bo <-))\n (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  191
  ((19 19 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app horizon (app win) (-> 0 <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> marked-with? <-) b (app coord r c) m)\n (menv '((□? (r)) (□? (c)) (□? (b m)))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(λ (b m)\n    (->\n     (app\n      or\n      (app ormap (λ (r) ...) is)\n      (app ormap (λ (c) ...) is)\n      (app andmap (λ (rc) ...) is)\n      (app andmap (λ (rc) ...) is))\n     <-))\n (menv '((□? (b m)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app fold/coord (-> (λ (co mm) ...) <-) (app none))\n (menv '((□? (bo this-mark that-mark)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(λ (co mm) (-> (match (app blank? (app board-lookup co bo)) ...) <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> marked-with? <-) b (app coord r c) m)\n (menv '((□? (c)) (□? (r)) (□? (b m)))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app board-mark co (-> this-mark <-) bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  53
  ((3 3 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app horizon (-> (app draw) <-) 0)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> full? <-) bo) (menv '((□? (bo this-play that-play)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(λ (mmo mo₁) (-> (match mmo ...) <-)) (menv '((□? (mmo mo₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> coord <-) r c) (menv '((□? (c)) (□? (r)) (□? (b)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match (-> (app b co) <-) (blank) (marked m*))\n (menv '((□? (b co m)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(λ (co) (-> (match (app equal? co₀ co) ...) <-))\n (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> make-ai-action <-) (app O)) (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app and (-> (app equal? oc₀ oc₁) <-) (app < sc₀ sc₁))\n (menv '((□? (h₀ h₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app draw-board! (-> bo <-))\n (menv '((□? (bo this-play that-play)))))\""
  38
  ((2 2 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app ormap (-> (λ (r) ...) <-) is) (menv '((□? (b m)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app move (-> co <-) (match (app wins? bo this-mark) ...))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  14
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> make-ai-action <-) (app X)) (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> loop <-))\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (... move-coord (move-horizon (-> (λ (a) ...) <-)) is ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app foldl (-> f <-) (app f x acc) xs) (menv '((□? (f acc l)))))\""
  25
  ((2 2 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(match (-> a <-) (move _ x) _) (menv '((□? (a)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(λ (c) (-> (app andmap (λ (r) ...) is) <-))\n (menv '((□? (c)) (□? (b m)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app draw-board! (-> bo <-))\n (menv '((□? (bo this-play that-play)))))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app maximin bo that-mark (-> this-mark <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  73
  ((4 4 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(match (-> l <-) (nil) (cons x xs)) (menv '((□? (f acc l)))))\""
  41
  ((4 4 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(match (-> xs <-) (empty) (cons x rest-xs)) (menv '((□? (f xs)))))\""
  40
  ((3 3 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app coord r (-> c <-))\n (menv '((□? (c x)) (□? (r x)) (□? (f x)))))\""
  66
  ((9 9 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app player (app X) (-> (app make-ai-action (app X)) <-))\n (menv '((□? ()))))\""
  6
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> coord <-) rc (app i⁻¹ rc))\n (menv '((□? (rc)) (□? (b m)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app cons (app On) (-> (app cons (app Tw) (app nil)) <-))\n (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> maximin <-) bo that-mark this-mark)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app error (app quote human-action) (-> \"not implemented\" <-))\n (menv '((□? (bo)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app < sc₀ (-> sc₁ <-)) (menv '((□? (h₀ h₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> player <-) (app X) human-action) (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app coord (-> r <-) c) (menv '((□? (c)) (□? (r)) (□? (b m)))))\""
  68
  ((4 5 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match\n   mmo\n   ((some mo₀)\n    (->\n     (app\n      some\n      (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...))\n     <-))\n   (none))\n (menv '((□? (mmo mo₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> and <-) (app equal? oc₀ oc₁) (app < sc₀ sc₁))\n (menv '((□? (h₀ h₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app horizon (-> (app draw) <-) 0)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(λ (b) (-> (app andmap (λ (r) ...) is) <-)) (menv '((□? (b)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (... marked-with? (i⁻¹ (-> (λ (i) ...) <-)) ormap ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app andmap (λ (c) ...) (-> is <-)) (menv '((□? (r)) (□? (b)))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(let (... () (_ (-> (app draw-board! bo) <-)) () ...) ...)\n (menv '((□? (bo this-play that-play)))))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(λ (ma) (-> (match ma ...) <-)) (menv '((□? (ma)))))\""
  45
  ((2 2 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> move <-) co (match (app wins? bo this-mark) ...))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app f (-> x <-)) (menv '((□? (f xs)))))\""
  101
  ((11 12 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> void <-)) (menv '((□? (bo this-play that-play)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app equal? co₀ (-> co <-)) (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   (-> play-game <-)\n   (app player (app X) human-action)\n   (app player (app O) (app make-ai-action (app O))))\n (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app make-ai-action (-> (app X) <-)) (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match (app b co) (blank) ((marked m*) (-> (app equal? m m*) <-)))\n (menv '((□? (b co m)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(let (... () (_ (-> (app draw-board! bo) <-)) () ...) ...)\n (menv '((□? (bo this-play that-play)))))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app action (-> bo <-))\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  43
  ((4 4 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> blank? <-) (app board-lookup co bo))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app maximin bo (-> ma <-) (app mark⁻¹ ma))\n (menv '((□? (bo)) (□? (ma)))))\""
  24
  ((0 1 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> marked? <-) (app b (app coord r c)))\n (menv '((□? (c)) (□? (r)) (□? (b)))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> foldl <-) (λ (r x) ...) x is) (menv '((□? (f x)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(λ (ma) (-> (λ (bo) ...) <-)) (menv '((□? (ma)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app b (-> co <-)) (menv '((□? (b co m)))))\""
  30
  ((1 1 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match (-> this-play <-) (player mark action))\n (menv '((□? (bo this-play that-play)))))\""
  71
  ((11 11 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app marked-with? b (app coord r c) (-> m <-))\n (menv '((□? (c)) (□? (r)) (□? (b m)))))\""
  212
  ((22 23 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(let (bo)\n    (->\n     (app max-maybe-move mm (app move co (match (app wins? bo this-mark) ...)))\n     <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> marked-with? <-) b (app coord rc rc) m)\n (menv '((□? (rc)) (□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> make-ai-action <-) (app O)) (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> andmap <-) (λ (rc) ...) is) (menv '((□? (b m)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> blank? <-) (app board-lookup co bo))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(λ (f xs) (-> (match xs ...) <-)) (menv '((□? (f xs)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> equal? <-) oc₁ (app lose)) (menv '((□? (oc₀ oc₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> board-lookup <-) co bo)\n (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   (-> max-maybe-move <-)\n   mm\n   (app move co (match (app wins? bo this-mark) ...)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match\n   xs\n   (empty)\n   ((cons x rest-xs) (-> (app and (app f x) (app andmap f rest-xs)) <-)))\n (menv '((□? (f xs)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app draw-board! (-> bo <-))\n (menv '((□? (bo this-play that-play)))))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> player <-) (app O) (app make-ai-action (app O)))\n (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> play-turn <-) bo that-play this-play)\n (menv '((□? (bo this-play that-play)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(match (-> a <-) (blank) _) (menv '((□? (a)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app player (app O) (-> (app make-ai-action (app O)) <-))\n (menv '((□? ()))))\""
  6
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   some\n   (->\n    (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...)\n    <-))\n (menv '((□? (mmo mo₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match (app wins? bo this-mark) ((#f) (-> (match (app full? bo) ...) <-)) _)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(match i (Ze) (On) ((Tw) (-> (app Ze) <-))) (menv '((□? (i)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> full? <-) bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app and (app f x) (-> (app andmap f rest-xs) <-))\n (menv '((□? (f xs)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> some-v <-) (app minimax bo that-mark this-mark))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> board-lookup <-) co bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> horizon <-) (app draw) 0)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app andmap f (-> rest-xs <-)) (menv '((□? (f xs)))))\""
  80
  ((9 10 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (...\n           empty-board\n           (board-mark (-> (λ (co₀ ma bo) ...) <-))\n           board-lookup\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app oc< (-> oc₀ <-) oc₁) (menv '((□? (h₀ h₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> move-horizon <-) (app some-v (app minimax bo that-mark this-mark)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f xs)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> some-v <-) (app maximin bo ma (app mark⁻¹ ma)))\n (menv '((□? (bo)) (□? (ma)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> draw <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app equal? (-> oc₀ <-) oc₁) (menv '((□? (h₀ h₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(match a ((move _ x) (-> x <-)) _) (menv '((□? (a)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app equal? oc₁ (-> (app win) <-)) (menv '((□? (oc₀ oc₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (...\n           draw-board!\n           (play-turn (-> (λ (bo this-play that-play) ...) <-))\n           play-game\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> error <-) \"invalid match for some-v\") (menv '((□? (a)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(match a ((some x) (-> x <-)) _) (menv '((□? (a)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   (-> some <-)\n   (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...))\n (menv '((□? (mmo mo₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match (-> (app blank? (app board-lookup co bo)) <-) (#t) (#f))\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> move-coord <-) (app some-v (app maximin bo ma (app mark⁻¹ ma))))\n (menv '((□? (bo)) (□? (ma)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   play-game\n   (app player (app X) human-action)\n   (-> (app player (app O) human-action) <-))\n (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe 2 "\"(list 'eval '(app (-> Tw <-)) (menv '()))\"" 1 ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(λ (co₀ ma bo) (-> (λ (co) ...) <-)) (menv '((□? (co₀ ma bo)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match\n   (app full? bo)\n   ((#f) (-> (app play-turn bo that-play this-play) <-))\n   _)\n (menv '((□? (bo this-play that-play)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app quote (-> human-action <-)) (menv '((□? (bo)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(λ (bo) (-> (app void) <-)) (menv '((□? (bo)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe 2 "\"(list 'eval '(app (-> nil <-)) (menv '()))\"" 1 ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (... andmap (wins? (-> (λ (b m) ...) <-)) full? ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> move-horizon <-) (app some-v (app maximin bo that-mark this-mark)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> move-horizon <-) mo₀) (menv '((□? (mmo mo₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   ((#t) (-> mo₀ <-))\n   (#f))\n (menv '((□? (mmo mo₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app marked? (-> (app b (app coord r c)) <-))\n (menv '((□? (c)) (□? (r)) (□? (b)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(let (_) (-> (app display \"Cat's game.\\n\") <-))\n (menv '((□? (bo this-play that-play)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   min-maybe-move\n   (-> mm <-)\n   (app move co (match (app wins? bo this-mark) ...)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(λ (c) (-> (app marked-with? b (app coord r c) m) <-))\n (menv '((□? (c)) (□? (r)) (□? (b m)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (... i⁻¹ (ormap (-> (λ (f xs) ...) <-)) andmap ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(λ (f xs) (-> (match xs ...) <-)) (menv '((□? (f xs)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (... maximin (human-action (-> (λ (bo) ...) <-)) make-ai-action ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   ((#t) (-> mo₁ <-))\n   (#f))\n (menv '((□? (mmo mo₁)))))\""
  10
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> O <-)) (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(match ma ((X) (-> (app O) <-)) (O)) (menv '((□? (ma)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match (app wins? bo this-mark) (#f) (_ (-> (app horizon (app lose) 0) <-)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> coord <-) r c)\n (menv '((□? (c x)) (□? (r x)) (□? (f x)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(λ (co mm) (-> (match (app blank? (app board-lookup co bo)) ...) <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   or\n   (app ormap (λ (r) ...) is)\n   (app ormap (λ (c) ...) is)\n   (app andmap (λ (rc) ...) is)\n   (-> (app andmap (λ (rc) ...) is) <-))\n (menv '((□? (b m)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(match (-> mmo <-) (some mo₀) (none)) (menv '((□? (mmo mo₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(λ (c) (-> (app marked? (app b (app coord r c))) <-))\n (menv '((□? (c)) (□? (r)) (□? (b)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(match (-> oc₀ <-) (win) (draw) (lose)) (menv '((□? (oc₀ oc₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> X <-)) (menv '((□? (ma)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> fold/coord <-) (λ (co mm) ...) (app none))\n (menv '((□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> cons <-) (app Tw) (app nil)) (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   max-maybe-move\n   mm\n   (-> (app move co (match (app wins? bo this-mark) ...)) <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match\n   oc₀\n   (win)\n   (draw)\n   ((lose) (-> (app not (app equal? oc₁ (app lose))) <-)))\n (menv '((□? (oc₀ oc₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (a)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(λ (mmo mo₁) (-> (match mmo ...) <-)) (menv '((□? (mmo mo₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app horizon (-> oc <-) (app + sc 1)) (menv '((□? (h)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> f <-) x) (menv '((□? (f xs)))))\""
  31
  ((3 3 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app board-lookup co (-> bo <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  114
  ((9 9 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   play-game\n   (app player (app X) human-action)\n   (-> (app player (app O) (app make-ai-action (app O))) <-))\n (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app fold/coord (λ (co mm) ...) (-> (app none) <-))\n (menv '((□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (...\n           play-game\n           (two-player-game (-> (λ () ...) <-))\n           one-player-game\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (... full? (oc< (-> (λ (oc₀ oc₁) ...) <-)) horizon< ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(match a ((marked _) (-> (app #t) <-)) _) (menv '((□? (a)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> coord <-) r c) (menv '((□? (r)) (□? (c)) (□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app some (-> mo₁ <-)) (menv '((□? (mmo mo₁)))))\""
  10
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> none <-)) (menv '((□? (bo this-mark that-mark)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match h₀ ((horizon oc₀ sc₀) (-> (match h₁ ...) <-)))\n (menv '((□? (h₀ h₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app minimax bo (-> that-mark <-) this-mark)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  73
  ((4 4 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> cons <-) (app Ze) (app cons (app On) (app cons (app Tw) (app nil))))\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (... make-ai-action (draw-board! (-> (λ (bo) ...) <-)) play-turn ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> or <-) (app f x) (app ormap f rest-xs))\n (menv '((□? (f xs)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (a)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app player (-> (app X) <-) human-action) (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app andmap (λ (rc) ...) (-> is <-)) (menv '((□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app equal? oc₀ (-> oc₁ <-)) (menv '((□? (h₀ h₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (... () (loop (-> (λ () ...) <-)) () ...) ...)\n (menv '((□? (bo this-play that-play)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match\n   (app blank? (app board-lookup co bo))\n   ((#t) (-> (let (bo) ...) <-))\n   (#f))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app marked-with? b (-> (app coord rc rc) <-) m)\n (menv '((□? (rc)) (□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> player <-) (app O) (app make-ai-action (app O)))\n (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match\n   h₁\n   ((horizon oc₁ sc₁)\n    (->\n     (app or (app oc< oc₀ oc₁) (app and (app equal? oc₀ oc₁) (app < sc₀ sc₁)))\n     <-)))\n (menv '((□? (h₀ h₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> horizon <-) (app lose) 0)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app player (-> (app X) <-) human-action) (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   horizon-add1\n   (->\n    (app move-horizon (app some-v (app maximin bo that-mark this-mark)))\n    <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app f (app coord r c) (-> x <-))\n (menv '((□? (c x)) (□? (r x)) (□? (f x)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> ormap <-) (λ (c) ...) is) (menv '((□? (b m)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app some-v (-> (app maximin bo ma (app mark⁻¹ ma)) <-))\n (menv '((□? (bo)) (□? (ma)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> action <-) bo)\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  104
  ((15 15 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app f (-> x <-)) (menv '((□? (f xs)))))\""
  53
  ((4 4 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   (-> some <-)\n   (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...))\n (menv '((□? (mmo mo₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> blank? <-) (app board-lookup co bo))\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app cons (-> (app On) <-) (app cons (app Tw) (app nil)))\n (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match (-> (app full? bo) <-) (#f) _)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe 2 "\"(list 'eval '(app (-> Ze <-)) (menv '()))\"" 1 ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(match (-> h₀ <-) (horizon oc₀ sc₀)) (menv '((□? (h₀ h₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> horizon< <-) (app move-horizon mo₀) (app move-horizon mo₁))\n (menv '((□? (mmo mo₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(λ (co) (-> (app blank) <-)) (menv '((□? (co)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(match i ((Ze) (-> (app Tw) <-)) (On) (Tw)) (menv '((□? (i)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> equal? <-) m m*) (menv '((□? (b co m)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(lettypes Ze ... player (letrec (some-v ... zero-player-game) ...))\n (menv '()))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app andmap (-> (λ (c) ...) <-) is) (menv '((□? (r)) (□? (b m)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app + sc (-> 1 <-)) (menv '((□? (h)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app marked-with? b (app coord rc (app i⁻¹ rc)) (-> m <-))\n (menv '((□? (rc)) (□? (b m)))))\""
  206
  ((26 27 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> void <-)) (menv '((□? (bo)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app ormap (λ (c) ...) (-> is <-)) (menv '((□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> error <-) (app quote human-action) \"not implemented\")\n (menv '((□? (bo)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   play-game\n   (-> (app player (app X) human-action) <-)\n   (app player (app O) human-action))\n (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(match (-> a <-) (move x _) _) (menv '((□? (a)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app equal? m (-> m* <-)) (menv '((□? (b co m)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(match a (marked _) (_ (-> (app #f) <-))) (menv '((□? (a)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match\n   mmo\n   ((some mo₀)\n    (->\n     (app\n      some\n      (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...))\n     <-))\n   (none))\n (menv '((□? (mmo mo₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app horizon< (app move-horizon mo₀) (-> (app move-horizon mo₁) <-))\n (menv '((□? (mmo mo₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app wins? bo (-> mark <-))\n (menv '((□? (bo this-play that-play)))))\""
  91
  ((13 13 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(λ (c x) (-> (app f (app coord r c) x) <-))\n (menv '((□? (c x)) (□? (r x)) (□? (f x)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app foldl (λ (r x) ...) (-> x <-) is) (menv '((□? (f x)))))\""
  15
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app ormap f (-> rest-xs <-)) (menv '((□? (f xs)))))\""
  40
  ((3 3 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> win <-)) (menv '((□? (oc₀ oc₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app player (app X) (-> human-action <-)) (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   (-> play-game <-)\n   (app player (app X) (app make-ai-action (app X)))\n   (app player (app O) (app make-ai-action (app O))))\n (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app equal? (-> oc₁ <-) (app win)) (menv '((□? (oc₀ oc₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> win <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> error <-) \"invalid match for move-coord\")\n (menv '((□? (a)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(let (... () (bo (-> (app board-mark co this-mark bo) <-)) () ...) ...)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> f <-) x) (menv '((□? (f xs)))))\""
  71
  ((11 12 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app f (-> x <-) acc) (menv '((□? (f acc l)))))\""
  54
  ((4 4 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(match (-> a <-) (some x) _) (menv '((□? (a)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match (app blank? (app board-lookup co bo)) (#t) ((#f) (-> (app loop) <-)))\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app board-mark co (-> mark <-) bo)\n (menv '((□? (bo this-play that-play)))))\""
  91
  ((13 13 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(λ () (-> (let (co) ...) <-))\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match\n   (app full? bo)\n   ((#f)\n    (->\n     (app\n      horizon-add1\n      (app move-horizon (app some-v (app minimax bo that-mark this-mark))))\n     <-))\n   _)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match (app wins? bo this-mark) ((#f) (-> (match (app full? bo) ...) <-)) _)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app andmap (λ (rc) ...) (-> is <-)) (menv '((□? (b m)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(match (-> i <-) (Ze) (On) (Tw)) (menv '((□? (i)))))\""
  114
  ((12 12 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match l (nil) ((cons x xs) (-> (app foldl f (app f x acc) xs) <-)))\n (menv '((□? (f acc l)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app error (-> (app quote human-action) <-) \"not implemented\")\n (menv '((□? (bo)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (...\n           play-turn\n           (play-game (-> (λ (player-one player-two) ...) <-))\n           two-player-game\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(let (... () (bo (-> (app board-mark co mark bo) <-)) () ...) ...)\n (menv '((□? (bo this-play that-play)))))\""
  6
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(match (-> h₁ <-) (horizon oc₁ sc₁)) (menv '((□? (h₀ h₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app play-turn empty-board player-one (-> player-two <-))\n (menv '((□? (player-one player-two)))))\""
  21
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match (-> (app full? bo) <-) (#f) _)\n (menv '((□? (bo this-play that-play)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> board-lookup <-) co bo)\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> bo <-) co) (menv '((□? (co bo)))))\""
  233
  ((28 29 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(let (bo)\n    (->\n     (app min-maybe-move mm (app move co (match (app wins? bo this-mark) ...)))\n     <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (loop) (-> (app loop) <-))\n (menv '((□? (bo this-play that-play)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   (-> min-maybe-move <-)\n   mm\n   (app move co (match (app wins? bo this-mark) ...)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> O <-)) (menv '((□? ()))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> maximin <-) bo ma (app mark⁻¹ ma))\n (menv '((□? (bo)) (□? (ma)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app horizon< (-> (app move-horizon mo₀) <-) (app move-horizon mo₁))\n (menv '((□? (mmo mo₁)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> + <-) sc 1) (menv '((□? (h)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app move-horizon (-> mo₁ <-)) (menv '((□? (mmo mo₁)))))\""
  10
  ((1 1 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match h ((horizon oc sc) (-> (app horizon oc (app + sc 1)) <-)))\n (menv '((□? (h)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> zero-player-game <-)) (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (... foldl (fold/coord (-> (λ (f x) ...) <-)) min-maybe-move ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app horizon (app draw) (-> 0 <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(λ (a) (-> (match a ...) <-)) (menv '((□? (a)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app cons (app Tw) (-> (app nil) <-)) (menv '()))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(λ (r) (-> (app andmap (λ (c) ...) is) <-))\n (menv '((□? (r)) (□? (b m)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> not <-) (app equal? oc₁ (app lose)))\n (menv '((□? (oc₀ oc₁)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app marked-with? (-> b <-) (app coord rc (app i⁻¹ rc)) m)\n (menv '((□? (rc)) (□? (b m)))))\""
  37
  ((1 1 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (... () (some-v (-> (λ (a) ...) <-)) marked? ...) ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(match (-> ma <-) (X) (O)) (menv '((□? (ma)))))\""
  33
  ((1 1 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (...\n           minimax\n           (maximin (-> (λ (bo this-mark that-mark) ...) <-))\n           human-action\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app andmap (λ (c) ...) (-> is <-)) (menv '((□? (r)) (□? (b m)))))\""
  5
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(let (bo) (-> (match (app wins? bo mark) ...) <-))\n (menv '((□? (bo this-play that-play)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(λ (r) (-> (app andmap (λ (c) ...) is) <-))\n (menv '((□? (r)) (□? (b)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(letrec (...\n           min-maybe-move\n           (max-maybe-move (-> (λ (mmo mo₁) ...) <-))\n           minimax\n           ...)\n    ...)\n (menv '()))\""
  1
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app horizon (app lose) (-> 0 <-))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(match ma (X) ((O) (-> (app X) <-))) (menv '((□? (ma)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   (-> or <-)\n   (app ormap (λ (r) ...) is)\n   (app ormap (λ (c) ...) is)\n   (app andmap (λ (rc) ...) is)\n   (app andmap (λ (rc) ...) is))\n (menv '((□? (b m)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(let (... () (co (-> (app action bo) <-)) () ...) ...)\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> move-horizon <-) mo₁) (menv '((□? (mmo mo₁)))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app board-lookup (-> co <-) bo)\n (menv '((□? ()) (□? (bo this-play that-play)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app wins? (-> bo <-) mark)\n (menv '((□? (bo this-play that-play)))))\""
  7
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app coord r (-> c <-)) (menv '((□? (c)) (□? (r)) (□? (b)))))\""
  105
  ((11 11 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> full? <-) bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> some-v <-) (app maximin bo that-mark this-mark))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(λ (player-one player-two)\n    (-> (app play-turn empty-board player-one player-two) <-))\n (menv '((□? (player-one player-two)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app player (-> (app O) <-) (app make-ai-action (app O)))\n (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match (-> (app wins? bo this-mark) <-) (#f) _)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app maximin bo ma (-> (app mark⁻¹ ma) <-))\n (menv '((□? (bo)) (□? (ma)))))\""
  47
  ((6 6 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app display (-> \"Cat's game.\\n\" <-))\n (menv '((□? (bo this-play that-play)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '(app andmap (-> (λ (rc) ...) <-) is) (menv '((□? (b m)))))\""
  2
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> board-lookup <-) co bo)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match (app equal? co₀ co) ((#t) (-> (app marked ma) <-)) (#f))\n (menv '((□? (co)) (□? (co₀ ma bo)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list 'eval '((top) lettypes (Ze ... player) ...) (menv '()))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(λ (bo this-mark that-mark)\n    (-> (app fold/coord (λ (co mm) ...) (app none)) <-))\n (menv '((□? (bo this-mark that-mark)))))\""
  0
  (#f))
'(tic-tac-toe
  2
  "\"(list 'eval '(app (-> andmap <-) (λ (c) ...) is) (menv '((□? (r)) (□? (b)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   play-game\n   (-> (app player (app X) human-action) <-)\n   (app player (app O) (app make-ai-action (app O))))\n (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app\n   (-> play-game <-)\n   (app player (app X) human-action)\n   (app player (app O) human-action))\n (menv '((□? ()))))\""
  3
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match (app wins? bo mark) (#f) (_ (-> (let (_) ...) <-)))\n (menv '((□? (bo this-play that-play)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(match (app full? bo) (#f) (_ (-> (app horizon (app draw) 0) <-)))\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app marked-with? b (app coord r c) (-> m <-))\n (menv '((□? (r)) (□? (c)) (□? (b m)))))\""
  212
  ((32 33 0)))
'(tic-tac-toe
  2
  "\"(list\n 'eval\n '(app (-> wins? <-) bo this-mark)\n (menv '((□? (co mm)) (□? (bo this-mark that-mark)))))\""
  4
  ((0 0 0)))
