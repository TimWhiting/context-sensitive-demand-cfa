'(ack
  0
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '(())))\""
  46
  ((0 0 0)))
'(ack 0 "\"(list 'eval '(app - (-> m <-) 1) (menv '(())))\"" 15 ((0 0 0)))
'(ack 0 "\"(list 'eval '(app + n (-> 1 <-)) (menv '(())))\"" 1 ((0 0 0)))
'(ack
  0
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '(())))\""
  46
  ((0 0 0)))
'(ack
  0
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  48
  ((0 0 0)))
'(ack 0 "\"(list 'eval '(app - (-> m <-) 1) (menv '(())))\"" 15 ((0 0 0)))
'(ack
  0
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> (#f) (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '(())))\""
  46
  ((0 0 0)))
'(ack 0 "\"(list 'eval '(app - n (-> 1 <-)) (menv '(())))\"" 1 ((0 0 0)))
'(ack 0 "\"(list 'eval '(app = (-> m <-) 0) (menv '(())))\"" 16 ((0 0 0)))
'(ack
  0
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '(())))\""
  46
  ((0 0 0)))
'(ack 0 "\"(list 'eval '(app = (-> n <-) 0) (menv '(())))\"" 46 ((0 0 0)))
'(ack
  0
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      ((#f)\n       (match\n        (app = n 0)\n        ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '(())))\""
  46
  ((0 0 0)))
'(ack
  0
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '(())))\""
  2
  ((0 0 0)))
'(ack
  0
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '(())))\""
  15
  ((0 0 0)))
'(ack 0 "\"(list 'eval '(app - m (-> 1 <-)) (menv '(())))\"" 1 ((0 0 0)))
'(ack 0 "\"(list 'eval '(app (-> = <-) m 0) (menv '(())))\"" 1 ((0 0 0)))
'(ack 0 "\"(list 'eval '(app (-> - <-) n 1) (menv '(())))\"" 1 ((0 0 0)))
'(ack
  0
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '(())))\""
  46
  ((0 0 0)))
'(ack 0 "\"(list 'eval '(app - (-> n <-) 1) (menv '(())))\"" 46 ((0 0 0)))
'(ack
  0
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '(())))\""
  2
  ((0 0 0)))
'(ack
  0
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   ((#f)\n    (match\n     (app = n 0)\n     ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '(())))\""
  46
  ((0 0 0)))
'(ack 0 "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\"" 2 ((0 0 0)))
'(ack 0 "\"(list 'eval '(app - m (-> 1 <-)) (menv '(())))\"" 1 ((0 0 0)))
'(ack 0 "\"(list 'eval '(app (-> - <-) m 1) (menv '(())))\"" 1 ((0 0 0)))
'(ack 0 "\"(list 'eval '(app = m (-> 0 <-)) (menv '(())))\"" 1 ((0 0 0)))
'(ack 0 "\"(list 'eval '(top) (menv '()))\"" 49 ((0 0 0)))
'(ack 0 "\"(list 'eval '(app + (-> n <-) 1) (menv '(())))\"" 46 ((0 0 0)))
'(ack 0 "\"(list 'eval '(app = n (-> 0 <-)) (menv '(())))\"" 1 ((0 0 0)))
'(ack
  0
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   ((#f)\n    (match\n     (app = n 0)\n     ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '(())))\""
  19
  ((0 0 0)))
'(ack
  0
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    (#f)\n    (match\n     (app = n 0)\n     ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '(())))\""
  46
  ((0 0 0)))
'(ack 0 "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\"" 1 ((0 0 0)))
'(ack 0 "\"(list 'eval '(app (-> - <-) m 1) (menv '(())))\"" 1 ((0 0 0)))
'(ack
  0
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(ack 0 "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\"" 1 ((0 0 0)))
'(ack
  0
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '(())))\""
  15
  ((0 0 0)))
'(ack
  0
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '(())))\""
  2
  ((0 0 0)))
'(ack
  0
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '(())))\""
  15
  ((0 0 0)))
'(ack
  0
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               ((#f)\n                (match\n                 (app = n 0)\n                 ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(ack 0 "\"(list 'eval '(app (-> + <-) n 1) (menv '(())))\"" 1 ((0 0 0)))
'(ack 0 "\"(list 'eval '(app (-> = <-) n 0) (menv '(())))\"" 1 ((0 0 0)))
'(blur 0 "\"(list 'eval '(app <= (-> n <-) 1) (menv '(())))\"" 19 ((0 0 0)))
'(blur
  0
  "\"(list 'eval '(letrec (id blur lp) (-> (app lp (app #f) 2) <-)) (menv '()))\""
  59
  ((0 0 0)))
'(blur 0 "\"(list 'eval '(app (-> blur <-) lp) (menv '(())))\"" 2 ((0 0 0)))
'(blur 0 "\"(list 'eval '(app (-> blur <-) id) (menv '(())))\"" 2 ((0 0 0)))
'(blur 0 "\"(list 'eval '(app (-> #t <-)) (menv '(())))\"" 1 ((0 0 0)))
'(blur
  0
  "\"(list 'eval '(app (-> not <-) (app (app blur lp) s (app - n 1))) (menv '(())))\""
  1
  ((0 0 0)))
'(blur
  0
  "\"(list\n 'eval\n '(letrec (id\n           blur\n           (->\n            lp\n            =\n            (λ (a n)\n              (match\n               (app <= n 1)\n               ((#t) (app id a))\n               ((#f)\n                (let* ((r (app (app blur id) (app #t)))\n                       (s (app (app blur id) (app #f))))\n                  (app not (app (app blur lp) s (app - n 1)))))))\n            <-))\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(blur
  0
  "\"(list\n 'eval\n '(match\n   (-> (app <= n 1) <-)\n   ((#t) (app id a))\n   ((#f)\n    (let* ((r (app (app blur id) (app #t))) (s (app (app blur id) (app #f))))\n      (app not (app (app blur lp) s (app - n 1))))))\n (menv '(())))\""
  22
  ((0 0 0)))
'(blur 0 "\"(list 'eval '(top) (menv '()))\"" 60 ((0 0 0)))
'(blur 0 "\"(list 'eval '(app blur (-> id <-)) (menv '(())))\"" 2 ((0 0 0)))
'(blur
  0
  "\"(list 'eval '(app (app blur id) (-> (app #t) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(blur
  0
  "\"(list 'eval '(app (-> (app blur id) <-) (app #t)) (menv '(())))\""
  13
  ((0 0 0)))
'(blur
  0
  "\"(list 'eval '(app (-> (app blur lp) <-) s (app - n 1)) (menv '(())))\""
  13
  ((0 0 0)))
'(blur
  0
  "\"(list 'eval '(app lp (app #f) (-> 2 <-)) (menv '()))\""
  1
  ((0 0 0)))
'(blur
  0
  "\"(list\n 'eval\n '(λ (a n)\n    (->\n     (match\n      (app <= n 1)\n      ((#t) (app id a))\n      ((#f)\n       (let* ((r (app (app blur id) (app #t)))\n              (s (app (app blur id) (app #f))))\n         (app not (app (app blur lp) s (app - n 1))))))\n     <-))\n (menv '(())))\""
  57
  ((0 0 0)))
'(blur
  0
  "\"(list\n 'eval\n '(match\n   (app <= n 1)\n   (-> (#t) (app id a) <-)\n   ((#f)\n    (let* ((r (app (app blur id) (app #t))) (s (app (app blur id) (app #f))))\n      (app not (app (app blur lp) s (app - n 1))))))\n (menv '(())))\""
  57
  ((0 0 0)))
'(blur
  0
  "\"(list 'eval '(app (-> lp <-) (app #f) 2) (menv '()))\""
  2
  ((0 0 0)))
'(blur 0 "\"(list 'eval '(λ (x) (-> x <-)) (menv '(())))\"" 57 ((0 0 0)))
'(blur 0 "\"(list 'eval '(app blur (-> lp <-)) (menv '(())))\"" 2 ((0 0 0)))
'(blur
  0
  "\"(list\n 'eval\n '(let* ((-> r = (app (app blur id) (app #t)) <-) s) bod)\n (menv '(())))\""
  59
  ((0 0 0)))
'(blur 0 "\"(list 'eval '(app (-> id <-) a) (menv '(())))\"" 2 ((0 0 0)))
'(blur
  0
  "\"(list 'eval '(app not (-> (app (app blur lp) s (app - n 1)) <-)) (menv '(())))\""
  57
  ((0 0 0)))
'(blur 0 "\"(list 'eval '(app <= n (-> 1 <-)) (menv '(())))\"" 1 ((0 0 0)))
'(blur 0 "\"(list 'eval '(app (-> #f <-)) (menv '(())))\"" 1 ((0 0 0)))
'(blur
  0
  "\"(list\n 'eval\n '(match\n   (app <= n 1)\n   ((#t) (app id a))\n   (->\n    (#f)\n    (let* ((r (app (app blur id) (app #t))) (s (app (app blur id) (app #f))))\n      (app not (app (app blur lp) s (app - n 1))))\n    <-))\n (menv '(())))\""
  57
  ((0 0 0)))
'(blur 0 "\"(list 'eval '(app (-> <= <-) n 1) (menv '(())))\"" 1 ((0 0 0)))
'(blur
  0
  "\"(list 'eval '(letrec (id (-> blur = (λ (y) y) <-) lp) bod) (menv '()))\""
  1
  ((0 0 0)))
'(blur
  0
  "\"(list 'eval '(app (app blur id) (-> (app #f) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(blur
  0
  "\"(list 'eval '(app (-> (app blur id) <-) (app #f)) (menv '(())))\""
  13
  ((0 0 0)))
'(blur
  0
  "\"(list 'eval '(app lp (-> (app #f) <-) 2) (menv '()))\""
  2
  ((0 0 0)))
'(blur 0 "\"(list 'eval '(app - (-> n <-) 1) (menv '(())))\"" 18 ((0 0 0)))
'(blur 0 "\"(list 'eval '(app id (-> a <-)) (menv '(())))\"" 57 ((0 0 0)))
'(blur 0 "\"(list 'eval '(app (-> - <-) n 1) (menv '(())))\"" 1 ((0 0 0)))
'(blur
  0
  "\"(list 'eval '(letrec ((-> id = (λ (x) x) <-) blur lp) bod) (menv '()))\""
  1
  ((0 0 0)))
'(blur 0 "\"(list 'eval '(app - n (-> 1 <-)) (menv '(())))\"" 1 ((0 0 0)))
'(blur 0 "\"(list 'eval '(app (-> #f <-)) (menv '()))\"" 1 ((0 0 0)))
'(blur
  0
  "\"(list 'eval '(app (app blur lp) s (-> (app - n 1) <-)) (menv '(())))\""
  18
  ((0 0 0)))
'(blur
  0
  "\"(list 'eval '(app (app blur lp) (-> s <-) (app - n 1)) (menv '(())))\""
  57
  ((0 0 0)))
'(blur
  0
  "\"(list\n 'eval\n '(let* (r (-> s = (app (app blur id) (app #f)) <-)) bod)\n (menv '(())))\""
  57
  ((0 0 0)))
'(blur 0 "\"(list 'eval '(λ (y) (-> y <-)) (menv '(())))\"" 10 ((0 0 0)))
'(blur 0 "\"(list 'eval '(app blur (-> id <-)) (menv '(())))\"" 2 ((0 0 0)))
'(blur 0 "\"(list 'eval '(app (-> blur <-) id) (menv '(())))\"" 2 ((0 0 0)))
'(blur
  0
  "\"(list\n 'eval\n '(let* (r s) (-> (app not (app (app blur lp) s (app - n 1))) <-))\n (menv '(())))\""
  57
  ((0 0 0)))
'(cpstak
  0
  "\"(list\n 'eval\n '(λ (x y z)\n    (->\n     (letrec ((tak\n               (λ (x y z k)\n                 (match\n                  (app not (app < y x))\n                  ((#t) (app k z))\n                  ((#f)\n                   (app\n                    tak\n                    (app - x 1)\n                    y\n                    z\n                    (λ (v1)\n                      (app\n                       tak\n                       (app - y 1)\n                       z\n                       x\n                       (λ (v2)\n                         (app\n                          tak\n                          (app - z 1)\n                          x\n                          y\n                          (λ (v3) (app tak v1 v2 v3 k))))))))))))\n       (app tak x y z (λ (a) a)))\n     <-))\n (menv '(())))\""
  73
  ((1 1 0)))
'(cpstak
  0
  "\"(list 'eval '(app tak x y z (-> (λ (a) a) <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(cpstak 0 "\"(list 'eval '(app k (-> z <-)) (menv '(() ())))\"" 46 ((0 0 0)))
'(cpstak
  0
  "\"(list\n 'eval\n '(app\n   (-> tak <-)\n   (app - x 1)\n   y\n   z\n   (λ (v1)\n     (app\n      tak\n      (app - y 1)\n      z\n      x\n      (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(cpstak
  0
  "\"(list 'eval '(app tak x (-> y <-) z (λ (a) a)) (menv '(())))\""
  4
  ((0 0 0)))
'(cpstak
  0
  "\"(list\n 'eval\n '(app (-> tak <-) (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))\n (menv '(() () () ())))\""
  2
  ((0 0 0)))
'(cpstak 0 "\"(list 'eval '(top) (menv '()))\"" 77 ((1 1 0)))
'(cpstak
  0
  "\"(list\n 'eval\n '(app\n   tak\n   (-> (app - x 1) <-)\n   y\n   z\n   (λ (v1)\n     (app\n      tak\n      (app - y 1)\n      z\n      x\n      (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))))\n (menv '(() ())))\""
  46
  ((0 0 0)))
'(cpstak 0 "\"(list 'eval '(λ (a) (-> a <-)) (menv '(() ())))\"" 49 ((0 0 0)))
'(cpstak
  0
  "\"(list\n 'eval\n '(app\n   tak\n   (app - x 1)\n   y\n   (-> z <-)\n   (λ (v1)\n     (app\n      tak\n      (app - y 1)\n      z\n      x\n      (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))))\n (menv '(() ())))\""
  46
  ((0 0 0)))
'(cpstak
  0
  "\"(list\n 'eval\n '(λ (v1)\n    (->\n     (app\n      tak\n      (app - y 1)\n      z\n      x\n      (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))\n     <-))\n (menv '(() () ())))\""
  71
  ((1 1 0)))
'(cpstak
  0
  "\"(list 'eval '(letrec (tak) (-> (app tak x y z (λ (a) a)) <-)) (menv '(())))\""
  72
  ((1 1 0)))
'(cpstak
  0
  "\"(list 'eval '(app (-> - <-) z 1) (menv '(() () () ())))\""
  1
  ((0 0 0)))
'(cpstak
  0
  "\"(list 'eval '(app tak (-> v1 <-) v2 v3 k) (menv '(() () () () ())))\""
  46
  ((0 0 0)))
'(cpstak
  0
  "\"(list\n 'eval\n '(app tak (app - z 1) x y (-> (λ (v3) (app tak v1 v2 v3 k)) <-))\n (menv '(() () () ())))\""
  1
  ((0 0 0)))
'(cpstak
  0
  "\"(list\n 'eval\n '(λ (v2) (-> (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k))) <-))\n (menv '(() () () ())))\""
  71
  ((1 1 0)))
'(cpstak
  0
  "\"(list 'eval '(app tak x y (-> z <-) (λ (a) a)) (menv '(())))\""
  4
  ((0 0 0)))
'(cpstak
  0
  "\"(list 'eval '(app cpstak 32 (-> 15 <-) 8) (menv '()))\""
  1
  ((0 0 0)))
'(cpstak
  0
  "\"(list 'eval '(app (-> not <-) (app < y x)) (menv '(() ())))\""
  1
  ((0 0 0)))
'(cpstak
  0
  "\"(list 'eval '(app - (-> z <-) 1) (menv '(() () () ())))\""
  46
  ((0 0 0)))
'(cpstak
  0
  "\"(list 'eval '(app cpstak (-> 32 <-) 15 8) (menv '()))\""
  1
  ((0 0 0)))
'(cpstak
  0
  "\"(list\n 'eval\n '(app\n   tak\n   (-> (app - y 1) <-)\n   z\n   x\n   (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))\n (menv '(() () ())))\""
  46
  ((0 0 0)))
'(cpstak
  0
  "\"(list 'eval '(app (-> tak <-) x y z (λ (a) a)) (menv '(())))\""
  2
  ((0 0 0)))
'(cpstak 0 "\"(list 'eval '(app (-> - <-) x 1) (menv '(() ())))\"" 1 ((0 0 0)))
'(cpstak
  0
  "\"(list 'eval '(app < y (-> x <-)) (menv '(() ())))\""
  47
  ((0 0 0)))
'(cpstak
  0
  "\"(list\n 'eval\n '(app tak (-> (app - z 1) <-) x y (λ (v3) (app tak v1 v2 v3 k)))\n (menv '(() () () ())))\""
  46
  ((0 0 0)))
'(cpstak
  0
  "\"(list 'eval '(app (-> cpstak <-) 32 15 8) (menv '()))\""
  2
  ((0 0 0)))
'(cpstak
  0
  "\"(list 'eval '(app tak (-> x <-) y z (λ (a) a)) (menv '(())))\""
  4
  ((0 0 0)))
'(cpstak 0 "\"(list 'eval '(app (-> k <-) z) (menv '(() ())))\"" 12 ((0 0 0)))
'(cpstak
  0
  "\"(list 'eval '(app not (-> (app < y x) <-)) (menv '(() ())))\""
  50
  ((0 0 0)))
'(cpstak
  0
  "\"(list 'eval '(λ (v3) (-> (app tak v1 v2 v3 k) <-)) (menv '(() () () () ())))\""
  71
  ((1 1 0)))
'(cpstak
  0
  "\"(list 'eval '(app (-> - <-) y 1) (menv '(() () ())))\""
  1
  ((0 0 0)))
'(cpstak
  0
  "\"(list\n 'eval\n '(match\n   (app not (app < y x))\n   (-> (#t) (app k z) <-)\n   ((#f)\n    (app\n     tak\n     (app - x 1)\n     y\n     z\n     (λ (v1)\n       (app\n        tak\n        (app - y 1)\n        z\n        x\n        (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))))))\n (menv '(() ())))\""
  71
  ((1 1 0)))
'(cpstak
  0
  "\"(list\n 'eval\n '(app\n   tak\n   (app - y 1)\n   (-> z <-)\n   x\n   (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))\n (menv '(() () ())))\""
  46
  ((0 0 0)))
'(cpstak
  0
  "\"(list 'eval '(app (-> tak <-) v1 v2 v3 k) (menv '(() () () () ())))\""
  2
  ((0 0 0)))
'(cpstak
  0
  "\"(list 'eval '(app - y (-> 1 <-)) (menv '(() () ())))\""
  1
  ((0 0 0)))
'(cpstak
  0
  "\"(list 'eval '(app tak v1 (-> v2 <-) v3 k) (menv '(() () () () ())))\""
  46
  ((0 0 0)))
'(cpstak
  0
  "\"(list 'eval '(app - (-> y <-) 1) (menv '(() () ())))\""
  46
  ((0 0 0)))
'(cpstak
  0
  "\"(list\n 'eval\n '(app\n   (-> tak <-)\n   (app - y 1)\n   z\n   x\n   (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))\n (menv '(() () ())))\""
  2
  ((0 0 0)))
'(cpstak
  0
  "\"(list 'eval '(app - (-> x <-) 1) (menv '(() ())))\""
  46
  ((0 0 0)))
'(cpstak
  0
  "\"(list\n 'eval\n '(app\n   tak\n   (app - y 1)\n   z\n   (-> x <-)\n   (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))\n (menv '(() () ())))\""
  46
  ((0 0 0)))
'(cpstak
  0
  "\"(list 'eval '(letrec (cpstak) (-> (app cpstak 32 15 8) <-)) (menv '()))\""
  76
  ((1 1 0)))
'(cpstak
  0
  "\"(list\n 'eval\n '(match\n   (-> (app not (app < y x)) <-)\n   ((#t) (app k z))\n   ((#f)\n    (app\n     tak\n     (app - x 1)\n     y\n     z\n     (λ (v1)\n       (app\n        tak\n        (app - y 1)\n        z\n        x\n        (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))))))\n (menv '(() ())))\""
  54
  ((1 1 0)))
'(cpstak
  0
  "\"(list\n 'eval\n '(letrec ((->\n            tak\n            =\n            (λ (x y z k)\n              (match\n               (app not (app < y x))\n               ((#t) (app k z))\n               ((#f)\n                (app\n                 tak\n                 (app - x 1)\n                 y\n                 z\n                 (λ (v1)\n                   (app\n                    tak\n                    (app - y 1)\n                    z\n                    x\n                    (λ (v2)\n                      (app\n                       tak\n                       (app - z 1)\n                       x\n                       y\n                       (λ (v3) (app tak v1 v2 v3 k))))))))))\n            <-))\n    bod)\n (menv '(())))\""
  1
  ((0 0 0)))
'(cpstak
  0
  "\"(list 'eval '(app - z (-> 1 <-)) (menv '(() () () ())))\""
  1
  ((0 0 0)))
'(cpstak 0 "\"(list 'eval '(app - x (-> 1 <-)) (menv '(() ())))\"" 1 ((0 0 0)))
'(cpstak
  0
  "\"(list\n 'eval\n '(app tak (app - z 1) (-> x <-) y (λ (v3) (app tak v1 v2 v3 k)))\n (menv '(() () () ())))\""
  46
  ((0 0 0)))
'(cpstak 0 "\"(list 'eval '(app (-> < <-) y x) (menv '(() ())))\"" 1 ((0 0 0)))
'(cpstak
  0
  "\"(list\n 'eval\n '(app\n   tak\n   (app - x 1)\n   (-> y <-)\n   z\n   (λ (v1)\n     (app\n      tak\n      (app - y 1)\n      z\n      x\n      (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))))\n (menv '(() ())))\""
  46
  ((0 0 0)))
'(cpstak
  0
  "\"(list\n 'eval\n '(app\n   tak\n   (app - y 1)\n   z\n   x\n   (-> (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))) <-))\n (menv '(() () ())))\""
  1
  ((0 0 0)))
'(cpstak
  0
  "\"(list\n 'eval\n '(app tak (app - z 1) x (-> y <-) (λ (v3) (app tak v1 v2 v3 k)))\n (menv '(() () () ())))\""
  46
  ((0 0 0)))
'(cpstak
  0
  "\"(list\n 'eval\n '(match\n   (app not (app < y x))\n   ((#t) (app k z))\n   (->\n    (#f)\n    (app\n     tak\n     (app - x 1)\n     y\n     z\n     (λ (v1)\n       (app\n        tak\n        (app - y 1)\n        z\n        x\n        (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))))\n    <-))\n (menv '(() ())))\""
  71
  ((1 1 0)))
'(cpstak
  0
  "\"(list 'eval '(app tak v1 v2 v3 (-> k <-)) (menv '(() () () () ())))\""
  11
  ((0 0 0)))
'(cpstak
  0
  "\"(list 'eval '(app cpstak 32 15 (-> 8 <-)) (menv '()))\""
  1
  ((0 0 0)))
'(cpstak
  0
  "\"(list\n 'eval\n '(λ (x y z k)\n    (->\n     (match\n      (app not (app < y x))\n      ((#t) (app k z))\n      ((#f)\n       (app\n        tak\n        (app - x 1)\n        y\n        z\n        (λ (v1)\n          (app\n           tak\n           (app - y 1)\n           z\n           x\n           (λ (v2)\n             (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))))))\n     <-))\n (menv '(() ())))\""
  71
  ((1 1 0)))
'(cpstak
  0
  "\"(list\n 'eval\n '(letrec ((->\n            cpstak\n            =\n            (λ (x y z)\n              (letrec ((tak\n                        (λ (x y z k)\n                          (match\n                           (app not (app < y x))\n                           ((#t) (app k z))\n                           ((#f)\n                            (app\n                             tak\n                             (app - x 1)\n                             y\n                             z\n                             (λ (v1)\n                               (app\n                                tak\n                                (app - y 1)\n                                z\n                                x\n                                (λ (v2)\n                                  (app\n                                   tak\n                                   (app - z 1)\n                                   x\n                                   y\n                                   (λ (v3) (app tak v1 v2 v3 k))))))))))))\n                (app tak x y z (λ (a) a))))\n            <-))\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(cpstak
  0
  "\"(list 'eval '(app < (-> y <-) x) (menv '(() ())))\""
  47
  ((0 0 0)))
'(cpstak
  0
  "\"(list\n 'eval\n '(app\n   tak\n   (app - x 1)\n   y\n   z\n   (->\n    (λ (v1)\n      (app\n       tak\n       (app - y 1)\n       z\n       x\n       (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k))))))\n    <-))\n (menv '(() ())))\""
  1
  ((0 0 0)))
'(cpstak
  0
  "\"(list 'eval '(app tak v1 v2 (-> v3 <-) k) (menv '(() () () () ())))\""
  46
  ((0 0 0)))
'(kcfa-2
  0
  "\"(list 'eval '(let (_) (-> (app f2 (app #f)) <-)) (menv '(() ())))\""
  22
  ((0 0 0)))
'(kcfa-2
  0
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f)))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '(())))\""
  1
  ((0 0 0)))
'(kcfa-2
  0
  "\"(list 'eval '(app (-> f2 <-) (app #t)) (menv '(() ())))\""
  3
  ((0 0 0)))
'(kcfa-2 0 "\"(list 'eval '(app (-> #t <-)) (menv '(())))\"" 1 ((0 0 0)))
'(kcfa-2
  0
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '(())))\""
  1
  ((0 0 0)))
'(kcfa-2
  0
  "\"(list 'eval '(app f1 (-> (app #t) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(kcfa-2
  0
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '(() () ())))\""
  3
  ((0 0 0)))
'(kcfa-2
  0
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '(() ())))\""
  1
  ((0 0 0)))
'(kcfa-2
  0
  "\"(list 'eval '(app (-> f2 <-) (app #f)) (menv '(() ())))\""
  3
  ((0 0 0)))
'(kcfa-2 0 "\"(list 'eval '(top) (menv '()))\"" 31 ((0 0 0)))
'(kcfa-2
  0
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '(() ())))\""
  1
  ((0 0 0)))
'(kcfa-2
  0
  "\"(list 'eval '(let ((-> _ = (app f2 (app #t)) <-)) bod) (menv '(() ())))\""
  22
  ((0 0 0)))
'(kcfa-2
  0
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '(() () ())))\""
  9
  ((0 0 0)))
'(kcfa-2 0 "\"(list 'eval '(app (-> #t <-)) (menv '(() ())))\"" 1 ((0 0 0)))
'(kcfa-2
  0
  "\"(list 'eval '(app f2 (-> (app #f) <-)) (menv '(() ())))\""
  2
  ((0 0 0)))
'(kcfa-2
  0
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 (app #t)))) (app f2 (app #f))) <-))\n (menv '(() ())))\""
  23
  ((0 0 0)))
'(kcfa-2
  0
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 (app #t)))) (app f1 (app #f))))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  1
  ((0 0 0)))
'(kcfa-2 0 "\"(list 'eval '(app (-> #f <-)) (menv '(())))\"" 1 ((0 0 0)))
'(kcfa-2
  0
  "\"(list 'eval '(app f1 (-> (app #f) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(kcfa-2
  0
  "\"(list 'eval '(let (_) (-> (app f1 (app #f)) <-)) (menv '(())))\""
  29
  ((0 0 0)))
'(kcfa-2
  0
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '(() () ())))\""
  13
  ((0 0 0)))
'(kcfa-2
  0
  "\"(list 'eval '(λ (z) (-> (app z x1 x2) <-)) (menv '(() () ())))\""
  17
  ((0 0 0)))
'(kcfa-2 0 "\"(list 'eval '(app (-> #f <-)) (menv '(() ())))\"" 1 ((0 0 0)))
'(kcfa-2
  0
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '(() ())))\""
  18
  ((0 0 0)))
'(kcfa-2
  0
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 (app #t)))) (app f1 (app #f))) <-))\n (menv '(())))\""
  30
  ((0 0 0)))
'(kcfa-2
  0
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 (app #t)))) (app f1 (app #f)))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  1
  ((0 0 0)))
'(kcfa-2
  0
  "\"(list 'eval '(app (-> f1 <-) (app #t)) (menv '(())))\""
  3
  ((0 0 0)))
'(kcfa-2
  0
  "\"(list 'eval '(let ((-> _ = (app f1 (app #t)) <-)) bod) (menv '(())))\""
  29
  ((0 0 0)))
'(kcfa-2
  0
  "\"(list 'eval '(app f2 (-> (app #t) <-)) (menv '(() ())))\""
  2
  ((0 0 0)))
'(kcfa-2
  0
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '(() () ())))\""
  9
  ((0 0 0)))
'(kcfa-2
  0
  "\"(list 'eval '(app (-> f1 <-) (app #f)) (menv '(())))\""
  3
  ((0 0 0)))
'(kcfa-2
  0
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '(())))\""
  25
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list\n 'eval\n '(app\n   (-> (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f)))) <-)\n   (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))))\n (menv '(() ())))\""
  1
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 (app #t)))) (app f1 (app #f)))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n      (λ (x2)\n        (app\n         (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n         (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))))))))\n (menv '()))\""
  1
  ((0 0 0)))
'(kcfa-3 0 "\"(list 'eval '(top) (menv '()))\"" 38 ((0 0 0)))
'(kcfa-3
  0
  "\"(list 'eval '(app z x1 (-> x2 <-) x3) (menv '(() () () ())))\""
  9
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list 'eval '(app f2 (-> (app #t) <-)) (menv '(() ())))\""
  2
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list 'eval '(app (-> z <-) x1 x2 x3) (menv '(() () () ())))\""
  3
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list 'eval '(let (_) (-> (app f3 (app #f)) <-)) (menv '(() () ())))\""
  22
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list\n 'eval\n '(λ (x2)\n    (->\n     (app\n      (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n      (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))))\n     <-))\n (menv '(() ())))\""
  25
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list 'eval '(let (_) (-> (app f1 (app #f)) <-)) (menv '(())))\""
  36
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list 'eval '(app (-> f2 <-) (app #t)) (menv '(() ())))\""
  3
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list 'eval '(λ (z) (-> (app z x1 x2 x3) <-)) (menv '(() () () ())))\""
  17
  ((0 0 0)))
'(kcfa-3 0 "\"(list 'eval '(app (-> #f <-)) (menv '(())))\"" 1 ((0 0 0)))
'(kcfa-3
  0
  "\"(list 'eval '(let ((-> _ = (app f2 (app #t)) <-)) bod) (menv '(() ())))\""
  29
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list 'eval '(app (-> f2 <-) (app #f)) (menv '(() ())))\""
  3
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list 'eval '(app (-> f1 <-) (app #f)) (menv '(())))\""
  3
  ((0 0 0)))
'(kcfa-3 0 "\"(list 'eval '(app (-> #f <-)) (menv '(() ())))\"" 1 ((0 0 0)))
'(kcfa-3
  0
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 (app #t)))) (app f1 (app #f))) <-))\n (menv '(())))\""
  37
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list 'eval '(app z (-> x1 <-) x2 x3) (menv '(() () () ())))\""
  9
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list 'eval '(app f2 (-> (app #f) <-)) (menv '(() ())))\""
  2
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list 'eval '(app f1 (-> (app #t) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f)))) <-)\n   (λ (x2)\n     (app\n      (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n      (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))))))\n (menv '(())))\""
  1
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 (app #t)))) (app f1 (app #f))))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n       (λ (x2)\n         (app\n          (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n          (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1)))))))\n    <-))\n (menv '()))\""
  1
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list\n 'eval\n '(λ (x3) (-> (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1)) <-))\n (menv '(() () ())))\""
  18
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list\n 'eval\n '(λ (f3) (-> (let ((_ (app f3 (app #t)))) (app f3 (app #f))) <-))\n (menv '(() () ())))\""
  23
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2 x3)) <-) (λ (y1 y2 y3) y1))\n (menv '(() () ())))\""
  1
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list 'eval '(app f1 (-> (app #f) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(kcfa-3 0 "\"(list 'eval '(app (-> #t <-)) (menv '(() () ())))\"" 1 ((0 0 0)))
'(kcfa-3
  0
  "\"(list 'eval '(app (-> f3 <-) (app #f)) (menv '(() () ())))\""
  3
  ((0 0 0)))
'(kcfa-3 0 "\"(list 'eval '(app (-> #t <-)) (menv '(())))\"" 1 ((0 0 0)))
'(kcfa-3
  0
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n   (->\n    (λ (x2)\n      (app\n       (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n       (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1)))))\n    <-))\n (menv '(())))\""
  1
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list 'eval '(let ((-> _ = (app f3 (app #t)) <-)) bod) (menv '(() () ())))\""
  22
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list\n 'eval\n '(app\n   (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n   (-> (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))) <-))\n (menv '(() ())))\""
  1
  ((0 0 0)))
'(kcfa-3 0 "\"(list 'eval '(app (-> #t <-)) (menv '(() ())))\"" 1 ((0 0 0)))
'(kcfa-3
  0
  "\"(list 'eval '(app z x1 x2 (-> x3 <-)) (menv '(() () () ())))\""
  9
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 (app #t)))) (app f2 (app #f))) <-))\n (menv '(() ())))\""
  30
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2 x3)) (-> (λ (y1 y2 y3) y1) <-))\n (menv '(() () ())))\""
  1
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list 'eval '(let (_) (-> (app f2 (app #f)) <-)) (menv '(() ())))\""
  29
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list 'eval '(λ (y1 y2 y3) (-> y1 <-)) (menv '(() () () ())))\""
  13
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list 'eval '(app f3 (-> (app #f) <-)) (menv '(() () ())))\""
  2
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list 'eval '(app (-> f3 <-) (app #t)) (menv '(() () ())))\""
  3
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n      (λ (x2)\n        (app\n         (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n         (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))))))\n     <-))\n (menv '(())))\""
  32
  ((0 0 0)))
'(kcfa-3 0 "\"(list 'eval '(app (-> #f <-)) (menv '(() () ())))\"" 1 ((0 0 0)))
'(kcfa-3
  0
  "\"(list 'eval '(app f3 (-> (app #t) <-)) (menv '(() () ())))\""
  2
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list 'eval '(app (-> f1 <-) (app #t)) (menv '(())))\""
  3
  ((0 0 0)))
'(kcfa-3
  0
  "\"(list 'eval '(let ((-> _ = (app f1 (app #t)) <-)) bod) (menv '(())))\""
  36
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(letrec ((->\n            phi\n            =\n            (λ (x1 x2 x3 x4)\n              (app\n               and\n               (app or x1 (app not x2) (app not x3))\n               (app or (app not x2) (app not x3))\n               (app or x4 x2)))\n            <-)\n           try\n           sat-solve-4)\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app p n1 n2 (-> n3 <-) n4) (menv '(() () () () ())))\""
  10
  ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(λ (n3) (-> (app try (λ (n4) (app p n1 n2 n3 n4))) <-))\n (menv '(() () () ())))\""
  84
  ((1 1 0)))
'(sat-1 0 "\"(list 'eval '(app (-> #f <-)) (menv '(())))\"" 1 ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 (app not x2) (app not x3))\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv '(())))\""
  22
  ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(app try (-> (λ (n4) (app p n1 n2 n3 n4)) <-))\n (menv '(() () () ())))\""
  1
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app p n1 (-> n2 <-) n3 n4) (menv '(() () () () ())))\""
  10
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> or <-) x1 (app not x2) (app not x3)) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-1 0 "\"(list 'eval '(app (-> not <-) x2) (menv '(())))\"" 1 ((0 0 0)))
'(sat-1 0 "\"(list 'eval '(app (-> #t <-)) (menv '(())))\"" 1 ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app or x1 (app not x2) (-> (app not x3) <-)) (menv '(())))\""
  18
  ((0 0 0)))
'(sat-1 0 "\"(list 'eval '(app (-> or <-) x4 x2) (menv '(())))\"" 1 ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> or <-) (app not x2) (app not x3)) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-1 0 "\"(list 'eval '(app not (-> x2 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(λ (n1)\n    (->\n     (app\n      try\n      (λ (n2) (app try (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4)))))))\n     <-))\n (menv '(() ())))\""
  84
  ((1 1 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '(())))\""
  10
  ((0 0 0)))
'(sat-1 0 "\"(list 'eval '(app (-> not <-) x3) (menv '(())))\"" 1 ((0 0 0)))
'(sat-1 0 "\"(list 'eval '(app or (-> x4 <-) x2) (menv '(())))\"" 16 ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-1 0 "\"(list 'eval '(app not (-> x3 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n2) (app try (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4)))))))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app sat-solve-4 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '(())))\""
  84
  ((1 1 0)))
'(sat-1 0 "\"(list 'eval '(app (-> not <-) x2) (menv '(())))\"" 1 ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> sat-solve-4 <-) phi) (menv '()))\""
  2
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app or x1 (-> (app not x2) <-) (app not x3)) (menv '(())))\""
  18
  ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(λ (n2) (-> (app try (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4))))) <-))\n (menv '(() () ())))\""
  84
  ((1 1 0)))
'(sat-1 0 "\"(list 'eval '(top) (menv '()))\"" 87 ((2 2 1)))
'(sat-1
  0
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n1)\n      (app\n       try\n       (λ (n2) (app try (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4))))))))\n    <-))\n (menv '(())))\""
  1
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(λ (n4) (-> (app p n1 n2 n3 n4) <-)) (menv '(() () () () ())))\""
  64
  ((1 1 0)))
'(sat-1 0 "\"(list 'eval '(app (-> not <-) x3) (menv '(())))\"" 1 ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  34
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app or (-> x1 <-) (app not x2) (app not x3)) (menv '(())))\""
  16
  ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(λ (x1 x2 x3 x4)\n    (->\n     (app\n      and\n      (app or x1 (app not x2) (app not x3))\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv '(())))\""
  58
  ((1 1 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> or <-) (app f (app #t)) (app f (app #f))) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(app\n   try\n   (-> (λ (n2) (app try (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4)))))) <-))\n (menv '(() ())))\""
  1
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app p n1 n2 n3 (-> n4 <-)) (menv '(() () () () ())))\""
  10
  ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  1
  ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(λ (p)\n    (->\n     (app\n      try\n      (λ (n1)\n        (app\n         try\n         (λ (n2) (app try (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4)))))))))\n     <-))\n (menv '(())))\""
  85
  ((1 1 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(letrec (phi\n           try\n           (->\n            sat-solve-4\n            =\n            (λ (p)\n              (app\n               try\n               (λ (n1)\n                 (app\n                  try\n                  (λ (n2)\n                    (app\n                     try\n                     (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4))))))))))\n            <-))\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv '(())))\""
  30
  ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(letrec (phi try sat-solve-4) (-> (app sat-solve-4 phi) <-))\n (menv '()))\""
  86
  ((1 1 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> p <-) n1 n2 n3 n4) (menv '(() () () () ())))\""
  5
  ((0 0 0)))
'(sat-1 0 "\"(list 'eval '(app or x4 (-> x2 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app or (app not x2) (-> (app not x3) <-)) (menv '(())))\""
  18
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app or (app f (app #t)) (-> (app f (app #f)) <-)) (menv '(())))\""
  84
  ((1 1 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4)))))\n (menv '(() () ())))\""
  2
  ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n1)\n     (app\n      try\n      (λ (n2) (app try (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4)))))))))\n (menv '(())))\""
  2
  ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n4) (app p n1 n2 n3 n4)))\n (menv '(() () () ())))\""
  2
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app p (-> n1 <-) n2 n3 n4) (menv '(() () () () ())))\""
  10
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app or (-> (app f (app #t)) <-) (app f (app #f))) (menv '(())))\""
  84
  ((1 1 0)))
'(sat-1 0 "\"(list 'eval '(app not (-> x3 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app or (-> (app not x2) <-) (app not x3)) (menv '(())))\""
  18
  ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(app try (-> (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4)))) <-))\n (menv '(() () ())))\""
  1
  ((0 0 0)))
'(sat-1
  0
  "\"(list\n 'eval\n '(letrec (phi\n           (-> try = (λ (f) (app or (app f (app #t)) (app f (app #f)))) <-)\n           sat-solve-4)\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-1
  0
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '(())))\""
  10
  ((0 0 0)))
'(sat-1 0 "\"(list 'eval '(app not (-> x2 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> not <-) x2) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (-> (app or (app not x4) x1) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  32
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> not <-) x2) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or (-> (app f (app #t)) <-) (app f (app #f))) (menv '(())))\""
  133
  ((9 9 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n3)\n      (app\n       try\n       (λ (n4)\n         (app\n          try\n          (λ (n5)\n            (app\n             try\n             (λ (n6)\n               (app\n                try\n                (λ (n7)\n                  (app\n                   (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                   n7))))))))))\n    <-))\n (menv '(() () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (-> (app (app (app p n1) n2) n3) <-) n4)\n (menv '(() () () () () () () ())))\""
  11
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(letrec (phi\n           try\n           (->\n            sat-solve-7\n            =\n            (λ (p)\n              (app\n               try\n               (λ (n1)\n                 (app\n                  try\n                  (λ (n2)\n                    (app\n                     try\n                     (λ (n3)\n                       (app\n                        try\n                        (λ (n4)\n                          (app\n                           try\n                           (λ (n5)\n                             (app\n                              try\n                              (λ (n6)\n                                (app\n                                 try\n                                 (λ (n7)\n                                   (app\n                                    (app\n                                     (app\n                                      (app (app (app (app p n1) n2) n3) n4)\n                                      n5)\n                                     n6)\n                                    n7))))))))))))))))\n            <-))\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n7) (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7)))\n (menv '(() () () () () () ())))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (app (app p n1) n2) (-> n3 <-))\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (n4)\n    (->\n     (app\n      try\n      (λ (n5)\n        (app\n         try\n         (λ (n6)\n           (app\n            try\n            (λ (n7)\n              (app\n               (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n               n7)))))))\n     <-))\n (menv '(() () () () ())))\""
  133
  ((9 9 0)))
'(sat-2
  0
  "\"(list 'eval '(app or x1 (-> x2 <-)) (menv '(() () () () () () ())))\""
  18
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (app (app (app (app (app p n1) n2) n3) n4) n5) (-> n6 <-))\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (n6)\n    (->\n     (app\n      try\n      (λ (n7)\n        (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7)))\n     <-))\n (menv '(() () () () () () ())))\""
  133
  ((9 9 0)))
'(sat-2 0 "\"(list 'eval '(app (-> #t <-)) (menv '(())))\"" 1 ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  38
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '(())))\""
  16
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n2)\n      (app\n       try\n       (λ (n3)\n         (app\n          try\n          (λ (n4)\n            (app\n             try\n             (λ (n5)\n               (app\n                try\n                (λ (n6)\n                  (app\n                   try\n                   (λ (n7)\n                     (app\n                      (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                      n7))))))))))))\n    <-))\n (menv '(() ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app or (app not x2) (-> (app not x3) <-))\n (menv '(() () () () () () ())))\""
  22
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n6)\n      (app\n       try\n       (λ (n7)\n         (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7))))\n    <-))\n (menv '(() () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or x3 (-> x4 <-)) (menv '(() () () () () () ())))\""
  22
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> not <-) x4) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or (app not x4) (-> x1 <-)) (menv '(() () () () () () ())))\""
  16
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (app (app (app (app p n1) n2) n3) n4) (-> n5 <-))\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  34
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (-> (app (app (app (app p n1) n2) n3) n4) <-) n5)\n (menv '(() () () () () () () ())))\""
  13
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n2)\n     (app\n      try\n      (λ (n3)\n        (app\n         try\n         (λ (n4)\n           (app\n            try\n            (λ (n5)\n              (app\n               try\n               (λ (n6)\n                 (app\n                  try\n                  (λ (n7)\n                    (app\n                     (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                     n7)))))))))))))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or x4 (-> x2 <-)) (menv '(() () () () () () ())))\""
  18
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> or <-) (app f (app #t)) (app f (app #f))) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n6)\n     (app\n      try\n      (λ (n7)\n        (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7)))))\n (menv '(() () () () () ())))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(letrec (phi try sat-solve-7) (-> (app sat-solve-7 phi) <-))\n (menv '()))\""
  135
  ((9 9 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n4)\n      (app\n       try\n       (λ (n5)\n         (app\n          try\n          (λ (n6)\n            (app\n             try\n             (λ (n7)\n               (app\n                (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                n7))))))))\n    <-))\n (menv '(() () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) (-> n7 <-))\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (-> (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) <-) n7)\n (menv '(() () () () () () () ())))\""
  17
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or (-> (app not x4) <-) x1) (menv '(() () () () () () ())))\""
  24
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '(())))\""
  16
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv '(() () () () () () ())))\""
  28
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (n5)\n    (->\n     (app\n      try\n      (λ (n6)\n        (app\n         try\n         (λ (n7)\n           (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7)))))\n     <-))\n (menv '(() () () () () ())))\""
  133
  ((9 9 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> or <-) (app not x4) x1) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 x2) <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  24
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app or x1 (app not x2) (-> (app not x3) <-))\n (menv '(() () () () () () ())))\""
  22
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app or (-> (app not x2) <-) (app not x3))\n (menv '(() () () () () () ())))\""
  20
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(letrec (phi\n           (-> try = (λ (f) (app or (app f (app #t)) (app f (app #f)))) <-)\n           sat-solve-7)\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app not (-> x3 <-)) (menv '(() () () () () () ())))\""
  20
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n3)\n     (app\n      try\n      (λ (n4)\n        (app\n         try\n         (λ (n5)\n           (app\n            try\n            (λ (n6)\n              (app\n               try\n               (λ (n7)\n                 (app\n                  (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                  n7)))))))))))\n (menv '(() () ())))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app not (-> x2 <-)) (menv '(() () () () () () ())))\""
  18
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n4)\n     (app\n      try\n      (λ (n5)\n        (app\n         try\n         (λ (n6)\n           (app\n            try\n            (λ (n7)\n              (app\n               (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n               n7)))))))))\n (menv '(() () () ())))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or (app f (app #t)) (-> (app f (app #f)) <-)) (menv '(())))\""
  133
  ((9 9 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (λ (x2)\n       (λ (x3)\n         (λ (x4)\n           (λ (x5)\n             (λ (x6)\n               (λ (x7)\n                 (app\n                  and\n                  (app or x1 x2)\n                  (app or x1 (app not x2) (app not x3))\n                  (app or x3 x4)\n                  (app or (app not x4) x1)\n                  (app or (app not x2) (app not x3))\n                  (app or x4 x2))))))))\n     <-))\n (menv '(())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (app p n1) (-> n2 <-)) (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or (-> x3 <-) x4) (menv '(() () () () () () ())))\""
  20
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app or x1 (-> (app not x2) <-) (app not x3))\n (menv '(() () () () () () ())))\""
  20
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (x3)\n    (->\n     (λ (x4)\n       (λ (x5)\n         (λ (x6)\n           (λ (x7)\n             (app\n              and\n              (app or x1 x2)\n              (app or x1 (app not x2) (app not x3))\n              (app or x3 x4)\n              (app or (app not x4) x1)\n              (app or (app not x2) (app not x3))\n              (app or x4 x2))))))\n     <-))\n (menv '(() () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (-> (app (app (app (app (app p n1) n2) n3) n4) n5) <-) n6)\n (menv '(() () () () () () () ())))\""
  15
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (n3)\n    (->\n     (app\n      try\n      (λ (n4)\n        (app\n         try\n         (λ (n5)\n           (app\n            try\n            (λ (n6)\n              (app\n               try\n               (λ (n7)\n                 (app\n                  (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                  n7)))))))))\n     <-))\n (menv '(() () () ())))\""
  133
  ((9 9 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> or <-) x4 x2) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (p)\n    (->\n     (app\n      try\n      (λ (n1)\n        (app\n         try\n         (λ (n2)\n           (app\n            try\n            (λ (n3)\n              (app\n               try\n               (λ (n4)\n                 (app\n                  try\n                  (λ (n5)\n                    (app\n                     try\n                     (λ (n6)\n                       (app\n                        try\n                        (λ (n7)\n                          (app\n                           (app\n                            (app (app (app (app (app p n1) n2) n3) n4) n5)\n                            n6)\n                           n7)))))))))))))))\n     <-))\n (menv '(())))\""
  134
  ((9 9 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> not <-) x3) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or (-> x4 <-) x2) (menv '(() () () () () () ())))\""
  22
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (x4)\n    (->\n     (λ (x5)\n       (λ (x6)\n         (λ (x7)\n           (app\n            and\n            (app or x1 x2)\n            (app or x1 (app not x2) (app not x3))\n            (app or x3 x4)\n            (app or (app not x4) x1)\n            (app or (app not x2) (app not x3))\n            (app or x4 x2)))))\n     <-))\n (menv '(() () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(letrec ((->\n            phi\n            =\n            (λ (x1)\n              (λ (x2)\n                (λ (x3)\n                  (λ (x4)\n                    (λ (x5)\n                      (λ (x6)\n                        (λ (x7)\n                          (app\n                           and\n                           (app or x1 x2)\n                           (app or x1 (app not x2) (app not x3))\n                           (app or x3 x4)\n                           (app or (app not x4) x1)\n                           (app or (app not x2) (app not x3))\n                           (app or x4 x2)))))))))\n            <-)\n           try\n           sat-solve-7)\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app p (-> n1 <-)) (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (-> or <-) x1 (app not x2) (app not x3))\n (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> p <-) n1) (menv '(() () () () () () () ())))\""
  5
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> not <-) x3) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (x5)\n    (->\n     (λ (x6)\n       (λ (x7)\n         (app\n          and\n          (app or x1 x2)\n          (app or x1 (app not x2) (app not x3))\n          (app or x3 x4)\n          (app or (app not x4) x1)\n          (app or (app not x2) (app not x3))\n          (app or x4 x2))))\n     <-))\n (menv '(() () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n5)\n      (app\n       try\n       (λ (n6)\n         (app\n          try\n          (λ (n7)\n            (app\n             (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n             n7))))))\n    <-))\n (menv '(() () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app not (-> x2 <-)) (menv '(() () () () () () ())))\""
  18
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n1)\n     (app\n      try\n      (λ (n2)\n        (app\n         try\n         (λ (n3)\n           (app\n            try\n            (λ (n4)\n              (app\n               try\n               (λ (n5)\n                 (app\n                  try\n                  (λ (n6)\n                    (app\n                     try\n                     (λ (n7)\n                       (app\n                        (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                        n7)))))))))))))))\n (menv '(())))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (x2)\n    (->\n     (λ (x3)\n       (λ (x4)\n         (λ (x5)\n           (λ (x6)\n             (λ (x7)\n               (app\n                and\n                (app or x1 x2)\n                (app or x1 (app not x2) (app not x3))\n                (app or x3 x4)\n                (app or (app not x4) x1)\n                (app or (app not x2) (app not x3))\n                (app or x4 x2)))))))\n     <-))\n (menv '(() ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n5)\n     (app\n      try\n      (λ (n6)\n        (app\n         try\n         (λ (n7)\n           (app\n            (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n            n7)))))))\n (menv '(() () () () ())))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> or <-) x1 x2) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (n7)\n    (-> (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7) <-))\n (menv '(() () () () () () () ())))\""
  101
  ((8 8 0)))
'(sat-2
  0
  "\"(list 'eval '(app not (-> x4 <-)) (menv '(() () () () () () ())))\""
  22
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> sat-solve-7 <-) phi) (menv '()))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app sat-solve-7 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> (app p n1) <-) n2) (menv '(() () () () () () () ())))\""
  7
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (x7)\n    (->\n     (app\n      and\n      (app or x1 x2)\n      (app or x1 (app not x2) (app not x3))\n      (app or x3 x4)\n      (app or (app not x4) x1)\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv '(() () () () () () ())))\""
  83
  ((7 7 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or x3 x4) <-)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(() () () () () () ())))\""
  28
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (x6)\n    (->\n     (λ (x7)\n       (app\n        and\n        (app or x1 x2)\n        (app or x1 (app not x2) (app not x3))\n        (app or x3 x4)\n        (app or (app not x4) x1)\n        (app or (app not x2) (app not x3))\n        (app or x4 x2)))\n     <-))\n (menv '(() () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app (-> or <-) x3 x4) (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (n1)\n    (->\n     (app\n      try\n      (λ (n2)\n        (app\n         try\n         (λ (n3)\n           (app\n            try\n            (λ (n4)\n              (app\n               try\n               (λ (n5)\n                 (app\n                  try\n                  (λ (n6)\n                    (app\n                     try\n                     (λ (n7)\n                       (app\n                        (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                        n7)))))))))))))\n     <-))\n (menv '(() ())))\""
  133
  ((9 9 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app or (-> x1 <-) (app not x2) (app not x3))\n (menv '(() () () () () () ())))\""
  16
  ((0 0 0)))
'(sat-2 0 "\"(list 'eval '(app (-> #f <-)) (menv '(())))\"" 1 ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (app (app (app p n1) n2) n3) (-> n4 <-))\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app or (-> x1 <-) x2) (menv '(() () () () () () ())))\""
  16
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '(())))\""
  133
  ((9 9 0)))
'(sat-2 0 "\"(list 'eval '(top) (menv '()))\"" 136 ((9 9 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n1)\n      (app\n       try\n       (λ (n2)\n         (app\n          try\n          (λ (n3)\n            (app\n             try\n             (λ (n4)\n               (app\n                try\n                (λ (n5)\n                  (app\n                   try\n                   (λ (n6)\n                     (app\n                      try\n                      (λ (n7)\n                        (app\n                         (app\n                          (app (app (app (app (app p n1) n2) n3) n4) n5)\n                          n6)\n                         n7))))))))))))))\n    <-))\n (menv '(())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (-> or <-) (app not x2) (app not x3))\n (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app (-> (app (app p n1) n2) <-) n3)\n (menv '(() () () () () () () ())))\""
  9
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n7) (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7))\n    <-))\n (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-2
  0
  "\"(list\n 'eval\n '(λ (n2)\n    (->\n     (app\n      try\n      (λ (n3)\n        (app\n         try\n         (λ (n4)\n           (app\n            try\n            (λ (n5)\n              (app\n               try\n               (λ (n6)\n                 (app\n                  try\n                  (λ (n7)\n                    (app\n                     (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                     n7)))))))))))\n     <-))\n (menv '(() () ())))\""
  133
  ((9 9 0)))
'(sat-2
  0
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-2
  0
  "\"(list 'eval '(app not (-> x3 <-)) (menv '(() () () () () () ())))\""
  20
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv '(())))\""
  30
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app p n1 n2 (-> n3 <-) n4 n5 n6 n7)\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app println (-> \"trying\" <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app try (-> (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)) <-))\n (menv '(() () () () () () ())))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app (-> p <-) n1 n2 n3 n4 n5 n6 n7)\n (menv '(() () () () () () () ())))\""
  5
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> sat-solve-7 <-) phi) (menv '()))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))\n (menv '(() () () () () ())))\""
  2
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app (-> not <-) x2) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(let ((-> _ = (app display (app sat-solve-7 phi)) <-)) bod)\n (menv '()))\""
  120
  ((10 10 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n5) (app try (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))\n (menv '(() () () () ())))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n1)\n     (app\n      try\n      (λ (n2)\n        (app\n         try\n         (λ (n3)\n           (app\n            try\n            (λ (n4)\n              (app\n               try\n               (λ (n5)\n                 (app\n                  try\n                  (λ (n6)\n                    (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))))))))\n (menv '(())))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(letrec ((-> println = (λ (s) (let ((_ (app display s))) newline)) <-)\n           phi\n           try\n           sat-solve-7)\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(let (_) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '(())))\""
  116
  ((10 10 0)))
'(sat-3
  0
  "\"(list 'eval '(λ (s) (-> (let ((_ (app display s))) newline) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app sat-solve-7 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or x3 x4) <-)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  22
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app display (-> (app sat-solve-7 phi) <-)) (menv '()))\""
  118
  ((9 9 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(λ (n7) (-> (app p n1 n2 n3 n4 n5 n6 n7) <-))\n (menv '(() () () () () () () ())))\""
  83
  ((8 8 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 x2) <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  22
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app (-> or <-) x4 x2) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app (-> or <-) x1 x2) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(letrec (println phi try sat-solve-7)\n    (-> (let ((_ (app display (app sat-solve-7 phi)))) (app newline)) <-))\n (menv '()))\""
  3
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(top) (menv '()))\"" 4 ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '(())))\""
  16
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n1)\n      (app\n       try\n       (λ (n2)\n         (app\n          try\n          (λ (n3)\n            (app\n             try\n             (λ (n4)\n               (app\n                try\n                (λ (n5)\n                  (app\n                   try\n                   (λ (n6)\n                     (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7))))))))))))))\n    <-))\n (menv '(())))\""
  1
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app or x4 (-> x2 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '(())))\""
  16
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n3)\n      (app\n       try\n       (λ (n4)\n         (app\n          try\n          (λ (n5)\n            (app\n             try\n             (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7))))))))))\n    <-))\n (menv '(() () ())))\""
  1
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app (-> display <-) s) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app (-> or <-) x3 x4) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n5) (app try (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7))))))\n    <-))\n (menv '(() () () () ())))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> or <-) (app f (app #t)) (app f (app #f))) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app (-> #f <-)) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(letrec (println\n           phi\n           (->\n            try\n            =\n            (λ (f)\n              (let ((_ (app println \"trying\")))\n                (app or (app f (app #t)) (app f (app #f)))))\n            <-)\n           sat-solve-7)\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 (-> n5 <-) n6 n7)\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (-> x1 <-) (app not x2) (app not x3)) (menv '(())))\""
  16
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n3)\n     (app\n      try\n      (λ (n4)\n        (app\n         try\n         (λ (n5)\n           (app\n            try\n            (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))))\n (menv '(() () ())))\""
  2
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app or x3 (-> x4 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n2)\n      (app\n       try\n       (λ (n3)\n         (app\n          try\n          (λ (n4)\n            (app\n             try\n             (λ (n5)\n               (app\n                try\n                (λ (n6)\n                  (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7))))))))))))\n    <-))\n (menv '(() ())))\""
  1
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app display (-> s <-)) (menv '(())))\"" 4 ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n4)\n      (app\n       try\n       (λ (n5)\n         (app try (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7))))))))\n    <-))\n (menv '(() () () ())))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(λ (n1)\n    (->\n     (app\n      try\n      (λ (n2)\n        (app\n         try\n         (λ (n3)\n           (app\n            try\n            (λ (n4)\n              (app\n               try\n               (λ (n5)\n                 (app\n                  try\n                  (λ (n6)\n                    (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))))))\n     <-))\n (menv '(() ())))\""
  116
  ((9 9 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (-> (app f (app #t)) <-) (app f (app #f))) (menv '(())))\""
  116
  ((9 9 0)))
'(sat-3 0 "\"(list 'eval '(app or (-> x3 <-) x4) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or x1 (-> (app not x2) <-) (app not x3)) (menv '(())))\""
  18
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app p n1 (-> n2 <-) n3 n4 n5 n6 n7)\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app p n1 n2 n3 (-> n4 <-) n5 n6 n7)\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> or <-) (app not x4) x1) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app not (-> x2 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (app f (app #t)) (-> (app f (app #f)) <-)) (menv '(())))\""
  116
  ((10 10 0)))
'(sat-3 0 "\"(list 'eval '(app not (-> x3 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app not (-> x3 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv '(())))\""
  22
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (app not x2) (-> (app not x3) <-)) (menv '(())))\""
  18
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(λ (x1 x2 x3 x4 x5 x6 x7)\n    (->\n     (app\n      and\n      (app or x1 x2)\n      (app or x1 (app not x2) (app not x3))\n      (app or x3 x4)\n      (app or (app not x4) x1)\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv '(())))\""
  77
  ((8 8 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(λ (n2)\n    (->\n     (app\n      try\n      (λ (n3)\n        (app\n         try\n         (λ (n4)\n           (app\n            try\n            (λ (n5)\n              (app\n               try\n               (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))))\n     <-))\n (menv '(() () ())))\""
  116
  ((9 9 0)))
'(sat-3
  0
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '(())))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(letrec (println\n           phi\n           try\n           (->\n            sat-solve-7\n            =\n            (λ (p)\n              (app\n               try\n               (λ (n1)\n                 (app\n                  try\n                  (λ (n2)\n                    (app\n                     try\n                     (λ (n3)\n                       (app\n                        try\n                        (λ (n4)\n                          (app\n                           try\n                           (λ (n5)\n                             (app\n                              try\n                              (λ (n6)\n                                (app\n                                 try\n                                 (λ (n7)\n                                   (app p n1 n2 n3 n4 n5 n6 n7))))))))))))))))\n            <-))\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app or x1 (-> x2 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(letrec (println\n           (->\n            phi\n            =\n            (λ (x1 x2 x3 x4 x5 x6 x7)\n              (app\n               and\n               (app or x1 x2)\n               (app or x1 (app not x2) (app not x3))\n               (app or x3 x4)\n               (app or (app not x4) x1)\n               (app or (app not x2) (app not x3))\n               (app or x4 x2)))\n            <-)\n           try\n           sat-solve-7)\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(λ (n5)\n    (-> (app try (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7))))) <-))\n (menv '(() () () () () ())))\""
  116
  ((9 9 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 n5 n6 (-> n7 <-))\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (-> (app or (app not x4) x1) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  26
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app not (-> x2 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(λ (n4)\n    (->\n     (app\n      try\n      (λ (n5)\n        (app try (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))\n     <-))\n (menv '(() () () () ())))\""
  116
  ((9 9 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> display <-) (app sat-solve-7 phi)) (menv '()))\""
  1
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app (-> not <-) x3) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (-> (app not x4) <-) x1) (menv '(())))\""
  18
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(let ((-> _ = (app println \"trying\") <-)) bod) (menv '(())))\""
  5
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(λ (f)\n    (->\n     (let ((_ (app println \"trying\")))\n       (app or (app f (app #t)) (app f (app #f))))\n     <-))\n (menv '(())))\""
  116
  ((9 9 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app p (-> n1 <-) n2 n3 n4 n5 n6 n7)\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 n5 (-> n6 <-) n7)\n (menv '(() () () () () () () ())))\""
  10
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (-> (app not x2) <-) (app not x3)) (menv '(())))\""
  18
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n4)\n     (app\n      try\n      (λ (n5)\n        (app try (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))\n (menv '(() () () ())))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))\n (menv '(() () () () () () ())))\""
  2
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app or (-> x4 <-) x2) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> or <-) (app not x2) (app not x3)) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> or <-) x1 (app not x2) (app not x3)) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(let ((-> _ = (app display s) <-)) bod) (menv '(())))\""
  6
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app (-> not <-) x2) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or x1 (app not x2) (-> (app not x3) <-)) (menv '(())))\""
  18
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(λ (p)\n    (->\n     (app\n      try\n      (λ (n1)\n        (app\n         try\n         (λ (n2)\n           (app\n            try\n            (λ (n3)\n              (app\n               try\n               (λ (n4)\n                 (app\n                  try\n                  (λ (n5)\n                    (app\n                     try\n                     (λ (n6)\n                       (app\n                        try\n                        (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))))))))\n     <-))\n (menv '(())))\""
  117
  ((9 9 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app try (-> (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))) <-))\n (menv '(() () () () () ())))\""
  1
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app (-> println <-) \"trying\") (menv '(())))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(λ (n6) (-> (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7))) <-))\n (menv '(() () () () () () ())))\""
  116
  ((9 9 0)))
'(sat-3 0 "\"(list 'eval '(app (-> #t <-)) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(let (_) (-> newline <-)) (menv '(())))\""
  1
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app (-> not <-) x4) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n2)\n     (app\n      try\n      (λ (n3)\n        (app\n         try\n         (λ (n4)\n           (app\n            try\n            (λ (n5)\n              (app\n               try\n               (λ (n6)\n                 (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))))))\n (menv '(() ())))\""
  2
  ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(let (_) (-> (app newline) <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app or (-> x1 <-) x2) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app (-> not <-) x3) (menv '(())))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(λ (n3)\n    (->\n     (app\n      try\n      (λ (n4)\n        (app\n         try\n         (λ (n5)\n           (app\n            try\n            (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))\n     <-))\n (menv '(() () () ())))\""
  116
  ((9 9 0)))
'(sat-3 0 "\"(list 'eval '(app not (-> x4 <-)) (menv '(())))\"" 16 ((0 0 0)))
'(sat-3 0 "\"(list 'eval '(app (-> newline <-)) (menv '()))\"" 1 ((0 0 0)))
'(sat-3
  0
  "\"(list 'eval '(app or (app not x4) (-> x1 <-)) (menv '(())))\""
  16
  ((0 0 0)))
'(sat-3
  0
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '(())))\""
  34
  ((0 0 0)))
'(ack
  1
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '((□? (m n)))))\""
  2
  ((0 0 0)))
'(ack
  1
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '((□? (m n)))))\""
  64
  ((1 1 0)))
'(ack
  1
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '((□? (m n)))))\""
  167
  ((3 3 0)))
'(ack
  1
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  64
  ((1 1 0)))
'(ack
  1
  "\"(list 'eval '(app - (-> n <-) 1) (menv '((□? (m n)))))\""
  167
  ((3 3 0)))
'(ack
  1
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '((□? (m n)))))\""
  2
  ((0 0 0)))
'(ack
  1
  "\"(list 'eval '(app (-> - <-) n 1) (menv '((□? (m n)))))\""
  2
  ((0 0 0)))
'(ack 1 "\"(list 'eval '(top) (menv '()))\"" 192 ((3 3 0)))
'(ack
  1
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '((□? (m n)))))\""
  167
  ((3 3 0)))
'(ack
  1
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    (#f)\n    (match\n     (app = n 0)\n     ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  189
  ((3 3 0)))
'(ack
  1
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '((□? (m n)))))\""
  2
  ((0 0 0)))
'(ack
  1
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  2
  ((0 0 0)))
'(ack 1 "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\"" 1 ((0 0 0)))
'(ack
  1
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               ((#f)\n                (match\n                 (app = n 0)\n                 ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(ack
  1
  "\"(list 'eval '(app + (-> n <-) 1) (menv '((□? (m n)))))\""
  169
  ((3 3 0)))
'(ack
  1
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      ((#f)\n       (match\n        (app = n 0)\n        ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '((□? (m n)))))\""
  211
  ((4 4 0)))
'(ack
  1
  "\"(list 'eval '(app = (-> n <-) 0) (menv '((□? (m n)))))\""
  169
  ((3 3 0)))
'(ack
  1
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   ((#f)\n    (match\n     (app = n 0)\n     ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '((□? (m n)))))\""
  175
  ((3 3 0)))
'(ack
  1
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  64
  ((1 1 0)))
'(ack 1 "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\"" 2 ((0 0 0)))
'(ack
  1
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  64
  ((1 1 0)))
'(ack
  1
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '((□? (m n)))))\""
  3
  ((0 0 0)))
'(ack
  1
  "\"(list 'eval '(app (-> + <-) n 1) (menv '((□? (m n)))))\""
  2
  ((0 0 0)))
'(ack 1 "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\"" 1 ((0 0 0)))
'(ack
  1
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  2
  ((0 0 0)))
'(ack
  1
  "\"(list 'eval '(app = (-> m <-) 0) (menv '((□? (m n)))))\""
  69
  ((1 1 0)))
'(ack
  1
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> (#f) (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  171
  ((3 3 0)))
'(ack
  1
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   ((#f)\n    (match\n     (app = n 0)\n     ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  84
  ((1 1 0)))
'(ack
  1
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '((□? (m n)))))\""
  64
  ((1 1 0)))
'(ack
  1
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '((□? (m n)))))\""
  3
  ((0 0 0)))
'(ack
  1
  "\"(list 'eval '(app (-> = <-) m 0) (menv '((□? (m n)))))\""
  2
  ((0 0 0)))
'(ack
  1
  "\"(list 'eval '(app (-> = <-) n 0) (menv '((□? (m n)))))\""
  2
  ((0 0 0)))
'(ack
  1
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  2
  ((0 0 0)))
'(ack
  1
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  2
  ((0 0 0)))
'(ack
  1
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  191
  ((3 3 0)))
'(ack
  1
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  3
  ((0 0 0)))
'(ack
  1
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '((□? (m n)))))\""
  2
  ((0 0 0)))
'(ack
  1
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '((□? (m n)))))\""
  2
  ((0 0 0)))
'(ack
  1
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '((□? (m n)))))\""
  171
  ((3 3 0)))
'(ack
  1
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  175
  ((3 3 0)))
'(blur
  1
  "\"(list 'eval '(app (-> (app blur lp) <-) s (app - n 1)) (menv '((□? (a n)))))\""
  11
  ((0 0 0)))
'(blur
  1
  "\"(list\n 'eval\n '(let* (r s) (-> (app not (app (app blur lp) s (app - n 1))) <-))\n (menv '((□? (a n)))))\""
  117
  ((2 2 0)))
'(blur
  1
  "\"(list 'eval '(app (-> - <-) n 1) (menv '((□? (a n)))))\""
  2
  ((0 0 0)))
'(blur
  1
  "\"(list 'eval '(app (app blur id) (-> (app #f) <-)) (menv '((□? (a n)))))\""
  3
  ((0 0 0)))
'(blur 1 "\"(list 'eval '(λ (x) (-> x <-)) (menv '((□? (x)))))\"" 84 ((1 1 0)))
'(blur 1 "\"(list 'eval '(app (-> #t <-)) (menv '((□? (a n)))))\"" 2 ((0 0 0)))
'(blur
  1
  "\"(list 'eval '(app (-> (app blur id) <-) (app #t)) (menv '((□? (a n)))))\""
  11
  ((0 0 0)))
'(blur
  1
  "\"(list 'eval '(app lp (app #f) (-> 2 <-)) (menv '()))\""
  1
  ((0 0 0)))
'(blur
  1
  "\"(list 'eval '(app <= (-> n <-) 1) (menv '((□? (a n)))))\""
  40
  ((0 0 0)))
'(blur
  1
  "\"(list 'eval '(app lp (-> (app #f) <-) 2) (menv '()))\""
  2
  ((0 0 0)))
'(blur
  1
  "\"(list 'eval '(app (-> blur <-) lp) (menv '((□? (a n)))))\""
  3
  ((0 0 0)))
'(blur
  1
  "\"(list 'eval '(app (-> blur <-) id) (menv '((□? (a n)))))\""
  3
  ((0 0 0)))
'(blur 1 "\"(list 'eval '(top) (menv '()))\"" 126 ((2 2 0)))
'(blur 1 "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\"" 15 ((0 0 0)))
'(blur
  1
  "\"(list 'eval '(app id (-> a <-)) (menv '((□? (a n)))))\""
  74
  ((1 1 0)))
'(blur
  1
  "\"(list 'eval '(app blur (-> lp <-)) (menv '((□? (a n)))))\""
  3
  ((0 0 0)))
'(blur
  1
  "\"(list\n 'eval\n '(match\n   (app <= n 1)\n   (-> (#t) (app id a) <-)\n   ((#f)\n    (let* ((r (app (app blur id) (app #t))) (s (app (app blur id) (app #f))))\n      (app not (app (app blur lp) s (app - n 1))))))\n (menv '((□? (a n)))))\""
  81
  ((1 1 0)))
'(blur
  1
  "\"(list 'eval '(app (-> <= <-) n 1) (menv '((□? (a n)))))\""
  2
  ((0 0 0)))
'(blur
  1
  "\"(list 'eval '(letrec (id blur lp) (-> (app lp (app #f) 2) <-)) (menv '()))\""
  125
  ((2 2 0)))
'(blur
  1
  "\"(list 'eval '(app (-> id <-) a) (menv '((□? (a n)))))\""
  3
  ((0 0 0)))
'(blur
  1
  "\"(list 'eval '(app (-> lp <-) (app #f) 2) (menv '()))\""
  2
  ((0 0 0)))
'(blur
  1
  "\"(list 'eval '(app (-> (app blur id) <-) (app #f)) (menv '((□? (a n)))))\""
  11
  ((0 0 0)))
'(blur
  1
  "\"(list 'eval '(app <= n (-> 1 <-)) (menv '((□? (a n)))))\""
  2
  ((0 0 0)))
'(blur
  1
  "\"(list 'eval '(letrec ((-> id = (λ (x) x) <-) blur lp) bod) (menv '()))\""
  1
  ((0 0 0)))
'(blur
  1
  "\"(list\n 'eval\n '(app (-> not <-) (app (app blur lp) s (app - n 1)))\n (menv '((□? (a n)))))\""
  2
  ((0 0 0)))
'(blur
  1
  "\"(list 'eval '(app blur (-> id <-)) (menv '((□? (a n)))))\""
  3
  ((0 0 0)))
'(blur 1 "\"(list 'eval '(app (-> #f <-)) (menv '((□? (a n)))))\"" 2 ((0 0 0)))
'(blur
  1
  "\"(list 'eval '(letrec (id (-> blur = (λ (y) y) <-) lp) bod) (menv '()))\""
  1
  ((0 0 0)))
'(blur 1 "\"(list 'eval '(app (-> #f <-)) (menv '()))\"" 1 ((0 0 0)))
'(blur
  1
  "\"(list\n 'eval\n '(match\n   (app <= n 1)\n   ((#t) (app id a))\n   (->\n    (#f)\n    (let* ((r (app (app blur id) (app #t))) (s (app (app blur id) (app #f))))\n      (app not (app (app blur lp) s (app - n 1))))\n    <-))\n (menv '((□? (a n)))))\""
  119
  ((2 2 0)))
'(blur
  1
  "\"(list 'eval '(app (-> blur <-) id) (menv '((□? (a n)))))\""
  3
  ((0 0 0)))
'(blur
  1
  "\"(list\n 'eval\n '(let* ((-> r = (app (app blur id) (app #t)) <-) s) bod)\n (menv '((□? (a n)))))\""
  24
  ((0 0 0)))
'(blur
  1
  "\"(list 'eval '(app (app blur id) (-> (app #t) <-)) (menv '((□? (a n)))))\""
  3
  ((0 0 0)))
'(blur
  1
  "\"(list 'eval '(app (app blur lp) (-> s <-) (app - n 1)) (menv '((□? (a n)))))\""
  25
  ((0 0 0)))
'(blur
  1
  "\"(list\n 'eval\n '(let* (r (-> s = (app (app blur id) (app #f)) <-)) bod)\n (menv '((□? (a n)))))\""
  24
  ((0 0 0)))
'(blur
  1
  "\"(list\n 'eval\n '(λ (a n)\n    (->\n     (match\n      (app <= n 1)\n      ((#t) (app id a))\n      ((#f)\n       (let* ((r (app (app blur id) (app #t)))\n              (s (app (app blur id) (app #f))))\n         (app not (app (app blur lp) s (app - n 1))))))\n     <-))\n (menv '((□? (a n)))))\""
  137
  ((3 3 0)))
'(blur
  1
  "\"(list 'eval '(app - (-> n <-) 1) (menv '((□? (a n)))))\""
  37
  ((0 0 0)))
'(blur
  1
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '((□? (a n)))))\""
  2
  ((0 0 0)))
'(blur
  1
  "\"(list\n 'eval\n '(app not (-> (app (app blur lp) s (app - n 1)) <-))\n (menv '((□? (a n)))))\""
  113
  ((2 2 0)))
'(blur
  1
  "\"(list 'eval '(app (app blur lp) s (-> (app - n 1) <-)) (menv '((□? (a n)))))\""
  37
  ((0 0 0)))
'(blur
  1
  "\"(list\n 'eval\n '(match\n   (-> (app <= n 1) <-)\n   ((#t) (app id a))\n   ((#f)\n    (let* ((r (app (app blur id) (app #t))) (s (app (app blur id) (app #f))))\n      (app not (app (app blur lp) s (app - n 1))))))\n (menv '((□? (a n)))))\""
  49
  ((0 0 0)))
'(blur
  1
  "\"(list 'eval '(app blur (-> id <-)) (menv '((□? (a n)))))\""
  3
  ((0 0 0)))
'(blur
  1
  "\"(list\n 'eval\n '(letrec (id\n           blur\n           (->\n            lp\n            =\n            (λ (a n)\n              (match\n               (app <= n 1)\n               ((#t) (app id a))\n               ((#f)\n                (let* ((r (app (app blur id) (app #t)))\n                       (s (app (app blur id) (app #f))))\n                  (app not (app (app blur lp) s (app - n 1)))))))\n            <-))\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(cpstak
  1
  "\"(list\n 'eval\n '(app\n   tak\n   (app - y 1)\n   z\n   x\n   (-> (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))) <-))\n (menv '((□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  4
  ((0 0 0)))
'(cpstak
  1
  "\"(list 'eval '(app - (-> x <-) 1) (menv '((□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  1
  "\"(list\n 'eval\n '(match\n   (app not (app < y x))\n   ((#t) (app k z))\n   (->\n    (#f)\n    (app\n     tak\n     (app - x 1)\n     y\n     z\n     (λ (v1)\n       (app\n        tak\n        (app - y 1)\n        z\n        x\n        (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))))\n    <-))\n (menv '((□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  1
  "\"(list\n 'eval\n '(match\n   (-> (app not (app < y x)) <-)\n   ((#t) (app k z))\n   ((#f)\n    (app\n     tak\n     (app - x 1)\n     y\n     z\n     (λ (v1)\n       (app\n        tak\n        (app - y 1)\n        z\n        x\n        (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))))))\n (menv '((□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  1
  "\"(list 'eval '(app (-> cpstak <-) 32 15 8) (menv '()))\""
  2
  ((0 0 0)))
'(cpstak
  1
  "\"(list 'eval '(app (-> - <-) x 1) (menv '((□? (x y z k)) (□? (x y z)))))\""
  3
  ((0 0 0)))
'(cpstak
  1
  "\"(list\n 'eval\n '(λ (v1)\n    (->\n     (app\n      tak\n      (app - y 1)\n      z\n      x\n      (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))\n     <-))\n (menv '((□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  1
  "\"(list\n 'eval\n '(app tak (app - z 1) x (-> y <-) (λ (v3) (app tak v1 v2 v3 k)))\n (menv '((□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  1
  "\"(list\n 'eval\n '(app tak (-> v1 <-) v2 v3 k)\n (menv '((□? (v3)) (□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  1
  "\"(list 'eval '(app (-> tak <-) x y z (λ (a) a)) (menv '((□? (x y z)))))\""
  3
  ((0 0 0)))
'(cpstak
  1
  "\"(list\n 'eval\n '(match\n   (app not (app < y x))\n   (-> (#t) (app k z) <-)\n   ((#f)\n    (app\n     tak\n     (app - x 1)\n     y\n     z\n     (λ (v1)\n       (app\n        tak\n        (app - y 1)\n        z\n        x\n        (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))))))\n (menv '((□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  1
  "\"(list 'eval '(app cpstak 32 15 (-> 8 <-)) (menv '()))\""
  1
  ((0 0 0)))
'(cpstak
  1
  "\"(list\n 'eval\n '(λ (x y z k)\n    (->\n     (match\n      (app not (app < y x))\n      ((#t) (app k z))\n      ((#f)\n       (app\n        tak\n        (app - x 1)\n        y\n        z\n        (λ (v1)\n          (app\n           tak\n           (app - y 1)\n           z\n           x\n           (λ (v2)\n             (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))))))\n     <-))\n (menv '((□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  1
  "\"(list\n 'eval\n '(app\n   tak\n   (app - y 1)\n   (-> z <-)\n   x\n   (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))\n (menv '((□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  1
  "\"(list 'eval '(letrec (cpstak) (-> (app cpstak 32 15 8) <-)) (menv '()))\""
  0
  (#f))
'(cpstak
  1
  "\"(list 'eval '(λ (a) (-> a <-)) (menv '((□? (a)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  1
  "\"(list\n 'eval\n '(app tak v1 (-> v2 <-) v3 k)\n (menv '((□? (v3)) (□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  1
  "\"(list 'eval '(app k (-> z <-)) (menv '((□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  1
  "\"(list\n 'eval\n '(app\n   (-> tak <-)\n   (app - x 1)\n   y\n   z\n   (λ (v1)\n     (app\n      tak\n      (app - y 1)\n      z\n      x\n      (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))))\n (menv '((□? (x y z k)) (□? (x y z)))))\""
  4
  ((0 0 0)))
'(cpstak
  1
  "\"(list\n 'eval\n '(app tak (-> (app - z 1) <-) x y (λ (v3) (app tak v1 v2 v3 k)))\n (menv '((□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  1
  "\"(list\n 'eval\n '(app (-> - <-) z 1)\n (menv '((□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  5
  ((0 0 0)))
'(cpstak
  1
  "\"(list 'eval '(app < y (-> x <-)) (menv '((□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  1
  "\"(list\n 'eval\n '(app - (-> z <-) 1)\n (menv '((□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  1
  "\"(list\n 'eval\n '(app tak v1 v2 (-> v3 <-) k)\n (menv '((□? (v3)) (□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  1
  "\"(list\n 'eval\n '(λ (v2) (-> (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k))) <-))\n (menv '((□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  1
  "\"(list\n 'eval\n '(app not (-> (app < y x) <-))\n (menv '((□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  1
  "\"(list\n 'eval\n '(app - z (-> 1 <-))\n (menv '((□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  5
  ((0 0 0)))
'(cpstak
  1
  "\"(list\n 'eval\n '(app\n   tak\n   (-> (app - x 1) <-)\n   y\n   z\n   (λ (v1)\n     (app\n      tak\n      (app - y 1)\n      z\n      x\n      (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))))\n (menv '((□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  1
  "\"(list\n 'eval\n '(app\n   tak\n   (app - x 1)\n   y\n   (-> z <-)\n   (λ (v1)\n     (app\n      tak\n      (app - y 1)\n      z\n      x\n      (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))))\n (menv '((□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  1
  "\"(list\n 'eval\n '(app tak (app - z 1) x y (-> (λ (v3) (app tak v1 v2 v3 k)) <-))\n (menv '((□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  5
  ((0 0 0)))
'(cpstak
  1
  "\"(list 'eval '(app < (-> y <-) x) (menv '((□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  1
  "\"(list 'eval '(app cpstak (-> 32 <-) 15 8) (menv '()))\""
  1
  ((0 0 0)))
'(cpstak
  1
  "\"(list\n 'eval\n '(app tak (app - z 1) (-> x <-) y (λ (v3) (app tak v1 v2 v3 k)))\n (menv '((□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  1
  "\"(list\n 'eval\n '(app\n   tak\n   (-> (app - y 1) <-)\n   z\n   x\n   (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))\n (menv '((□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  1
  "\"(list\n 'eval\n '(app\n   (-> tak <-)\n   (app - y 1)\n   z\n   x\n   (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))\n (menv '((□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  5
  ((0 0 0)))
'(cpstak
  1
  "\"(list 'eval '(app tak (-> x <-) y z (λ (a) a)) (menv '((□? (x y z)))))\""
  6
  ((0 0 0)))
'(cpstak
  1
  "\"(list 'eval '(app (-> < <-) y x) (menv '((□? (x y z k)) (□? (x y z)))))\""
  3
  ((0 0 0)))
'(cpstak 1 "\"(list 'eval '(top) (menv '()))\"" 0 (#f))
'(cpstak
  1
  "\"(list\n 'eval\n '(app tak v1 v2 v3 (-> k <-))\n (menv '((□? (v3)) (□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  71
  ((2 2 0)))
'(cpstak
  1
  "\"(list\n 'eval\n '(app (-> not <-) (app < y x))\n (menv '((□? (x y z k)) (□? (x y z)))))\""
  3
  ((0 0 0)))
'(cpstak
  1
  "\"(list\n 'eval\n '(app - y (-> 1 <-))\n (menv '((□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  4
  ((0 0 0)))
'(cpstak
  1
  "\"(list\n 'eval\n '(app - (-> y <-) 1)\n (menv '((□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  1
  "\"(list\n 'eval\n '(app\n   tak\n   (app - y 1)\n   z\n   (-> x <-)\n   (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))\n (menv '((□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  1
  "\"(list 'eval '(app (-> k <-) z) (menv '((□? (x y z k)) (□? (x y z)))))\""
  77
  ((3 3 0)))
'(cpstak
  1
  "\"(list\n 'eval\n '(app\n   tak\n   (app - x 1)\n   y\n   z\n   (->\n    (λ (v1)\n      (app\n       tak\n       (app - y 1)\n       z\n       x\n       (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k))))))\n    <-))\n (menv '((□? (x y z k)) (□? (x y z)))))\""
  3
  ((0 0 0)))
'(cpstak
  1
  "\"(list\n 'eval\n '(letrec ((->\n            cpstak\n            =\n            (λ (x y z)\n              (letrec ((tak\n                        (λ (x y z k)\n                          (match\n                           (app not (app < y x))\n                           ((#t) (app k z))\n                           ((#f)\n                            (app\n                             tak\n                             (app - x 1)\n                             y\n                             z\n                             (λ (v1)\n                               (app\n                                tak\n                                (app - y 1)\n                                z\n                                x\n                                (λ (v2)\n                                  (app\n                                   tak\n                                   (app - z 1)\n                                   x\n                                   y\n                                   (λ (v3) (app tak v1 v2 v3 k))))))))))))\n                (app tak x y z (λ (a) a))))\n            <-))\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(cpstak
  1
  "\"(list 'eval '(app tak x y z (-> (λ (a) a) <-)) (menv '((□? (x y z)))))\""
  2
  ((0 0 0)))
'(cpstak
  1
  "\"(list\n 'eval\n '(λ (v3) (-> (app tak v1 v2 v3 k) <-))\n (menv '((□? (v3)) (□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  1
  "\"(list\n 'eval\n '(app (-> - <-) y 1)\n (menv '((□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  4
  ((0 0 0)))
'(cpstak
  1
  "\"(list\n 'eval\n '(letrec (tak) (-> (app tak x y z (λ (a) a)) <-))\n (menv '((□? (x y z)))))\""
  0
  (#f))
'(cpstak
  1
  "\"(list 'eval '(app tak x (-> y <-) z (λ (a) a)) (menv '((□? (x y z)))))\""
  6
  ((0 0 0)))
'(cpstak
  1
  "\"(list\n 'eval\n '(letrec ((->\n            tak\n            =\n            (λ (x y z k)\n              (match\n               (app not (app < y x))\n               ((#t) (app k z))\n               ((#f)\n                (app\n                 tak\n                 (app - x 1)\n                 y\n                 z\n                 (λ (v1)\n                   (app\n                    tak\n                    (app - y 1)\n                    z\n                    x\n                    (λ (v2)\n                      (app\n                       tak\n                       (app - z 1)\n                       x\n                       y\n                       (λ (v3) (app tak v1 v2 v3 k))))))))))\n            <-))\n    bod)\n (menv '((□? (x y z)))))\""
  2
  ((0 0 0)))
'(cpstak
  1
  "\"(list\n 'eval\n '(λ (x y z)\n    (->\n     (letrec ((tak\n               (λ (x y z k)\n                 (match\n                  (app not (app < y x))\n                  ((#t) (app k z))\n                  ((#f)\n                   (app\n                    tak\n                    (app - x 1)\n                    y\n                    z\n                    (λ (v1)\n                      (app\n                       tak\n                       (app - y 1)\n                       z\n                       x\n                       (λ (v2)\n                         (app\n                          tak\n                          (app - z 1)\n                          x\n                          y\n                          (λ (v3) (app tak v1 v2 v3 k))))))))))))\n       (app tak x y z (λ (a) a)))\n     <-))\n (menv '((□? (x y z)))))\""
  0
  (#f))
'(cpstak
  1
  "\"(list 'eval '(app tak x y (-> z <-) (λ (a) a)) (menv '((□? (x y z)))))\""
  6
  ((0 0 0)))
'(cpstak
  1
  "\"(list\n 'eval\n '(app\n   tak\n   (app - x 1)\n   (-> y <-)\n   z\n   (λ (v1)\n     (app\n      tak\n      (app - y 1)\n      z\n      x\n      (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))))\n (menv '((□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  1
  "\"(list\n 'eval\n '(app (-> tak <-) (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))\n (menv '((□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  6
  ((0 0 0)))
'(cpstak
  1
  "\"(list\n 'eval\n '(app (-> tak <-) v1 v2 v3 k)\n (menv '((□? (v3)) (□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  7
  ((0 0 0)))
'(cpstak
  1
  "\"(list 'eval '(app - x (-> 1 <-)) (menv '((□? (x y z k)) (□? (x y z)))))\""
  3
  ((0 0 0)))
'(cpstak
  1
  "\"(list 'eval '(app cpstak 32 (-> 15 <-) 8) (menv '()))\""
  1
  ((0 0 0)))
'(kcfa-2
  1
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  42
  ((0 0 0)))
'(kcfa-2
  1
  "\"(list 'eval '(app (-> f2 <-) (app #t)) (menv '((□? (f2)) (□? (x1)))))\""
  6
  ((0 0 0)))
'(kcfa-2 1 "\"(list 'eval '(top) (menv '()))\"" 29 ((0 0 0)))
'(kcfa-2
  1
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f1)))))\""
  2
  ((0 0 0)))
'(kcfa-2
  1
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 (app #t)))) (app f1 (app #f)))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  1
  ((0 0 0)))
'(kcfa-2
  1
  "\"(list 'eval '(app (-> f1 <-) (app #f)) (menv '((□? (f1)))))\""
  5
  ((0 0 0)))
'(kcfa-2
  1
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))\""
  3
  ((0 0 0)))
'(kcfa-2
  1
  "\"(list 'eval '(app f2 (-> (app #f) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  4
  ((0 0 0)))
'(kcfa-2
  1
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f)))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '((□? (x1)))))\""
  2
  ((0 0 0)))
'(kcfa-2
  1
  "\"(list\n 'eval\n '(λ (z) (-> (app z x1 x2) <-))\n (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  48
  ((1 1 0)))
'(kcfa-2
  1
  "\"(list 'eval '(let ((-> _ = (app f1 (app #t)) <-)) bod) (menv '((□? (f1)))))\""
  30
  ((0 0 0)))
'(kcfa-2
  1
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  7
  ((0 0 0)))
'(kcfa-2
  1
  "\"(list 'eval '(app f2 (-> (app #t) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  4
  ((0 0 0)))
'(kcfa-2
  1
  "\"(list\n 'eval\n '(let ((-> _ = (app f2 (app #t)) <-)) bod)\n (menv '((□? (f2)) (□? (x1)))))\""
  60
  ((1 1 0)))
'(kcfa-2
  1
  "\"(list 'eval '(app f1 (-> (app #f) <-)) (menv '((□? (f1)))))\""
  3
  ((0 0 0)))
'(kcfa-2
  1
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '((□? (x1)))))\""
  60
  ((1 1 0)))
'(kcfa-2
  1
  "\"(list 'eval '(app (-> f2 <-) (app #f)) (menv '((□? (f2)) (□? (x1)))))\""
  6
  ((0 0 0)))
'(kcfa-2
  1
  "\"(list 'eval '(app (-> f1 <-) (app #t)) (menv '((□? (f1)))))\""
  5
  ((0 0 0)))
'(kcfa-2
  1
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 (app #t)))) (app f2 (app #f))) <-))\n (menv '((□? (f2)) (□? (x1)))))\""
  66
  ((1 1 0)))
'(kcfa-2
  1
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 (app #t)))) (app f1 (app #f))))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  1
  ((0 0 0)))
'(kcfa-2
  1
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '((□? (x2)) (□? (x1)))))\""
  3
  ((0 0 0)))
'(kcfa-2
  1
  "\"(list 'eval '(let (_) (-> (app f2 (app #f)) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  60
  ((1 1 0)))
'(kcfa-2
  1
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '((□? (x1)))))\""
  2
  ((0 0 0)))
'(kcfa-2
  1
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))\""
  3
  ((0 0 0)))
'(kcfa-2
  1
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  16
  ((0 0 0)))
'(kcfa-2
  1
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  3
  ((0 0 0)))
'(kcfa-2
  1
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f1)))))\""
  2
  ((0 0 0)))
'(kcfa-2
  1
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  33
  ((0 0 0)))
'(kcfa-2
  1
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  18
  ((0 0 0)))
'(kcfa-2
  1
  "\"(list 'eval '(app f1 (-> (app #t) <-)) (menv '((□? (f1)))))\""
  3
  ((0 0 0)))
'(kcfa-2
  1
  "\"(list 'eval '(let (_) (-> (app f1 (app #f)) <-)) (menv '((□? (f1)))))\""
  30
  ((0 0 0)))
'(kcfa-2
  1
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 (app #t)))) (app f1 (app #f))) <-))\n (menv '((□? (f1)))))\""
  32
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2 x3)) (-> (λ (y1 y2 y3) y1) <-))\n (menv '((□? (x3)) (□? (x2)) (□? (x1)))))\""
  4
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list 'eval '(let (_) (-> (app f1 (app #f)) <-)) (menv '((□? (f1)))))\""
  37
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list\n 'eval\n '(app z x1 x2 (-> x3 <-))\n (menv '((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  17
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list\n 'eval\n '(let ((-> _ = (app f3 (app #t)) <-)) bod)\n (menv '((□? (f3)) (□? (x2)) (□? (x1)))))\""
  63
  ((1 1 0)))
'(kcfa-3
  1
  "\"(list 'eval '(app (-> f3 <-) (app #t)) (menv '((□? (f3)) (□? (x2)) (□? (x1)))))\""
  7
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list\n 'eval\n '(app\n   (-> (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f)))) <-)\n   (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))))\n (menv '((□? (x2)) (□? (x1)))))\""
  3
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list\n 'eval\n '(λ (f3) (-> (let ((_ (app f3 (app #t)))) (app f3 (app #f))) <-))\n (menv '((□? (f3)) (□? (x2)) (□? (x1)))))\""
  69
  ((1 1 0)))
'(kcfa-3
  1
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 (app #t)))) (app f1 (app #f))))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n       (λ (x2)\n         (app\n          (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n          (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1)))))))\n    <-))\n (menv '()))\""
  1
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))\""
  3
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list 'eval '(app f2 (-> (app #t) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  4
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list 'eval '(app f3 (-> (app #t) <-)) (menv '((□? (f3)) (□? (x2)) (□? (x1)))))\""
  5
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list\n 'eval\n '(app (-> z <-) x1 x2 x3)\n (menv '((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list\n 'eval\n '(app\n   (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n   (-> (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  3
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list\n 'eval\n '(let ((-> _ = (app f2 (app #t)) <-)) bod)\n (menv '((□? (f2)) (□? (x1)))))\""
  81
  ((2 2 0)))
'(kcfa-3
  1
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f)))) <-)\n   (λ (x2)\n     (app\n      (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n      (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))))))\n (menv '((□? (x1)))))\""
  2
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list 'eval '(app f3 (-> (app #f) <-)) (menv '((□? (f3)) (□? (x2)) (□? (x1)))))\""
  5
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list 'eval '(let ((-> _ = (app f1 (app #t)) <-)) bod) (menv '((□? (f1)))))\""
  37
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list 'eval '(app (-> f1 <-) (app #f)) (menv '((□? (f1)))))\""
  5
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n   (->\n    (λ (x2)\n      (app\n       (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n       (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1)))))\n    <-))\n (menv '((□? (x1)))))\""
  2
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n      (λ (x2)\n        (app\n         (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n         (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))))))\n     <-))\n (menv '((□? (x1)))))\""
  81
  ((1 1 0)))
'(kcfa-3
  1
  "\"(list\n 'eval\n '(app z x1 (-> x2 <-) x3)\n (menv '((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  19
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2 x3)) <-) (λ (y1 y2 y3) y1))\n (menv '((□? (x3)) (□? (x2)) (□? (x1)))))\""
  4
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list 'eval '(let (_) (-> (app f2 (app #f)) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  81
  ((2 2 0)))
'(kcfa-3
  1
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 (app #t)))) (app f2 (app #f))) <-))\n (menv '((□? (f2)) (□? (x1)))))\""
  87
  ((2 2 0)))
'(kcfa-3
  1
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 (app #t)))) (app f1 (app #f)))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n      (λ (x2)\n        (app\n         (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n         (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))))))))\n (menv '()))\""
  1
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 (app #t)))) (app f1 (app #f))) <-))\n (menv '((□? (f1)))))\""
  39
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f3)) (□? (x2)) (□? (x1)))))\""
  4
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))\""
  3
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f1)))))\""
  2
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list\n 'eval\n '(let (_) (-> (app f3 (app #f)) <-))\n (menv '((□? (f3)) (□? (x2)) (□? (x1)))))\""
  63
  ((1 1 0)))
'(kcfa-3
  1
  "\"(list 'eval '(app f2 (-> (app #f) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  4
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list\n 'eval\n '(λ (y1 y2 y3) (-> y1 <-))\n (menv '((□? (y1 y2 y3)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  36
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list 'eval '(app (-> f3 <-) (app #f)) (menv '((□? (f3)) (□? (x2)) (□? (x1)))))\""
  7
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list 'eval '(app f1 (-> (app #f) <-)) (menv '((□? (f1)))))\""
  3
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f3)) (□? (x2)) (□? (x1)))))\""
  4
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list 'eval '(app f1 (-> (app #t) <-)) (menv '((□? (f1)))))\""
  3
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list\n 'eval\n '(λ (x2)\n    (->\n     (app\n      (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n      (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))))\n     <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  63
  ((1 1 0)))
'(kcfa-3
  1
  "\"(list 'eval '(app (-> f2 <-) (app #f)) (menv '((□? (f2)) (□? (x1)))))\""
  6
  ((0 0 0)))
'(kcfa-3 1 "\"(list 'eval '(top) (menv '()))\"" 36 ((0 0 0)))
'(kcfa-3
  1
  "\"(list\n 'eval\n '(λ (x3) (-> (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1)) <-))\n (menv '((□? (x3)) (□? (x2)) (□? (x1)))))\""
  45
  ((1 1 0)))
'(kcfa-3
  1
  "\"(list\n 'eval\n '(app z (-> x1 <-) x2 x3)\n (menv '((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  21
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list 'eval '(app (-> f2 <-) (app #t)) (menv '((□? (f2)) (□? (x1)))))\""
  6
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f1)))))\""
  2
  ((0 0 0)))
'(kcfa-3
  1
  "\"(list\n 'eval\n '(λ (z) (-> (app z x1 x2 x3) <-))\n (menv '((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  51
  ((1 1 0)))
'(kcfa-3
  1
  "\"(list 'eval '(app (-> f1 <-) (app #t)) (menv '((□? (f1)))))\""
  5
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  30
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app (-> p <-) n1 n2 n3 n4)\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  15
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(letrec (phi try sat-solve-4) (-> (app sat-solve-4 phi) <-))\n (menv '()))\""
  865
  ((88 88 1)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app or x1 (app not x2) (-> (app not x3) <-))\n (menv '((□? (x1 x2 x3 x4)))))\""
  32
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app or (-> (app f (app #t)) <-) (app f (app #f)))\n (menv '((□? (f)))))\""
  858
  ((92 92 1)))
'(sat-1
  1
  "\"(list 'eval '(app not (-> x3 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  28
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4)))))\""
  91
  ((3 3 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(letrec (phi\n           try\n           (->\n            sat-solve-4\n            =\n            (λ (p)\n              (app\n               try\n               (λ (n1)\n                 (app\n                  try\n                  (λ (n2)\n                    (app\n                     try\n                     (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4))))))))))\n            <-))\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n1)\n      (app\n       try\n       (λ (n2) (app try (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4))))))))\n    <-))\n (menv '((□? (p)))))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4)))) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app or (app not x2) (-> (app not x3) <-))\n (menv '((□? (x1 x2 x3 x4)))))\""
  32
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> sat-solve-4 <-) phi) (menv '()))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app or (-> x1 <-) (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  32
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(λ (n3) (-> (app try (λ (n4) (app p n1 n2 n3 n4))) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  817
  ((85 85 1)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app\n   try\n   (-> (λ (n2) (app try (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4)))))) <-))\n (menv '((□? (n1)) (□? (p)))))\""
  3
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 (app not x2) (app not x3))\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv '((□? (x1 x2 x3 x4)))))\""
  69
  ((3 3 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '((□? (f)))))\""
  19
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app f (app #t)) (app f (app #f)))\n (menv '((□? (f)))))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(letrec (phi\n           (-> try = (λ (f) (app or (app f (app #t)) (app f (app #f)))) <-)\n           sat-solve-4)\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app not (-> x3 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  28
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app p (-> n1 <-) n2 n3 n4)\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  23
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(λ (p)\n    (->\n     (app\n      try\n      (λ (n1)\n        (app\n         try\n         (λ (n2) (app try (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4)))))))))\n     <-))\n (menv '((□? (p)))))\""
  866
  ((88 88 1)))
'(sat-1
  1
  "\"(list 'eval '(app (-> not <-) x3) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app or (app f (app #t)) (-> (app f (app #f)) <-))\n (menv '((□? (f)))))\""
  858
  ((95 95 4)))
'(sat-1
  1
  "\"(list 'eval '(app sat-solve-4 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n1)\n     (app\n      try\n      (λ (n2) (app try (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4)))))))))\n (menv '((□? (p)))))\""
  3
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app or (-> (app not x2) <-) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  34
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4)))))\""
  224
  ((11 11 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1 1 "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  30
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> or <-) x4 x2) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(λ (n4) (-> (app p n1 n2 n3 n4) <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  761
  ((74 74 1)))
'(sat-1
  1
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '((□? (f)))))\""
  19
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app (-> or <-) x1 (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1 1 "\"(list 'eval '(top) (menv '()))\"" 866 ((84 84 1)))
'(sat-1
  1
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '((□? (f)))))\""
  870
  ((86 86 1)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n4) (app p n1 n2 n3 n4)))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app p n1 n2 n3 (-> n4 <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  17
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app (-> not <-) x3) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1 1 "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app p n1 n2 (-> n3 <-) n4)\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  19
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app or x4 (-> x2 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  30
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(letrec ((->\n            phi\n            =\n            (λ (x1 x2 x3 x4)\n              (app\n               and\n               (app or x1 (app not x2) (app not x3))\n               (app or (app not x2) (app not x3))\n               (app or x4 x2)))\n            <-)\n           try\n           sat-solve-4)\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4)))))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app p n1 (-> n2 <-) n3 n4)\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  21
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(λ (x1 x2 x3 x4)\n    (->\n     (app\n      and\n      (app or x1 (app not x2) (app not x3))\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv '((□? (x1 x2 x3 x4)))))\""
  623
  ((67 67 2)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n2) (app try (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4)))))))\n (menv '((□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app or x1 (-> (app not x2) <-) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  34
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(λ (n1)\n    (->\n     (app\n      try\n      (λ (n2) (app try (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4)))))))\n     <-))\n (menv '((□? (n1)) (□? (p)))))\""
  853
  ((84 84 1)))
'(sat-1
  1
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n4) (app p n1 n2 n3 n4)) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(sat-1
  1
  "\"(list 'eval '(app or (-> x4 <-) x2) (menv '((□? (x1 x2 x3 x4)))))\""
  26
  ((0 0 0)))
'(sat-1
  1
  "\"(list\n 'eval\n '(λ (n2) (-> (app try (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4))))) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  838
  ((85 85 1)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app not (-> x3 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  93
  ((1 1 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> (app (app (app (app (app p n1) n2) n3) n4) n5) <-) n6)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  36
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> not <-) x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n5)\n      (app\n       try\n       (λ (n6)\n         (app\n          try\n          (λ (n7)\n            (app\n             (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n             n7))))))\n    <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0)))
'(sat-2
  1
  "\"(list 'eval '(app sat-solve-7 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (x7)\n    (->\n     (app\n      and\n      (app or x1 x2)\n      (app or x1 (app not x2) (app not x3))\n      (app or x3 x4)\n      (app or (app not x4) x1)\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (-> (app f (app #t)) <-) (app f (app #f)))\n (menv '((□? (f)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app f (app #t)) (app f (app #f)))\n (menv '((□? (f)))))\""
  2
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n5)\n     (app\n      try\n      (λ (n6)\n        (app\n         try\n         (λ (n7)\n           (app\n            (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n            n7)))))))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  7
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(letrec ((->\n            phi\n            =\n            (λ (x1)\n              (λ (x2)\n                (λ (x3)\n                  (λ (x4)\n                    (λ (x5)\n                      (λ (x6)\n                        (λ (x7)\n                          (app\n                           and\n                           (app or x1 x2)\n                           (app or x1 (app not x2) (app not x3))\n                           (app or x3 x4)\n                           (app or (app not x4) x1)\n                           (app or (app not x2) (app not x3))\n                           (app or x4 x2)))))))))\n            <-)\n           try\n           sat-solve-7)\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or x3 x4) <-)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  253
  ((18 18 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (x4)\n    (->\n     (λ (x5)\n       (λ (x6)\n         (λ (x7)\n           (app\n            and\n            (app or x1 x2)\n            (app or x1 (app not x2) (app not x3))\n            (app or x3 x4)\n            (app or (app not x4) x1)\n            (app or (app not x2) (app not x3))\n            (app or x4 x2)))))\n     <-))\n (menv '((□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  5
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (-> (app or (app not x4) x1) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  321
  ((43 43 1)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app not (-> x3 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  93
  ((2 2 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(letrec (phi try sat-solve-7) (-> (app sat-solve-7 phi) <-))\n (menv '()))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (-> (app not x4) <-) x1)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  166
  ((8 8 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (-> x1 <-) (app not x2) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  53
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (app f (app #t)) (-> (app f (app #f)) <-))\n (menv '((□? (f)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n2)\n      (app\n       try\n       (λ (n3)\n         (app\n          try\n          (λ (n4)\n            (app\n             try\n             (λ (n5)\n               (app\n                try\n                (λ (n6)\n                  (app\n                   try\n                   (λ (n7)\n                     (app\n                      (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                      n7))))))))))))\n    <-))\n (menv '((□? (n1)) (□? (p)))))\""
  3
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(letrec (phi\n           try\n           (->\n            sat-solve-7\n            =\n            (λ (p)\n              (app\n               try\n               (λ (n1)\n                 (app\n                  try\n                  (λ (n2)\n                    (app\n                     try\n                     (λ (n3)\n                       (app\n                        try\n                        (λ (n4)\n                          (app\n                           try\n                           (λ (n5)\n                             (app\n                              try\n                              (λ (n6)\n                                (app\n                                 try\n                                 (λ (n7)\n                                   (app\n                                    (app\n                                     (app\n                                      (app (app (app (app p n1) n2) n3) n4)\n                                      n5)\n                                     n6)\n                                    n7))))))))))))))))\n            <-))\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> (app (app (app (app p n1) n2) n3) n4) <-) n5)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  33
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app not (-> x4 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  134
  ((3 3 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (n4)\n    (->\n     (app\n      try\n      (λ (n5)\n        (app\n         try\n         (λ (n6)\n           (app\n            try\n            (λ (n7)\n              (app\n               (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n               n7)))))))\n     <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (x3)\n    (->\n     (λ (x4)\n       (λ (x5)\n         (λ (x6)\n           (λ (x7)\n             (app\n              and\n              (app or x1 x2)\n              (app or x1 (app not x2) (app not x3))\n              (app or x3 x4)\n              (app or (app not x4) x1)\n              (app or (app not x2) (app not x3))\n              (app or x4 x2))))))\n     <-))\n (menv '((□? (x3)) (□? (x2)) (□? (x1)))))\""
  4
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n6)\n     (app\n      try\n      (λ (n7)\n        (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7)))))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or x3 (-> x4 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  134
  ((4 4 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app not x4) x1)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app not x2) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (app not x2) (-> (app not x3) <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  109
  ((3 3 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  252
  ((40 40 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n3)\n      (app\n       try\n       (λ (n4)\n         (app\n          try\n          (λ (n5)\n            (app\n             try\n             (λ (n6)\n               (app\n                try\n                (λ (n7)\n                  (app\n                   (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                   n7))))))))))\n    <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-2
  1
  "\"(list 'eval '(app (-> sat-solve-7 <-) phi) (menv '()))\""
  2
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> not <-) x3)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> or <-) x1 (app not x2) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (-> x4 <-) x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  134
  ((4 4 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app not (-> x2 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  68
  ((1 1 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  255
  ((20 20 0)))
'(sat-2
  1
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n1)\n     (app\n      try\n      (λ (n2)\n        (app\n         try\n         (λ (n3)\n           (app\n            try\n            (λ (n4)\n              (app\n               try\n               (λ (n5)\n                 (app\n                  try\n                  (λ (n6)\n                    (app\n                     try\n                     (λ (n7)\n                       (app\n                        (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                        n7)))))))))))))))\n (menv '((□? (p)))))\""
  3
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (app (app (app p n1) n2) n3) (-> n4 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  26
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n3)\n     (app\n      try\n      (λ (n4)\n        (app\n         try\n         (λ (n5)\n           (app\n            try\n            (λ (n6)\n              (app\n               try\n               (λ (n7)\n                 (app\n                  (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                  n7)))))))))))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n6)\n      (app\n       try\n       (λ (n7)\n         (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7))))\n    <-))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  7
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> or <-) x4 x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> or <-) x1 x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> (app (app p n1) n2) <-) n3)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  27
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (-> x3 <-) x4)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  93
  ((2 2 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (n7)\n    (-> (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7) <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> p <-) n1)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  21
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app not (-> x2 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  68
  ((1 1 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> not <-) x4)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2 1 "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (n2)\n    (->\n     (app\n      try\n      (λ (n3)\n        (app\n         try\n         (λ (n4)\n           (app\n            try\n            (λ (n5)\n              (app\n               try\n               (λ (n6)\n                 (app\n                  try\n                  (λ (n7)\n                    (app\n                     (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                     n7)))))))))))\n     <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> or <-) x3 x4)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (app not x4) (-> x1 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  53
  ((0 0 0)))
'(sat-2
  1
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '((□? (f)))))\""
  31
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app p (-> n1 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  32
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n2)\n     (app\n      try\n      (λ (n3)\n        (app\n         try\n         (λ (n4)\n           (app\n            try\n            (λ (n5)\n              (app\n               try\n               (λ (n6)\n                 (app\n                  try\n                  (λ (n7)\n                    (app\n                     (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                     n7)))))))))))))\n (menv '((□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 x2) <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  151
  ((7 7 0)))
'(sat-2
  1
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-2 1 "\"(list 'eval '(top) (menv '()))\"" 0 (#f))
'(sat-2 1 "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (n1)\n    (->\n     (app\n      try\n      (λ (n2)\n        (app\n         try\n         (λ (n3)\n           (app\n            try\n            (λ (n4)\n              (app\n               try\n               (λ (n5)\n                 (app\n                  try\n                  (λ (n6)\n                    (app\n                     try\n                     (λ (n7)\n                       (app\n                        (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                        n7)))))))))))))\n     <-))\n (menv '((□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (x5)\n    (->\n     (λ (x6)\n       (λ (x7)\n         (app\n          and\n          (app or x1 x2)\n          (app or x1 (app not x2) (app not x3))\n          (app or x3 x4)\n          (app or (app not x4) x1)\n          (app or (app not x2) (app not x3))\n          (app or x4 x2))))\n     <-))\n (menv '((□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  6
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n4)\n     (app\n      try\n      (λ (n5)\n        (app\n         try\n         (λ (n6)\n           (app\n            try\n            (λ (n7)\n              (app\n               (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n               n7)))))))))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0)))
'(sat-2
  1
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '((□? (f)))))\""
  31
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or x1 (app not x2) (-> (app not x3) <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  109
  ((3 3 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  481
  ((81 81 1)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (app p n1) (-> n2 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  30
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (n3)\n    (->\n     (app\n      try\n      (λ (n4)\n        (app\n         try\n         (λ (n5)\n           (app\n            try\n            (λ (n6)\n              (app\n               try\n               (λ (n7)\n                 (app\n                  (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                  n7)))))))))\n     <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (app (app (app (app (app p n1) n2) n3) n4) n5) (-> n6 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  22
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n4)\n      (app\n       try\n       (λ (n5)\n         (app\n          try\n          (λ (n6)\n            (app\n             try\n             (λ (n7)\n               (app\n                (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                n7))))))))\n    <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> not <-) x3)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> not <-) x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (λ (x2)\n       (λ (x3)\n         (λ (x4)\n           (λ (x5)\n             (λ (x6)\n               (λ (x7)\n                 (app\n                  and\n                  (app or x1 x2)\n                  (app or x1 (app not x2) (app not x3))\n                  (app or x3 x4)\n                  (app or (app not x4) x1)\n                  (app or (app not x2) (app not x3))\n                  (app or x4 x2))))))))\n     <-))\n (menv '((□? (x1)))))\""
  2
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (app (app p n1) n2) (-> n3 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  28
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) <-) n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  39
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '((□? (f)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (-> (app not x2) <-) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  76
  ((1 1 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or x4 (-> x2 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  68
  ((1 1 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or x1 (-> (app not x2) <-) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  76
  ((1 1 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or x1 (-> x2 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  68
  ((1 1 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app or (-> x1 <-) x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  53
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(letrec (phi\n           (-> try = (λ (f) (app or (app f (app #t)) (app f (app #f)))) <-)\n           sat-solve-7)\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (x6)\n    (->\n     (λ (x7)\n       (app\n        and\n        (app or x1 x2)\n        (app or x1 (app not x2) (app not x3))\n        (app or x3 x4)\n        (app or (app not x4) x1)\n        (app or (app not x2) (app not x3))\n        (app or x4 x2)))\n     <-))\n (menv '((□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  7
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> (app p n1) <-) n2)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  24
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n7) (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7)))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  9
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n7) (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7))\n    <-))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (-> (app (app (app p n1) n2) n3) <-) n4)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  30
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (n6)\n    (->\n     (app\n      try\n      (λ (n7)\n        (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7)))\n     <-))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (n5)\n    (->\n     (app\n      try\n      (λ (n6)\n        (app\n         try\n         (λ (n7)\n           (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7)))))\n     <-))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (x2)\n    (->\n     (λ (x3)\n       (λ (x4)\n         (λ (x5)\n           (λ (x6)\n             (λ (x7)\n               (app\n                and\n                (app or x1 x2)\n                (app or x1 (app not x2) (app not x3))\n                (app or x3 x4)\n                (app or (app not x4) x1)\n                (app or (app not x2) (app not x3))\n                (app or x4 x2)))))))\n     <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  3
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(λ (p)\n    (->\n     (app\n      try\n      (λ (n1)\n        (app\n         try\n         (λ (n2)\n           (app\n            try\n            (λ (n3)\n              (app\n               try\n               (λ (n4)\n                 (app\n                  try\n                  (λ (n5)\n                    (app\n                     try\n                     (λ (n6)\n                       (app\n                        try\n                        (λ (n7)\n                          (app\n                           (app\n                            (app (app (app (app (app p n1) n2) n3) n4) n5)\n                            n6)\n                           n7)))))))))))))))\n     <-))\n (menv '((□? (p)))))\""
  0
  (#f))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n1)\n      (app\n       try\n       (λ (n2)\n         (app\n          try\n          (λ (n3)\n            (app\n             try\n             (λ (n4)\n               (app\n                try\n                (λ (n5)\n                  (app\n                   try\n                   (λ (n6)\n                     (app\n                      try\n                      (λ (n7)\n                        (app\n                         (app\n                          (app (app (app (app (app p n1) n2) n3) n4) n5)\n                          n6)\n                         n7))))))))))))))\n    <-))\n (menv '((□? (p)))))\""
  2
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) (-> n7 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  20
  ((0 0 0)))
'(sat-2
  1
  "\"(list\n 'eval\n '(app (app (app (app (app p n1) n2) n3) n4) (-> n5 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  24
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (p)\n    (->\n     (app\n      try\n      (λ (n1)\n        (app\n         try\n         (λ (n2)\n           (app\n            try\n            (λ (n3)\n              (app\n               try\n               (λ (n4)\n                 (app\n                  try\n                  (λ (n5)\n                    (app\n                     try\n                     (λ (n6)\n                       (app\n                        try\n                        (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))))))))\n     <-))\n (menv '((□? (p)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n2)\n     (app\n      try\n      (λ (n3)\n        (app\n         try\n         (λ (n4)\n           (app\n            try\n            (λ (n5)\n              (app\n               try\n               (λ (n6)\n                 (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))))))\n (menv '((□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n4)\n      (app\n       try\n       (λ (n5)\n         (app try (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7))))))))\n    <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or (-> x1 <-) (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app or x1 (-> x2 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  39
  ((0 0 0)))
'(sat-3 1 "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app not (-> x3 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  37
  ((0 0 0)))
'(sat-3 1 "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  8
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  305
  ((18 18 0)))
'(sat-3
  1
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app not (-> x4 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  35
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or x1 (app not x2) (-> (app not x3) <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app display (-> s <-)) (menv '((□? (s)))))\""
  7
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))) <-))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  7
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '((□? (f)))))\""
  31
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(let ((-> _ = (app display (app sat-solve-7 phi)) <-)) bod)\n (menv '()))\""
  0
  (#f))
'(sat-3
  1
  "\"(list 'eval '(app or (-> x3 <-) x4) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  37
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (n5)\n    (-> (app try (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7))))) <-))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-3 1 "\"(list 'eval '(top) (menv '()))\"" 4 ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  96
  ((3 3 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 x2) <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  110
  ((3 3 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> or <-) x1 (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> not <-) x3) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (n3)\n    (->\n     (app\n      try\n      (λ (n4)\n        (app\n         try\n         (λ (n5)\n           (app\n            try\n            (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))\n     <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or x3 x4) <-)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  94
  ((3 3 0)))
'(sat-3
  1
  "\"(list 'eval '(app or (-> x1 <-) x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app display (-> (app sat-solve-7 phi) <-)) (menv '()))\""
  0
  (#f))
'(sat-3
  1
  "\"(list\n 'eval\n '(letrec (println\n           phi\n           (->\n            try\n            =\n            (λ (f)\n              (let ((_ (app println \"trying\")))\n                (app or (app f (app #t)) (app f (app #f)))))\n            <-)\n           sat-solve-7)\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (n1)\n    (->\n     (app\n      try\n      (λ (n2)\n        (app\n         try\n         (λ (n3)\n           (app\n            try\n            (λ (n4)\n              (app\n               try\n               (λ (n5)\n                 (app\n                  try\n                  (λ (n6)\n                    (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))))))\n     <-))\n (menv '((□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list 'eval '(app (-> display <-) s) (menv '((□? (s)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(let (_) (-> (app newline) <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or (-> (app not x2) <-) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  43
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app not x4) x1)\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> p <-) n1 n2 n3 n4 n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  21
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (n2)\n    (->\n     (app\n      try\n      (λ (n3)\n        (app\n         try\n         (λ (n4)\n           (app\n            try\n            (λ (n5)\n              (app\n               try\n               (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))))\n     <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list\n 'eval\n '(app try (-> (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)) <-))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  8
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or (app not x2) (-> (app not x3) <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> not <-) x3) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> or <-) x1 x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app or x4 (-> x2 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  39
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n1)\n     (app\n      try\n      (λ (n2)\n        (app\n         try\n         (λ (n3)\n           (app\n            try\n            (λ (n4)\n              (app\n               try\n               (λ (n5)\n                 (app\n                  try\n                  (λ (n6)\n                    (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))))))))\n (menv '((□? (p)))))\""
  3
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(letrec (println phi try sat-solve-7)\n    (-> (let ((_ (app display (app sat-solve-7 phi)))) (app newline)) <-))\n (menv '()))\""
  3
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or (app f (app #t)) (-> (app f (app #f)) <-))\n (menv '((□? (f)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  39
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app p n1 n2 (-> n3 <-) n4 n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  28
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app println (-> \"trying\" <-)) (menv '((□? (f)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> or <-) x3 x4) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 n5 (-> n6 <-) n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  22
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> or <-) x4 x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n5) (app try (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  7
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 (-> n5 <-) n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  24
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(letrec ((-> println = (λ (s) (let ((_ (app display s))) newline)) <-)\n           phi\n           try\n           sat-solve-7)\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or x1 (-> (app not x2) <-) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  43
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> display <-) (app sat-solve-7 phi)) (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> println <-) \"trying\") (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app p n1 n2 n3 (-> n4 <-) n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  26
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (f)\n    (->\n     (let ((_ (app println \"trying\")))\n       (app or (app f (app #t)) (app f (app #f))))\n     <-))\n (menv '((□? (f)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list 'eval '(app sat-solve-7 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n1)\n      (app\n       try\n       (λ (n2)\n         (app\n          try\n          (λ (n3)\n            (app\n             try\n             (λ (n4)\n               (app\n                try\n                (λ (n5)\n                  (app\n                   try\n                   (λ (n6)\n                     (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7))))))))))))))\n    <-))\n (menv '((□? (p)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n3)\n      (app\n       try\n       (λ (n4)\n         (app\n          try\n          (λ (n5)\n            (app\n             try\n             (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7))))))))))\n    <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app p n1 (-> n2 <-) n3 n4 n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  30
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  9
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (x1 x2 x3 x4 x5 x6 x7)\n    (->\n     (app\n      and\n      (app or x1 x2)\n      (app or x1 (app not x2) (app not x3))\n      (app or x3 x4)\n      (app or (app not x4) x1)\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app or x3 (-> x4 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  35
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(let ((-> _ = (app display s) <-)) bod) (menv '((□? (s)))))\""
  11
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or (-> (app f (app #t)) <-) (app f (app #f)))\n (menv '((□? (f)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list 'eval '(let (_) (-> newline <-)) (menv '((□? (s)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (n7) (-> (app p n1 n2 n3 n4 n5 n6 n7) <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or (-> (app not x4) <-) x1)\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  39
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app or (-> x4 <-) x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  35
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  118
  ((4 4 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (-> (app or (app not x4) x1) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  106
  ((4 4 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(letrec (println\n           (->\n            phi\n            =\n            (λ (x1 x2 x3 x4 x5 x6 x7)\n              (app\n               and\n               (app or x1 x2)\n               (app or x1 (app not x2) (app not x3))\n               (app or x3 x4)\n               (app or (app not x4) x1)\n               (app or (app not x2) (app not x3))\n               (app or x4 x2)))\n            <-)\n           try\n           sat-solve-7)\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  39
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n5) (app try (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7))))))\n    <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app or (app not x4) (-> x1 <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> sat-solve-7 <-) phi) (menv '()))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (n4)\n    (->\n     (app\n      try\n      (λ (n5)\n        (app try (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))\n     <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n2)\n      (app\n       try\n       (λ (n3)\n         (app\n          try\n          (λ (n4)\n            (app\n             try\n             (λ (n5)\n               (app\n                try\n                (λ (n6)\n                  (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7))))))))))))\n    <-))\n (menv '((□? (n1)) (□? (p)))))\""
  3
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 n5 n6 (-> n7 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  20
  ((0 0 0)))
'(sat-3 1 "\"(list 'eval '(app (-> newline <-)) (menv '()))\"" 1 ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n4)\n     (app\n      try\n      (λ (n5)\n        (app try (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> not <-) x4) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '((□? (f)))))\""
  31
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n3)\n     (app\n      try\n      (λ (n4)\n        (app\n         try\n         (λ (n5)\n           (app\n            try\n            (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(let (_) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '((□? (f)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list 'eval '(let ((-> _ = (app println \"trying\") <-)) bod) (menv '((□? (f)))))\""
  6
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app p (-> n1 <-) n2 n3 n4 n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  32
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app not (-> x3 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  37
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (s) (-> (let ((_ (app display s))) newline) <-))\n (menv '((□? (s)))))\""
  3
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(λ (n6) (-> (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7))) <-))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  0
  (#f))
'(sat-3
  1
  "\"(list\n 'eval\n '(letrec (println\n           phi\n           try\n           (->\n            sat-solve-7\n            =\n            (λ (p)\n              (app\n               try\n               (λ (n1)\n                 (app\n                  try\n                  (λ (n2)\n                    (app\n                     try\n                     (λ (n3)\n                       (app\n                        try\n                        (λ (n4)\n                          (app\n                           try\n                           (λ (n5)\n                             (app\n                              try\n                              (λ (n6)\n                                (app\n                                 try\n                                 (λ (n7)\n                                   (app p n1 n2 n3 n4 n5 n6 n7))))))))))))))))\n            <-))\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  1
  "\"(list\n 'eval\n '(app (-> or <-) (app f (app #t)) (app f (app #f)))\n (menv '((□? (f)))))\""
  2
  ((0 0 0)))
'(sat-3
  1
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(ack
  2
  "\"(list 'eval '(app ack m (-> (app - n 1) <-)) (menv '((□? (m n)))))\""
  574
  ((19 19 0)))
'(ack
  2
  "\"(list\n 'eval\n '(match\n   (-> (app = n 0) <-)\n   ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  598
  ((21 21 0)))
'(ack
  2
  "\"(list 'eval '(app (-> = <-) m 0) (menv '((□? (m n)))))\""
  2
  ((0 0 0)))
'(ack
  2
  "\"(list 'eval '(app + n (-> 1 <-)) (menv '((□? (m n)))))\""
  2
  ((0 0 0)))
'(ack
  2
  "\"(list 'eval '(app = m (-> 0 <-)) (menv '((□? (m n)))))\""
  2
  ((0 0 0)))
'(ack
  2
  "\"(list\n 'eval\n '(match\n   (-> (app = m 0) <-)\n   ((#f)\n    (match\n     (app = n 0)\n     ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  279
  ((11 11 0)))
'(ack
  2
  "\"(list 'eval '(app (-> + <-) n 1) (menv '((□? (m n)))))\""
  2
  ((0 0 0)))
'(ack 2 "\"(list 'eval '(top) (menv '()))\"" 42 ((0 0 0)))
'(ack
  2
  "\"(list\n 'eval\n '(λ (m n)\n    (->\n     (match\n      (app = m 0)\n      ((#f)\n       (match\n        (app = n 0)\n        ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n        (_ (app ack (app - m 1) 1))))\n      (_ (app + n 1)))\n     <-))\n (menv '((□? (m n)))))\""
  706
  ((34 34 0)))
'(ack
  2
  "\"(list\n 'eval\n '(app ack (app - m 1) (-> (app ack m (app - n 1)) <-))\n (menv '((□? (m n)))))\""
  574
  ((22 22 0)))
'(ack
  2
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  2
  ((0 0 0)))
'(ack
  2
  "\"(list 'eval '(app + (-> n <-) 1) (menv '((□? (m n)))))\""
  580
  ((21 21 0)))
'(ack 2 "\"(list 'eval '(app ack (-> 3 <-) 12) (menv '()))\"" 1 ((0 0 0)))
'(ack 2 "\"(list 'eval '(app (-> ack <-) 3 12) (menv '()))\"" 2 ((0 0 0)))
'(ack
  2
  "\"(list 'eval '(letrec (ack) (-> (app ack 3 12) <-)) (menv '()))\""
  41
  ((0 0 0)))
'(ack
  2
  "\"(list\n 'eval\n '(app (-> ack <-) (app - m 1) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  3
  ((0 0 0)))
'(ack
  2
  "\"(list 'eval '(app (-> = <-) n 0) (menv '((□? (m n)))))\""
  2
  ((0 0 0)))
'(ack
  2
  "\"(list 'eval '(app - (-> n <-) 1) (menv '((□? (m n)))))\""
  574
  ((20 20 0)))
'(ack
  2
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  211
  ((8 8 0)))
'(ack
  2
  "\"(list 'eval '(app = (-> n <-) 0) (menv '((□? (m n)))))\""
  580
  ((20 20 0)))
'(ack
  2
  "\"(list 'eval '(app = n (-> 0 <-)) (menv '((□? (m n)))))\""
  2
  ((0 0 0)))
'(ack
  2
  "\"(list 'eval '(app = (-> m <-) 0) (menv '((□? (m n)))))\""
  228
  ((9 9 0)))
'(ack
  2
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   (->\n    (#f)\n    (match\n     (app = n 0)\n     ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1)))\n    <-)\n   (_ (app + n 1)))\n (menv '((□? (m n)))))\""
  684
  ((28 28 0)))
'(ack
  2
  "\"(list 'eval '(app (-> - <-) n 1) (menv '((□? (m n)))))\""
  2
  ((0 0 0)))
'(ack
  2
  "\"(list 'eval '(app (-> - <-) m 1) (menv '((□? (m n)))))\""
  2
  ((0 0 0)))
'(ack
  2
  "\"(list 'eval '(app ack (-> (app - m 1) <-) 1) (menv '((□? (m n)))))\""
  211
  ((8 8 0)))
'(ack
  2
  "\"(list 'eval '(app ack (app - m 1) (-> 1 <-)) (menv '((□? (m n)))))\""
  2
  ((0 0 0)))
'(ack
  2
  "\"(list 'eval '(app (-> ack <-) m (app - n 1)) (menv '((□? (m n)))))\""
  3
  ((0 0 0)))
'(ack
  2
  "\"(list 'eval '(app ack (-> m <-) (app - n 1)) (menv '((□? (m n)))))\""
  211
  ((9 9 0)))
'(ack
  2
  "\"(list\n 'eval\n '(letrec ((->\n            ack\n            =\n            (λ (m n)\n              (match\n               (app = m 0)\n               ((#f)\n                (match\n                 (app = n 0)\n                 ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n                 (_ (app ack (app - m 1) 1))))\n               (_ (app + n 1))))\n            <-))\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(ack
  2
  "\"(list\n 'eval\n '(app ack (-> (app - m 1) <-) (app ack m (app - n 1)))\n (menv '((□? (m n)))))\""
  211
  ((8 8 0)))
'(ack
  2
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  2
  ((0 0 0)))
'(ack 2 "\"(list 'eval '(app ack 3 (-> 12 <-)) (menv '()))\"" 1 ((0 0 0)))
'(ack
  2
  "\"(list 'eval '(app (-> ack <-) (app - m 1) 1) (menv '((□? (m n)))))\""
  3
  ((0 0 0)))
'(ack
  2
  "\"(list 'eval '(app - m (-> 1 <-)) (menv '((□? (m n)))))\""
  2
  ((0 0 0)))
'(ack
  2
  "\"(list 'eval '(app - (-> m <-) 1) (menv '((□? (m n)))))\""
  211
  ((8 8 0)))
'(ack
  2
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '((□? (m n)))))\""
  2
  ((0 0 0)))
'(ack
  2
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   (-> (#f) (app ack (app - m 1) (app ack m (app - n 1))) <-)\n   (_ (app ack (app - m 1) 1)))\n (menv '((□? (m n)))))\""
  626
  ((22 22 0)))
'(ack
  2
  "\"(list\n 'eval\n '(match\n   (app = n 0)\n   ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n   (-> _ (app ack (app - m 1) 1) <-))\n (menv '((□? (m n)))))\""
  626
  ((22 22 0)))
'(ack
  2
  "\"(list\n 'eval\n '(match\n   (app = m 0)\n   ((#f)\n    (match\n     (app = n 0)\n     ((#f) (app ack (app - m 1) (app ack m (app - n 1))))\n     (_ (app ack (app - m 1) 1))))\n   (-> _ (app + n 1) <-))\n (menv '((□? (m n)))))\""
  598
  ((21 21 0)))
'(blur
  2
  "\"(list 'eval '(app (-> (app blur lp) <-) s (app - n 1)) (menv '((□? (a n)))))\""
  12
  ((0 0 0)))
'(blur
  2
  "\"(list 'eval '(app (-> - <-) n 1) (menv '((□? (a n)))))\""
  2
  ((0 0 0)))
'(blur
  2
  "\"(list 'eval '(app - (-> n <-) 1) (menv '((□? (a n)))))\""
  61
  ((1 1 0)))
'(blur
  2
  "\"(list 'eval '(app blur (-> id <-)) (menv '((□? (a n)))))\""
  3
  ((0 0 0)))
'(blur
  2
  "\"(list 'eval '(letrec (id blur lp) (-> (app lp (app #f) 2) <-)) (menv '()))\""
  47
  ((0 0 0)))
'(blur
  2
  "\"(list 'eval '(app <= n (-> 1 <-)) (menv '((□? (a n)))))\""
  2
  ((0 0 0)))
'(blur
  2
  "\"(list 'eval '(app (app blur id) (-> (app #f) <-)) (menv '((□? (a n)))))\""
  3
  ((0 0 0)))
'(blur
  2
  "\"(list 'eval '(app (app blur lp) s (-> (app - n 1) <-)) (menv '((□? (a n)))))\""
  61
  ((1 1 0)))
'(blur
  2
  "\"(list\n 'eval\n '(app not (-> (app (app blur lp) s (app - n 1)) <-))\n (menv '((□? (a n)))))\""
  204
  ((8 8 0)))
'(blur
  2
  "\"(list\n 'eval\n '(letrec (id\n           blur\n           (->\n            lp\n            =\n            (λ (a n)\n              (match\n               (app <= n 1)\n               ((#t) (app id a))\n               ((#f)\n                (let* ((r (app (app blur id) (app #t)))\n                       (s (app (app blur id) (app #f))))\n                  (app not (app (app blur lp) s (app - n 1)))))))\n            <-))\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(blur
  2
  "\"(list 'eval '(app (-> blur <-) id) (menv '((□? (a n)))))\""
  3
  ((0 0 0)))
'(blur 2 "\"(list 'eval '(app (-> #f <-)) (menv '()))\"" 1 ((0 0 0)))
'(blur
  2
  "\"(list 'eval '(app (-> blur <-) lp) (menv '((□? (a n)))))\""
  3
  ((0 0 0)))
'(blur 2 "\"(list 'eval '(top) (menv '()))\"" 48 ((0 0 0)))
'(blur 2 "\"(list 'eval '(app (-> #t <-)) (menv '((□? (a n)))))\"" 2 ((0 0 0)))
'(blur
  2
  "\"(list 'eval '(app (-> lp <-) (app #f) 2) (menv '()))\""
  2
  ((0 0 0)))
'(blur
  2
  "\"(list 'eval '(app (-> <= <-) n 1) (menv '((□? (a n)))))\""
  2
  ((0 0 0)))
'(blur
  2
  "\"(list 'eval '(app - n (-> 1 <-)) (menv '((□? (a n)))))\""
  2
  ((0 0 0)))
'(blur
  2
  "\"(list 'eval '(app lp (app #f) (-> 2 <-)) (menv '()))\""
  1
  ((0 0 0)))
'(blur
  2
  "\"(list 'eval '(app blur (-> lp <-)) (menv '((□? (a n)))))\""
  3
  ((0 0 0)))
'(blur
  2
  "\"(list\n 'eval\n '(let* (r s) (-> (app not (app (app blur lp) s (app - n 1))) <-))\n (menv '((□? (a n)))))\""
  212
  ((8 8 0)))
'(blur
  2
  "\"(list 'eval '(app (-> (app blur id) <-) (app #t)) (menv '((□? (a n)))))\""
  12
  ((0 0 0)))
'(blur
  2
  "\"(list\n 'eval\n '(let* (r (-> s = (app (app blur id) (app #f)) <-)) bod)\n (menv '((□? (a n)))))\""
  27
  ((0 0 0)))
'(blur
  2
  "\"(list\n 'eval\n '(λ (a n)\n    (->\n     (match\n      (app <= n 1)\n      ((#t) (app id a))\n      ((#f)\n       (let* ((r (app (app blur id) (app #t)))\n              (s (app (app blur id) (app #f))))\n         (app not (app (app blur lp) s (app - n 1))))))\n     <-))\n (menv '((□? (a n)))))\""
  239
  ((12 12 0)))
'(blur
  2
  "\"(list 'eval '(λ (x) (-> x <-)) (menv '((□? (x)))))\""
  149
  ((5 5 0)))
'(blur
  2
  "\"(list\n 'eval\n '(let* ((-> r = (app (app blur id) (app #t)) <-) s) bod)\n (menv '((□? (a n)))))\""
  27
  ((0 0 0)))
'(blur
  2
  "\"(list 'eval '(app (-> (app blur id) <-) (app #f)) (menv '((□? (a n)))))\""
  12
  ((0 0 0)))
'(blur
  2
  "\"(list 'eval '(app <= (-> n <-) 1) (menv '((□? (a n)))))\""
  66
  ((1 1 0)))
'(blur
  2
  "\"(list 'eval '(app (-> blur <-) id) (menv '((□? (a n)))))\""
  3
  ((0 0 0)))
'(blur
  2
  "\"(list 'eval '(app (app blur id) (-> (app #t) <-)) (menv '((□? (a n)))))\""
  3
  ((0 0 0)))
'(blur
  2
  "\"(list 'eval '(app (app blur lp) (-> s <-) (app - n 1)) (menv '((□? (a n)))))\""
  28
  ((0 0 0)))
'(blur
  2
  "\"(list 'eval '(app id (-> a <-)) (menv '((□? (a n)))))\""
  129
  ((4 4 0)))
'(blur
  2
  "\"(list 'eval '(app (-> id <-) a) (menv '((□? (a n)))))\""
  3
  ((0 0 0)))
'(blur
  2
  "\"(list\n 'eval\n '(match\n   (app <= n 1)\n   (-> (#t) (app id a) <-)\n   ((#f)\n    (let* ((r (app (app blur id) (app #t))) (s (app (app blur id) (app #f))))\n      (app not (app (app blur lp) s (app - n 1))))))\n (menv '((□? (a n)))))\""
  143
  ((5 5 0)))
'(blur
  2
  "\"(list 'eval '(letrec (id (-> blur = (λ (y) y) <-) lp) bod) (menv '()))\""
  1
  ((0 0 0)))
'(blur
  2
  "\"(list\n 'eval\n '(app (-> not <-) (app (app blur lp) s (app - n 1)))\n (menv '((□? (a n)))))\""
  2
  ((0 0 0)))
'(blur
  2
  "\"(list 'eval '(letrec ((-> id = (λ (x) x) <-) blur lp) bod) (menv '()))\""
  1
  ((0 0 0)))
'(blur
  2
  "\"(list 'eval '(app lp (-> (app #f) <-) 2) (menv '()))\""
  2
  ((0 0 0)))
'(blur
  2
  "\"(list\n 'eval\n '(match\n   (app <= n 1)\n   ((#t) (app id a))\n   (->\n    (#f)\n    (let* ((r (app (app blur id) (app #t))) (s (app (app blur id) (app #f))))\n      (app not (app (app blur lp) s (app - n 1))))\n    <-))\n (menv '((□? (a n)))))\""
  214
  ((9 9 0)))
'(blur 2 "\"(list 'eval '(app (-> #f <-)) (menv '((□? (a n)))))\"" 2 ((0 0 0)))
'(blur 2 "\"(list 'eval '(λ (y) (-> y <-)) (menv '((□? (y)))))\"" 18 ((0 0 0)))
'(blur
  2
  "\"(list 'eval '(app blur (-> id <-)) (menv '((□? (a n)))))\""
  3
  ((0 0 0)))
'(blur
  2
  "\"(list\n 'eval\n '(match\n   (-> (app <= n 1) <-)\n   ((#t) (app id a))\n   ((#f)\n    (let* ((r (app (app blur id) (app #t))) (s (app (app blur id) (app #f))))\n      (app not (app (app blur lp) s (app - n 1))))))\n (menv '((□? (a n)))))\""
  81
  ((2 2 0)))
'(cpstak
  2
  "\"(list\n 'eval\n '(app - (-> y <-) 1)\n (menv '((□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  2
  "\"(list\n 'eval\n '(app tak (app - z 1) x y (-> (λ (v3) (app tak v1 v2 v3 k)) <-))\n (menv '((□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  5
  ((0 0 0)))
'(cpstak
  2
  "\"(list\n 'eval\n '(app tak (-> v1 <-) v2 v3 k)\n (menv '((□? (v3)) (□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  2
  "\"(list\n 'eval\n '(app - y (-> 1 <-))\n (menv '((□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  4
  ((0 0 0)))
'(cpstak
  2
  "\"(list\n 'eval\n '(app (-> - <-) z 1)\n (menv '((□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  5
  ((0 0 0)))
'(cpstak
  2
  "\"(list\n 'eval\n '(match\n   (-> (app not (app < y x)) <-)\n   ((#t) (app k z))\n   ((#f)\n    (app\n     tak\n     (app - x 1)\n     y\n     z\n     (λ (v1)\n       (app\n        tak\n        (app - y 1)\n        z\n        x\n        (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))))))\n (menv '((□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  2
  "\"(list\n 'eval\n '(app (-> tak <-) v1 v2 v3 k)\n (menv '((□? (v3)) (□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  7
  ((0 0 0)))
'(cpstak
  2
  "\"(list 'eval '(letrec (cpstak) (-> (app cpstak 32 15 8) <-)) (menv '()))\""
  63
  ((0 0 0)))
'(cpstak
  2
  "\"(list\n 'eval\n '(app tak v1 v2 v3 (-> k <-))\n (menv '((□? (v3)) (□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  131
  ((6 6 0)))
'(cpstak
  2
  "\"(list\n 'eval\n '(app\n   (-> tak <-)\n   (app - y 1)\n   z\n   x\n   (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))\n (menv '((□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  5
  ((0 0 0)))
'(cpstak
  2
  "\"(list 'eval '(app < y (-> x <-)) (menv '((□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  2
  "\"(list\n 'eval\n '(app\n   tak\n   (app - y 1)\n   (-> z <-)\n   x\n   (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))\n (menv '((□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  2
  "\"(list 'eval '(λ (a) (-> a <-)) (menv '((□? (a)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  2
  "\"(list\n 'eval\n '(app\n   tak\n   (-> (app - y 1) <-)\n   z\n   x\n   (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))\n (menv '((□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  2
  "\"(list\n 'eval\n '(app tak (-> (app - z 1) <-) x y (λ (v3) (app tak v1 v2 v3 k)))\n (menv '((□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  2
  "\"(list 'eval '(app - x (-> 1 <-)) (menv '((□? (x y z k)) (□? (x y z)))))\""
  3
  ((0 0 0)))
'(cpstak
  2
  "\"(list\n 'eval\n '(app\n   tak\n   (app - y 1)\n   z\n   x\n   (-> (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))) <-))\n (menv '((□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  4
  ((0 0 0)))
'(cpstak
  2
  "\"(list 'eval '(app (-> k <-) z) (menv '((□? (x y z k)) (□? (x y z)))))\""
  142
  ((9 9 0)))
'(cpstak
  2
  "\"(list 'eval '(app cpstak (-> 32 <-) 15 8) (menv '()))\""
  1
  ((0 0 0)))
'(cpstak
  2
  "\"(list\n 'eval\n '(app\n   tak\n   (-> (app - x 1) <-)\n   y\n   z\n   (λ (v1)\n     (app\n      tak\n      (app - y 1)\n      z\n      x\n      (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))))\n (menv '((□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  2
  "\"(list 'eval '(app < (-> y <-) x) (menv '((□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  2
  "\"(list 'eval '(app - (-> x <-) 1) (menv '((□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  2
  "\"(list\n 'eval\n '(letrec ((->\n            cpstak\n            =\n            (λ (x y z)\n              (letrec ((tak\n                        (λ (x y z k)\n                          (match\n                           (app not (app < y x))\n                           ((#t) (app k z))\n                           ((#f)\n                            (app\n                             tak\n                             (app - x 1)\n                             y\n                             z\n                             (λ (v1)\n                               (app\n                                tak\n                                (app - y 1)\n                                z\n                                x\n                                (λ (v2)\n                                  (app\n                                   tak\n                                   (app - z 1)\n                                   x\n                                   y\n                                   (λ (v3) (app tak v1 v2 v3 k))))))))))))\n                (app tak x y z (λ (a) a))))\n            <-))\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(cpstak
  2
  "\"(list 'eval '(app (-> - <-) x 1) (menv '((□? (x y z k)) (□? (x y z)))))\""
  3
  ((0 0 0)))
'(cpstak
  2
  "\"(list\n 'eval\n '(app (-> tak <-) (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))\n (menv '((□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  6
  ((0 0 0)))
'(cpstak
  2
  "\"(list 'eval '(app tak (-> x <-) y z (λ (a) a)) (menv '((□? (x y z)))))\""
  6
  ((0 0 0)))
'(cpstak
  2
  "\"(list\n 'eval\n '(app tak v1 v2 (-> v3 <-) k)\n (menv '((□? (v3)) (□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  2
  "\"(list\n 'eval\n '(letrec ((->\n            tak\n            =\n            (λ (x y z k)\n              (match\n               (app not (app < y x))\n               ((#t) (app k z))\n               ((#f)\n                (app\n                 tak\n                 (app - x 1)\n                 y\n                 z\n                 (λ (v1)\n                   (app\n                    tak\n                    (app - y 1)\n                    z\n                    x\n                    (λ (v2)\n                      (app\n                       tak\n                       (app - z 1)\n                       x\n                       y\n                       (λ (v3) (app tak v1 v2 v3 k))))))))))\n            <-))\n    bod)\n (menv '((□? (x y z)))))\""
  2
  ((0 0 0)))
'(cpstak
  2
  "\"(list\n 'eval\n '(app tak (app - z 1) (-> x <-) y (λ (v3) (app tak v1 v2 v3 k)))\n (menv '((□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  2
  "\"(list\n 'eval\n '(λ (v3) (-> (app tak v1 v2 v3 k) <-))\n (menv '((□? (v3)) (□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  2
  "\"(list 'eval '(app k (-> z <-)) (menv '((□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  2
  "\"(list 'eval '(app tak x y (-> z <-) (λ (a) a)) (menv '((□? (x y z)))))\""
  6
  ((0 0 0)))
'(cpstak
  2
  "\"(list 'eval '(app cpstak 32 (-> 15 <-) 8) (menv '()))\""
  1
  ((0 0 0)))
'(cpstak
  2
  "\"(list\n 'eval\n '(λ (v1)\n    (->\n     (app\n      tak\n      (app - y 1)\n      z\n      x\n      (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))\n     <-))\n (menv '((□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  2
  "\"(list\n 'eval\n '(app tak v1 (-> v2 <-) v3 k)\n (menv '((□? (v3)) (□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  2
  "\"(list\n 'eval\n '(match\n   (app not (app < y x))\n   (-> (#t) (app k z) <-)\n   ((#f)\n    (app\n     tak\n     (app - x 1)\n     y\n     z\n     (λ (v1)\n       (app\n        tak\n        (app - y 1)\n        z\n        x\n        (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))))))\n (menv '((□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  2
  "\"(list\n 'eval\n '(app\n   tak\n   (app - x 1)\n   y\n   (-> z <-)\n   (λ (v1)\n     (app\n      tak\n      (app - y 1)\n      z\n      x\n      (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))))\n (menv '((□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  2
  "\"(list 'eval '(app (-> cpstak <-) 32 15 8) (menv '()))\""
  2
  ((0 0 0)))
'(cpstak
  2
  "\"(list\n 'eval\n '(letrec (tak) (-> (app tak x y z (λ (a) a)) <-))\n (menv '((□? (x y z)))))\""
  160
  ((6 6 0)))
'(cpstak
  2
  "\"(list\n 'eval\n '(app\n   tak\n   (app - y 1)\n   z\n   (-> x <-)\n   (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))\n (menv '((□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  2
  "\"(list\n 'eval\n '(λ (x y z)\n    (->\n     (letrec ((tak\n               (λ (x y z k)\n                 (match\n                  (app not (app < y x))\n                  ((#t) (app k z))\n                  ((#f)\n                   (app\n                    tak\n                    (app - x 1)\n                    y\n                    z\n                    (λ (v1)\n                      (app\n                       tak\n                       (app - y 1)\n                       z\n                       x\n                       (λ (v2)\n                         (app\n                          tak\n                          (app - z 1)\n                          x\n                          y\n                          (λ (v3) (app tak v1 v2 v3 k))))))))))))\n       (app tak x y z (λ (a) a)))\n     <-))\n (menv '((□? (x y z)))))\""
  162
  ((5 5 0)))
'(cpstak
  2
  "\"(list 'eval '(app tak x y z (-> (λ (a) a) <-)) (menv '((□? (x y z)))))\""
  2
  ((0 0 0)))
'(cpstak
  2
  "\"(list 'eval '(app (-> tak <-) x y z (λ (a) a)) (menv '((□? (x y z)))))\""
  3
  ((0 0 0)))
'(cpstak
  2
  "\"(list\n 'eval\n '(match\n   (app not (app < y x))\n   ((#t) (app k z))\n   (->\n    (#f)\n    (app\n     tak\n     (app - x 1)\n     y\n     z\n     (λ (v1)\n       (app\n        tak\n        (app - y 1)\n        z\n        x\n        (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))))\n    <-))\n (menv '((□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  2
  "\"(list\n 'eval\n '(λ (v2) (-> (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k))) <-))\n (menv '((□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  2
  "\"(list 'eval '(app cpstak 32 15 (-> 8 <-)) (menv '()))\""
  1
  ((0 0 0)))
'(cpstak
  2
  "\"(list\n 'eval\n '(app\n   tak\n   (app - x 1)\n   y\n   z\n   (->\n    (λ (v1)\n      (app\n       tak\n       (app - y 1)\n       z\n       x\n       (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k))))))\n    <-))\n (menv '((□? (x y z k)) (□? (x y z)))))\""
  3
  ((0 0 0)))
'(cpstak
  2
  "\"(list\n 'eval\n '(app - (-> z <-) 1)\n (menv '((□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  2
  "\"(list\n 'eval\n '(λ (x y z k)\n    (->\n     (match\n      (app not (app < y x))\n      ((#t) (app k z))\n      ((#f)\n       (app\n        tak\n        (app - x 1)\n        y\n        z\n        (λ (v1)\n          (app\n           tak\n           (app - y 1)\n           z\n           x\n           (λ (v2)\n             (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))))))\n     <-))\n (menv '((□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  2
  "\"(list 'eval '(app (-> < <-) y x) (menv '((□? (x y z k)) (□? (x y z)))))\""
  3
  ((0 0 0)))
'(cpstak
  2
  "\"(list\n 'eval\n '(app (-> - <-) y 1)\n (menv '((□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  4
  ((0 0 0)))
'(cpstak
  2
  "\"(list\n 'eval\n '(app - z (-> 1 <-))\n (menv '((□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  5
  ((0 0 0)))
'(cpstak
  2
  "\"(list\n 'eval\n '(app\n   tak\n   (app - x 1)\n   (-> y <-)\n   z\n   (λ (v1)\n     (app\n      tak\n      (app - y 1)\n      z\n      x\n      (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))))\n (menv '((□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak 2 "\"(list 'eval '(top) (menv '()))\"" 64 ((0 0 0)))
'(cpstak
  2
  "\"(list\n 'eval\n '(app not (-> (app < y x) <-))\n (menv '((□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  2
  "\"(list 'eval '(app tak x (-> y <-) z (λ (a) a)) (menv '((□? (x y z)))))\""
  6
  ((0 0 0)))
'(cpstak
  2
  "\"(list\n 'eval\n '(app (-> not <-) (app < y x))\n (menv '((□? (x y z k)) (□? (x y z)))))\""
  3
  ((0 0 0)))
'(cpstak
  2
  "\"(list\n 'eval\n '(app tak (app - z 1) x (-> y <-) (λ (v3) (app tak v1 v2 v3 k)))\n (menv '((□? (v2)) (□? (v1)) (□? (x y z k)) (□? (x y z)))))\""
  0
  (#f))
'(cpstak
  2
  "\"(list\n 'eval\n '(app\n   (-> tak <-)\n   (app - x 1)\n   y\n   z\n   (λ (v1)\n     (app\n      tak\n      (app - y 1)\n      z\n      x\n      (λ (v2) (app tak (app - z 1) x y (λ (v3) (app tak v1 v2 v3 k)))))))\n (menv '((□? (x y z k)) (□? (x y z)))))\""
  4
  ((0 0 0)))
'(kcfa-2
  2
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2)) <-) (λ (y1 y2) y1))\n (menv '((□? (x2)) (□? (x1)))))\""
  3
  ((0 0 0)))
'(kcfa-2
  2
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f)))) <-)\n   (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n (menv '((□? (x1)))))\""
  2
  ((0 0 0)))
'(kcfa-2
  2
  "\"(list 'eval '(app (-> z <-) x1 x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(kcfa-2
  2
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 (app #t)))) (app f1 (app #f)))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))))\n (menv '()))\""
  1
  ((0 0 0)))
'(kcfa-2
  2
  "\"(list\n 'eval\n '(let ((-> _ = (app f2 (app #t)) <-)) bod)\n (menv '((□? (f2)) (□? (x1)))))\""
  108
  ((3 3 0)))
'(kcfa-2 2 "\"(list 'eval '(top) (menv '()))\"" 29 ((0 0 0)))
'(kcfa-2
  2
  "\"(list 'eval '(app f2 (-> (app #f) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  4
  ((0 0 0)))
'(kcfa-2
  2
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n   (-> (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))) <-))\n (menv '((□? (x1)))))\""
  2
  ((0 0 0)))
'(kcfa-2
  2
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))\""
  3
  ((0 0 0)))
'(kcfa-2
  2
  "\"(list 'eval '(app f2 (-> (app #t) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  4
  ((0 0 0)))
'(kcfa-2
  2
  "\"(list 'eval '(let (_) (-> (app f1 (app #f)) <-)) (menv '((□? (f1)))))\""
  48
  ((0 0 0)))
'(kcfa-2
  2
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))\""
  3
  ((0 0 0)))
'(kcfa-2
  2
  "\"(list 'eval '(app f1 (-> (app #t) <-)) (menv '((□? (f1)))))\""
  3
  ((0 0 0)))
'(kcfa-2
  2
  "\"(list 'eval '(let (_) (-> (app f2 (app #f)) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  108
  ((3 3 0)))
'(kcfa-2
  2
  "\"(list 'eval '(app (-> f1 <-) (app #t)) (menv '((□? (f1)))))\""
  5
  ((0 0 0)))
'(kcfa-2
  2
  "\"(list 'eval '(app f1 (-> (app #f) <-)) (menv '((□? (f1)))))\""
  3
  ((0 0 0)))
'(kcfa-2
  2
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2)) (-> (λ (y1 y2) y1) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  3
  ((0 0 0)))
'(kcfa-2
  2
  "\"(list\n 'eval\n '(λ (x2) (-> (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  45
  ((0 0 0)))
'(kcfa-2
  2
  "\"(list\n 'eval\n '(λ (z) (-> (app z x1 x2) <-))\n (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  57
  ((1 1 0)))
'(kcfa-2
  2
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 (app #t)))) (app f2 (app #f))) <-))\n (menv '((□? (f2)) (□? (x1)))))\""
  120
  ((3 3 0)))
'(kcfa-2
  2
  "\"(list 'eval '(let ((-> _ = (app f1 (app #t)) <-)) bod) (menv '((□? (f1)))))\""
  48
  ((0 0 0)))
'(kcfa-2
  2
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f1)))))\""
  2
  ((0 0 0)))
'(kcfa-2
  2
  "\"(list 'eval '(app z x1 (-> x2 <-)) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  17
  ((0 0 0)))
'(kcfa-2
  2
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n      (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1))))\n     <-))\n (menv '((□? (x1)))))\""
  81
  ((1 1 0)))
'(kcfa-2
  2
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 (app #t)))) (app f1 (app #f))))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n       (λ (x2) (app (λ (z) (app z x1 x2)) (λ (y1 y2) y1)))))\n    <-))\n (menv '()))\""
  1
  ((0 0 0)))
'(kcfa-2
  2
  "\"(list 'eval '(app (-> f1 <-) (app #f)) (menv '((□? (f1)))))\""
  5
  ((0 0 0)))
'(kcfa-2
  2
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f1)))))\""
  2
  ((0 0 0)))
'(kcfa-2
  2
  "\"(list 'eval '(app (-> f2 <-) (app #f)) (menv '((□? (f2)) (□? (x1)))))\""
  7
  ((0 0 0)))
'(kcfa-2
  2
  "\"(list 'eval '(app (-> f2 <-) (app #t)) (menv '((□? (f2)) (□? (x1)))))\""
  7
  ((0 0 0)))
'(kcfa-2
  2
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 (app #t)))) (app f1 (app #f))) <-))\n (menv '((□? (f1)))))\""
  50
  ((0 0 0)))
'(kcfa-2
  2
  "\"(list 'eval '(λ (y1 y2) (-> y1 <-)) (menv '((□? (y1 y2)) (□? (x2)) (□? (x1)))))\""
  36
  ((0 0 0)))
'(kcfa-2
  2
  "\"(list 'eval '(app z (-> x1 <-) x2) (menv '((□? (z)) (□? (x2)) (□? (x1)))))\""
  18
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f3)) (□? (x2)) (□? (x1)))))\""
  4
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list 'eval '(app (-> f1 <-) (app #t)) (menv '((□? (f1)))))\""
  5
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list\n 'eval\n '(app (-> z <-) x1 x2 x3)\n (menv '((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  9
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list\n 'eval\n '(app (λ (z) (app z x1 x2 x3)) (-> (λ (y1 y2 y3) y1) <-))\n (menv '((□? (x3)) (□? (x2)) (□? (x1)))))\""
  4
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list\n 'eval\n '(app\n   (-> (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f)))) <-)\n   (λ (x2)\n     (app\n      (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n      (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))))))\n (menv '((□? (x1)))))\""
  2
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list 'eval '(let ((-> _ = (app f1 (app #t)) <-)) bod) (menv '((□? (f1)))))\""
  62
  ((1 1 0)))
'(kcfa-3
  2
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f2)) (□? (x1)))))\""
  3
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list 'eval '(app f3 (-> (app #t) <-)) (menv '((□? (f3)) (□? (x2)) (□? (x1)))))\""
  5
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list 'eval '(app f1 (-> (app #f) <-)) (menv '((□? (f1)))))\""
  3
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list\n 'eval\n '(let ((-> _ = (app f3 (app #t)) <-)) bod)\n (menv '((□? (f3)) (□? (x2)) (□? (x1)))))\""
  99
  ((2 2 0)))
'(kcfa-3
  2
  "\"(list 'eval '(let (_) (-> (app f1 (app #f)) <-)) (menv '((□? (f1)))))\""
  62
  ((1 1 0)))
'(kcfa-3
  2
  "\"(list 'eval '(app f2 (-> (app #t) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  4
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list 'eval '(app (-> f3 <-) (app #t)) (menv '((□? (f3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (app\n      (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n      (λ (x2)\n        (app\n         (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n         (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))))))\n     <-))\n (menv '((□? (x1)))))\""
  102
  ((2 2 0)))
'(kcfa-3
  2
  "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f1)))))\""
  2
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f2)) (□? (x1)))))\""
  3
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list 'eval '(let (_) (-> (app f2 (app #f)) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  150
  ((7 7 0)))
'(kcfa-3
  2
  "\"(list\n 'eval\n '(app\n   (-> (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f)))) <-)\n   (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))))\n (menv '((□? (x2)) (□? (x1)))))\""
  3
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list 'eval '(app (-> f1 <-) (app #f)) (menv '((□? (f1)))))\""
  5
  ((0 0 0)))
'(kcfa-3 2 "\"(list 'eval '(top) (menv '()))\"" 36 ((0 0 0)))
'(kcfa-3
  2
  "\"(list\n 'eval\n '(app (-> (λ (z) (app z x1 x2 x3)) <-) (λ (y1 y2 y3) y1))\n (menv '((□? (x3)) (□? (x2)) (□? (x1)))))\""
  4
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list\n 'eval\n '(app z x1 (-> x2 <-) x3)\n (menv '((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  20
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list 'eval '(app (-> f3 <-) (app #f)) (menv '((□? (f3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list\n 'eval\n '(λ (f1) (-> (let ((_ (app f1 (app #t)))) (app f1 (app #f))) <-))\n (menv '((□? (f1)))))\""
  64
  ((1 1 0)))
'(kcfa-3
  2
  "\"(list\n 'eval\n '(app\n   (λ (f1) (let ((_ (app f1 (app #t)))) (app f1 (app #f))))\n   (->\n    (λ (x1)\n      (app\n       (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n       (λ (x2)\n         (app\n          (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n          (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1)))))))\n    <-))\n (menv '()))\""
  1
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list 'eval '(app f3 (-> (app #f) <-)) (menv '((□? (f3)) (□? (x2)) (□? (x1)))))\""
  5
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list\n 'eval\n '(λ (x3) (-> (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1)) <-))\n (menv '((□? (x3)) (□? (x2)) (□? (x1)))))\""
  48
  ((1 1 0)))
'(kcfa-3
  2
  "\"(list\n 'eval\n '(app\n   (-> (λ (f1) (let ((_ (app f1 (app #t)))) (app f1 (app #f)))) <-)\n   (λ (x1)\n     (app\n      (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n      (λ (x2)\n        (app\n         (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n         (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))))))))\n (menv '()))\""
  1
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list 'eval '(app f2 (-> (app #f) <-)) (menv '((□? (f2)) (□? (x1)))))\""
  4
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f1)))))\""
  2
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list 'eval '(app (-> f2 <-) (app #t)) (menv '((□? (f2)) (□? (x1)))))\""
  7
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list\n 'eval\n '(app z (-> x1 <-) x2 x3)\n (menv '((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  21
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list\n 'eval\n '(app z x1 x2 (-> x3 <-))\n (menv '((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  18
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list 'eval '(app (-> f2 <-) (app #f)) (menv '((□? (f2)) (□? (x1)))))\""
  7
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list\n 'eval\n '(let ((-> _ = (app f2 (app #t)) <-)) bod)\n (menv '((□? (f2)) (□? (x1)))))\""
  150
  ((7 7 0)))
'(kcfa-3
  2
  "\"(list\n 'eval\n '(λ (x2)\n    (->\n     (app\n      (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n      (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))))\n     <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  66
  ((1 1 0)))
'(kcfa-3
  2
  "\"(list\n 'eval\n '(λ (f2) (-> (let ((_ (app f2 (app #t)))) (app f2 (app #f))) <-))\n (menv '((□? (f2)) (□? (x1)))))\""
  162
  ((7 7 0)))
'(kcfa-3
  2
  "\"(list\n 'eval\n '(let (_) (-> (app f3 (app #f)) <-))\n (menv '((□? (f3)) (□? (x2)) (□? (x1)))))\""
  99
  ((3 3 0)))
'(kcfa-3
  2
  "\"(list\n 'eval\n '(app\n   (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n   (-> (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1))) <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  3
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list\n 'eval\n '(λ (f3) (-> (let ((_ (app f3 (app #t)))) (app f3 (app #f))) <-))\n (menv '((□? (f3)) (□? (x2)) (□? (x1)))))\""
  105
  ((3 3 0)))
'(kcfa-3
  2
  "\"(list\n 'eval\n '(λ (z) (-> (app z x1 x2 x3) <-))\n (menv '((□? (z)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  60
  ((1 1 0)))
'(kcfa-3
  2
  "\"(list\n 'eval\n '(app\n   (λ (f2) (let ((_ (app f2 (app #t)))) (app f2 (app #f))))\n   (->\n    (λ (x2)\n      (app\n       (λ (f3) (let ((_ (app f3 (app #t)))) (app f3 (app #f))))\n       (λ (x3) (app (λ (z) (app z x1 x2 x3)) (λ (y1 y2 y3) y1)))))\n    <-))\n (menv '((□? (x1)))))\""
  2
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f3)) (□? (x2)) (□? (x1)))))\""
  4
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list\n 'eval\n '(λ (y1 y2 y3) (-> y1 <-))\n (menv '((□? (y1 y2 y3)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  39
  ((0 0 0)))
'(kcfa-3
  2
  "\"(list 'eval '(app f1 (-> (app #t) <-)) (menv '((□? (f1)))))\""
  3
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app or (-> x1 <-) (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  33
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app p n1 n2 n3 (-> n4 <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  18
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app or (app not x2) (-> (app not x3) <-))\n (menv '((□? (x1 x2 x3 x4)))))\""
  34
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app or (-> (app not x2) <-) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  36
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app or (app f (app #t)) (-> (app f (app #f)) <-))\n (menv '((□? (f)))))\""
  109
  ((2 2 0)))
'(sat-1
  2
  "\"(list 'eval '(app not (-> x3 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  30
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app try (-> (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4)))) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app (-> or <-) x1 (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app sat-solve-4 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4)))))\""
  251
  ((16 16 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n1)\n     (app\n      try\n      (λ (n2) (app try (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4)))))))))\n (menv '((□? (p)))))\""
  3
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '((□? (f)))))\""
  121
  ((2 2 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app or (-> (app f (app #t)) <-) (app f (app #f)))\n (menv '((□? (f)))))\""
  109
  ((1 1 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app p n1 (-> n2 <-) n3 n4)\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  22
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 (app not x2) (app not x3))\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv '((□? (x1 x2 x3 x4)))))\""
  80
  ((3 3 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app or x1 (app not x2) (-> (app not x3) <-))\n (menv '((□? (x1 x2 x3 x4)))))\""
  34
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app\n   try\n   (-> (λ (n2) (app try (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4)))))) <-))\n (menv '((□? (n1)) (□? (p)))))\""
  3
  ((0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  32
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(λ (p)\n    (->\n     (app\n      try\n      (λ (n1)\n        (app\n         try\n         (λ (n2) (app try (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4)))))))))\n     <-))\n (menv '((□? (p)))))\""
  24
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app p (-> n1 <-) n2 n3 n4)\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  24
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(letrec (phi\n           (-> try = (λ (f) (app or (app f (app #t)) (app f (app #f)))) <-)\n           sat-solve-4)\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app (-> p <-) n1 n2 n3 n4)\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  15
  ((0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app or x1 (-> (app not x2) <-) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  36
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app (-> or <-) (app f (app #t)) (app f (app #f)))\n (menv '((□? (f)))))\""
  2
  ((0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app (-> sat-solve-4 <-) phi) (menv '()))\""
  2
  ((0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app (-> not <-) x3) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(λ (n3) (-> (app try (λ (n4) (app p n1 n2 n3 n4))) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  47
  ((0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '((□? (f)))))\""
  23
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n4) (app p n1 n2 n3 n4)))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(λ (n4) (-> (app p n1 n2 n3 n4) <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  869
  ((135 135 2)))
'(sat-1
  2
  "\"(list\n 'eval\n '(λ (x1 x2 x3 x4)\n    (->\n     (app\n      and\n      (app or x1 (app not x2) (app not x3))\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv '((□? (x1 x2 x3 x4)))))\""
  0
  (#f))
'(sat-1 2 "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  32
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n1)\n      (app\n       try\n       (λ (n2) (app try (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4))))))))\n    <-))\n (menv '((□? (p)))))\""
  2
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n2) (app try (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4)))))))\n (menv '((□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(letrec (phi try sat-solve-4) (-> (app sat-solve-4 phi) <-))\n (menv '()))\""
  19
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(letrec (phi\n           try\n           (->\n            sat-solve-4\n            =\n            (λ (p)\n              (app\n               try\n               (λ (n1)\n                 (app\n                  try\n                  (λ (n2)\n                    (app\n                     try\n                     (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4))))))))))\n            <-))\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(λ (n2) (-> (app try (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4))))) <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  24
  ((0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app (-> not <-) x3) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '((□? (f)))))\""
  23
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app p n1 n2 (-> n3 <-) n4)\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  20
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(letrec ((->\n            phi\n            =\n            (λ (x1 x2 x3 x4)\n              (app\n               and\n               (app or x1 (app not x2) (app not x3))\n               (app or (app not x2) (app not x3))\n               (app or x4 x2)))\n            <-)\n           try\n           sat-solve-4)\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app (-> or <-) x4 x2) (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app not (-> x3 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  30
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app (-> or <-) (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4)))))\""
  2
  ((0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app or (-> x4 <-) x2) (menv '((□? (x1 x2 x3 x4)))))\""
  30
  ((0 0 0)))
'(sat-1 2 "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-1 2 "\"(list 'eval '(top) (menv '()))\"" 20 ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app try (-> (λ (n4) (app p n1 n2 n3 n4)) <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4)))))\""
  106
  ((3 3 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4)))))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(sat-1
  2
  "\"(list\n 'eval\n '(λ (n1)\n    (->\n     (app\n      try\n      (λ (n2) (app try (λ (n3) (app try (λ (n4) (app p n1 n2 n3 n4)))))))\n     <-))\n (menv '((□? (n1)) (□? (p)))))\""
  24
  ((0 0 0)))
'(sat-1
  2
  "\"(list 'eval '(app or x4 (-> x2 <-)) (menv '((□? (x1 x2 x3 x4)))))\""
  32
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> (app (app (app (app (app p n1) n2) n3) n4) n5) <-) n6)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  41
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (-> x1 <-) (app not x2) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  54
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or x1 (-> x2 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  72
  ((1 1 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(letrec (phi\n           try\n           (->\n            sat-solve-7\n            =\n            (λ (p)\n              (app\n               try\n               (λ (n1)\n                 (app\n                  try\n                  (λ (n2)\n                    (app\n                     try\n                     (λ (n3)\n                       (app\n                        try\n                        (λ (n4)\n                          (app\n                           try\n                           (λ (n5)\n                             (app\n                              try\n                              (λ (n6)\n                                (app\n                                 try\n                                 (λ (n7)\n                                   (app\n                                    (app\n                                     (app\n                                      (app (app (app (app p n1) n2) n3) n4)\n                                      n5)\n                                     n6)\n                                    n7))))))))))))))))\n            <-))\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n4)\n     (app\n      try\n      (λ (n5)\n        (app\n         try\n         (λ (n6)\n           (app\n            try\n            (λ (n7)\n              (app\n               (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n               n7)))))))))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (n5)\n    (->\n     (app\n      try\n      (λ (n6)\n        (app\n         try\n         (λ (n7)\n           (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7)))))\n     <-))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  30
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n7) (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7))\n    <-))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  8
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n1)\n      (app\n       try\n       (λ (n2)\n         (app\n          try\n          (λ (n3)\n            (app\n             try\n             (λ (n4)\n               (app\n                try\n                (λ (n5)\n                  (app\n                   try\n                   (λ (n6)\n                     (app\n                      try\n                      (λ (n7)\n                        (app\n                         (app\n                          (app (app (app (app (app p n1) n2) n3) n4) n5)\n                          n6)\n                         n7))))))))))))))\n    <-))\n (menv '((□? (p)))))\""
  2
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (x7)\n    (->\n     (app\n      and\n      (app or x1 x2)\n      (app or x1 (app not x2) (app not x3))\n      (app or x3 x4)\n      (app or (app not x4) x1)\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  0
  (#f))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (-> x4 <-) x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  150
  ((4 4 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (x4)\n    (->\n     (λ (x5)\n       (λ (x6)\n         (λ (x7)\n           (app\n            and\n            (app or x1 x2)\n            (app or x1 (app not x2) (app not x3))\n            (app or x3 x4)\n            (app or (app not x4) x1)\n            (app or (app not x2) (app not x3))\n            (app or x4 x2)))))\n     <-))\n (menv '((□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  5
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n3)\n     (app\n      try\n      (λ (n4)\n        (app\n         try\n         (λ (n5)\n           (app\n            try\n            (λ (n6)\n              (app\n               try\n               (λ (n7)\n                 (app\n                  (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                  n7)))))))))))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (app not x2) (-> (app not x3) <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  117
  ((3 3 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (n4)\n    (->\n     (app\n      try\n      (λ (n5)\n        (app\n         try\n         (λ (n6)\n           (app\n            try\n            (λ (n7)\n              (app\n               (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n               n7)))))))\n     <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  30
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or x3 (-> x4 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  150
  ((4 4 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or x4 (-> x2 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  72
  ((1 1 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  273
  ((41 41 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n2)\n     (app\n      try\n      (λ (n3)\n        (app\n         try\n         (λ (n4)\n           (app\n            try\n            (λ (n5)\n              (app\n               try\n               (λ (n6)\n                 (app\n                  try\n                  (λ (n7)\n                    (app\n                     (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                     n7)))))))))))))\n (menv '((□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> not <-) x4)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> or <-) (app f (app #t)) (app f (app #f)))\n (menv '((□? (f)))))\""
  2
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (app not x4) (-> x1 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  54
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> or <-) x3 x4)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> p <-) n1)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  21
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> or <-) (app not x4) x1)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> not <-) x3)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app p (-> n1 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  33
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (-> (app not x4) <-) x1)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  182
  ((9 9 0)))
'(sat-2
  2
  "\"(list 'eval '(app (-> sat-solve-7 <-) phi) (menv '()))\""
  2
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(letrec (phi\n           (-> try = (λ (f) (app or (app f (app #t)) (app f (app #f)))) <-)\n           sat-solve-7)\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> or <-) (app not x2) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (n1)\n    (->\n     (app\n      try\n      (λ (n2)\n        (app\n         try\n         (λ (n3)\n           (app\n            try\n            (λ (n4)\n              (app\n               try\n               (λ (n5)\n                 (app\n                  try\n                  (λ (n6)\n                    (app\n                     try\n                     (λ (n7)\n                       (app\n                        (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                        n7)))))))))))))\n     <-))\n (menv '((□? (n1)) (□? (p)))))\""
  30
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (app (app (app p n1) n2) n3) (-> n4 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  27
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (-> (app f (app #t)) <-) (app f (app #f)))\n (menv '((□? (f)))))\""
  208
  ((5 5 0)))
'(sat-2
  2
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> not <-) x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (-> (app not x2) <-) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  80
  ((1 1 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app not (-> x3 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  101
  ((2 2 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app not (-> x2 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  72
  ((1 1 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> (app p n1) <-) n2)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  25
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  272
  ((21 21 0)))
'(sat-2 2 "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> not <-) x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (x3)\n    (->\n     (λ (x4)\n       (λ (x5)\n         (λ (x6)\n           (λ (x7)\n             (app\n              and\n              (app or x1 x2)\n              (app or x1 (app not x2) (app not x3))\n              (app or x3 x4)\n              (app or (app not x4) x1)\n              (app or (app not x2) (app not x3))\n              (app or x4 x2))))))\n     <-))\n (menv '((□? (x3)) (□? (x2)) (□? (x1)))))\""
  4
  ((0 0 0)))
'(sat-2
  2
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '((□? (f)))))\""
  38
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> (app (app p n1) n2) <-) n3)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  29
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 x2) <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  167
  ((7 7 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (app (app p n1) n2) (-> n3 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  29
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or x1 (-> (app not x2) <-) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  80
  ((1 1 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '((□? (f)))))\""
  226
  ((6 6 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (x5)\n    (->\n     (λ (x6)\n       (λ (x7)\n         (app\n          and\n          (app or x1 x2)\n          (app or x1 (app not x2) (app not x3))\n          (app or x3 x4)\n          (app or (app not x4) x1)\n          (app or (app not x2) (app not x3))\n          (app or x4 x2))))\n     <-))\n (menv '((□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  6
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> or <-) x1 (app not x2) (app not x3))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (n3)\n    (->\n     (app\n      try\n      (λ (n4)\n        (app\n         try\n         (λ (n5)\n           (app\n            try\n            (λ (n6)\n              (app\n               try\n               (λ (n7)\n                 (app\n                  (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                  n7)))))))))\n     <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  30
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  514
  ((97 97 2)))
'(sat-2
  2
  "\"(list\n 'eval\n '(letrec (phi try sat-solve-7) (-> (app sat-solve-7 phi) <-))\n (menv '()))\""
  25
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> (app (app (app p n1) n2) n3) <-) n4)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  33
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (n6)\n    (->\n     (app\n      try\n      (λ (n7)\n        (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7)))\n     <-))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  77
  ((1 1 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (app (app (app (app p n1) n2) n3) n4) (-> n5 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  25
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (p)\n    (->\n     (app\n      try\n      (λ (n1)\n        (app\n         try\n         (λ (n2)\n           (app\n            try\n            (λ (n3)\n              (app\n               try\n               (λ (n4)\n                 (app\n                  try\n                  (λ (n5)\n                    (app\n                     try\n                     (λ (n6)\n                       (app\n                        try\n                        (λ (n7)\n                          (app\n                           (app\n                            (app (app (app (app (app p n1) n2) n3) n4) n5)\n                            n6)\n                           n7)))))))))))))))\n     <-))\n (menv '((□? (p)))))\""
  30
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (-> (app or (app not x4) x1) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  337
  ((43 43 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (app p n1) (-> n2 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  31
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app not (-> x3 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  101
  ((2 2 0)))
'(sat-2 2 "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-2
  2
  "\"(list 'eval '(app sat-solve-7 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (-> x1 <-) x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  54
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n5)\n     (app\n      try\n      (λ (n6)\n        (app\n         try\n         (λ (n7)\n           (app\n            (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n            n7)))))))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  7
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n3)\n      (app\n       try\n       (λ (n4)\n         (app\n          try\n          (λ (n5)\n            (app\n             try\n             (λ (n6)\n               (app\n                try\n                (λ (n7)\n                  (app\n                   (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                   n7))))))))))\n    <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or x3 x4) <-)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  282
  ((25 25 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) (-> n7 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  21
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n5)\n      (app\n       try\n       (λ (n6)\n         (app\n          try\n          (λ (n7)\n            (app\n             (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n             n7))))))\n    <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n6)\n     (app\n      try\n      (λ (n7)\n        (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7)))))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  8
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(letrec ((->\n            phi\n            =\n            (λ (x1)\n              (λ (x2)\n                (λ (x3)\n                  (λ (x4)\n                    (λ (x5)\n                      (λ (x6)\n                        (λ (x7)\n                          (app\n                           and\n                           (app or x1 x2)\n                           (app or x1 (app not x2) (app not x3))\n                           (app or x3 x4)\n                           (app or (app not x4) x1)\n                           (app or (app not x2) (app not x3))\n                           (app or x4 x2)))))))))\n            <-)\n           try\n           sat-solve-7)\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> or <-) x4 x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> (app (app (app (app p n1) n2) n3) n4) <-) n5)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  37
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (n7)\n    (-> (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7) <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  0
  (#f))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (app f (app #t)) (-> (app f (app #f)) <-))\n (menv '((□? (f)))))\""
  208
  ((5 5 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> not <-) x3)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2 2 "\"(list 'eval '(top) (menv '()))\"" 26 ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app not (-> x4 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  150
  ((4 4 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n4)\n      (app\n       try\n       (λ (n5)\n         (app\n          try\n          (λ (n6)\n            (app\n             try\n             (λ (n7)\n               (app\n                (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                n7))))))))\n    <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n7) (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7)))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  9
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> or <-) x1 x2)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (x2)\n    (->\n     (λ (x3)\n       (λ (x4)\n         (λ (x5)\n           (λ (x6)\n             (λ (x7)\n               (app\n                and\n                (app or x1 x2)\n                (app or x1 (app not x2) (app not x3))\n                (app or x3 x4)\n                (app or (app not x4) x1)\n                (app or (app not x2) (app not x3))\n                (app or x4 x2)))))))\n     <-))\n (menv '((□? (x2)) (□? (x1)))))\""
  3
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (x6)\n    (->\n     (λ (x7)\n       (app\n        and\n        (app or x1 x2)\n        (app or x1 (app not x2) (app not x3))\n        (app or x3 x4)\n        (app or (app not x4) x1)\n        (app or (app not x2) (app not x3))\n        (app or x4 x2)))\n     <-))\n (menv '((□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  7
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or (-> x3 <-) x4)\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  101
  ((2 2 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app or x1 (app not x2) (-> (app not x3) <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  117
  ((3 3 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n6)\n      (app\n       try\n       (λ (n7)\n         (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7))))\n    <-))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  7
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  8
  ((0 0 0)))
'(sat-2
  2
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (app (app (app (app (app p n1) n2) n3) n4) n5) (-> n6 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  23
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n2)\n      (app\n       try\n       (λ (n3)\n         (app\n          try\n          (λ (n4)\n            (app\n             try\n             (λ (n5)\n               (app\n                try\n                (λ (n6)\n                  (app\n                   try\n                   (λ (n7)\n                     (app\n                      (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                      n7))))))))))))\n    <-))\n (menv '((□? (n1)) (□? (p)))))\""
  3
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (n2)\n    (->\n     (app\n      try\n      (λ (n3)\n        (app\n         try\n         (λ (n4)\n           (app\n            try\n            (λ (n5)\n              (app\n               try\n               (λ (n6)\n                 (app\n                  try\n                  (λ (n7)\n                    (app\n                     (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                     n7)))))))))))\n     <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  30
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(λ (x1)\n    (->\n     (λ (x2)\n       (λ (x3)\n         (λ (x4)\n           (λ (x5)\n             (λ (x6)\n               (λ (x7)\n                 (app\n                  and\n                  (app or x1 x2)\n                  (app or x1 (app not x2) (app not x3))\n                  (app or x3 x4)\n                  (app or (app not x4) x1)\n                  (app or (app not x2) (app not x3))\n                  (app or x4 x2))))))))\n     <-))\n (menv '((□? (x1)))))\""
  2
  ((0 0 0)))
'(sat-2
  2
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '((□? (f)))))\""
  38
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app not (-> x2 <-))\n (menv\n  '((□? (x7)) (□? (x6)) (□? (x5)) (□? (x4)) (□? (x3)) (□? (x2)) (□? (x1)))))\""
  72
  ((1 1 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n1)\n     (app\n      try\n      (λ (n2)\n        (app\n         try\n         (λ (n3)\n           (app\n            try\n            (λ (n4)\n              (app\n               try\n               (λ (n5)\n                 (app\n                  try\n                  (λ (n6)\n                    (app\n                     try\n                     (λ (n7)\n                       (app\n                        (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6)\n                        n7)))))))))))))))\n (menv '((□? (p)))))\""
  3
  ((0 0 0)))
'(sat-2
  2
  "\"(list\n 'eval\n '(app (-> (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) <-) n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  45
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(letrec ((-> println = (λ (s) (let ((_ (app display s))) newline)) <-)\n           phi\n           try\n           sat-solve-7)\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app display (-> s <-)) (menv '((□? (s)))))\""
  8
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app or (-> x1 <-) x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  42
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app or (app f (app #t)) (-> (app f (app #f)) <-))\n (menv '((□? (f)))))\""
  184
  ((4 4 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(λ (p)\n    (->\n     (app\n      try\n      (λ (n1)\n        (app\n         try\n         (λ (n2)\n           (app\n            try\n            (λ (n3)\n              (app\n               try\n               (λ (n4)\n                 (app\n                  try\n                  (λ (n5)\n                    (app\n                     try\n                     (λ (n6)\n                       (app\n                        try\n                        (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))))))))\n     <-))\n (menv '((□? (p)))))\""
  32
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app (-> or <-) (app f (app #t)) (app f (app #f)))\n (menv '((□? (f)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app or (-> (app not x2) <-) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  45
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app or x1 (-> (app not x2) <-) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  45
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n2)\n     (app\n      try\n      (λ (n3)\n        (app\n         try\n         (λ (n4)\n           (app\n            try\n            (λ (n5)\n              (app\n               try\n               (λ (n6)\n                 (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))))))\n (menv '((□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(letrec (println\n           (->\n            phi\n            =\n            (λ (x1 x2 x3 x4 x5 x6 x7)\n              (app\n               and\n               (app or x1 x2)\n               (app or x1 (app not x2) (app not x3))\n               (app or x3 x4)\n               (app or (app not x4) x1)\n               (app or (app not x2) (app not x3))\n               (app or x4 x2)))\n            <-)\n           try\n           sat-solve-7)\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app or (-> x1 <-) (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  42
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app or (-> x4 <-) x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  37
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app (-> or <-) (app not x4) x1)\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n3)\n      (app\n       try\n       (λ (n4)\n         (app\n          try\n          (λ (n5)\n            (app\n             try\n             (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7))))))))))\n    <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  4
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app p n1 n2 n3 (-> n4 <-) n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  27
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n1)\n     (app\n      try\n      (λ (n2)\n        (app\n         try\n         (λ (n3)\n           (app\n            try\n            (λ (n4)\n              (app\n               try\n               (λ (n5)\n                 (app\n                  try\n                  (λ (n6)\n                    (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))))))))\n (menv '((□? (p)))))\""
  3
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> f <-) (app #f)) (menv '((□? (f)))))\""
  38
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(letrec (println phi try sat-solve-7)\n    (-> (let ((_ (app display (app sat-solve-7 phi)))) (app newline)) <-))\n (menv '()))\""
  3
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   and\n   (-> (app or x1 x2) <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  124
  ((4 4 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  332
  ((29 29 0)))
'(sat-3
  2
  "\"(list 'eval '(app sat-solve-7 (-> phi <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n1)\n      (app\n       try\n       (λ (n2)\n         (app\n          try\n          (λ (n3)\n            (app\n             try\n             (λ (n4)\n               (app\n                try\n                (λ (n5)\n                  (app\n                   try\n                   (λ (n6)\n                     (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7))))))))))))))\n    <-))\n (menv '((□? (p)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(λ (n1)\n    (->\n     (app\n      try\n      (λ (n2)\n        (app\n         try\n         (λ (n3)\n           (app\n            try\n            (λ (n4)\n              (app\n               try\n               (λ (n5)\n                 (app\n                  try\n                  (λ (n6)\n                    (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))))))\n     <-))\n (menv '((□? (n1)) (□? (p)))))\""
  32
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> println <-) \"trying\") (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app or (-> (app not x4) <-) x1)\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app try (-> (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))) <-))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  7
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> not <-) x3) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app p n1 n2 (-> n3 <-) n4 n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  29
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(λ (n4)\n    (->\n     (app\n      try\n      (λ (n5)\n        (app try (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))\n     <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  32
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app p n1 (-> n2 <-) n3 n4 n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  31
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app p (-> n1 <-) n2 n3 n4 n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  33
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(λ (s) (-> (let ((_ (app display s))) newline) <-))\n (menv '((□? (s)))))\""
  3
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   (-> and <-)\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(let (_) (-> (app newline) <-)) (menv '()))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(λ (n2)\n    (->\n     (app\n      try\n      (λ (n3)\n        (app\n         try\n         (λ (n4)\n           (app\n            try\n            (λ (n5)\n              (app\n               try\n               (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))))\n     <-))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  32
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(λ (n5)\n    (-> (app try (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7))))) <-))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  32
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app not (-> x2 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app try (-> (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)) <-))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  8
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app or x1 (-> x2 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app f (-> (app #f) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> or <-) x1 x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 n5 n6 (-> n7 <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  21
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  9
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app or x3 (-> x4 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  37
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(let ((-> _ = (app display (app sat-solve-7 phi)) <-)) bod)\n (menv '()))\""
  28
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(let ((-> _ = (app display s) <-)) bod) (menv '((□? (s)))))\""
  12
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(let (_) (-> (app or (app f (app #t)) (app f (app #f))) <-))\n (menv '((□? (f)))))\""
  202
  ((7 7 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(λ (n7) (-> (app p n1 n2 n3 n4 n5 n6 n7) <-))\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  0
  (#f))
'(sat-3 2 "\"(list 'eval '(app (-> #t <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(letrec (println\n           phi\n           try\n           (->\n            sat-solve-7\n            =\n            (λ (p)\n              (app\n               try\n               (λ (n1)\n                 (app\n                  try\n                  (λ (n2)\n                    (app\n                     try\n                     (λ (n3)\n                       (app\n                        try\n                        (λ (n4)\n                          (app\n                           try\n                           (λ (n5)\n                             (app\n                              try\n                              (λ (n6)\n                                (app\n                                 try\n                                 (λ (n7)\n                                   (app p n1 n2 n3 n4 n5 n6 n7))))))))))))))))\n            <-))\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app or x4 (-> x2 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  41
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(λ (f)\n    (->\n     (let ((_ (app println \"trying\")))\n       (app or (app f (app #t)) (app f (app #f))))\n     <-))\n (menv '((□? (f)))))\""
  211
  ((7 7 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(λ (n3)\n    (->\n     (app\n      try\n      (λ (n4)\n        (app\n         try\n         (λ (n5)\n           (app\n            try\n            (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))\n     <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  32
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app (-> or <-) (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app not (-> x3 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  39
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app (-> p <-) n1 n2 n3 n4 n5 n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  21
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app display (-> (app sat-solve-7 phi) <-)) (menv '()))\""
  26
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> not <-) x3) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n4)\n     (app\n      try\n      (λ (n5)\n        (app try (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> display <-) (app sat-solve-7 phi)) (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 (-> n5 <-) n6 n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  25
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> not <-) x4) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(λ (x1 x2 x3 x4 x5 x6 x7)\n    (->\n     (app\n      and\n      (app or x1 x2)\n      (app or x1 (app not x2) (app not x3))\n      (app or x3 x4)\n      (app or (app not x4) x1)\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  0
  (#f))
'(sat-3
  2
  "\"(list 'eval '(app (-> f <-) (app #t)) (menv '((□? (f)))))\""
  38
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app not (-> x3 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  39
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(λ (n6) (-> (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7))) <-))\n (menv\n  '((□? (n6)) (□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  60
  ((1 1 0)))
'(sat-3 2 "\"(list 'eval '(top) (menv '()))\"" 4 ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  133
  ((5 5 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (-> (app or (app not x4) x1) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  108
  ((3 3 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app or x1 (app not x2) (-> (app not x3) <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  43
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> or <-) x3 x4) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3 2 "\"(list 'eval '(app (-> #f <-)) (menv '((□? (f)))))\"" 2 ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n4)\n      (app\n       try\n       (λ (n5)\n         (app try (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7))))))))\n    <-))\n (menv '((□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> not <-) x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3 2 "\"(list 'eval '(app (-> newline <-)) (menv '()))\"" 1 ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n5) (app try (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7))))))\n    <-))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  6
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> sat-solve-7 <-) phi) (menv '()))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app or (-> x3 <-) x4) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  39
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app (-> or <-) x1 (app not x2) (app not x3))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app not (-> x4 <-)) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  37
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n5) (app try (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))\n (menv '((□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  7
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app println (-> \"trying\" <-)) (menv '((□? (f)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app f (-> (app #t) <-)) (menv '((□? (f)))))\""
  3
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app (-> try <-) (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))\n (menv '((□? (n5)) (□? (n4)) (□? (n3)) (□? (n2)) (□? (n1)) (□? (p)))))\""
  8
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(let ((-> _ = (app println \"trying\") <-)) bod) (menv '((□? (f)))))\""
  7
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app p n1 n2 n3 n4 n5 (-> n6 <-) n7)\n (menv\n  '((□? (n7))\n    (□? (n6))\n    (□? (n5))\n    (□? (n4))\n    (□? (n3))\n    (□? (n2))\n    (□? (n1))\n    (□? (p)))))\""
  23
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   try\n   (->\n    (λ (n2)\n      (app\n       try\n       (λ (n3)\n         (app\n          try\n          (λ (n4)\n            (app\n             try\n             (λ (n5)\n               (app\n                try\n                (λ (n6)\n                  (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7))))))))))))\n    <-))\n (menv '((□? (n1)) (□? (p)))))\""
  3
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app or (app not x2) (-> (app not x3) <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  43
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or x3 x4) <-)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  109
  ((4 4 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   (-> try <-)\n   (λ (n3)\n     (app\n      try\n      (λ (n4)\n        (app\n         try\n         (λ (n5)\n           (app\n            try\n            (λ (n6) (app try (λ (n7) (app p n1 n2 n3 n4 n5 n6 n7)))))))))))\n (menv '((□? (n2)) (□? (n1)) (□? (p)))))\""
  5
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> or <-) x4 x2) (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  99
  ((3 3 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app or (app not x4) (-> x1 <-))\n (menv '((□? (x1 x2 x3 x4 x5 x6 x7)))))\""
  42
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(letrec (println\n           phi\n           (->\n            try\n            =\n            (λ (f)\n              (let ((_ (app println \"trying\")))\n                (app or (app f (app #t)) (app f (app #f)))))\n            <-)\n           sat-solve-7)\n    bod)\n (menv '()))\""
  1
  ((0 0 0)))
'(sat-3
  2
  "\"(list 'eval '(app (-> display <-) s) (menv '((□? (s)))))\""
  2
  ((0 0 0)))
'(sat-3
  2
  "\"(list\n 'eval\n '(app or (-> (app f (app #t)) <-) (app f (app #f)))\n (menv '((□? (f)))))\""
  184
  ((5 5 0)))
'(sat-3
  2
  "\"(list 'eval '(let (_) (-> newline <-)) (menv '((□? (s)))))\""
  2
  ((0 0 0)))
