'(clean-cache
  kcfa-3
  0
  5
  31
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  48
  29
  9
  10
  29
  9
  38
  1
  1
  16
  #f
  158/29
  ((3/2 3/2 0) (3/2 3/2 0) (2 2 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env (())))\""
  40
  24
  8
  8
  24
  8
  32
  1
  1
  14
  #f
  65/12
  ((3/2 3/2 0) (3/2 3/2 0) (2 2 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (λ (x2) (-> (app (λ (f3) ...) (λ (x3) ...)) <-)) (env (() ())))\""
  31
  18
  7
  6
  18
  7
  25
  1
  1
  11
  #f
  97/18
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (λ (x3) (-> (app (λ (z) ...) (λ (y1 y2 y3) ...)) <-)) (env (() () ())))\""
  22
  12
  6
  4
  12
  6
  18
  1
  1
  8
  #f
  16/3
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (λ (y1 y2 y3) (-> y1 <-)) (env (() () () ())))\""
  15
  8
  5
  2
  8
  5
  13
  1
  1
  6
  #f
  21/4
  ((1/2 1 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (λ (z) (-> (app z x1 x2 x3) <-)) (env (() () () ())))\""
  20
  11
  6
  3
  11
  6
  17
  1
  1
  8
  #f
  58/11
  ((1 1 0) (1 1 0) (1 5/2 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app z x1 x2 (-> x3 <-)) (env (() () () ())))\""
  10
  6
  3
  1
  6
  3
  9
  1
  1
  5
  #f
  31/6
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-) x3) (env (() () () ())))\""
  10
  6
  3
  1
  6
  3
  9
  1
  1
  5
  #f
  31/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2 x3) (env (() () () ())))\""
  10
  6
  3
  1
  6
  3
  9
  1
  1
  5
  #f
  31/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2 x3) (env (() () () ())))\""
  3
  2
  1
  0
  2
  1
  3
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  let
  "\"'(eval (λ (f3) (-> (let (_) ...) <-)) (env (() () ())))\""
  28
  16
  7
  5
  16
  7
  23
  1
  1
  10
  #f
  43/8
  ((3/2 3/2 0) (3/2 3/2 0) (1 3/2 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f3 (app #t)) <-)) () ...) ...)\n  (env (() () ())))\""
  27
  15
  7
  5
  15
  7
  22
  1
  1
  10
  #f
  16/3
  ((1 3/2 0) (1 3/2 0) (3/2 3/2 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (app f3 (-> (app #t) <-)) (env (() () ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #t)) (env (() () ())))\""
  3
  2
  1
  0
  2
  1
  3
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (let (_) (-> (app f3 (app #f)) <-)) (env (() () ())))\""
  27
  15
  7
  5
  15
  7
  22
  1
  1
  10
  #f
  16/3
  ((1 1 0) (1 1 0) (3/2 3/2 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (app f3 (-> (app #f) <-)) (env (() () ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #f)) (env (() () ())))\""
  3
  2
  1
  0
  2
  1
  3
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env (() ())))\""
  37
  22
  8
  7
  22
  8
  30
  1
  1
  13
  #f
  119/22
  ((3/2 3/2 0) (3/2 3/2 0) (2 2 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...) (env (() ())))\""
  36
  21
  8
  7
  21
  8
  29
  1
  1
  13
  #f
  113/21
  ((2 2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env (() ())))\""
  3
  2
  1
  0
  2
  1
  3
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env (() ())))\""
  36
  21
  8
  7
  21
  8
  29
  1
  1
  13
  #f
  113/21
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env (() ())))\""
  3
  2
  1
  0
  2
  1
  3
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env (())))\""
  46
  28
  9
  9
  28
  9
  37
  1
  1
  16
  #f
  38/7
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...) (env (())))\""
  45
  27
  9
  9
  27
  9
  36
  1
  1
  16
  #f
  146/27
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env (())))\""
  3
  2
  1
  0
  2
  1
  3
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env (())))\""
  45
  27
  9
  9
  27
  9
  36
  1
  1
  16
  #f
  146/27
  ((3/2 3/2 0) (3/2 2 0) (3/2 3/2 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env (())))\""
  3
  2
  1
  0
  2
  1
  3
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env (())))\""
  46
  28
  9
  9
  28
  9
  37
  1
  1
  16
  #f
  38/7
  ((2 5/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env (() ())))\""
  46
  28
  9
  9
  28
  9
  37
  1
  1
  16
  #f
  38/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...) (env (() ())))\""
  48
  30
  9
  9
  30
  9
  39
  1
  1
  17
  #f
  163/30
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f3 (app #t)) <-)) () ...) ...)\n  (env (() () ())))\""
  50
  32
  9
  9
  32
  9
  41
  1
  1
  18
  #f
  87/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env (())))\""
  50
  32
  9
  9
  32
  9
  41
  1
  1
  18
  #t
  87/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (λ (x3) (-> (app (λ (z) ...) (λ (y1 y2 y3) ...)) <-)) (env (() () ())))\""
  50
  32
  9
  9
  32
  9
  41
  1
  1
  18
  #f
  87/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #f)) (env (() () ())))\""
  50
  32
  9
  9
  32
  9
  41
  1
  1
  18
  #t
  87/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env (())))\""
  51
  33
  9
  9
  33
  9
  42
  1
  1
  19
  #t
  179/33
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env (() ())))\""
  53
  35
  9
  9
  35
  9
  44
  1
  1
  21
  #t
  27/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env (())))\""
  53
  35
  9
  9
  35
  9
  44
  1
  1
  21
  #f
  27/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-) x3) (env (() () () ())))\""
  60
  38
  12
  10
  38
  12
  50
  1
  1
  23
  #f
  205/38
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env (() ())))\""
  60
  38
  12
  10
  38
  12
  50
  1
  1
  23
  #t
  205/38
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #t)) (env (() () ())))\""
  60
  38
  12
  10
  38
  12
  50
  1
  1
  23
  #t
  205/38
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env (() ())))\""
  60
  38
  12
  10
  38
  12
  50
  1
  1
  23
  #f
  205/38
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (let (_) (-> (app f3 (app #f)) <-)) (env (() () ())))\""
  60
  38
  12
  10
  38
  12
  50
  1
  1
  23
  #f
  205/38
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...) (env (())))\""
  61
  39
  12
  10
  39
  12
  51
  1
  1
  23
  #f
  211/39
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env (())))\""
  61
  39
  12
  10
  39
  12
  51
  1
  1
  23
  #t
  211/39
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (app f3 (-> (app #t) <-)) (env (() () ())))\""
  63
  41
  12
  10
  41
  12
  53
  1
  1
  25
  #t
  221/41
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2 x3) (env (() () () ())))\""
  63
  41
  12
  10
  41
  12
  53
  1
  1
  25
  #t
  221/41
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (app f3 (-> (app #f) <-)) (env (() () ())))\""
  65
  43
  12
  10
  43
  12
  55
  1
  1
  27
  #t
  231/43
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env (() ())))\""
  65
  43
  12
  10
  43
  12
  55
  1
  1
  27
  #t
  231/43
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (λ (z) (-> (app z x1 x2 x3) <-)) (env (() () () ())))\""
  65
  43
  12
  10
  43
  12
  55
  1
  1
  27
  #f
  231/43
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (λ (y1 y2 y3) (-> y1 <-)) (env (() () () ())))\""
  65
  43
  12
  10
  43
  12
  55
  1
  1
  27
  #f
  231/43
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env (() ())))\""
  65
  43
  12
  10
  43
  12
  55
  1
  1
  27
  #t
  231/43
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env (())))\""
  65
  43
  12
  10
  43
  12
  55
  1
  1
  27
  #f
  231/43
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  let
  "\"'(eval (λ (f3) (-> (let (_) ...) <-)) (env (() () ())))\""
  65
  43
  12
  10
  43
  12
  55
  1
  1
  27
  #f
  231/43
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  67
  44
  12
  11
  44
  12
  56
  1
  1
  27
  #f
  237/44
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (λ (x2) (-> (app (λ (f3) ...) (λ (x3) ...)) <-)) (env (() ())))\""
  67
  44
  12
  11
  44
  12
  56
  1
  1
  27
  #f
  237/44
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2 x3) (env (() () () ())))\""
  67
  44
  12
  11
  44
  12
  56
  1
  1
  27
  #f
  237/44
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env (())))\""
  67
  44
  12
  11
  44
  12
  56
  1
  1
  27
  #t
  237/44
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app z x1 x2 (-> x3 <-)) (env (() () () ())))\""
  72
  45
  15
  12
  45
  15
  60
  1
  1
  27
  #f
  27/5
  ((1/2 1/2 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  let
  "\"'(eval (λ (f3) (-> (let (_) ...) <-)) (env (() () ())))\""
  28
  16
  7
  5
  16
  7
  23
  1
  1
  10
  #f
  43/8
  ((2 2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (λ (y1 y2 y3) (-> y1 <-)) (env (() () () ())))\""
  28
  16
  7
  5
  16
  7
  23
  1
  1
  10
  #f
  43/8
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (let (_) (-> (app f2 (app #f)) <-)) (env (() ())))\""
  36
  21
  8
  7
  21
  8
  29
  1
  1
  13
  #f
  113/21
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #t)) (env (() ())))\""
  37
  22
  8
  7
  22
  8
  30
  1
  1
  14
  #t
  59/11
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  let
  "\"'(eval (λ (f1) (-> (let (_) ...) <-)) (env (())))\""
  47
  29
  9
  9
  29
  9
  38
  1
  1
  17
  #f
  157/29
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (λ (x3) (-> (app (λ (z) ...) (λ (y1 y2 y3) ...)) <-)) (env (() () ())))\""
  47
  29
  9
  9
  29
  9
  38
  1
  1
  17
  #f
  157/29
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  let
  "\"'(eval (λ (f2) (-> (let (_) ...) <-)) (env (() ())))\""
  47
  29
  9
  9
  29
  9
  38
  1
  1
  17
  #f
  157/29
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (app f2 (-> (app #f) <-)) (env (() ())))\""
  49
  31
  9
  9
  31
  9
  40
  1
  1
  19
  #t
  167/31
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #f)) (env (())))\""
  49
  31
  9
  9
  31
  9
  40
  1
  1
  19
  #t
  167/31
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (λ (z) (-> (app z x1 x2 x3) <-)) (env (() () () ())))\""
  49
  31
  9
  9
  31
  9
  40
  1
  1
  19
  #f
  167/31
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (let (_) (-> (app f1 (app #f)) <-)) (env (())))\""
  49
  31
  9
  9
  31
  9
  40
  1
  1
  19
  #f
  167/31
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (app f3 (-> (app #t) <-)) (env (() () ())))\""
  51
  33
  9
  9
  33
  9
  42
  1
  1
  21
  #t
  59/11
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...) (env (() ())))\""
  52
  34
  9
  9
  34
  9
  43
  1
  1
  21
  #f
  183/34
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app (-> f1 <-) (app #t)) (env (())))\""
  53
  35
  9
  9
  35
  9
  44
  1
  1
  22
  #t
  188/35
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env (())))\""
  53
  35
  9
  9
  35
  9
  44
  1
  1
  22
  #f
  188/35
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app (-> z <-) x1 x2 x3) (env (() () () ())))\""
  53
  35
  9
  9
  35
  9
  44
  1
  1
  22
  #t
  188/35
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  app
  "\"'(eval\n  (let (... () (_ (-> (app f3 (app #t)) <-)) () ...) ...)\n  (env (() () ())))\""
  55
  37
  9
  9
  37
  9
  46
  1
  1
  23
  #f
  199/37
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #f)) (env (() () ())))\""
  55
  37
  9
  9
  37
  9
  46
  1
  1
  23
  #t
  199/37
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app (-> f3 <-) (app #t)) (env (() () ())))\""
  55
  37
  9
  9
  37
  9
  46
  1
  1
  23
  #t
  199/37
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...) (env (())))\""
  56
  38
  9
  9
  38
  9
  47
  1
  1
  23
  #f
  205/38
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (app f1 (-> (app #t) <-)) (env (())))\""
  56
  38
  9
  9
  38
  9
  47
  1
  1
  23
  #t
  205/38
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (app f3 (-> (app #f) <-)) (env (() () ())))\""
  58
  40
  9
  9
  40
  9
  49
  1
  1
  25
  #t
  43/8
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (λ (x2) (-> (app (λ (f3) ...) (λ (x3) ...)) <-)) (env (() ())))\""
  58
  40
  9
  9
  40
  9
  49
  1
  1
  25
  #f
  43/8
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (app f1 (-> (app #f) <-)) (env (())))\""
  58
  40
  9
  9
  40
  9
  49
  1
  1
  25
  #t
  43/8
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (app f2 (-> (app #t) <-)) (env (() ())))\""
  60
  42
  9
  9
  42
  9
  51
  1
  1
  27
  #t
  75/14
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app (-> f2 <-) (app #f)) (env (() ())))\""
  60
  42
  9
  9
  42
  9
  51
  1
  1
  27
  #t
  75/14
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  app
  "\"'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))\""
  62
  43
  9
  10
  43
  9
  52
  1
  1
  27
  #f
  231/43
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app z x1 x2 (-> x3 <-)) (env (() () () ())))\""
  67
  44
  12
  11
  44
  12
  56
  1
  1
  27
  #f
  237/44
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app z (-> x1 <-) x2 x3) (env (() () () ())))\""
  67
  44
  12
  11
  44
  12
  56
  1
  1
  27
  #f
  237/44
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  ref-or-constructor
  "\"'(eval (app z x1 (-> x2 <-) x3) (env (() () () ())))\""
  72
  45
  15
  12
  45
  15
  60
  1
  1
  27
  #f
  27/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  kcfa-3
  0
  5
  31
  app
  "\"'(eval (let (_) (-> (app f3 (app #f)) <-)) (env (() () ())))\""
  72
  45
  15
  12
  45
  15
  60
  1
  1
  27
  #f
  27/5
  ((0 0 0) (0 0 0) (0 0 0)))
