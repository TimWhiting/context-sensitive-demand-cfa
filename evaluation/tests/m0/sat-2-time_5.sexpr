'(clean-cache
  sat-2
  0
  56
  letrec*
  "\"'(eval ((top) letrec* (phi ... sat-solve-7) ...) (env ()))\""
  #f)
'(clean-cache
  sat-2
  0
  56
  app
  "\"'(eval (λ (p) (-> (app try (λ (n1) ...)) <-)) (env (())))\""
  #f)
'(clean-cache
  sat-2
  0
  56
  app
  "\"'(eval (λ (n1) (-> (app try (λ (n2) ...)) <-)) (env (() ())))\""
  #f)
'(clean-cache
  sat-2
  0
  56
  app
  "\"'(eval (λ (n2) (-> (app try (λ (n3) ...)) <-)) (env (() () ())))\""
  #f)
'(clean-cache
  sat-2
  0
  56
  app
  "\"'(eval (λ (n3) (-> (app try (λ (n4) ...)) <-)) (env (() () () ())))\""
  #f)
'(clean-cache
  sat-2
  0
  56
  app
  "\"'(eval (λ (n4) (-> (app try (λ (n5) ...)) <-)) (env (() () () () ())))\""
  #f)
'(clean-cache
  sat-2
  0
  56
  app
  "\"'(eval (λ (n5) (-> (app try (λ (n6) ...)) <-)) (env (() () () () () ())))\""
  #f)
'(clean-cache
  sat-2
  0
  56
  app
  "\"'(eval (λ (n6) (-> (app try (λ (n7) ...)) <-)) (env (() () () () () () ())))\""
  #f)
'(clean-cache
  sat-2
  0
  56
  app
  "\"'(eval\n  (λ (n7)\n    (-> (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7) <-))\n  (env (() () () () () () () ())))\""
  #f)
'(clean-cache
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval\n  (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) (-> n7 <-))\n  (env (() () () () () () () ())))\""
  11
  7
  3
  1
  7
  3
  10
  1
  1
  6
  #f
  36/7
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app (-> (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) <-) n7)\n  (env (() () () () () () () ())))\""
  23
  15
  2
  6
  15
  2
  17
  1
  1
  15
  #t
  5
  ((3 3 0) (3 3 0) (3 3 0)))
'(clean-cache
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval\n  (app (app (app (app (app (app p n1) n2) n3) n4) n5) (-> n6 <-))\n  (env (() () () () () () () ())))\""
  11
  7
  3
  1
  7
  3
  10
  1
  1
  6
  #f
  36/7
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app (-> (app (app (app (app (app p n1) n2) n3) n4) n5) <-) n6)\n  (env (() () () () () () () ())))\""
  20
  13
  2
  5
  13
  2
  15
  1
  1
  13
  #t
  5
  ((5/2 5/2 0) (5/2 5/2 0) (5/2 5/2 0)))
'(clean-cache
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval\n  (app (app (app (app (app p n1) n2) n3) n4) (-> n5 <-))\n  (env (() () () () () () () ())))\""
  11
  7
  3
  1
  7
  3
  10
  1
  1
  6
  #f
  36/7
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app (-> (app (app (app (app p n1) n2) n3) n4) <-) n5)\n  (env (() () () () () () () ())))\""
  17
  11
  2
  4
  11
  2
  13
  1
  1
  11
  #t
  5
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval\n  (app (app (app (app p n1) n2) n3) (-> n4 <-))\n  (env (() () () () () () () ())))\""
  11
  7
  3
  1
  7
  3
  10
  1
  1
  6
  #f
  36/7
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app (-> (app (app (app p n1) n2) n3) <-) n4)\n  (env (() () () () () () () ())))\""
  14
  9
  2
  3
  9
  2
  11
  1
  1
  9
  #t
  5
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app (app (app p n1) n2) (-> n3 <-)) (env (() () () () () () () ())))\""
  11
  7
  3
  1
  7
  3
  10
  1
  1
  6
  #f
  36/7
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  sat-2
  0
  5
  56
  app
  "\"'(eval (app (-> (app (app p n1) n2) <-) n3) (env (() () () () () () () ())))\""
  11
  7
  2
  2
  7
  2
  9
  1
  1
  7
  #t
  5
  ((1 3/2 0) (1 1 0) (1 1 0)))
'(clean-cache
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app (app p n1) (-> n2 <-)) (env (() () () () () () () ())))\""
  11
  7
  3
  1
  7
  3
  10
  1
  1
  6
  #f
  36/7
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  sat-2
  0
  5
  56
  app
  "\"'(eval (app (-> (app p n1) <-) n2) (env (() () () () () () () ())))\""
  8
  5
  2
  1
  5
  2
  7
  1
  1
  5
  #t
  5
  ((1/2 1 0) (1 1 0) (1/2 1 0)))
'(clean-cache
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app p (-> n1 <-)) (env (() () () () () () () ())))\""
  11
  7
  3
  1
  7
  3
  10
  1
  1
  6
  #f
  36/7
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app (-> p <-) n1) (env (() () () () () () () ())))\""
  5
  3
  2
  0
  3
  2
  5
  1
  1
  3
  #t
  5
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  sat-2
  0
  56
  app
  "\"'(eval (λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-)) (env (())))\""
  #f)
'(clean-cache
  sat-2
  0
  56
  app
  "\"'(eval (app or (app f (app #t)) (-> (app f (app #f)) <-)) (env (())))\""
  #f)
'(clean-cache
  sat-2
  0
  5
  56
  app
  "\"'(eval (app f (-> (app #f) <-)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app (-> f <-) (app #f)) (env (())))\""
  16
  8
  8
  0
  8
  8
  16
  1
  1
  7
  #f
  23/4
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  sat-2
  0
  56
  app
  "\"'(eval (app or (-> (app f (app #t)) <-) (app f (app #f))) (env (())))\""
  #f)
'(clean-cache
  sat-2
  0
  5
  56
  app
  "\"'(eval (app f (-> (app #t) <-)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app (-> f <-) (app #t)) (env (())))\""
  16
  8
  8
  0
  8
  8
  16
  1
  1
  7
  #f
  23/4
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  sat-2
  0
  56
  app
  "\"'(eval\n  (λ (x7)\n    (->\n     (app\n      and\n      (app or x1 x2)\n      (app or x1 (app not x2) (app not x3))\n      (app or x3 x4)\n      (app or (app not x4) x1)\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n  (env (() () () () () () ())))\""
  #f)
'(clean-cache
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n  (env (() () () () () () ())))\""
  32
  17
  13
  2
  17
  13
  30
  1
  1
  12
  #f
  90/17
  ((4 4 0) (4 4 0) (4 4 0)))
'(clean-cache
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app or x4 (-> x2 <-)) (env (() () () () () () ())))\""
  20
  10
  8
  2
  10
  8
  18
  1
  1
  8
  #f
  26/5
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app or (-> x4 <-) x2) (env (() () () () () () ())))\""
  24
  10
  12
  2
  10
  12
  22
  1
  1
  8
  #f
  26/5
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n  (env (() () () () () () ())))\""
  34
  21
  11
  2
  21
  11
  32
  1
  1
  14
  #f
  16/3
  ((9/2 9/2 0) (9/2 9/2 0) (9/2 9/2 0)))
'(clean-cache
  sat-2
  0
  5
  56
  app
  "\"'(eval (app or (app not x2) (-> (app not x3) <-)) (env (() () () () () () ())))\""
  26
  14
  10
  2
  14
  10
  24
  1
  1
  11
  #f
  73/14
  ((5/2 5/2 0) (2 2 0) (2 2 0)))
'(clean-cache
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app not (-> x3 <-)) (env (() () () () () () ())))\""
  22
  10
  10
  2
  10
  10
  20
  1
  1
  8
  #f
  26/5
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  sat-2
  0
  5
  56
  app
  "\"'(eval (app or (-> (app not x2) <-) (app not x3)) (env (() () () () () () ())))\""
  24
  14
  8
  2
  14
  8
  22
  1
  1
  11
  #f
  73/14
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app not (-> x2 <-)) (env (() () () () () () ())))\""
  20
  10
  8
  2
  10
  8
  18
  1
  1
  8
  #f
  26/5
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (-> (app or (app not x4) x1) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n  (env (() () () () () () ())))\""
  34
  19
  13
  2
  19
  13
  32
  1
  1
  13
  #f
  101/19
  ((4 9/2 0) (9/2 9/2 0) (9/2 9/2 0)))
'(clean-cache
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app or (app not x4) (-> x1 <-)) (env (() () () () () () ())))\""
  18
  10
  6
  2
  10
  6
  16
  1
  1
  8
  #f
  26/5
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  sat-2
  0
  5
  56
  app
  "\"'(eval (app or (-> (app not x4) <-) x1) (env (() () () () () () ())))\""
  28
  14
  12
  2
  14
  12
  26
  1
  1
  11
  #f
  73/14
  ((5/2 5/2 0) (5/2 5/2 0) (5/2 5/2 0)))
'(clean-cache
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app not (-> x4 <-)) (env (() () () () () () ())))\""
  24
  10
  12
  2
  10
  12
  22
  1
  1
  8
  #f
  26/5
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or x3 x4) <-)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n  (env (() () () () () () ())))\""
  32
  17
  13
  2
  17
  13
  30
  1
  1
  12
  #f
  90/17
  ((4 4 0) (4 4 0) (4 4 0)))
'(clean-cache
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app or x3 (-> x4 <-)) (env (() () () () () () ())))\""
  24
  10
  12
  2
  10
  12
  22
  1
  1
  8
  #f
  26/5
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app or (-> x3 <-) x4) (env (() () () () () () ())))\""
  22
  10
  10
  2
  10
  10
  20
  1
  1
  8
  #f
  26/5
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  sat-2
  0
  56
  app
  "\"'(eval\n  (app\n   and\n   (app or x1 x2)\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n  (env (() () () () () () ())))\""
  #f)
'(clean-cache
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app or x1 (app not x2) (-> (app not x3) <-))\n  (env (() () () () () () ())))\""
  26
  14
  10
  2
  14
  10
  24
  1
  1
  11
  #f
  73/14
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app not (-> x3 <-)) (env (() () () () () () ())))\""
  22
  10
  10
  2
  10
  10
  20
  1
  1
  8
  #f
  26/5
  ((2 2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app or x1 (-> (app not x2) <-) (app not x3))\n  (env (() () () () () () ())))\""
  24
  14
  8
  2
  14
  8
  22
  1
  1
  11
  #f
  73/14
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app not (-> x2 <-)) (env (() () () () () () ())))\""
  20
  10
  8
  2
  10
  8
  18
  1
  1
  8
  #f
  26/5
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3 0)))
'(clean-cache
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval\n  (app or (-> x1 <-) (app not x2) (app not x3))\n  (env (() () () () () () ())))\""
  18
  10
  6
  2
  10
  6
  16
  1
  1
  8
  #f
  26/5
  ((1 3/2 0) (1 1 0) (1 1 0)))
'(clean-cache
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app\n   and\n   (-> (app or x1 x2) <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n  (env (() () () () () () ())))\""
  28
  17
  9
  2
  17
  9
  26
  1
  1
  12
  #f
  90/17
  ((9/2 9/2 0) (3 7/2 0) (7/2 7/2 0)))
'(clean-cache
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app or x1 (-> x2 <-)) (env (() () () () () () ())))\""
  20
  10
  8
  2
  10
  8
  18
  1
  1
  8
  #f
  26/5
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app or (-> x1 <-) x2) (env (() () () () () () ())))\""
  18
  10
  6
  2
  10
  6
  16
  1
  1
  8
  #f
  26/5
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  sat-2
  0
  56
  app
  "\"'(eval (letrec* (phi ... sat-solve-7) (-> (app sat-solve-7 phi) <-)) (env ()))\""
  #f)
'(shuffled-cache
  0
  sat-2
  0
  56
  app
  "\"'(eval (λ (n6) (-> (app try (λ (n7) ...)) <-)) (env (() () () () () () ())))\""
  #f)
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app (-> f <-) (app #f)) (env (())))\""
  16
  8
  8
  0
  8
  8
  16
  1
  1
  7
  #f
  23/4
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (-> (app or (app not x4) x1) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n  (env (() () () () () () ())))\""
  50
  27
  21
  2
  27
  21
  48
  1
  1
  20
  #f
  49/9
  ((9/2 9/2 0) (9/2 9/2 0) (9/2 9/2 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app or x4 (-> x2 <-)) (env (() () () () () () ())))\""
  54
  30
  22
  2
  30
  22
  52
  1
  1
  21
  #f
  82/15
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  app
  "\"'(eval (app (-> (app p n1) <-) n2) (env (() () () () () () () ())))\""
  62
  35
  24
  3
  35
  24
  59
  1
  1
  26
  #t
  27/5
  ((1 1 0) (3/2 3/2 0) (1 1 0)))
'(shuffled-cache
  0
  sat-2
  0
  56
  app
  "\"'(eval\n  (λ (x7)\n    (->\n     (app\n      and\n      (app or x1 x2)\n      (app or x1 (app not x2) (app not x3))\n      (app or x3 x4)\n      (app or (app not x4) x1)\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n  (env (() () () () () () ())))\""
  #f)
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app (app p n1) (-> n2 <-)) (env (() () () () () () () ())))\""
  11
  7
  3
  1
  7
  3
  10
  1
  1
  6
  #f
  36/7
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app (-> p <-) n1) (env (() () () () () () () ())))\""
  16
  10
  5
  1
  10
  5
  15
  1
  1
  9
  #t
  51/10
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or x3 x4) <-)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n  (env (() () () () () () ())))\""
  40
  22
  16
  2
  22
  16
  38
  1
  1
  16
  #f
  58/11
  ((4 4 0) (4 4 0) (4 4 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app or x1 (-> x2 <-)) (env (() () () () () () ())))\""
  41
  23
  16
  2
  23
  16
  39
  1
  1
  16
  #f
  122/23
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval\n  (app (app (app (app (app (app p n1) n2) n3) n4) n5) (-> n6 <-))\n  (env (() () () () () () () ())))\""
  44
  25
  17
  2
  25
  17
  42
  1
  1
  17
  #f
  133/25
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app (-> (app (app (app p n1) n2) n3) <-) n4)\n  (env (() () () () () () () ())))\""
  53
  31
  17
  5
  31
  17
  48
  1
  1
  23
  #t
  163/31
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  sat-2
  0
  56
  app
  "\"'(eval (letrec* (phi ... sat-solve-7) (-> (app sat-solve-7 phi) <-)) (env ()))\""
  #f)
'(shuffled-cache
  0
  sat-2
  0
  56
  app
  "\"'(eval (app or (app f (app #t)) (-> (app f (app #f)) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval\n  (app or (-> x1 <-) (app not x2) (app not x3))\n  (env (() () () () () () ())))\""
  18
  10
  6
  2
  10
  6
  16
  1
  1
  8
  #f
  26/5
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app not (-> x4 <-)) (env (() () () () () () ())))\""
  28
  13
  13
  2
  13
  13
  26
  1
  1
  9
  #f
  69/13
  ((3/2 3/2 0) (3/2 2 0) (2 2 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app or x1 (-> (app not x2) <-) (app not x3))\n  (env (() () () () () () ())))\""
  36
  20
  14
  2
  20
  14
  34
  1
  1
  13
  #f
  107/20
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  0
  sat-2
  0
  56
  app
  "\"'(eval (λ (n3) (-> (app try (λ (n4) ...)) <-)) (env (() () () ())))\""
  #f)
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app or x3 (-> x4 <-)) (env (() () () () () () ())))\""
  24
  10
  12
  2
  10
  12
  22
  1
  1
  8
  #f
  26/5
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app not (-> x2 <-)) (env (() () () () () () ())))\""
  28
  13
  13
  2
  13
  13
  26
  1
  1
  9
  #f
  69/13
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  app
  "\"'(eval (app f (-> (app #t) <-)) (env (())))\""
  28
  13
  13
  2
  13
  13
  26
  1
  1
  9
  #t
  69/13
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  app
  "\"'(eval (app or (-> (app not x2) <-) (app not x3)) (env (() () () () () () ())))\""
  32
  17
  13
  2
  17
  13
  30
  1
  1
  12
  #f
  90/17
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app (-> (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) <-) n7)\n  (env (() () () () () () () ())))\""
  55
  32
  15
  8
  32
  15
  47
  1
  1
  27
  #t
  165/32
  ((3 3 0) (3 3 0) (3 3 0)))
'(shuffled-cache
  0
  sat-2
  0
  56
  app
  "\"'(eval (λ (n5) (-> (app try (λ (n6) ...)) <-)) (env (() () () () () ())))\""
  #f)
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app not (-> x2 <-)) (env (() () () () () () ())))\""
  20
  10
  8
  2
  10
  8
  18
  1
  1
  8
  #f
  26/5
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  app
  "\"'(eval (app f (-> (app #f) <-)) (env (())))\""
  20
  10
  8
  2
  10
  8
  18
  1
  1
  8
  #t
  26/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app not (-> x3 <-)) (env (() () () () () () ())))\""
  26
  13
  11
  2
  13
  11
  24
  1
  1
  9
  #f
  69/13
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app or (app not x4) (-> x1 <-)) (env (() () () () () () ())))\""
  30
  16
  12
  2
  16
  12
  28
  1
  1
  10
  #f
  43/8
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n  (env (() () () () () () ())))\""
  39
  25
  12
  2
  25
  12
  37
  1
  1
  15
  #f
  27/5
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app or x1 (app not x2) (-> (app not x3) <-))\n  (env (() () () () () () ())))\""
  42
  28
  12
  2
  28
  12
  40
  1
  1
  16
  #f
  38/7
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  sat-2
  0
  56
  app
  "\"'(eval (app or (-> (app f (app #t)) <-) (app f (app #f))) (env (())))\""
  #f)
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app p (-> n1 <-)) (env (() () () () () () () ())))\""
  11
  7
  3
  1
  7
  3
  10
  1
  1
  6
  #f
  36/7
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  sat-2
  0
  56
  letrec*
  "\"'(eval ((top) letrec* (phi ... sat-solve-7) ...) (env ()))\""
  #f)
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n  (env (() () () () () () ())))\""
  32
  17
  13
  2
  17
  13
  30
  1
  1
  12
  #f
  90/17
  ((4 4 0) (4 4 0) (4 4 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval\n  (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) (-> n7 <-))\n  (env (() () () () () () () ())))\""
  35
  19
  14
  2
  19
  14
  33
  1
  1
  13
  #f
  101/19
  ((3/2 3/2 0) (1 3/2 0) (1 1 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app or (-> x3 <-) x4) (env (() () () () () () ())))\""
  39
  22
  15
  2
  22
  15
  37
  1
  1
  14
  #f
  59/11
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app\n   and\n   (-> (app or x1 x2) <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n  (env (() () () () () () ())))\""
  46
  28
  16
  2
  28
  16
  44
  1
  1
  16
  #f
  38/7
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  0
  sat-2
  0
  56
  app
  "\"'(eval (λ (p) (-> (app try (λ (n1) ...)) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  sat-2
  0
  56
  app
  "\"'(eval (λ (n1) (-> (app try (λ (n2) ...)) <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval\n  (app (app (app (app p n1) n2) n3) (-> n4 <-))\n  (env (() () () () () () () ())))\""
  11
  7
  3
  1
  7
  3
  10
  1
  1
  6
  #f
  36/7
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app not (-> x3 <-)) (env (() () () () () () ())))\""
  25
  12
  11
  2
  12
  11
  23
  1
  1
  9
  #f
  21/4
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  app
  "\"'(eval (app (-> (app (app p n1) n2) <-) n3) (env (() () () () () () () ())))\""
  36
  19
  13
  4
  19
  13
  32
  1
  1
  16
  #t
  98/19
  ((1 1 0) (3/2 3/2 0) (1 3/2 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval\n  (app (app (app (app (app p n1) n2) n3) n4) (-> n5 <-))\n  (env (() () () () () () () ())))\""
  39
  21
  14
  4
  21
  14
  35
  1
  1
  17
  #f
  109/21
  ((3/2 3/2 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  app
  "\"'(eval (app or (app not x2) (-> (app not x3) <-)) (env (() () () () () () ())))\""
  44
  26
  14
  4
  26
  14
  40
  1
  1
  20
  #f
  68/13
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app\n   and\n   (app or x1 x2)\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n  (env (() () () () () () ())))\""
  58
  38
  16
  4
  38
  16
  54
  1
  1
  25
  #f
  203/38
  ((9/2 9/2 0) (9/2 9/2 0) (9/2 9/2 0)))
'(shuffled-cache
  0
  sat-2
  0
  56
  app
  "\"'(eval (λ (n4) (-> (app try (λ (n5) ...)) <-)) (env (() () () () ())))\""
  #f)
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app (-> f <-) (app #t)) (env (())))\""
  16
  8
  8
  0
  8
  8
  16
  1
  1
  7
  #f
  23/4
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  app
  "\"'(eval (app or (-> (app not x4) <-) x1) (env (() () () () () () ())))\""
  44
  22
  20
  2
  22
  20
  42
  1
  1
  18
  #f
  119/22
  ((5/2 5/2 0) (5/2 5/2 0) (5/2 5/2 0)))
'(shuffled-cache
  0
  sat-2
  0
  56
  app
  "\"'(eval (λ (n2) (-> (app try (λ (n3) ...)) <-)) (env (() () ())))\""
  #f)
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app (app (app p n1) n2) (-> n3 <-)) (env (() () () () () () () ())))\""
  11
  7
  3
  1
  7
  3
  10
  1
  1
  6
  #f
  36/7
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  sat-2
  0
  56
  app
  "\"'(eval\n  (λ (n7)\n    (-> (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7) <-))\n  (env (() () () () () () () ())))\""
  #f)
'(shuffled-cache
  0
  sat-2
  0
  56
  app
  "\"'(eval (λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app (-> (app (app (app (app p n1) n2) n3) n4) <-) n5)\n  (env (() () () () () () () ())))\""
  17
  11
  2
  4
  11
  2
  13
  1
  1
  11
  #t
  5
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app or (-> x4 <-) x2) (env (() () () () () () ())))\""
  41
  21
  14
  6
  21
  14
  35
  1
  1
  19
  #f
  107/21
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app (-> (app (app (app (app (app p n1) n2) n3) n4) n5) <-) n6)\n  (env (() () () () () () () ())))\""
  44
  23
  14
  7
  23
  14
  37
  1
  1
  21
  #t
  117/23
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app or (-> x1 <-) x2) (env (() () () () () () ())))\""
  48
  26
  15
  7
  26
  15
  41
  1
  1
  22
  #f
  67/13
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  app
  "\"'(eval (app or (-> (app not x4) <-) x1) (env (() () () () () () ())))\""
  28
  14
  12
  2
  14
  12
  26
  1
  1
  11
  #f
  73/14
  ((5/2 5/2 0) (5/2 5/2 0) (5/2 5/2 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app or x4 (-> x2 <-)) (env (() () () () () () ())))\""
  32
  17
  13
  2
  17
  13
  30
  1
  1
  12
  #f
  90/17
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  sat-2
  0
  56
  app
  "\"'(eval\n  (app\n   and\n   (app or x1 x2)\n   (-> (app or x1 (app not x2) (app not x3)) <-)\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n  (env (() () () () () () ())))\""
  #f)
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  app
  "\"'(eval (app or (app not x2) (-> (app not x3) <-)) (env (() () () () () () ())))\""
  50
  33
  15
  2
  33
  15
  48
  1
  1
  18
  #f
  60/11
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  sat-2
  0
  56
  app
  "\"'(eval\n  (λ (n7)\n    (-> (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) n7) <-))\n  (env (() () () () () () () ())))\""
  #f)
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app\n   and\n   (-> (app or x1 x2) <-)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n  (env (() () () () () () ())))\""
  28
  17
  9
  2
  17
  9
  26
  1
  1
  12
  #f
  90/17
  ((3 7/2 0) (3 7/2 0) (7/2 7/2 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app or x3 (-> x4 <-)) (env (() () () () () () ())))\""
  36
  20
  14
  2
  20
  14
  34
  1
  1
  13
  #f
  107/20
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (-> (app or (app not x4) x1) <-)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n  (env (() () () () () () ())))\""
  42
  26
  14
  2
  26
  14
  40
  1
  1
  15
  #f
  141/26
  ((2 2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app (app p n1) (-> n2 <-)) (env (() () () () () () () ())))\""
  42
  26
  14
  2
  26
  14
  40
  1
  1
  15
  #f
  141/26
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app or x1 (app not x2) (-> (app not x3) <-))\n  (env (() () () () () () ())))\""
  48
  31
  15
  2
  31
  15
  46
  1
  1
  17
  #f
  169/31
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval\n  (app or (-> x1 <-) (app not x2) (app not x3))\n  (env (() () () () () () ())))\""
  49
  32
  15
  2
  32
  15
  47
  1
  1
  17
  #f
  175/32
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  app
  "\"'(eval (app (-> (app (app p n1) n2) <-) n3) (env (() () () () () () () ())))\""
  60
  39
  17
  4
  39
  17
  56
  1
  1
  24
  #t
  70/13
  ((3/2 3/2 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval\n  (app (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) (-> n7 <-))\n  (env (() () () () () () () ())))\""
  63
  41
  18
  4
  41
  18
  59
  1
  1
  25
  #f
  221/41
  ((1 1 0) (3/2 3/2 0) (1 3/2 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app (-> (app (app (app (app p n1) n2) n3) n4) <-) n5)\n  (env (() () () () () () () ())))\""
  69
  45
  18
  6
  45
  18
  63
  1
  1
  29
  #t
  241/45
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  sat-2
  0
  56
  app
  "\"'(eval (app or (app f (app #t)) (-> (app f (app #f)) <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app (-> f <-) (app #t)) (env (())))\""
  16
  8
  8
  0
  8
  8
  16
  1
  1
  7
  #f
  23/4
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  sat-2
  0
  56
  app
  "\"'(eval (app or (-> (app f (app #t)) <-) (app f (app #f))) (env (())))\""
  #f)
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (-> (app or (app not x2) (app not x3)) <-)\n   (app or x4 x2))\n  (env (() () () () () () ())))\""
  34
  21
  11
  2
  21
  11
  32
  1
  1
  14
  #f
  16/3
  ((9/2 9/2 0) (9/2 5 0) (9/2 5 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app (app (app p n1) n2) (-> n3 <-)) (env (() () () () () () () ())))\""
  34
  21
  11
  2
  21
  11
  32
  1
  1
  14
  #f
  16/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  sat-2
  0
  56
  app
  "\"'(eval (λ (n2) (-> (app try (λ (n3) ...)) <-)) (env (() () ())))\""
  #f)
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval\n  (app (app (app (app (app p n1) n2) n3) n4) (-> n5 <-))\n  (env (() () () () () () () ())))\""
  11
  7
  3
  1
  7
  3
  10
  1
  1
  6
  #f
  36/7
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app (-> (app (app (app p n1) n2) n3) <-) n4)\n  (env (() () () () () () () ())))\""
  25
  16
  5
  4
  16
  5
  21
  1
  1
  15
  #t
  81/16
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app or x1 (-> x2 <-)) (env (() () () () () () ())))\""
  37
  21
  11
  5
  21
  11
  32
  1
  1
  18
  #f
  36/7
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app p (-> n1 <-)) (env (() () () () () () () ())))\""
  40
  23
  12
  5
  23
  12
  35
  1
  1
  19
  #f
  119/23
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  sat-2
  0
  56
  app
  "\"'(eval (letrec* (phi ... sat-solve-7) (-> (app sat-solve-7 phi) <-)) (env ()))\""
  #f)
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  app
  "\"'(eval (app or (-> (app not x2) <-) (app not x3)) (env (() () () () () () ())))\""
  24
  14
  8
  2
  14
  8
  22
  1
  1
  11
  #f
  73/14
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  app
  "\"'(eval (app f (-> (app #f) <-)) (env (())))\""
  24
  14
  8
  2
  14
  8
  22
  1
  1
  11
  #t
  73/14
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app or (-> x4 <-) x2) (env (() () () () () () ())))\""
  32
  17
  13
  2
  17
  13
  30
  1
  1
  12
  #f
  90/17
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app not (-> x2 <-)) (env (() () () () () () ())))\""
  32
  17
  13
  2
  17
  13
  30
  1
  1
  12
  #f
  90/17
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app or x1 (-> (app not x2) <-) (app not x3))\n  (env (() () () () () () ())))\""
  35
  20
  13
  2
  20
  13
  33
  1
  1
  13
  #f
  107/20
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (app or x3 x4)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (-> (app or x4 x2) <-))\n  (env (() () () () () () ())))\""
  38
  23
  13
  2
  23
  13
  36
  1
  1
  14
  #f
  124/23
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app or (-> x1 <-) x2) (env (() () () () () () ())))\""
  42
  26
  14
  2
  26
  14
  40
  1
  1
  15
  #f
  141/26
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app (-> f <-) (app #f)) (env (())))\""
  58
  34
  22
  2
  34
  22
  56
  1
  1
  22
  #f
  11/2
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval\n  (app (app (app (app (app (app p n1) n2) n3) n4) n5) (-> n6 <-))\n  (env (() () () () () () () ())))\""
  61
  36
  23
  2
  36
  23
  59
  1
  1
  23
  #f
  11/2
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app or (-> x3 <-) x4) (env (() () () () () () ())))\""
  65
  39
  24
  2
  39
  24
  63
  1
  1
  24
  #f
  215/39
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval\n  (app (app (app (app p n1) n2) n3) (-> n4 <-))\n  (env (() () () () () () () ())))\""
  65
  39
  24
  2
  39
  24
  63
  1
  1
  24
  #f
  215/39
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  app
  "\"'(eval (app (-> (app p n1) <-) n2) (env (() () () () () () () ())))\""
  73
  44
  26
  3
  44
  26
  70
  1
  1
  29
  #t
  60/11
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  sat-2
  0
  56
  letrec*
  "\"'(eval ((top) letrec* (phi ... sat-solve-7) ...) (env ()))\""
  #f)
'(shuffled-cache
  1
  sat-2
  0
  56
  app
  "\"'(eval (λ (n6) (-> (app try (λ (n7) ...)) <-)) (env (() () () () () () ())))\""
  #f)
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app (-> p <-) n1) (env (() () () () () () () ())))\""
  5
  3
  2
  0
  3
  2
  5
  1
  1
  3
  #t
  5
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app not (-> x3 <-)) (env (() () () () () () ())))\""
  27
  13
  12
  2
  13
  12
  25
  1
  1
  11
  #f
  67/13
  ((3/2 3/2 0) (3/2 2 0) (3/2 2 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app not (-> x4 <-)) (env (() () () () () () ())))\""
  33
  16
  15
  2
  16
  15
  31
  1
  1
  12
  #f
  21/4
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  1
  sat-2
  0
  56
  app
  "\"'(eval\n  (λ (x7)\n    (->\n     (app\n      and\n      (app or x1 x2)\n      (app or x1 (app not x2) (app not x3))\n      (app or x3 x4)\n      (app or (app not x4) x1)\n      (app or (app not x2) (app not x3))\n      (app or x4 x2))\n     <-))\n  (env (() () () () () () ())))\""
  #f)
'(shuffled-cache
  1
  sat-2
  0
  56
  app
  "\"'(eval (λ (n5) (-> (app try (λ (n6) ...)) <-)) (env (() () () () () ())))\""
  #f)
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app or (app not x4) (-> x1 <-)) (env (() () () () () () ())))\""
  18
  10
  6
  2
  10
  6
  16
  1
  1
  8
  #f
  26/5
  ((1 1 0) (1 3/2 0) (1 1 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app not (-> x2 <-)) (env (() () () () () () ())))\""
  24
  13
  9
  2
  13
  9
  22
  1
  1
  9
  #f
  69/13
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app\n   and\n   (app or x1 x2)\n   (app or x1 (app not x2) (app not x3))\n   (-> (app or x3 x4) <-)\n   (app or (app not x4) x1)\n   (app or (app not x2) (app not x3))\n   (app or x4 x2))\n  (env (() () () () () () ())))\""
  40
  23
  15
  2
  23
  15
  38
  1
  1
  14
  #f
  124/23
  ((7/2 4 0) (7/2 7/2 0) (7/2 7/2 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  ref-or-constructor
  "\"'(eval (app not (-> x3 <-)) (env (() () () () () () ())))\""
  41
  24
  15
  2
  24
  15
  39
  1
  1
  14
  #f
  65/12
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app (-> (app (app (app (app (app (app p n1) n2) n3) n4) n5) n6) <-) n7)\n  (env (() () () () () () () ())))\""
  64
  39
  17
  8
  39
  17
  56
  1
  1
  29
  #t
  205/39
  ((3 3 0) (3 3 0) (3 3 0)))
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  app
  "\"'(eval (app f (-> (app #t) <-)) (env (())))\""
  64
  39
  17
  8
  39
  17
  56
  1
  1
  29
  #t
  205/39
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  sat-2
  0
  56
  app
  "\"'(eval (λ (p) (-> (app try (λ (n1) ...)) <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  sat-2
  0
  56
  app
  "\"'(eval (λ (n1) (-> (app try (λ (n2) ...)) <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  1
  sat-2
  0
  56
  app
  "\"'(eval (λ (n3) (-> (app try (λ (n4) ...)) <-)) (env (() () () ())))\""
  #f)
'(shuffled-cache
  1
  sat-2
  0
  5
  56
  app
  "\"'(eval\n  (app (-> (app (app (app (app (app p n1) n2) n3) n4) n5) <-) n6)\n  (env (() () () () () () () ())))\""
  20
  13
  2
  5
  13
  2
  15
  1
  1
  13
  #t
  5
  ((5/2 5/2 0) (5/2 5/2 0) (5/2 5/2 0)))
'(shuffled-cache
  1
  sat-2
  0
  56
  app
  "\"'(eval (λ (n4) (-> (app try (λ (n5) ...)) <-)) (env (() () () () ())))\""
  #f)
'(shuffled-cache
  1
  sat-2
  0
  56
  app
  "\"'(eval (λ (f) (-> (app or (app f (app #t)) (app f (app #f))) <-)) (env (())))\""
  #f)
