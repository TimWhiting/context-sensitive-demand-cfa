'(clean-cache
  scheme2java
  0
  5
  1311
  lettypes
  "'(eval ((top) lettypes (cons ... error) ...) (env ()))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  letrec*
  "'(eval\n  (lettypes cons ... error (letrec* (car ... input-program) ...))\n  (env ()))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  number
  "'(eval\n  (letrec* (... java-compile-if (input-program (-> 3 <-)) () ...) ...)\n  (env ()))"
  (number char string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  lambda
  "'(eval\n  (letrec*\n   (...\n    java-compile-app\n    (java-compile-if (-> (位 (exp) ...) <-))\n    input-program\n    ...)\n   ...)\n  (env ()))"
  (lambda number char string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (位 (exp)\n    (->\n     (app\n      string-append\n      \"(\"\n      (app java-compile-exp (app if->condition ...))\n      \").toBoolean() ? (\"\n      (app java-compile-exp (app if->then ...))\n      \") : (\"\n      (app java-compile-exp (app if->else ...))\n      \")\")\n     <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app\n   string-append\n   \"(\"\n   (app java-compile-exp (app if->condition exp))\n   \").toBoolean() ? (\"\n   (app java-compile-exp (app if->then exp))\n   \") : (\"\n   (app java-compile-exp (app if->else exp))\n   (-> \")\" <-))\n  (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app\n   string-append\n   \"(\"\n   (app java-compile-exp (app if->condition exp))\n   \").toBoolean() ? (\"\n   (app java-compile-exp (app if->then exp))\n   \") : (\"\n   (-> (app java-compile-exp (app if->else exp)) <-)\n   \")\")\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app java-compile-exp (-> (app if->else exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app if->else (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> if->else <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> java-compile-exp <-) (app if->else exp)) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app\n   string-append\n   \"(\"\n   (app java-compile-exp (app if->condition exp))\n   \").toBoolean() ? (\"\n   (app java-compile-exp (app if->then exp))\n   (-> \") : (\" <-)\n   (app java-compile-exp (app if->else exp))\n   \")\")\n  (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app\n   string-append\n   \"(\"\n   (app java-compile-exp (app if->condition exp))\n   \").toBoolean() ? (\"\n   (-> (app java-compile-exp (app if->then exp)) <-)\n   \") : (\"\n   (app java-compile-exp (app if->else exp))\n   \")\")\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app java-compile-exp (-> (app if->then exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app if->then (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> if->then <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> java-compile-exp <-) (app if->then exp)) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app\n   string-append\n   \"(\"\n   (app java-compile-exp (app if->condition exp))\n   (-> \").toBoolean() ? (\" <-)\n   (app java-compile-exp (app if->then exp))\n   \") : (\"\n   (app java-compile-exp (app if->else exp))\n   \")\")\n  (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app\n   string-append\n   \"(\"\n   (-> (app java-compile-exp (app if->condition exp)) <-)\n   \").toBoolean() ? (\"\n   (app java-compile-exp (app if->then exp))\n   \") : (\"\n   (app java-compile-exp (app if->else exp))\n   \")\")\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app java-compile-exp (-> (app if->condition exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app if->condition (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> if->condition <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> java-compile-exp <-) (app if->condition exp)) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app\n   string-append\n   (-> \"(\" <-)\n   (app java-compile-exp (app if->condition exp))\n   \").toBoolean() ? (\"\n   (app java-compile-exp (app if->then exp))\n   \") : (\"\n   (app java-compile-exp (app if->else exp))\n   \")\")\n  (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval\n  (app\n   (-> string-append <-)\n   \"(\"\n   (app java-compile-exp (app if->condition exp))\n   \").toBoolean() ? (\"\n   (app java-compile-exp (app if->then exp))\n   \") : (\"\n   (app java-compile-exp (app if->else exp))\n   \")\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  lambda
  "'(eval\n  (letrec*\n   (...\n    java-compile-set!\n    (java-compile-app (-> (位 (exp) ...) <-))\n    java-compile-if\n    ...)\n   ...)\n  (env ()))"
  (lambda number char string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  let*
  "'(eval (位 (exp) (-> (let* (args ... num-args) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (let* (... fun (num-args (-> (app length args) <-)) () ...) ...)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app length (-> args <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> length <-) args) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (let* (... args (fun (-> (app app->fun exp) <-)) num-args ...) ...)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app app->fun (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> app->fun <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (let* (... () (args (-> (app app->args exp) <-)) fun ...) ...)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app app->args (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> app->args <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (let* (args ... num-args)\n    (->\n     (app\n      string-append\n      \"((ProcValue\"\n      (app number->string num-args)\n      \")(\"\n      (app java-compile-exp fun)\n      \")).apply(\"\n      (app java-compile-args args)\n      \")\\n\")\n     <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app\n   string-append\n   \"((ProcValue\"\n   (app number->string num-args)\n   \")(\"\n   (app java-compile-exp fun)\n   \")).apply(\"\n   (app java-compile-args args)\n   (-> \")\\n\" <-))\n  (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app\n   string-append\n   \"((ProcValue\"\n   (app number->string num-args)\n   \")(\"\n   (app java-compile-exp fun)\n   \")).apply(\"\n   (-> (app java-compile-args args) <-)\n   \")\\n\")\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app java-compile-args (-> args <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> java-compile-args <-) args) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app\n   string-append\n   \"((ProcValue\"\n   (app number->string num-args)\n   \")(\"\n   (app java-compile-exp fun)\n   (-> \")).apply(\" <-)\n   (app java-compile-args args)\n   \")\\n\")\n  (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app\n   string-append\n   \"((ProcValue\"\n   (app number->string num-args)\n   \")(\"\n   (-> (app java-compile-exp fun) <-)\n   \")).apply(\"\n   (app java-compile-args args)\n   \")\\n\")\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app java-compile-exp (-> fun <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> java-compile-exp <-) fun) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app\n   string-append\n   \"((ProcValue\"\n   (app number->string num-args)\n   (-> \")(\" <-)\n   (app java-compile-exp fun)\n   \")).apply(\"\n   (app java-compile-args args)\n   \")\\n\")\n  (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app\n   string-append\n   \"((ProcValue\"\n   (-> (app number->string num-args) <-)\n   \")(\"\n   (app java-compile-exp fun)\n   \")).apply(\"\n   (app java-compile-args args)\n   \")\\n\")\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app number->string (-> num-args <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> number->string <-) num-args) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app\n   string-append\n   (-> \"((ProcValue\" <-)\n   (app number->string num-args)\n   \")(\"\n   (app java-compile-exp fun)\n   \")).apply(\"\n   (app java-compile-args args)\n   \")\\n\")\n  (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval\n  (app\n   (-> string-append <-)\n   \"((ProcValue\"\n   (app number->string num-args)\n   \")(\"\n   (app java-compile-exp fun)\n   \")).apply(\"\n   (app java-compile-args args)\n   \")\\n\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  lambda
  "'(eval\n  (letrec*\n   (...\n    java-compile-args\n    (java-compile-set! (-> (位 (exp) ...) <-))\n    java-compile-app\n    ...)\n   ...)\n  (env ()))"
  (lambda number char string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (位 (exp)\n    (->\n     (app\n      string-append\n      \"VoidValue.Void(m_\"\n      (app mangle (app set!-var ...))\n      \".value = \"\n      (app java-compile-exp (app set!-exp ...))\n      \")\")\n     <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app\n   string-append\n   \"VoidValue.Void(m_\"\n   (app mangle (app set!-var exp))\n   \".value = \"\n   (app java-compile-exp (app set!-exp exp))\n   (-> \")\" <-))\n  (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app\n   string-append\n   \"VoidValue.Void(m_\"\n   (app mangle (app set!-var exp))\n   \".value = \"\n   (-> (app java-compile-exp (app set!-exp exp)) <-)\n   \")\")\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app java-compile-exp (-> (app set!-exp exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app set!-exp (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> set!-exp <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> java-compile-exp <-) (app set!-exp exp)) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app\n   string-append\n   \"VoidValue.Void(m_\"\n   (app mangle (app set!-var exp))\n   (-> \".value = \" <-)\n   (app java-compile-exp (app set!-exp exp))\n   \")\")\n  (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app\n   string-append\n   \"VoidValue.Void(m_\"\n   (-> (app mangle (app set!-var exp)) <-)\n   \".value = \"\n   (app java-compile-exp (app set!-exp exp))\n   \")\")\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app mangle (-> (app set!-var exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app set!-var (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> set!-var <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> mangle <-) (app set!-var exp)) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app\n   string-append\n   (-> \"VoidValue.Void(m_\" <-)\n   (app mangle (app set!-var exp))\n   \".value = \"\n   (app java-compile-exp (app set!-exp exp))\n   \")\")\n  (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval\n  (app\n   (-> string-append <-)\n   \"VoidValue.Void(m_\"\n   (app mangle (app set!-var exp))\n   \".value = \"\n   (app java-compile-exp (app set!-exp exp))\n   \")\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  lambda
  "'(eval\n  (letrec*\n   (...\n    java-compile-lambda\n    (java-compile-args (-> (位 (args) ...) <-))\n    java-compile-set!\n    ...)\n   ...)\n  (env ()))"
  (lambda number char string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval (位 (args) (-> (match (app not (app pair? ...)) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval (match (app not (app pair? args)) (#f) (_ (-> \"\" <-))) (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match\n   (app not (app pair? args))\n   ((#f)\n    (->\n     (app\n      string-append\n      (app java-compile-exp (app car ...))\n      (match (app pair? ...) ...))\n     <-))\n   _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (app\n   string-append\n   (app java-compile-exp (app car args))\n   (-> (match (app pair? (app cdr ...)) ...) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match\n   (app pair? (app cdr args))\n   (#f)\n   (_ (-> (app string-append \", \" (app java-compile-args (app cdr ...))) <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app string-append \", \" (-> (app java-compile-args (app cdr args)) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app java-compile-args (-> (app cdr args) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app cdr (-> args <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> cdr <-) args) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> java-compile-args <-) (app cdr args)) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app string-append (-> \", \" <-) (app java-compile-args (app cdr args)))\n  (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval\n  (app (-> string-append <-) \", \" (app java-compile-args (app cdr args)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval (match (app pair? (app cdr args)) ((#f) (-> \"\" <-)) _) (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app pair? (app cdr args)) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app pair? (-> (app cdr args) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app cdr (-> args <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> cdr <-) args) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> pair? <-) (app cdr args)) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app\n   string-append\n   (-> (app java-compile-exp (app car args)) <-)\n   (match (app pair? (app cdr ...)) ...))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app java-compile-exp (-> (app car args) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app car (-> args <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> car <-) args) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> java-compile-exp <-) (app car args)) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval\n  (app\n   (-> string-append <-)\n   (app java-compile-exp (app car args))\n   (match (app pair? (app cdr ...)) ...))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app not (app pair? args)) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app not (-> (app pair? args) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app pair? (-> args <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> pair? <-) args) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> not <-) (app pair? args)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  lambda
  "'(eval\n  (letrec*\n   (...\n    java-compile-formals\n    (java-compile-lambda (-> (位 (exp) ...) <-))\n    java-compile-args\n    ...)\n   ...)\n  (env ()))"
  (lambda number char string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  letrec*
  "'(eval (位 (exp) (-> (letrec* (java-wrap-mutables) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  lambda
  "'(eval\n  (letrec* (... () (java-wrap-mutables (-> (位 (vars) ...) <-)) () ...) ...)\n  (env (())))"
  (lambda number char string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval (位 (vars) (-> (match (app not (app pair? ...)) ...) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval (match (app not (app pair? vars)) (#f) (_ (-> \"\" <-))) (env (() ())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match\n   (app not (app pair? vars))\n   ((#f)\n    (->\n     (app\n      string-append\n      (match (app is-mutable? ...) ...)\n      (app java-wrap-mutables (app cdr ...)))\n     <-))\n   _)\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app\n   string-append\n   (match (app is-mutable? (app car ...)) ...)\n   (-> (app java-wrap-mutables (app cdr vars)) <-))\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app java-wrap-mutables (-> (app cdr vars) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app cdr (-> vars <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> cdr <-) vars) (env (() ())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> java-wrap-mutables <-) (app cdr vars)) (env (() ())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (app\n   string-append\n   (-> (match (app is-mutable? (app car ...)) ...) <-)\n   (app java-wrap-mutables (app cdr vars)))\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match\n   (app is-mutable? (app car vars))\n   (#f)\n   (_\n    (->\n     (app\n      string-append\n      \" final ValueCell m_\"\n      (app mangle (app car ...))\n      \" = new ValueCell(\"\n      (app mangle (app car ...))\n      \");\\n\")\n     <-)))\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app\n   string-append\n   \" final ValueCell m_\"\n   (app mangle (app car vars))\n   \" = new ValueCell(\"\n   (app mangle (app car vars))\n   (-> \");\\n\" <-))\n  (env (() ())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app\n   string-append\n   \" final ValueCell m_\"\n   (app mangle (app car vars))\n   \" = new ValueCell(\"\n   (-> (app mangle (app car vars)) <-)\n   \");\\n\")\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app mangle (-> (app car vars) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app car (-> vars <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> car <-) vars) (env (() ())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> mangle <-) (app car vars)) (env (() ())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app\n   string-append\n   \" final ValueCell m_\"\n   (app mangle (app car vars))\n   (-> \" = new ValueCell(\" <-)\n   (app mangle (app car vars))\n   \");\\n\")\n  (env (() ())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app\n   string-append\n   \" final ValueCell m_\"\n   (-> (app mangle (app car vars)) <-)\n   \" = new ValueCell(\"\n   (app mangle (app car vars))\n   \");\\n\")\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app mangle (-> (app car vars) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app car (-> vars <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> car <-) vars) (env (() ())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> mangle <-) (app car vars)) (env (() ())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app\n   string-append\n   (-> \" final ValueCell m_\" <-)\n   (app mangle (app car vars))\n   \" = new ValueCell(\"\n   (app mangle (app car vars))\n   \");\\n\")\n  (env (() ())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval\n  (app\n   (-> string-append <-)\n   \" final ValueCell m_\"\n   (app mangle (app car vars))\n   \" = new ValueCell(\"\n   (app mangle (app car vars))\n   \");\\n\")\n  (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (match (app is-mutable? (app car vars)) ((#f) (-> \"\" <-)) _)\n  (env (() ())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app is-mutable? (app car vars)) <-) (#f) _) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app is-mutable? (-> (app car vars) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app car (-> vars <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> car <-) vars) (env (() ())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> is-mutable? <-) (app car vars)) (env (() ())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval\n  (app\n   (-> string-append <-)\n   (match (app is-mutable? (app car ...)) ...)\n   (app java-wrap-mutables (app cdr vars)))\n  (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app not (app pair? vars)) <-) (#f) _) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app not (-> (app pair? vars) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app pair? (-> vars <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> pair? <-) vars) (env (() ())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> not <-) (app pair? vars)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  let*
  "'(eval\n  (letrec* (java-wrap-mutables) (-> (let* (formals ... num-args) ...) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (let* (... formals (num-args (-> (app length formals) <-)) () ...) ...)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app length (-> formals <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> length <-) formals) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (let* (... () (formals (-> (app lambda->formals exp) <-)) num-args ...) ...)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app lambda->formals (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> lambda->formals <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (let* (formals ... num-args)\n    (->\n     (app\n      string-append\n      \"new NullProcValue\"\n      (app number->string num-args)\n      \" () {\\n\"\n      \" public Value apply(\"\n      (app java-compile-formals formals)\n      \") {\\n\"\n      (app java-wrap-mutables formals)\n      \"\\n\"\n      \"  return \"\n      (app java-compile-exp (app lambda->exp ...))\n      \" ;\\n\"\n      \"}}\\n\")\n     <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app\n   string-append\n   \"new NullProcValue\"\n   (app number->string num-args)\n   \" () {\\n\"\n   \" public Value apply(\"\n   (app java-compile-formals formals)\n   \") {\\n\"\n   (app java-wrap-mutables formals)\n   \"\\n\"\n   \"  return \"\n   (app java-compile-exp (app lambda->exp exp))\n   \" ;\\n\"\n   (-> \"}}\\n\" <-))\n  (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app\n   string-append\n   \"new NullProcValue\"\n   (app number->string num-args)\n   \" () {\\n\"\n   \" public Value apply(\"\n   (app java-compile-formals formals)\n   \") {\\n\"\n   (app java-wrap-mutables formals)\n   \"\\n\"\n   \"  return \"\n   (app java-compile-exp (app lambda->exp exp))\n   (-> \" ;\\n\" <-)\n   \"}}\\n\")\n  (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app\n   string-append\n   \"new NullProcValue\"\n   (app number->string num-args)\n   \" () {\\n\"\n   \" public Value apply(\"\n   (app java-compile-formals formals)\n   \") {\\n\"\n   (app java-wrap-mutables formals)\n   \"\\n\"\n   \"  return \"\n   (-> (app java-compile-exp (app lambda->exp exp)) <-)\n   \" ;\\n\"\n   \"}}\\n\")\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app java-compile-exp (-> (app lambda->exp exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app lambda->exp (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> lambda->exp <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> java-compile-exp <-) (app lambda->exp exp)) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app\n   string-append\n   \"new NullProcValue\"\n   (app number->string num-args)\n   \" () {\\n\"\n   \" public Value apply(\"\n   (app java-compile-formals formals)\n   \") {\\n\"\n   (app java-wrap-mutables formals)\n   \"\\n\"\n   (-> \"  return \" <-)\n   (app java-compile-exp (app lambda->exp exp))\n   \" ;\\n\"\n   \"}}\\n\")\n  (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app\n   string-append\n   \"new NullProcValue\"\n   (app number->string num-args)\n   \" () {\\n\"\n   \" public Value apply(\"\n   (app java-compile-formals formals)\n   \") {\\n\"\n   (app java-wrap-mutables formals)\n   (-> \"\\n\" <-)\n   \"  return \"\n   (app java-compile-exp (app lambda->exp exp))\n   \" ;\\n\"\n   \"}}\\n\")\n  (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app\n   string-append\n   \"new NullProcValue\"\n   (app number->string num-args)\n   \" () {\\n\"\n   \" public Value apply(\"\n   (app java-compile-formals formals)\n   \") {\\n\"\n   (-> (app java-wrap-mutables formals) <-)\n   \"\\n\"\n   \"  return \"\n   (app java-compile-exp (app lambda->exp exp))\n   \" ;\\n\"\n   \"}}\\n\")\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app java-wrap-mutables (-> formals <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> java-wrap-mutables <-) formals) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app\n   string-append\n   \"new NullProcValue\"\n   (app number->string num-args)\n   \" () {\\n\"\n   \" public Value apply(\"\n   (app java-compile-formals formals)\n   (-> \") {\\n\" <-)\n   (app java-wrap-mutables formals)\n   \"\\n\"\n   \"  return \"\n   (app java-compile-exp (app lambda->exp exp))\n   \" ;\\n\"\n   \"}}\\n\")\n  (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app\n   string-append\n   \"new NullProcValue\"\n   (app number->string num-args)\n   \" () {\\n\"\n   \" public Value apply(\"\n   (-> (app java-compile-formals formals) <-)\n   \") {\\n\"\n   (app java-wrap-mutables formals)\n   \"\\n\"\n   \"  return \"\n   (app java-compile-exp (app lambda->exp exp))\n   \" ;\\n\"\n   \"}}\\n\")\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app java-compile-formals (-> formals <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> java-compile-formals <-) formals) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app\n   string-append\n   \"new NullProcValue\"\n   (app number->string num-args)\n   \" () {\\n\"\n   (-> \" public Value apply(\" <-)\n   (app java-compile-formals formals)\n   \") {\\n\"\n   (app java-wrap-mutables formals)\n   \"\\n\"\n   \"  return \"\n   (app java-compile-exp (app lambda->exp exp))\n   \" ;\\n\"\n   \"}}\\n\")\n  (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app\n   string-append\n   \"new NullProcValue\"\n   (app number->string num-args)\n   (-> \" () {\\n\" <-)\n   \" public Value apply(\"\n   (app java-compile-formals formals)\n   \") {\\n\"\n   (app java-wrap-mutables formals)\n   \"\\n\"\n   \"  return \"\n   (app java-compile-exp (app lambda->exp exp))\n   \" ;\\n\"\n   \"}}\\n\")\n  (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app\n   string-append\n   \"new NullProcValue\"\n   (-> (app number->string num-args) <-)\n   \" () {\\n\"\n   \" public Value apply(\"\n   (app java-compile-formals formals)\n   \") {\\n\"\n   (app java-wrap-mutables formals)\n   \"\\n\"\n   \"  return \"\n   (app java-compile-exp (app lambda->exp exp))\n   \" ;\\n\"\n   \"}}\\n\")\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app number->string (-> num-args <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> number->string <-) num-args) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app\n   string-append\n   (-> \"new NullProcValue\" <-)\n   (app number->string num-args)\n   \" () {\\n\"\n   \" public Value apply(\"\n   (app java-compile-formals formals)\n   \") {\\n\"\n   (app java-wrap-mutables formals)\n   \"\\n\"\n   \"  return \"\n   (app java-compile-exp (app lambda->exp exp))\n   \" ;\\n\"\n   \"}}\\n\")\n  (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval\n  (app\n   (-> string-append <-)\n   \"new NullProcValue\"\n   (app number->string num-args)\n   \" () {\\n\"\n   \" public Value apply(\"\n   (app java-compile-formals formals)\n   \") {\\n\"\n   (app java-wrap-mutables formals)\n   \"\\n\"\n   \"  return \"\n   (app java-compile-exp (app lambda->exp exp))\n   \" ;\\n\"\n   \"}}\\n\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  lambda
  "'(eval\n  (letrec*\n   (...\n    java-compile-ref\n    (java-compile-formals (-> (位 (formals) ...) <-))\n    java-compile-lambda\n    ...)\n   ...)\n  (env ()))"
  (lambda number char string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval (位 (formals) (-> (match (app not (app pair? ...)) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval (match (app not (app pair? formals)) (#f) (_ (-> \"\" <-))) (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match\n   (app not (app pair? formals))\n   ((#f)\n    (->\n     (app\n      string-append\n      \"final Value \"\n      (app mangle (app car ...))\n      (match (app pair? ...) ...))\n     <-))\n   _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (app\n   string-append\n   \"final Value \"\n   (app mangle (app car formals))\n   (-> (match (app pair? (app cdr ...)) ...) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match\n   (app pair? (app cdr formals))\n   (#f)\n   (_\n    (-> (app string-append \", \" (app java-compile-formals (app cdr ...))) <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app string-append \", \" (-> (app java-compile-formals (app cdr formals)) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app java-compile-formals (-> (app cdr formals) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app cdr (-> formals <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> cdr <-) formals) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> java-compile-formals <-) (app cdr formals)) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app string-append (-> \", \" <-) (app java-compile-formals (app cdr formals)))\n  (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval\n  (app (-> string-append <-) \", \" (app java-compile-formals (app cdr formals)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval (match (app pair? (app cdr formals)) ((#f) (-> \"\" <-)) _) (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app pair? (app cdr formals)) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app pair? (-> (app cdr formals) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app cdr (-> formals <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> cdr <-) formals) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> pair? <-) (app cdr formals)) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app\n   string-append\n   \"final Value \"\n   (-> (app mangle (app car formals)) <-)\n   (match (app pair? (app cdr ...)) ...))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app mangle (-> (app car formals) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app car (-> formals <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> car <-) formals) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> mangle <-) (app car formals)) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app\n   string-append\n   (-> \"final Value \" <-)\n   (app mangle (app car formals))\n   (match (app pair? (app cdr ...)) ...))\n  (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval\n  (app\n   (-> string-append <-)\n   \"final Value \"\n   (app mangle (app car formals))\n   (match (app pair? (app cdr ...)) ...))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app not (app pair? formals)) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app not (-> (app pair? formals) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app pair? (-> formals <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> pair? <-) formals) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> not <-) (app pair? formals)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  lambda
  "'(eval\n  (letrec*\n   (...\n    java-compile-prim\n    (java-compile-ref (-> (位 (exp) ...) <-))\n    java-compile-formals\n    ...)\n   ...)\n  (env ()))"
  (lambda number char string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval (位 (exp) (-> (match (app is-mutable? exp) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match\n   (app is-mutable? exp)\n   (#f)\n   (_ (-> (app string-append \"m_\" (app mangle exp) \".value\") <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval (app string-append \"m_\" (app mangle exp) (-> \".value\" <-)) (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app string-append \"m_\" (-> (app mangle exp) <-) \".value\") (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app mangle (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> mangle <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval (app string-append (-> \"m_\" <-) (app mangle exp) \".value\") (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> string-append <-) \"m_\" (app mangle exp) \".value\") (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match (app is-mutable? exp) ((#f) (-> (app mangle exp) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app mangle (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> mangle <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app is-mutable? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app is-mutable? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> is-mutable? <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  lambda
  "'(eval\n  (letrec*\n   (...\n    java-compile-const\n    (java-compile-prim (-> (位 (p) ...) <-))\n    java-compile-ref\n    ...)\n   ...)\n  (env ()))"
  (lambda number char string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval (位 (p) (-> (match (app eq? '+ p) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval (match (app eq? '+ p) (#f) (_ (-> \"sum\" <-))) (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (match (app eq? '+ p) ((#f) (-> (match (app eq? '- p) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval (match (app eq? '- p) (#f) (_ (-> \"difference\" <-))) (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (match (app eq? '- p) ((#f) (-> (match (app eq? '* p) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval (match (app eq? '* p) (#f) (_ (-> \"product\" <-))) (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (match (app eq? '* p) ((#f) (-> (match (app eq? '= p) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval (match (app eq? '= p) (#f) (_ (-> \"numEqual\" <-))) (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (match (app eq? '= p) ((#f) (-> (match (app eq? 'display p) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval (match (app eq? 'display p) (#f) (_ (-> \"display\" <-))) (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match\n   (app eq? 'display p)\n   ((#f) (-> (app error \"unhandled primitive \" p) <-))\n   _)\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app error \"unhandled primitive \" (-> p <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval (app error (-> \"unhandled primitive \" <-) p) (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> error <-) \"unhandled primitive \" p) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app eq? 'display p) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app eq? 'display (-> p <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  quoted
  "'(eval (app eq? (-> 'display <-) p) (env (())))"
  (quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> eq? <-) 'display p) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app eq? '= p) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app eq? '= (-> p <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  quoted
  "'(eval (app eq? (-> '= <-) p) (env (())))"
  (quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> eq? <-) '= p) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app eq? '* p) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app eq? '* (-> p <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  quoted
  "'(eval (app eq? (-> '* <-) p) (env (())))"
  (quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> eq? <-) '* p) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app eq? '- p) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app eq? '- (-> p <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  quoted
  "'(eval (app eq? (-> '- <-) p) (env (())))"
  (quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> eq? <-) '- p) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app eq? '+ p) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app eq? '+ (-> p <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  quoted
  "'(eval (app eq? (-> '+ <-) p) (env (())))"
  (quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> eq? <-) '+ p) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  lambda
  "'(eval\n  (letrec*\n   (...\n    java-compile-exp\n    (java-compile-const (-> (位 (exp) ...) <-))\n    java-compile-prim\n    ...)\n   ...)\n  (env ()))"
  (lambda number char string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval (位 (exp) (-> (match (app integer? exp) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match\n   (app integer? exp)\n   (#f)\n   (_\n    (-> (app string-append \"new IntValue(\" (app number->string exp) \")\") <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app string-append \"new IntValue(\" (app number->string exp) (-> \")\" <-))\n  (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app string-append \"new IntValue(\" (-> (app number->string exp) <-) \")\")\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app number->string (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> number->string <-) exp) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app string-append (-> \"new IntValue(\" <-) (app number->string exp) \")\")\n  (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval\n  (app (-> string-append <-) \"new IntValue(\" (app number->string exp) \")\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match\n   (app integer? exp)\n   ((#f) (-> (app error \"unknown constant: \" exp) <-))\n   _)\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app error \"unknown constant: \" (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval (app error (-> \"unknown constant: \" <-) exp) (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> error <-) \"unknown constant: \" exp) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app integer? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app integer? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> integer? <-) exp) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  lambda
  "'(eval\n  (letrec*\n   (...\n    java-compile-program\n    (java-compile-exp (-> (位 (exp) ...) <-))\n    java-compile-const\n    ...)\n   ...)\n  (env ()))"
  (lambda number char string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval (位 (exp) (-> (match (app const? exp) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match (app const? exp) (#f) (_ (-> (app java-compile-const exp) <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app java-compile-const (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> java-compile-const <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (match (app const? exp) ((#f) (-> (match (app prim? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match (app prim? exp) (#f) (_ (-> (app java-compile-prim exp) <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app java-compile-prim (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> java-compile-prim <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (match (app prim? exp) ((#f) (-> (match (app ref? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match (app ref? exp) (#f) (_ (-> (app java-compile-ref exp) <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app java-compile-ref (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> java-compile-ref <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (match (app ref? exp) ((#f) (-> (match (app lambda? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match (app lambda? exp) (#f) (_ (-> (app java-compile-lambda exp) <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app java-compile-lambda (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> java-compile-lambda <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (match (app lambda? exp) ((#f) (-> (match (app if? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match (app if? exp) (#f) (_ (-> (app java-compile-if exp) <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app java-compile-if (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> java-compile-if <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (match (app if? exp) ((#f) (-> (match (app set!? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match (app set!? exp) (#f) (_ (-> (app java-compile-set! exp) <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app java-compile-set! (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> java-compile-set! <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (match (app set!? exp) ((#f) (-> (match (app let? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match\n   (app let? exp)\n   (#f)\n   (_ (-> (app java-compile-exp (app let=>lambda exp)) <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app java-compile-exp (-> (app let=>lambda exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app let=>lambda (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> let=>lambda <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> java-compile-exp <-) (app let=>lambda exp)) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (match (app let? exp) ((#f) (-> (match (app letrec1? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match\n   (app letrec1? exp)\n   (#f)\n   (_ (-> (app java-compile-exp (app letrec1=>Y exp)) <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app java-compile-exp (-> (app letrec1=>Y exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app letrec1=>Y (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> letrec1=>Y <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> java-compile-exp <-) (app letrec1=>Y exp)) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (match (app letrec1? exp) ((#f) (-> (match (app begin? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match\n   (app begin? exp)\n   (#f)\n   (_ (-> (app java-compile-exp (app begin=>let exp)) <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app java-compile-exp (-> (app begin=>let exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app begin=>let (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> begin=>let <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> java-compile-exp <-) (app begin=>let exp)) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (match (app begin? exp) ((#f) (-> (match (app app? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match (app app? exp) (#f) (_ (-> (app java-compile-app exp) <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app java-compile-app (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> java-compile-app <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match (app app? exp) ((#f) (-> (app error \"no-match\") <-)) _)\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval (app error (-> \"no-match\" <-)) (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> error <-) \"no-match\") (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app app? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app app? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> app? <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app begin? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app begin? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> begin? <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app letrec1? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app letrec1? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> letrec1? <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app let? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app let? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> let? <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app set!? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app set!? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> set!? <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app if? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app if? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> if? <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app lambda? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app lambda? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> lambda? <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app ref? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app ref? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> ref? <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app prim? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app prim? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> prim? <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app const? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app const? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> const? <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  lambda
  "'(eval\n  (letrec*\n   (...\n    mangle\n    (java-compile-program (-> (位 (exp) ...) <-))\n    java-compile-exp\n    ...)\n   ...)\n  (env ()))"
  (lambda number char string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (位 (exp)\n    (->\n     (app\n      string-append\n      \"public class BOut extends RuntimeEnvironment {\\n\"\n      \" public static void main (String[] args) {\\n\"\n      (app java-compile-exp exp)\n      \" ;\\n\"\n      \" }\\n\"\n      \"}\\n\")\n     <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app\n   string-append\n   \"public class BOut extends RuntimeEnvironment {\\n\"\n   \" public static void main (String[] args) {\\n\"\n   (app java-compile-exp exp)\n   \" ;\\n\"\n   \" }\\n\"\n   (-> \"}\\n\" <-))\n  (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app\n   string-append\n   \"public class BOut extends RuntimeEnvironment {\\n\"\n   \" public static void main (String[] args) {\\n\"\n   (app java-compile-exp exp)\n   \" ;\\n\"\n   (-> \" }\\n\" <-)\n   \"}\\n\")\n  (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app\n   string-append\n   \"public class BOut extends RuntimeEnvironment {\\n\"\n   \" public static void main (String[] args) {\\n\"\n   (app java-compile-exp exp)\n   (-> \" ;\\n\" <-)\n   \" }\\n\"\n   \"}\\n\")\n  (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app\n   string-append\n   \"public class BOut extends RuntimeEnvironment {\\n\"\n   \" public static void main (String[] args) {\\n\"\n   (-> (app java-compile-exp exp) <-)\n   \" ;\\n\"\n   \" }\\n\"\n   \"}\\n\")\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app java-compile-exp (-> exp <-)) (env (())))"
  #f
  5
  3
  2
  0
  3
  2
  5
  1
  1
  3
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> java-compile-exp <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app\n   string-append\n   \"public class BOut extends RuntimeEnvironment {\\n\"\n   (-> \" public static void main (String[] args) {\\n\" <-)\n   (app java-compile-exp exp)\n   \" ;\\n\"\n   \" }\\n\"\n   \"}\\n\")\n  (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval\n  (app\n   string-append\n   (-> \"public class BOut extends RuntimeEnvironment {\\n\" <-)\n   \" public static void main (String[] args) {\\n\"\n   (app java-compile-exp exp)\n   \" ;\\n\"\n   \" }\\n\"\n   \"}\\n\")\n  (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval\n  (app\n   (-> string-append <-)\n   \"public class BOut extends RuntimeEnvironment {\\n\"\n   \" public static void main (String[] args) {\\n\"\n   (app java-compile-exp exp)\n   \" ;\\n\"\n   \" }\\n\"\n   \"}\\n\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  lambda
  "'(eval\n  (letrec*\n   (...\n    analyze-mutable-variables\n    (mangle (-> (位 (symbol) ...) <-))\n    java-compile-program\n    ...)\n   ...)\n  (env ()))"
  (lambda number char string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  letrec*
  "'(eval (位 (symbol) (-> (letrec* (m) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  lambda
  "'(eval (letrec* (... () (m (-> (位 (chars) ...) <-)) () ...) ...) (env (())))"
  (lambda number char string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval (位 (chars) (-> (match (app null? chars) ...) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (app null? chars) (#f) (_ (-> (app nil) <-))) (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (match\n   (app null? chars)\n   ((#f) (-> (match (match (match (...) ...) ...) ...) <-))\n   _)\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match\n   (match (match (app char-alphabetic? ...) ...) ...)\n   (#f)\n   (_ (-> (app cons (app car chars) (app m (app cdr ...))) <-)))\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app cons (app car chars) (-> (app m (app cdr chars)) <-))\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app m (-> (app cdr chars) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app cdr (-> chars <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> cdr <-) chars) (env (() ())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> m <-) (app cdr chars)) (env (() ())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app cons (-> (app car chars) <-) (app m (app cdr chars)))\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app car (-> chars <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> car <-) chars) (env (() ())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval\n  (app (-> cons <-) (app car chars) (app m (app cdr chars)))\n  (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match\n   (match (match (app char-alphabetic? ...) ...) ...)\n   ((#f)\n    (->\n     (app cons #\\_ (app append (app integer->char-list ...) (app m ...)))\n     <-))\n   _)\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app\n   cons\n   #\\_\n   (->\n    (app\n     append\n     (app integer->char-list (app char->natural ...))\n     (app m (app cdr ...)))\n    <-))\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app\n   append\n   (app integer->char-list (app char->natural (app car ...)))\n   (-> (app m (app cdr chars)) <-))\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app m (-> (app cdr chars) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app cdr (-> chars <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> cdr <-) chars) (env (() ())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> m <-) (app cdr chars)) (env (() ())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app\n   append\n   (-> (app integer->char-list (app char->natural (app car ...))) <-)\n   (app m (app cdr chars)))\n  (env (() ())))"
  #f
  27
  21
  3
  3
  21
  3
  24
  1
  1
  12
  #f
  6/7
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app integer->char-list (-> (app char->natural (app car chars)) <-))\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app char->natural (-> (app car chars) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app car (-> chars <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> car <-) chars) (env (() ())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> char->natural <-) (app car chars)) (env (() ())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval\n  (app (-> integer->char-list <-) (app char->natural (app car chars)))\n  (env (() ())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval\n  (app\n   (-> append <-)\n   (app integer->char-list (app char->natural (app car ...)))\n   (app m (app cdr chars)))\n  (env (() ())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  char
  "'(eval\n  (app\n   cons\n   (-> #\\_ <-)\n   (app\n    append\n    (app integer->char-list (app char->natural ...))\n    (app m (app cdr ...))))\n  (env (() ())))"
  (char string quoted constructor)
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   #\\_\n   (app\n    append\n    (app integer->char-list (app char->natural ...))\n    (app m (app cdr ...))))\n  (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (match (-> (match (match (app char-alphabetic? ...) ...) ...) <-) (#f) _)\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match\n   (match (app char-alphabetic? (app car ...)) ...)\n   (#f)\n   (_ (-> (app #t) <-)))\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  constructor
  "'(eval (app (-> #t <-)) (env (() ())))"
  (constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (match\n   (match (app char-alphabetic? (app car ...)) ...)\n   ((#f) (-> (match (app char-numeric? (app car ...)) ...) <-))\n   _)\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match (app char-numeric? (app car chars)) (#f) (_ (-> (app #t) <-)))\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  constructor
  "'(eval (app (-> #t <-)) (env (() ())))"
  (constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match (app char-numeric? (app car chars)) ((#f) (-> (app #f) <-)) _)\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  constructor
  "'(eval (app (-> #f <-)) (env (() ())))"
  (constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match (-> (app char-numeric? (app car chars)) <-) (#f) _)\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app char-numeric? (-> (app car chars) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app car (-> chars <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> car <-) chars) (env (() ())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> char-numeric? <-) (app car chars)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (match (-> (match (app char-alphabetic? (app car ...)) ...) <-) (#f) _)\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (match\n   (app char-alphabetic? (app car chars))\n   (#f)\n   (_ (-> (match (app not (app char=? ...)) ...) <-)))\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match (app not (app char=? (app car ...) #\\_)) (#f) (_ (-> (app #t) <-)))\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  constructor
  "'(eval (app (-> #t <-)) (env (() ())))"
  (constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match (app not (app char=? (app car ...) #\\_)) ((#f) (-> (app #f) <-)) _)\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  constructor
  "'(eval (app (-> #f <-)) (env (() ())))"
  (constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match (-> (app not (app char=? (app car ...) #\\_)) <-) (#f) _)\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app not (-> (app char=? (app car chars) #\\_) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  char
  "'(eval (app char=? (app car chars) (-> #\\_ <-)) (env (() ())))"
  (char string quoted constructor)
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app char=? (-> (app car chars) <-) #\\_) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app car (-> chars <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> car <-) chars) (env (() ())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> char=? <-) (app car chars) #\\_) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> not <-) (app char=? (app car chars) #\\_)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match (app char-alphabetic? (app car chars)) ((#f) (-> (app #f) <-)) _)\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  constructor
  "'(eval (app (-> #f <-)) (env (() ())))"
  (constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match (-> (app char-alphabetic? (app car chars)) <-) (#f) _)\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app char-alphabetic? (-> (app car chars) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app car (-> chars <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> car <-) chars) (env (() ())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> char-alphabetic? <-) (app car chars)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app null? chars) <-) (#f) _) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app null? (-> chars <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> null? <-) chars) (env (() ())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (letrec* (m) (-> (app list->string (app m (app string->list ...))) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app\n   list->string\n   (-> (app m (app string->list (app symbol->string ...))) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app m (-> (app string->list (app symbol->string symbol)) <-))\n  (env (())))"
  #f
  23
  18
  3
  2
  18
  3
  21
  1
  1
  10
  #f
  8/9
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app string->list (-> (app symbol->string symbol) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app symbol->string (-> symbol <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> symbol->string <-) symbol) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> string->list <-) (app symbol->string symbol)) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval\n  (app (-> m <-) (app string->list (app symbol->string symbol)))\n  (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval\n  (app\n   (-> list->string <-)\n   (app m (app string->list (app symbol->string ...))))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  lambda
  "'(eval\n  (letrec*\n   (...\n    is-mutable?\n    (analyze-mutable-variables (-> (位 (exp) ...) <-))\n    mangle\n    ...)\n   ...)\n  (env ()))"
  (lambda number char string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval (位 (exp) (-> (match (app const? exp) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (app const? exp) (#f) (_ (-> (app void) <-))) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> void <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (match (app const? exp) ((#f) (-> (match (app ref? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (app ref? exp) (#f) (_ (-> (app void) <-))) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> void <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (match (app ref? exp) ((#f) (-> (match (app prim? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (app prim? exp) (#f) (_ (-> (app void) <-))) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> void <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (match (app prim? exp) ((#f) (-> (match (app lambda? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match\n   (app lambda? exp)\n   (#f)\n   (_ (-> (app analyze-mutable-variables (app lambda->exp exp)) <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app analyze-mutable-variables (-> (app lambda->exp exp) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app lambda->exp (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> lambda->exp <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval\n  (app (-> analyze-mutable-variables <-) (app lambda->exp exp))\n  (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (match (app lambda? exp) ((#f) (-> (match (app let? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  let
  "'(eval (match (app let? exp) (#f) (_ (-> (let (_) ...) <-))) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (let (...\n        ()\n        (_\n         (->\n          (app\n           map\n           analyze-mutable-variables\n           (app map cadr (app let->bindings ...)))\n          <-))\n        ()\n        ...)\n    ...)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app\n   map\n   analyze-mutable-variables\n   (-> (app map cadr (app let->bindings exp)) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app map cadr (-> (app let->bindings exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app let->bindings (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> let->bindings <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app map (-> cadr <-) (app let->bindings exp)) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> map <-) cadr (app let->bindings exp)) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval\n  (app\n   map\n   (-> analyze-mutable-variables <-)\n   (app map cadr (app let->bindings exp)))\n  (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval\n  (app\n   (-> map <-)\n   analyze-mutable-variables\n   (app map cadr (app let->bindings exp)))\n  (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (let (_) (-> (app analyze-mutable-variables (app let->exp exp)) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app analyze-mutable-variables (-> (app let->exp exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app let->exp (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> let->exp <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> analyze-mutable-variables <-) (app let->exp exp)) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (match (app let? exp) ((#f) (-> (match (app letrec1? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  let
  "'(eval (match (app letrec1? exp) (#f) (_ (-> (let (_) ...) <-))) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (let (...\n        ()\n        (_\n         (->\n          (app analyze-mutable-variables (app cadr (app letrec1->binding ...)))\n          <-))\n        ()\n        ...)\n    ...)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app analyze-mutable-variables (-> (app cadr (app letrec1->binding exp)) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app cadr (-> (app letrec1->binding exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app letrec1->binding (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> letrec1->binding <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> cadr <-) (app letrec1->binding exp)) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval\n  (app (-> analyze-mutable-variables <-) (app cadr (app letrec1->binding exp)))\n  (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (let (_) (-> (app analyze-mutable-variables (app letrec1->exp exp)) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app analyze-mutable-variables (-> (app letrec1->exp exp) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app letrec1->exp (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> letrec1->exp <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval\n  (app (-> analyze-mutable-variables <-) (app letrec1->exp exp))\n  (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (match (app letrec1? exp) ((#f) (-> (match (app set!? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match\n   (app set!? exp)\n   (#f)\n   (_ (-> (app mark-mutable (app set!-var exp)) <-)))\n  (env (())))"
  #f
  6
  5
  0
  1
  5
  0
  5
  1
  1
  5
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app mark-mutable (-> (app set!-var exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app set!-var (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> set!-var <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> mark-mutable <-) (app set!-var exp)) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (match (app set!? exp) ((#f) (-> (match (app if? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  let
  "'(eval (match (app if? exp) (#f) (_ (-> (let (_) ...) <-))) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (let (...\n        ()\n        (_ (-> (app analyze-mutable-variables (app if->condition exp)) <-))\n        ()\n        ...)\n    ...)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app analyze-mutable-variables (-> (app if->condition exp) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app if->condition (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> if->condition <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval\n  (app (-> analyze-mutable-variables <-) (app if->condition exp))\n  (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  let
  "'(eval (let (_) (-> (let (_) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (let (...\n        ()\n        (_ (-> (app analyze-mutable-variables (app if->then exp)) <-))\n        ()\n        ...)\n    ...)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app analyze-mutable-variables (-> (app if->then exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app if->then (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> if->then <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> analyze-mutable-variables <-) (app if->then exp)) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (let (_) (-> (app analyze-mutable-variables (app if->else exp)) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (app analyze-mutable-variables (-> (app if->else exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app if->else (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> if->else <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> analyze-mutable-variables <-) (app if->else exp)) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (match (app if? exp) ((#f) (-> (match (app begin? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  let
  "'(eval (match (app begin? exp) (#f) (_ (-> (let (_) ...) <-))) (env (())))"
  #f
  3
  3
  0
  0
  3
  0
  3
  1
  1
  3
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (let (...\n        ()\n        (_ (-> (app map analyze-mutable-variables (app begin->exps exp)) <-))\n        ()\n        ...)\n    ...)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (app map analyze-mutable-variables (-> (app begin->exps exp) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app begin->exps (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> begin->exps <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval\n  (app map (-> analyze-mutable-variables <-) (app begin->exps exp))\n  (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval\n  (app (-> map <-) analyze-mutable-variables (app begin->exps exp))\n  (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (let (_) (-> (app void) <-)) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> void <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval\n  (match (app begin? exp) ((#f) (-> (match (app app? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  let
  "'(eval (match (app app? exp) (#f) (_ (-> (let (_) ...) <-))) (env (())))"
  #f
  3
  3
  0
  0
  3
  0
  3
  1
  1
  3
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (let (... () (_ (-> (app map analyze-mutable-variables exp) <-)) () ...) ...)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app map analyze-mutable-variables (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app map (-> analyze-mutable-variables <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> map <-) analyze-mutable-variables exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (let (_) (-> (app void) <-)) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> void <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval\n  (match\n   (app app? exp)\n   ((#f) (-> (app error \"unknown expression type: \" exp) <-))\n   _)\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app error \"unknown expression type: \" (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  string
  "'(eval (app error (-> \"unknown expression type: \" <-) exp) (env (())))"
  (string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> error <-) \"unknown expression type: \" exp) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app app? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app app? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> app? <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app begin? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app begin? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> begin? <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app if? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app if? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> if? <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app set!? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app set!? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> set!? <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app letrec1? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app letrec1? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> letrec1? <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app let? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app let? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> let? <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app lambda? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app lambda? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> lambda? <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app prim? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app prim? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> prim? <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app ref? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app ref? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> ref? <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (-> (app const? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app const? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  ref-or-constructor
  "'(eval (app (-> const? <-) exp) (env (())))"
  (lambda number char string quoted constructor)
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  lambda
  "'(eval\n  (letrec*\n   (...\n    mark-mutable\n    (is-mutable? (-> (位 (symbol) ...) <-))\n    analyze-mutable-variables\n    ...)\n   ...)\n  (env ()))"
  (lambda number char string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  letrec*
  "'(eval (位 (symbol) (-> (letrec* (is-in?) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  lambda
  "'(eval (letrec* (... () (is-in? (-> (位 (S) ...) <-)) () ...) ...) (env (())))"
  (lambda number char string quoted constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  match
  "'(eval (位 (S) (-> (match (app not (app pair? ...)) ...) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  5
  1311
  app
  "'(eval (match (app not (app pair? S)) (#f) (_ (-> (app #f) <-))) (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  scheme2java
  0
  5
  1311
  constructor
  "'(eval (app (-> #f <-)) (env (() ())))"
  (constructor)
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache