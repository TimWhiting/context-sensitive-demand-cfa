'(clean-cache
  tic-tac-toe
  0
  353
  lettypes
  "\"'(eval ((top) lettypes (cons ... player) ...) (env ()))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  letrec*
  "\"'(eval\n  (lettypes cons ... player (letrec* (some-v ... zero-player-game) ...))\n  (env ()))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (λ ()\n    (->\n     (app\n      play-game\n      (app player (app X) (app make-ai-action (app X)))\n      (app player (app O) (app make-ai-action (app O))))\n     <-))\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app\n   play-game\n   (app player (app X) (app make-ai-action (app X)))\n   (-> (app player (app O) (app make-ai-action (app O))) <-))\n  (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app player (app O) (-> (app make-ai-action (app O)) <-)) (env (())))\""
  5
  4
  0
  1
  4
  0
  4
  1
  1
  4
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app make-ai-action (-> (app O) <-)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app player (-> (app O) <-) (app make-ai-action (app O))) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app\n   play-game\n   (-> (app player (app X) (app make-ai-action (app X))) <-)\n   (app player (app O) (app make-ai-action (app O))))\n  (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app player (app X) (-> (app make-ai-action (app X)) <-)) (env (())))\""
  5
  4
  0
  1
  4
  0
  4
  1
  1
  4
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app make-ai-action (-> (app X) <-)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app player (-> (app X) <-) (app make-ai-action (app X))) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (λ ()\n    (->\n     (app\n      play-game\n      (app player (app X) human-action)\n      (app player (app O) (app make-ai-action (app O))))\n     <-))\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app\n   play-game\n   (app player (app X) human-action)\n   (-> (app player (app O) (app make-ai-action (app O))) <-))\n  (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app player (app O) (-> (app make-ai-action (app O)) <-)) (env (())))\""
  5
  4
  0
  1
  4
  0
  4
  1
  1
  4
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app make-ai-action (-> (app O) <-)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app player (-> (app O) <-) (app make-ai-action (app O))) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app\n   play-game\n   (-> (app player (app X) human-action) <-)\n   (app player (app O) (app make-ai-action (app O))))\n  (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app player (-> (app X) <-) human-action) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (λ ()\n    (->\n     (app\n      play-game\n      (app player (app X) human-action)\n      (app player (app O) human-action))\n     <-))\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app\n   play-game\n   (app player (app X) human-action)\n   (-> (app player (app O) human-action) <-))\n  (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app player (-> (app O) <-) human-action) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app\n   play-game\n   (-> (app player (app X) human-action) <-)\n   (app player (app O) human-action))\n  (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app player (-> (app X) <-) human-action) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (λ (player-one player-two)\n    (-> (app play-turn empty-board player-one player-two) <-))\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app play-turn empty-board player-one (-> player-two <-)) (env (())))\""
  11
  7
  4
  0
  7
  4
  11
  1
  1
  6
  #f
  37/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app play-turn empty-board (-> player-one <-) player-two) (env (())))\""
  11
  7
  4
  0
  7
  4
  11
  1
  1
  6
  #f
  37/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  let
  "\"'(eval (λ (bo this-play that-play) (-> (let (_) ...) <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (let (... () (_ (-> (app draw-board! bo) <-)) () ...) ...) (env (())))\""
  6
  5
  0
  1
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app draw-board! (-> bo <-)) (env (())))\""
  12
  8
  3
  1
  8
  3
  11
  1
  1
  7
  #f
  41/8
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  match
  "\"'(eval (let (_) (-> (match this-play ...) <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  let
  "\"'(eval\n  (match this-play ((player mark action) (-> (let (co) ...) <-)))\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  letrec
  "\"'(eval (let (... () (co (-> (letrec (loop) ...) <-)) () ...) ...) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  let
  "\"'(eval (λ () (-> (let (co) ...) <-)) (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (let (... () (co (-> (app action bo) <-)) () ...) ...) (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app action (-> bo <-)) (env (() ())))\""
  12
  8
  3
  1
  8
  3
  11
  1
  1
  7
  #f
  41/8
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app (-> action <-) bo) (env (() ())))\""
  38
  30
  7
  1
  30
  7
  37
  1
  1
  24
  #f
  17/3
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (let (co) (-> (match (app blank? (app board-lookup co bo)) ...) <-))\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval\n  (match (app blank? (app board-lookup co bo)) (#f) (_ (-> co <-)))\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match (app blank? (app board-lookup co bo)) ((#f) (-> (app loop) <-)) _)\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match (-> (app blank? (app board-lookup co bo)) <-) (#f) _)\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app blank? (-> (app board-lookup co bo) <-)) (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-lookup co (-> bo <-)) (env (() ())))\""
  12
  8
  3
  1
  8
  3
  11
  1
  1
  7
  #f
  41/8
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app board-lookup (-> co <-) bo) (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (letrec (loop) (-> (app loop) <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  let
  "\"'(eval (let (co) (-> (let (bo) ...) <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (let (... () (bo (-> (app board-mark co mark bo) <-)) () ...) ...)\n  (env (())))\""
  5
  4
  0
  1
  4
  0
  4
  1
  1
  4
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-mark co mark (-> bo <-)) (env (())))\""
  12
  8
  3
  1
  8
  3
  11
  1
  1
  7
  #f
  41/8
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-mark co (-> mark <-) bo) (env (())))\""
  37
  30
  7
  0
  30
  7
  37
  1
  1
  24
  #f
  17/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app board-mark (-> co <-) mark bo) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  match
  "\"'(eval (let (bo) (-> (match (app wins? bo mark) ...) <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  let
  "\"'(eval (match (app wins? bo mark) (#f) (_ (-> (let (_) ...) <-))) (env (())))\""
  3
  3
  0
  0
  3
  0
  3
  1
  1
  3
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (let (... () (_ (-> (app draw-board! bo) <-)) () ...) ...) (env (())))\""
  6
  5
  0
  1
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app draw-board! (-> bo <-)) (env (())))\""
  6
  5
  0
  1
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (let (_) (-> (app void) <-)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (match (app wins? bo mark) ((#f) (-> (match (app full? bo) ...) <-)) _)\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  let
  "\"'(eval (match (app full? bo) (#f) (_ (-> (let (_) ...) <-))) (env (())))\""
  4
  4
  0
  0
  4
  0
  4
  1
  1
  3
  #t
  19/4
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (let (... () (_ (-> (app draw-board! bo) <-)) () ...) ...) (env (())))\""
  6
  5
  0
  1
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app draw-board! (-> bo <-)) (env (())))\""
  6
  5
  0
  1
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (let (_) (-> (app display \"Cat's game.\\n\") <-)) (env (())))\""
  3
  3
  0
  0
  3
  0
  3
  1
  1
  2
  #t
  14/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match\n   (app full? bo)\n   ((#f) (-> (app play-turn bo that-play this-play) <-))\n   _)\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app play-turn bo that-play (-> this-play <-)) (env (())))\""
  23
  16
  7
  0
  16
  7
  23
  1
  1
  12
  #f
  47/8
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app play-turn bo (-> that-play <-) this-play) (env (())))\""
  23
  16
  7
  0
  16
  7
  23
  1
  1
  12
  #f
  47/8
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app play-turn (-> bo <-) that-play this-play) (env (())))\""
  6
  5
  0
  1
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (match (-> (app full? bo) <-) (#f) _) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app full? (-> bo <-)) (env (())))\""
  6
  5
  0
  1
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (match (-> (app wins? bo mark) <-) (#f) _) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app wins? bo (-> mark <-)) (env (())))\""
  37
  30
  7
  0
  30
  7
  37
  1
  1
  24
  #f
  17/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app wins? (-> bo <-) mark) (env (())))\""
  6
  5
  0
  1
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (match (-> this-play <-) (player mark action)) (env (())))\""
  24
  17
  7
  0
  17
  7
  24
  1
  1
  12
  #f
  104/17
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (λ (bo) (-> (app void) <-)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (λ (bo)\n    (-> (app move-coord (app some-v (app maximin bo ma (app mark⁻¹ ma)))) <-))\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app move-coord (-> (app some-v (app maximin bo ma (app mark⁻¹ ma))) <-))\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app some-v (-> (app maximin bo ma (app mark⁻¹ ma)) <-)) (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app maximin bo ma (-> (app mark⁻¹ ma) <-)) (env (() ())))\""
  23
  16
  6
  1
  16
  6
  22
  1
  1
  12
  #f
  21/4
  ((0 0 0) (1/2 1/2 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app mark⁻¹ (-> ma <-)) (env (() ())))\""
  11
  7
  4
  0
  7
  4
  11
  1
  1
  6
  #f
  36/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app maximin bo (-> ma <-) (app mark⁻¹ ma)) (env (() ())))\""
  11
  7
  4
  0
  7
  4
  11
  1
  1
  6
  #f
  36/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app maximin (-> bo <-) ma (app mark⁻¹ ma)) (env (() ())))\""
  41
  18
  20
  3
  18
  20
  38
  1
  1
  16
  #f
  46/9
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (λ (bo) (-> (app error 'human-action \"not implemented\") <-)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (λ (bo this-mark that-mark)\n    (-> (app fold/coord (λ (co mm) ...) (app none)) <-))\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app fold/coord (λ (co mm) ...) (-> (app none) <-)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (λ (co mm) (-> (match (app blank? (app board-lookup co bo)) ...) <-))\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  let
  "\"'(eval\n  (match (app blank? (app board-lookup co bo)) (#f) (_ (-> (let (bo) ...) <-)))\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (let (... () (bo (-> (app board-mark co this-mark bo) <-)) () ...) ...)\n  (env (() ())))\""
  5
  4
  0
  1
  4
  0
  4
  1
  1
  4
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-mark co this-mark (-> bo <-)) (env (() ())))\""
  48
  22
  23
  3
  22
  23
  45
  1
  1
  19
  #f
  113/22
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-mark co (-> this-mark <-) bo) (env (() ())))\""
  19
  10
  9
  0
  10
  9
  19
  1
  1
  6
  #f
  27/5
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-mark (-> co <-) this-mark bo) (env (() ())))\""
  8
  5
  2
  1
  5
  2
  7
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (let (bo)\n    (->\n     (app max-maybe-move mm (app move co (match (app wins? bo this-mark) ...)))\n     <-))\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app\n   max-maybe-move\n   mm\n   (-> (app move co (match (app wins? bo this-mark) ...)) <-))\n  (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (app move co (-> (match (app wins? bo this-mark) ...) <-))\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match (app wins? bo this-mark) (#f) (_ (-> (app horizon (app win) 0) <-)))\n  (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app horizon (-> (app win) <-) 0) (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (match (app wins? bo this-mark) ((#f) (-> (match (app full? bo) ...) <-)) _)\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match (app full? bo) (#f) (_ (-> (app horizon (app draw) 0) <-)))\n  (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app horizon (-> (app draw) <-) 0) (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match\n   (app full? bo)\n   ((#f)\n    (->\n     (app\n      horizon-add1\n      (app move-horizon (app some-v (app minimax bo that-mark this-mark))))\n     <-))\n   _)\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app\n   horizon-add1\n   (->\n    (app move-horizon (app some-v (app minimax bo that-mark this-mark)))\n    <-))\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app move-horizon (-> (app some-v (app minimax bo that-mark this-mark)) <-))\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app some-v (-> (app minimax bo that-mark this-mark) <-)) (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app minimax bo that-mark (-> this-mark <-)) (env (() ())))\""
  18
  9
  9
  0
  9
  9
  18
  1
  1
  6
  #f
  16/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app minimax bo (-> that-mark <-) this-mark) (env (() ())))\""
  30
  18
  11
  1
  18
  11
  29
  1
  1
  12
  #f
  16/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app minimax (-> bo <-) that-mark this-mark) (env (() ())))\""
  6
  5
  0
  1
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (match (-> (app full? bo) <-) (#f) _) (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app full? (-> bo <-)) (env (() ())))\""
  6
  5
  0
  1
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (match (-> (app wins? bo this-mark) <-) (#f) _) (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app wins? bo (-> this-mark <-)) (env (() ())))\""
  19
  10
  9
  0
  10
  9
  19
  1
  1
  6
  #f
  27/5
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app wins? (-> bo <-) this-mark) (env (() ())))\""
  6
  5
  0
  1
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval\n  (app move (-> co <-) (match (app wins? bo this-mark) ...))\n  (env (() ())))\""
  8
  5
  2
  1
  5
  2
  7
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval\n  (app\n   max-maybe-move\n   (-> mm <-)\n   (app move co (match (app wins? bo this-mark) ...)))\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval\n  (match (app blank? (app board-lookup co bo)) ((#f) (-> mm <-)) _)\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match (-> (app blank? (app board-lookup co bo)) <-) (#f) _)\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app blank? (-> (app board-lookup co bo) <-)) (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-lookup co (-> bo <-)) (env (() ())))\""
  48
  22
  23
  3
  22
  23
  45
  1
  1
  19
  #f
  113/22
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-lookup (-> co <-) bo) (env (() ())))\""
  8
  5
  2
  1
  5
  2
  7
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (λ (bo this-mark that-mark)\n    (-> (app fold/coord (λ (co mm) ...) (app none)) <-))\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app fold/coord (λ (co mm) ...) (-> (app none) <-)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (λ (co mm) (-> (match (app blank? (app board-lookup co bo)) ...) <-))\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  let
  "\"'(eval\n  (match (app blank? (app board-lookup co bo)) (#f) (_ (-> (let (bo) ...) <-)))\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (let (... () (bo (-> (app board-mark co this-mark bo) <-)) () ...) ...)\n  (env (() ())))\""
  5
  4
  0
  1
  4
  0
  4
  1
  1
  4
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-mark co this-mark (-> bo <-)) (env (() ())))\""
  9
  6
  2
  1
  6
  2
  8
  1
  1
  6
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-mark co (-> this-mark <-) bo) (env (() ())))\""
  31
  19
  11
  1
  19
  11
  30
  1
  1
  12
  #f
  102/19
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-mark (-> co <-) this-mark bo) (env (() ())))\""
  8
  5
  2
  1
  5
  2
  7
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (let (bo)\n    (->\n     (app min-maybe-move mm (app move co (match (app wins? bo this-mark) ...)))\n     <-))\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app\n   min-maybe-move\n   mm\n   (-> (app move co (match (app wins? bo this-mark) ...)) <-))\n  (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (app move co (-> (match (app wins? bo this-mark) ...) <-))\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match (app wins? bo this-mark) (#f) (_ (-> (app horizon (app lose) 0) <-)))\n  (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app horizon (-> (app lose) <-) 0) (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (match (app wins? bo this-mark) ((#f) (-> (match (app full? bo) ...) <-)) _)\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match (app full? bo) (#f) (_ (-> (app horizon (app draw) 0) <-)))\n  (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app horizon (-> (app draw) <-) 0) (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match\n   (app full? bo)\n   ((#f)\n    (->\n     (app\n      horizon-add1\n      (app move-horizon (app some-v (app maximin bo that-mark this-mark))))\n     <-))\n   _)\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app\n   horizon-add1\n   (->\n    (app move-horizon (app some-v (app maximin bo that-mark this-mark)))\n    <-))\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app move-horizon (-> (app some-v (app maximin bo that-mark this-mark)) <-))\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app some-v (-> (app maximin bo that-mark this-mark) <-)) (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app maximin bo that-mark (-> this-mark <-)) (env (() ())))\""
  30
  18
  11
  1
  18
  11
  29
  1
  1
  12
  #f
  16/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app maximin bo (-> that-mark <-) this-mark) (env (() ())))\""
  18
  9
  9
  0
  9
  9
  18
  1
  1
  6
  #f
  16/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app maximin (-> bo <-) that-mark this-mark) (env (() ())))\""
  6
  5
  0
  1
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (match (-> (app full? bo) <-) (#f) _) (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app full? (-> bo <-)) (env (() ())))\""
  6
  5
  0
  1
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (match (-> (app wins? bo this-mark) <-) (#f) _) (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app wins? bo (-> this-mark <-)) (env (() ())))\""
  31
  19
  11
  1
  19
  11
  30
  1
  1
  12
  #f
  102/19
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app wins? (-> bo <-) this-mark) (env (() ())))\""
  6
  5
  0
  1
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval\n  (app move (-> co <-) (match (app wins? bo this-mark) ...))\n  (env (() ())))\""
  8
  5
  2
  1
  5
  2
  7
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval\n  (app\n   min-maybe-move\n   (-> mm <-)\n   (app move co (match (app wins? bo this-mark) ...)))\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval\n  (match (app blank? (app board-lookup co bo)) ((#f) (-> mm <-)) _)\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match (-> (app blank? (app board-lookup co bo)) <-) (#f) _)\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app blank? (-> (app board-lookup co bo) <-)) (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-lookup co (-> bo <-)) (env (() ())))\""
  9
  6
  2
  1
  6
  2
  8
  1
  1
  6
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-lookup (-> co <-) bo) (env (() ())))\""
  8
  5
  2
  1
  5
  2
  7
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (mmo mo₁) (-> (match mmo ...) <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match mmo (some mo₀) ((none) (-> (app some mo₁) <-))) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app some (-> mo₁ <-)) (env (())))\""
  5
  3
  2
  0
  3
  2
  5
  1
  1
  3
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match\n   mmo\n   ((some mo₀)\n    (->\n     (app\n      some\n      (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...))\n     <-))\n   (none))\n  (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (app\n   some\n   (->\n    (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...)\n    <-))\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval\n  (match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   (#f)\n   (_ (-> mo₁ <-)))\n  (env (())))\""
  5
  3
  2
  0
  3
  2
  5
  1
  1
  3
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval\n  (match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   ((#f) (-> mo₀ <-))\n   _)\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match\n   (-> (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) <-)\n   (#f)\n   _)\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app horizon< (app move-horizon mo₀) (-> (app move-horizon mo₁) <-))\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app move-horizon (-> mo₁ <-)) (env (())))\""
  5
  3
  2
  0
  3
  2
  5
  1
  1
  3
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app horizon< (-> (app move-horizon mo₀) <-) (app move-horizon mo₁))\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app move-horizon (-> mo₀ <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> mmo <-) (some mo₀) (none)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (mmo mo₁) (-> (match mmo ...) <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match mmo (some mo₀) ((none) (-> (app some mo₁) <-))) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app some (-> mo₁ <-)) (env (())))\""
  5
  3
  2
  0
  3
  2
  5
  1
  1
  3
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match\n   mmo\n   ((some mo₀)\n    (->\n     (app\n      some\n      (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...))\n     <-))\n   (none))\n  (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (app\n   some\n   (->\n    (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...)\n    <-))\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval\n  (match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   (#f)\n   (_ (-> mo₀ <-)))\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval\n  (match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   ((#f) (-> mo₁ <-))\n   _)\n  (env (())))\""
  5
  3
  2
  0
  3
  2
  5
  1
  1
  3
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match\n   (-> (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) <-)\n   (#f)\n   _)\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app horizon< (app move-horizon mo₀) (-> (app move-horizon mo₁) <-))\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app move-horizon (-> mo₁ <-)) (env (())))\""
  5
  3
  2
  0
  3
  2
  5
  1
  1
  3
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app horizon< (-> (app move-horizon mo₀) <-) (app move-horizon mo₁))\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app move-horizon (-> mo₀ <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> mmo <-) (some mo₀) (none)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (f x) (-> (app foldl (λ (r x) ...) x is) <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app foldl (λ (r x) ...) x (-> is <-)) (env (())))\""
  3
  3
  0
  0
  3
  0
  3
  1
  1
  3
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app foldl (λ (r x) ...) (-> x <-) is) (env (())))\""
  8
  5
  3
  0
  5
  3
  8
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (r x) (-> (app foldl (λ (c x) ...) x is) <-)) (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app foldl (λ (c x) ...) x (-> is <-)) (env (() ())))\""
  3
  3
  0
  0
  3
  0
  3
  1
  1
  3
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app foldl (λ (c x) ...) (-> x <-) is) (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (c x) (-> (app f (app coord r c) x) <-)) (env (() () ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app f (app coord r c) (-> x <-)) (env (() () ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app f (-> (app coord r c) <-) x) (env (() () ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord r (-> c <-)) (env (() () ())))\""
  31
  23
  7
  1
  23
  7
  30
  1
  1
  19
  #f
  124/23
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord (-> r <-) c) (env (() () ())))\""
  31
  23
  7
  1
  23
  7
  30
  1
  1
  19
  #f
  124/23
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app (-> f <-) (app coord r c) x) (env (() () ())))\""
  6
  3
  3
  0
  3
  3
  6
  1
  1
  2
  #f
  16/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (f acc l) (-> (match l ...) <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match l (nil) ((cons x xs) (-> (app foldl f (app f x acc) xs) <-)))\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app foldl f (app f x acc) (-> xs <-)) (env (())))\""
  16
  12
  4
  0
  12
  4
  16
  1
  1
  10
  #f
  65/12
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app foldl f (-> (app f x acc) <-) xs) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app f x (-> acc <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app f (-> x <-) acc) (env (())))\""
  23
  19
  4
  0
  19
  4
  23
  1
  1
  16
  #f
  102/19
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app (-> f <-) x acc) (env (())))\""
  8
  4
  4
  0
  4
  4
  8
  1
  1
  2
  #f
  11/2
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app foldl (-> f <-) (app f x acc) xs) (env (())))\""
  7
  3
  4
  0
  3
  4
  7
  1
  1
  2
  #f
  16/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match l ((nil) (-> acc <-)) (cons x xs)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (match (-> l <-) (nil) (cons x xs)) (env (())))\""
  16
  12
  4
  0
  12
  4
  16
  1
  1
  10
  #f
  65/12
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (h) (-> (match h ...) <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match h ((horizon oc sc) (-> (app horizon oc (app + sc 1)) <-)))\n  (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app horizon oc (-> (app + sc 1) <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app + (-> sc <-) 1) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app horizon (-> oc <-) (app + sc 1)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> h <-) (horizon oc sc)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (h₀ h₁) (-> (match h₀ ...) <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  match
  "\"'(eval (match h₀ ((horizon oc₀ sc₀) (-> (match h₁ ...) <-))) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match\n   h₁\n   ((horizon oc₁ sc₁)\n    (->\n     (app or (app oc< oc₀ oc₁) (app and (app equal? oc₀ oc₁) (app < sc₀ sc₁)))\n     <-)))\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app\n   or\n   (app oc< oc₀ oc₁)\n   (-> (app and (app equal? oc₀ oc₁) (app < sc₀ sc₁)) <-))\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app and (app equal? oc₀ oc₁) (-> (app < sc₀ sc₁) <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app < sc₀ (-> sc₁ <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app < (-> sc₀ <-) sc₁) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app and (-> (app equal? oc₀ oc₁) <-) (app < sc₀ sc₁)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app equal? oc₀ (-> oc₁ <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app equal? (-> oc₀ <-) oc₁) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app\n   or\n   (-> (app oc< oc₀ oc₁) <-)\n   (app and (app equal? oc₀ oc₁) (app < sc₀ sc₁)))\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app oc< oc₀ (-> oc₁ <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app oc< (-> oc₀ <-) oc₁) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> h₁ <-) (horizon oc₁ sc₁)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> h₀ <-) (horizon oc₀ sc₀)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (oc₀ oc₁) (-> (match oc₀ ...) <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match\n   oc₀\n   (win)\n   (draw)\n   ((lose) (-> (app not (app equal? oc₁ (app lose))) <-)))\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app not (-> (app equal? oc₁ (app lose)) <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app equal? oc₁ (-> (app lose) <-)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app equal? (-> oc₁ <-) (app lose)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match oc₀ (win) ((draw) (-> (app equal? oc₁ (app win)) <-)) (lose))\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app equal? oc₁ (-> (app win) <-)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app equal? (-> oc₁ <-) (app win)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match oc₀ ((win) (-> (app #f) <-)) (draw) (lose)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> oc₀ <-) (win) (draw) (lose)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (b) (-> (app andmap (λ (r) ...) is) <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app andmap (λ (r) ...) (-> is <-)) (env (())))\""
  3
  3
  0
  0
  3
  0
  3
  1
  1
  3
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (r) (-> (app andmap (λ (c) ...) is) <-)) (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app andmap (λ (c) ...) (-> is <-)) (env (() ())))\""
  3
  3
  0
  0
  3
  0
  3
  1
  1
  3
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (c) (-> (app marked? (app b (app coord r c))) <-)) (env (() () ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app marked? (-> (app b (app coord r c)) <-)) (env (() () ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app b (-> (app coord r c) <-)) (env (() () ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord r (-> c <-)) (env (() () ())))\""
  39
  27
  11
  1
  27
  11
  38
  1
  1
  23
  #f
  16/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord (-> r <-) c) (env (() () ())))\""
  39
  27
  11
  1
  27
  11
  38
  1
  1
  23
  #f
  16/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app (-> b <-) (app coord r c)) (env (() () ())))\""
  17
  12
  4
  1
  12
  4
  16
  1
  1
  12
  #t
  5
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (λ (b m)\n    (->\n     (app\n      or\n      (app ormap (λ (r) ...) is)\n      (app ormap (λ (c) ...) is)\n      (app andmap (λ (rc) ...) is)\n      (app andmap (λ (rc) ...) is))\n     <-))\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app\n   or\n   (app ormap (λ (r) ...) is)\n   (app ormap (λ (c) ...) is)\n   (app andmap (λ (rc) ...) is)\n   (-> (app andmap (λ (rc) ...) is) <-))\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app andmap (λ (rc) ...) (-> is <-)) (env (())))\""
  3
  3
  0
  0
  3
  0
  3
  1
  1
  3
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (λ (rc) (-> (app marked-with? b (app coord rc (app i⁻¹ rc)) m) <-))\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval\n  (app marked-with? b (app coord rc (app i⁻¹ rc)) (-> m <-))\n  (env (() ())))\""
  77
  54
  22
  1
  54
  22
  76
  1
  1
  36
  #f
  151/27
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app marked-with? b (-> (app coord rc (app i⁻¹ rc)) <-) m)\n  (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app coord rc (-> (app i⁻¹ rc) <-)) (env (() ())))\""
  53
  38
  13
  2
  38
  13
  51
  1
  1
  31
  #f
  205/38
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app i⁻¹ (-> rc <-)) (env (() ())))\""
  39
  27
  11
  1
  27
  11
  38
  1
  1
  23
  #f
  16/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord (-> rc <-) (app i⁻¹ rc)) (env (() ())))\""
  39
  27
  11
  1
  27
  11
  38
  1
  1
  23
  #f
  16/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval\n  (app marked-with? (-> b <-) (app coord rc (app i⁻¹ rc)) m)\n  (env (() ())))\""
  17
  12
  4
  1
  12
  4
  16
  1
  1
  12
  #t
  5
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app\n   or\n   (app ormap (λ (r) ...) is)\n   (app ormap (λ (c) ...) is)\n   (-> (app andmap (λ (rc) ...) is) <-)\n   (app andmap (λ (rc) ...) is))\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app andmap (λ (rc) ...) (-> is <-)) (env (())))\""
  3
  3
  0
  0
  3
  0
  3
  1
  1
  3
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (rc) (-> (app marked-with? b (app coord rc rc) m) <-)) (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app marked-with? b (app coord rc rc) (-> m <-)) (env (() ())))\""
  77
  54
  22
  1
  54
  22
  76
  1
  1
  36
  #f
  151/27
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app marked-with? b (-> (app coord rc rc) <-) m) (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord rc (-> rc <-)) (env (() ())))\""
  39
  27
  11
  1
  27
  11
  38
  1
  1
  23
  #f
  16/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord (-> rc <-) rc) (env (() ())))\""
  39
  27
  11
  1
  27
  11
  38
  1
  1
  23
  #f
  16/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app marked-with? (-> b <-) (app coord rc rc) m) (env (() ())))\""
  17
  12
  4
  1
  12
  4
  16
  1
  1
  12
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app\n   or\n   (app ormap (λ (r) ...) is)\n   (-> (app ormap (λ (c) ...) is) <-)\n   (app andmap (λ (rc) ...) is)\n   (app andmap (λ (rc) ...) is))\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app ormap (λ (c) ...) (-> is <-)) (env (())))\""
  3
  3
  0
  0
  3
  0
  3
  1
  1
  3
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (c) (-> (app andmap (λ (r) ...) is) <-)) (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app andmap (λ (r) ...) (-> is <-)) (env (() ())))\""
  3
  3
  0
  0
  3
  0
  3
  1
  1
  3
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (r) (-> (app marked-with? b (app coord r c) m) <-)) (env (() () ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app marked-with? b (app coord r c) (-> m <-)) (env (() () ())))\""
  77
  54
  22
  1
  54
  22
  76
  1
  1
  36
  #f
  151/27
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app marked-with? b (-> (app coord r c) <-) m) (env (() () ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord r (-> c <-)) (env (() () ())))\""
  31
  23
  7
  1
  23
  7
  30
  1
  1
  19
  #f
  124/23
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord (-> r <-) c) (env (() () ())))\""
  39
  27
  11
  1
  27
  11
  38
  1
  1
  23
  #f
  16/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app marked-with? (-> b <-) (app coord r c) m) (env (() () ())))\""
  17
  12
  4
  1
  12
  4
  16
  1
  1
  12
  #t
  5
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app\n   or\n   (-> (app ormap (λ (r) ...) is) <-)\n   (app ormap (λ (c) ...) is)\n   (app andmap (λ (rc) ...) is)\n   (app andmap (λ (rc) ...) is))\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app ormap (λ (r) ...) (-> is <-)) (env (())))\""
  3
  3
  0
  0
  3
  0
  3
  1
  1
  3
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (r) (-> (app andmap (λ (c) ...) is) <-)) (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app andmap (λ (c) ...) (-> is <-)) (env (() ())))\""
  3
  3
  0
  0
  3
  0
  3
  1
  1
  3
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (c) (-> (app marked-with? b (app coord r c) m) <-)) (env (() () ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app marked-with? b (app coord r c) (-> m <-)) (env (() () ())))\""
  77
  54
  22
  1
  54
  22
  76
  1
  1
  36
  #f
  151/27
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app marked-with? b (-> (app coord r c) <-) m) (env (() () ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord r (-> c <-)) (env (() () ())))\""
  39
  27
  11
  1
  27
  11
  38
  1
  1
  23
  #f
  16/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord (-> r <-) c) (env (() () ())))\""
  31
  23
  7
  1
  23
  7
  30
  1
  1
  19
  #f
  124/23
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app marked-with? (-> b <-) (app coord r c) m) (env (() () ())))\""
  17
  12
  4
  1
  12
  4
  16
  1
  1
  12
  #t
  5
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (f xs) (-> (match xs ...) <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match\n   xs\n   (nil)\n   ((cons x rest-xs) (-> (app and (app f x) (app andmap f rest-xs)) <-)))\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app and (app f x) (-> (app andmap f rest-xs) <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app andmap f (-> rest-xs <-)) (env (())))\""
  24
  16
  8
  0
  16
  8
  24
  1
  1
  14
  #f
  85/16
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app andmap (-> f <-) rest-xs) (env (())))\""
  15
  7
  8
  0
  7
  8
  15
  1
  1
  6
  #f
  40/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app and (-> (app f x) <-) (app andmap f rest-xs)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app f (-> x <-)) (env (())))\""
  31
  23
  8
  0
  23
  8
  31
  1
  1
  20
  #f
  122/23
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app (-> f <-) x) (env (())))\""
  16
  8
  8
  0
  8
  8
  16
  1
  1
  6
  #f
  25/4
  ((0 0 0) (0 0 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match xs ((nil) (-> (app #t) <-)) (cons x rest-xs)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (match (-> xs <-) (nil) (cons x rest-xs)) (env (())))\""
  24
  16
  8
  0
  16
  8
  24
  1
  1
  14
  #f
  85/16
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (f xs) (-> (match xs ...) <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match\n   xs\n   (nil)\n   ((cons x rest-xs) (-> (app or (app f x) (app ormap f rest-xs)) <-)))\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app or (app f x) (-> (app ormap f rest-xs) <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app ormap f (-> rest-xs <-)) (env (())))\""
  16
  12
  4
  0
  12
  4
  16
  1
  1
  10
  #f
  65/12
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app ormap (-> f <-) rest-xs) (env (())))\""
  7
  3
  4
  0
  3
  4
  7
  1
  1
  2
  #f
  16/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app or (-> (app f x) <-) (app ormap f rest-xs)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app f (-> x <-)) (env (())))\""
  23
  19
  4
  0
  19
  4
  23
  1
  1
  16
  #f
  102/19
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app (-> f <-) x) (env (())))\""
  8
  4
  4
  0
  4
  4
  8
  1
  1
  2
  #f
  11/2
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match xs ((nil) (-> (app #f) <-)) (cons x rest-xs)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (match (-> xs <-) (nil) (cons x rest-xs)) (env (())))\""
  16
  12
  4
  0
  12
  4
  16
  1
  1
  10
  #f
  65/12
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  match
  "\"'(eval (λ (i) (-> (match i ...) <-)) (env (())))\""
  49
  35
  13
  1
  35
  13
  48
  1
  1
  29
  #f
  188/35
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match i (Ze) (On) ((Tw) (-> (app Ze) <-))) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match i (Ze) ((On) (-> (app On) <-)) (Tw)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match i ((Ze) (-> (app Tw) <-)) (On) (Tw)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (match (-> i <-) (Ze) (On) (Tw)) (env (())))\""
  42
  28
  13
  1
  28
  13
  41
  1
  1
  23
  #f
  151/28
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (b co m) (-> (match (app b co) ...) <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match (app b co) (blank) ((marked m*) (-> (app equal? m m*) <-)))\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app equal? m (-> m* <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app equal? (-> m <-) m*) (env (())))\""
  86
  58
  27
  1
  58
  27
  85
  1
  1
  36
  #f
  163/29
  ((5/2 5/2 0) (5/2 5/2 0) (5/2 5/2 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match (app b co) ((blank) (-> (app #f) <-)) (marked m*)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (match (-> (app b co) <-) (blank) (marked m*)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app b (-> co <-)) (env (())))\""
  14
  9
  5
  0
  9
  5
  14
  1
  1
  8
  #f
  16/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app (-> b <-) co) (env (())))\""
  26
  16
  9
  1
  16
  9
  25
  1
  1
  16
  #t
  5
  ((1 1 0) (1 1 0) (1 1 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (co bo) (-> (app bo co) <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app bo (-> co <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app (-> bo <-) co) (env (())))\""
  69
  32
  34
  3
  32
  34
  66
  1
  1
  24
  #f
  21/4
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (co) (-> (match (app equal? co₀ co) ...) <-)) (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match (app equal? co₀ co) (#f) (_ (-> (app marked ma) <-)))\n  (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app marked (-> ma <-)) (env (() ())))\""
  77
  54
  22
  1
  54
  22
  76
  1
  1
  36
  #f
  151/27
  ((2 2 0) (2 2 0) (2 2 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match (app equal? co₀ co) ((#f) (-> (app board-lookup co bo) <-)) _)\n  (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-lookup co (-> bo <-)) (env (() ())))\""
  60
  28
  29
  3
  28
  29
  57
  1
  1
  23
  #f
  145/28
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app board-lookup (-> co <-) bo) (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval (match (-> (app equal? co₀ co) <-) (#f) _) (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app equal? co₀ (-> co <-)) (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app equal? (-> co₀ <-) co) (env (() ())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (λ (co) (-> (app blank) <-)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  match
  "\"'(eval (λ (ma) (-> (match ma ...) <-)) (env (())))\""
  19
  13
  6
  0
  13
  6
  19
  1
  1
  10
  #f
  68/13
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match ma (X) ((O) (-> (app X) <-))) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match ma ((X) (-> (app O) <-)) (O)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (match (-> ma <-) (X) (O)) (env (())))\""
  14
  8
  6
  0
  8
  6
  14
  1
  1
  6
  #f
  21/4
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (letrec*\n   (...\n    move-horizon\n    (is\n     (->\n      (app cons (app Ze) (app cons (app On) (app cons (app Tw) (app nil))))\n      <-))\n    mark⁻¹\n    ...)\n   ...)\n  (env ()))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app cons (app Ze) (-> (app cons (app On) (app cons (app Tw) (app nil))) <-))\n  (env ()))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app cons (app On) (-> (app cons (app Tw) (app nil)) <-)) (env ()))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app cons (app Tw) (-> (app nil) <-)) (env ()))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app cons (-> (app Tw) <-) (app nil)) (env ()))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app cons (-> (app On) <-) (app cons (app Tw) (app nil))) (env ()))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app cons (-> (app Ze) <-) (app cons (app On) (app cons (app Tw) (app nil))))\n  (env ()))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (move-horizon-v) (-> (match move-horizon-v ...) <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match\n   move-horizon-v\n   (move _ move-horizon-x)\n   (_ (-> (app error \"invalid match for move-horizon\") <-)))\n  (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval\n  (match move-horizon-v ((move _ move-horizon-x) (-> move-horizon-x <-)) _)\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> move-horizon-v <-) (move _ move-horizon-x) _) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (move-coord-v) (-> (match move-coord-v ...) <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match\n   move-coord-v\n   (move move-coord-x _)\n   (_ (-> (app error \"invalid match for move-coord\") <-)))\n  (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval\n  (match move-coord-v ((move move-coord-x _) (-> move-coord-x <-)) _)\n  (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> move-coord-v <-) (move move-coord-x _) _) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (a) (-> (match a ...) <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match a (blank) (_ (-> (app #f) <-))) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match a ((blank) (-> (app #t) <-)) _) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> a <-) (blank) _) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (a) (-> (match a ...) <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match a (marked _) (_ (-> (app #f) <-))) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match a ((marked _) (-> (app #t) <-)) _) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> a <-) (marked _) _) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (some-v-v) (-> (match some-v-v ...) <-)) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match\n   some-v-v\n   (some some-v-x)\n   (_ (-> (app error \"invalid match for some-v\") <-)))\n  (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match some-v-v ((some some-v-x) (-> some-v-x <-)) _) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> some-v-v <-) (some some-v-x) _) (env (())))\""
  #f)
'(clean-cache
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (letrec* (some-v ... zero-player-game) (-> (app zero-player-game) <-))\n  (env ()))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match\n   xs\n   (nil)\n   ((cons x rest-xs) (-> (app or (app f x) (app ormap f rest-xs)) <-)))\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app and (app equal? oc₀ oc₁) (-> (app < sc₀ sc₁) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app maximin bo that-mark (-> this-mark <-)) (env (() ())))\""
  30
  18
  11
  1
  18
  11
  29
  1
  1
  12
  #f
  16/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-lookup co (-> bo <-)) (env (() ())))\""
  37
  24
  11
  2
  24
  11
  35
  1
  1
  18
  #t
  21/4
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app\n   or\n   (-> (app oc< oc₀ oc₁) <-)\n   (app and (app equal? oc₀ oc₁) (app < sc₀ sc₁)))\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (r) (-> (app andmap (λ (c) ...) is) <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app cons (app On) (-> (app cons (app Tw) (app nil)) <-)) (env ()))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app player (-> (app X) <-) human-action) (env (())))\""
  4
  4
  0
  0
  4
  0
  4
  1
  1
  4
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval\n  (app move (-> co <-) (match (app wins? bo this-mark) ...))\n  (env (() ())))\""
  12
  9
  2
  1
  9
  2
  11
  1
  1
  9
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (b) (-> (app andmap (λ (r) ...) is) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match (app full? bo) (#f) (_ (-> (app horizon (app draw) 0) <-)))\n  (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (λ (co) (-> (app blank) <-)) (env (())))\""
  4
  4
  0
  0
  4
  0
  4
  1
  1
  4
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app some-v (-> (app maximin bo ma (app mark⁻¹ ma)) <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match ma ((X) (-> (app O) <-)) (O)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app maximin (-> bo <-) that-mark this-mark) (env (() ())))\""
  8
  7
  0
  1
  7
  0
  7
  1
  1
  7
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval\n  (match move-horizon-v ((move _ move-horizon-x) (-> move-horizon-x <-)) _)\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app\n   or\n   (-> (app ormap (λ (r) ...) is) <-)\n   (app ormap (λ (c) ...) is)\n   (app andmap (λ (rc) ...) is)\n   (app andmap (λ (rc) ...) is))\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  letrec
  "\"'(eval (let (... () (co (-> (letrec (loop) ...) <-)) () ...) ...) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-lookup co (-> bo <-)) (env (() ())))\""
  48
  22
  23
  3
  22
  23
  45
  1
  1
  19
  #f
  113/22
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match (-> (app blank? (app board-lookup co bo)) <-) (#f) _)\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app player (app O) (-> (app make-ai-action (app O)) <-)) (env (())))\""
  5
  4
  0
  1
  4
  0
  4
  1
  1
  4
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval\n  (app marked-with? b (app coord rc (app i⁻¹ rc)) (-> m <-))\n  (env (() ())))\""
  82
  58
  22
  2
  58
  22
  80
  1
  1
  40
  #f
  161/29
  ((2 2 0) (2 2 0) (5/2 5/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match ma (X) ((O) (-> (app X) <-))) (env (())))\""
  82
  58
  22
  2
  58
  22
  80
  1
  1
  40
  #t
  161/29
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app marked-with? b (-> (app coord rc rc) <-) m) (env (() ())))\""
  84
  60
  22
  2
  60
  22
  82
  1
  1
  42
  #t
  83/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match\n   move-horizon-v\n   (move _ move-horizon-x)\n   (_ (-> (app error \"invalid match for move-horizon\") <-)))\n  (env (())))\""
  86
  62
  22
  2
  62
  22
  84
  1
  1
  44
  #t
  171/31
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  let
  "\"'(eval\n  (match this-play ((player mark action) (-> (let (co) ...) <-)))\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app ormap (-> f <-) rest-xs) (env (())))\""
  7
  3
  4
  0
  3
  4
  7
  1
  1
  2
  #f
  16/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app blank? (-> (app board-lookup co bo) <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (co bo) (-> (app bo co) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (co) (-> (match (app equal? co₀ co) ...) <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  let
  "\"'(eval (let (co) (-> (let (bo) ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord (-> r <-) c) (env (() () ())))\""
  31
  23
  7
  1
  23
  7
  30
  1
  1
  19
  #f
  124/23
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  match
  "\"'(eval (λ (ma) (-> (match ma ...) <-)) (env (())))\""
  50
  36
  13
  1
  36
  13
  49
  1
  1
  29
  #f
  16/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match\n   (-> (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) <-)\n   (#f)\n   _)\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match (app blank? (app board-lookup co bo)) ((#f) (-> (app loop) <-)) _)\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app equal? (-> m <-) m*) (env (())))\""
  86
  58
  27
  1
  58
  27
  85
  1
  1
  36
  #f
  163/29
  ((3 3 0) (3 3 0) (3 3 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match\n   move-coord-v\n   (move move-coord-x _)\n   (_ (-> (app error \"invalid match for move-coord\") <-)))\n  (env (())))\""
  88
  60
  27
  1
  60
  27
  87
  1
  1
  38
  #t
  28/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app marked-with? b (-> (app coord rc (app i⁻¹ rc)) <-) m)\n  (env (() ())))\""
  90
  62
  27
  1
  62
  27
  89
  1
  1
  40
  #t
  173/31
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (letrec*\n   (...\n    move-horizon\n    (is\n     (->\n      (app cons (app Ze) (app cons (app On) (app cons (app Tw) (app nil))))\n      <-))\n    mark⁻¹\n    ...)\n   ...)\n  (env ()))\""
  92
  64
  27
  1
  64
  27
  91
  1
  1
  42
  #t
  89/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app wins? bo (-> mark <-)) (env (())))\""
  92
  64
  27
  1
  64
  27
  91
  1
  1
  42
  #f
  89/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match a ((blank) (-> (app #t) <-)) _) (env (())))\""
  94
  66
  27
  1
  66
  27
  93
  1
  1
  44
  #t
  61/11
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (app\n   some\n   (->\n    (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...)\n    <-))\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match a (blank) (_ (-> (app #f) <-))) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (λ (rc) (-> (app marked-with? b (app coord rc (app i⁻¹ rc)) m) <-))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app equal? (-> oc₀ <-) oc₁) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval\n  (match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   ((#f) (-> mo₀ <-))\n   _)\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app fold/coord (λ (co mm) ...) (-> (app none) <-)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app cons (-> (app On) <-) (app cons (app Tw) (app nil))) (env ()))\""
  4
  4
  0
  0
  4
  0
  4
  1
  1
  4
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app play-turn (-> bo <-) that-play this-play) (env (())))\""
  10
  9
  0
  1
  9
  0
  9
  1
  1
  9
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app equal? (-> co₀ <-) co) (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app cons (app Tw) (-> (app nil) <-)) (env ()))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app board-mark (-> co <-) mark bo) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> a <-) (blank) _) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match i (Ze) (On) ((Tw) (-> (app Ze) <-))) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app f (-> x <-)) (env (())))\""
  33
  25
  8
  0
  25
  8
  33
  1
  1
  22
  #f
  132/25
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (let (co) (-> (match (app blank? (app board-lookup co bo)) ...) <-))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-mark co this-mark (-> bo <-)) (env (() ())))\""
  48
  22
  23
  3
  22
  23
  45
  1
  1
  19
  #f
  113/22
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (mmo mo₁) (-> (match mmo ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app (-> bo <-) co) (env (())))\""
  69
  32
  34
  3
  32
  34
  66
  1
  1
  24
  #f
  21/4
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (λ (co mm) (-> (match (app blank? (app board-lookup co bo)) ...) <-))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app coord rc (-> (app i⁻¹ rc) <-)) (env (() ())))\""
  53
  38
  13
  2
  38
  13
  51
  1
  1
  31
  #f
  205/38
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  letrec*
  "\"'(eval\n  (lettypes cons ... player (letrec* (some-v ... zero-player-game) ...))\n  (env ()))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match i ((Ze) (-> (app Tw) <-)) (On) (Tw)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app horizon oc (-> (app + sc 1) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app equal? oc₁ (-> (app lose) <-)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app player (-> (app O) <-) (app make-ai-action (app O))) (env (())))\""
  4
  4
  0
  0
  4
  0
  4
  1
  1
  4
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord rc (-> rc <-)) (env (() ())))\""
  43
  31
  11
  1
  31
  11
  42
  1
  1
  27
  #f
  164/31
  ((1/2 1/2 0) (1/2 1/2 0) (1 1 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app move-horizon (-> (app some-v (app maximin bo that-mark this-mark)) <-))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (let (... () (_ (-> (app draw-board! bo) <-)) () ...) ...) (env (())))\""
  6
  5
  0
  1
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (match (-> (app full? bo) <-) (#f) _) (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (λ (player-one player-two)\n    (-> (app play-turn empty-board player-one player-two) <-))\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match h ((horizon oc sc) (-> (app horizon oc (app + sc 1)) <-)))\n  (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app horizon< (-> (app move-horizon mo₀) <-) (app move-horizon mo₁))\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app cons (-> (app Tw) <-) (app nil)) (env ()))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app and (-> (app f x) <-) (app andmap f rest-xs)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match (app wins? bo this-mark) (#f) (_ (-> (app horizon (app win) 0) <-)))\n  (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (app move co (-> (match (app wins? bo this-mark) ...) <-))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> move-coord-v <-) (move move-coord-x _) _) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval\n  (match (app blank? (app board-lookup co bo)) ((#f) (-> mm <-)) _)\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app marked-with? (-> b <-) (app coord rc rc) m) (env (() ())))\""
  17
  12
  4
  1
  12
  4
  16
  1
  1
  12
  #t
  5
  ((1/2 1/2 0) (0 0 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app some (-> mo₁ <-)) (env (())))\""
  22
  15
  6
  1
  15
  6
  21
  1
  1
  15
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match (-> (app blank? (app board-lookup co bo)) <-) (#f) _)\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app wins? bo (-> this-mark <-)) (env (() ())))\""
  31
  19
  11
  1
  19
  11
  30
  1
  1
  12
  #f
  102/19
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app\n   min-maybe-move\n   mm\n   (-> (app move co (match (app wins? bo this-mark) ...)) <-))\n  (env (() ())))\""
  33
  21
  11
  1
  21
  11
  32
  1
  1
  14
  #t
  16/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match (app full? bo) (#f) (_ (-> (app horizon (app draw) 0) <-)))\n  (env (() ())))\""
  35
  23
  11
  1
  23
  11
  34
  1
  1
  16
  #t
  122/23
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (λ ()\n    (->\n     (app\n      play-game\n      (app player (app X) human-action)\n      (app player (app O) human-action))\n     <-))\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app marked-with? b (-> (app coord r c) <-) m) (env (() () ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (match (-> xs <-) (nil) (cons x rest-xs)) (env (())))\""
  18
  14
  4
  0
  14
  4
  18
  1
  1
  12
  #f
  75/14
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (h₀ h₁) (-> (match h₀ ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match mmo (some mo₀) ((none) (-> (app some mo₁) <-))) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app\n   play-game\n   (-> (app player (app X) human-action) <-)\n   (app player (app O) human-action))\n  (env (())))\""
  4
  4
  0
  0
  4
  0
  4
  1
  1
  4
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app foldl (λ (c x) ...) (-> x <-) is) (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app b (-> co <-)) (env (())))\""
  14
  9
  5
  0
  9
  5
  14
  1
  1
  8
  #f
  16/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord r (-> c <-)) (env (() () ())))\""
  45
  32
  12
  1
  32
  12
  44
  1
  1
  27
  #f
  43/8
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app draw-board! (-> bo <-)) (env (())))\""
  57
  40
  15
  2
  40
  15
  55
  1
  1
  34
  #f
  213/40
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (a) (-> (match a ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app maximin bo (-> ma <-) (app mark⁻¹ ma)) (env (() ())))\""
  11
  7
  4
  0
  7
  4
  11
  1
  1
  6
  #f
  36/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app\n   horizon-add1\n   (->\n    (app move-horizon (app some-v (app maximin bo that-mark this-mark)))\n    <-))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval\n  (app move (-> co <-) (match (app wins? bo this-mark) ...))\n  (env (() ())))\""
  8
  5
  2
  1
  5
  2
  7
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app\n   max-maybe-move\n   mm\n   (-> (app move co (match (app wins? bo this-mark) ...)) <-))\n  (env (() ())))\""
  10
  7
  2
  1
  7
  2
  9
  1
  1
  7
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app mark⁻¹ (-> ma <-)) (env (() ())))\""
  21
  14
  6
  1
  14
  6
  20
  1
  1
  13
  #f
  71/14
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app move-horizon (-> mo₁ <-)) (env (())))\""
  24
  15
  8
  1
  15
  8
  23
  1
  1
  14
  #t
  76/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app equal? (-> oc₁ <-) (app lose)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  lettypes
  "\"'(eval ((top) lettypes (cons ... player) ...) (env ()))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app horizon (-> (app lose) <-) 0) (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (r x) (-> (app foldl (λ (c x) ...) x is) <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app andmap (λ (rc) ...) (-> is <-)) (env (())))\""
  3
  3
  0
  0
  3
  0
  3
  1
  1
  3
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (let (... () (_ (-> (app draw-board! bo) <-)) () ...) ...) (env (())))\""
  9
  8
  0
  1
  8
  0
  8
  1
  1
  8
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app f (-> x <-) acc) (env (())))\""
  30
  25
  4
  1
  25
  4
  29
  1
  1
  22
  #f
  132/25
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app horizon (-> (app win) <-) 0) (env (() ())))\""
  32
  27
  4
  1
  27
  4
  31
  1
  1
  24
  #t
  142/27
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (letrec* (some-v ... zero-player-game) (-> (app zero-player-game) <-))\n  (env ()))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-mark co this-mark (-> bo <-)) (env (() ())))\""
  9
  6
  2
  1
  6
  2
  8
  1
  1
  6
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-lookup co (-> bo <-)) (env (() ())))\""
  60
  28
  29
  3
  28
  29
  57
  1
  1
  23
  #f
  145/28
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (h) (-> (match h ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app or (app f x) (-> (app ormap f rest-xs) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-mark (-> co <-) this-mark bo) (env (() ())))\""
  8
  5
  2
  1
  5
  2
  7
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app (-> b <-) (app coord r c)) (env (() () ())))\""
  25
  17
  6
  2
  17
  6
  23
  1
  1
  17
  #t
  5
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app marked-with? (-> b <-) (app coord r c) m) (env (() () ())))\""
  33
  21
  10
  2
  21
  10
  31
  1
  1
  21
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (λ (b m)\n    (->\n     (app\n      or\n      (app ormap (λ (r) ...) is)\n      (app ormap (λ (c) ...) is)\n      (app andmap (λ (rc) ...) is)\n      (app andmap (λ (rc) ...) is))\n     <-))\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match l ((nil) (-> acc <-)) (cons x xs)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord (-> r <-) c) (env (() () ())))\""
  39
  27
  11
  1
  27
  11
  38
  1
  1
  23
  #f
  16/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app make-ai-action (-> (app O) <-)) (env (())))\""
  41
  29
  11
  1
  29
  11
  40
  1
  1
  25
  #t
  154/29
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  match
  "\"'(eval (let (_) (-> (match this-play ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app wins? bo (-> this-mark <-)) (env (() ())))\""
  19
  10
  9
  0
  10
  9
  19
  1
  1
  6
  #f
  27/5
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-lookup (-> co <-) bo) (env (() ())))\""
  27
  15
  11
  1
  15
  11
  26
  1
  1
  11
  #t
  79/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app player (-> (app X) <-) (app make-ai-action (app X))) (env (())))\""
  29
  17
  11
  1
  17
  11
  28
  1
  1
  13
  #t
  89/17
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-lookup (-> co <-) bo) (env (() ())))\""
  32
  19
  12
  1
  19
  12
  31
  1
  1
  15
  #t
  99/19
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (f xs) (-> (match xs ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (λ (bo) (-> (app error 'human-action \"not implemented\") <-)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match\n   (app full? bo)\n   ((#f)\n    (->\n     (app\n      horizon-add1\n      (app move-horizon (app some-v (app minimax bo that-mark this-mark))))\n     <-))\n   _)\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app f (app coord r c) (-> x <-)) (env (() () ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (b co m) (-> (match (app b co) ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> mmo <-) (some mo₀) (none)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match\n   oc₀\n   (win)\n   (draw)\n   ((lose) (-> (app not (app equal? oc₁ (app lose))) <-)))\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (match (-> xs <-) (nil) (cons x rest-xs)) (env (())))\""
  24
  16
  8
  0
  16
  8
  24
  1
  1
  14
  #f
  85/16
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (c) (-> (app andmap (λ (r) ...) is) <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (some-v-v) (-> (match some-v-v ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app equal? (-> oc₁ <-) (app win)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app\n   play-game\n   (app player (app X) human-action)\n   (-> (app player (app O) (app make-ai-action (app O))) <-))\n  (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app andmap (λ (c) ...) (-> is <-)) (env (() ())))\""
  5
  5
  0
  0
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app b (-> (app coord r c) <-)) (env (() () ())))\""
  7
  7
  0
  0
  7
  0
  7
  1
  1
  7
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (r) (-> (app marked-with? b (app coord r c) m) <-)) (env (() () ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (λ ()\n    (->\n     (app\n      play-game\n      (app player (app X) human-action)\n      (app player (app O) (app make-ai-action (app O))))\n     <-))\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app board-lookup (-> co <-) bo) (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app horizon (-> (app draw) <-) 0) (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval\n  (app\n   max-maybe-move\n   (-> mm <-)\n   (app move co (match (app wins? bo this-mark) ...)))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app equal? oc₁ (-> (app win) <-)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app\n   or\n   (app oc< oc₀ oc₁)\n   (-> (app and (app equal? oc₀ oc₁) (app < sc₀ sc₁)) <-))\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match mmo (some mo₀) ((none) (-> (app some mo₁) <-))) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app maximin bo ma (-> (app mark⁻¹ ma) <-)) (env (() ())))\""
  25
  18
  6
  1
  18
  6
  24
  1
  1
  14
  #f
  47/9
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app < sc₀ (-> sc₁ <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (match (-> (app wins? bo this-mark) <-) (#f) _) (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (match (-> this-play <-) (player mark action)) (env (())))\""
  24
  17
  7
  0
  17
  7
  24
  1
  1
  12
  #f
  104/17
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (rc) (-> (app marked-with? b (app coord rc rc) m) <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app draw-board! (-> bo <-)) (env (())))\""
  6
  5
  0
  1
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app player (-> (app O) <-) (app make-ai-action (app O))) (env (())))\""
  8
  7
  0
  1
  7
  0
  7
  1
  1
  7
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  let
  "\"'(eval\n  (match (app blank? (app board-lookup co bo)) (#f) (_ (-> (let (bo) ...) <-)))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app (-> action <-) bo) (env (() ())))\""
  38
  30
  7
  1
  30
  7
  37
  1
  1
  24
  #f
  17/3
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> h₁ <-) (horizon oc₁ sc₁)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (f xs) (-> (match xs ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (let (_) (-> (app void) <-)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app minimax (-> bo <-) that-mark this-mark) (env (() ())))\""
  8
  7
  0
  1
  7
  0
  7
  1
  1
  7
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (letrec (loop) (-> (app loop) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app marked? (-> (app b (app coord r c)) <-)) (env (() () ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app andmap (λ (r) ...) (-> is <-)) (env (() ())))\""
  3
  3
  0
  0
  3
  0
  3
  1
  1
  3
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app move-coord (-> (app some-v (app maximin bo ma (app mark⁻¹ ma))) <-))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (λ (bo) (-> (app void) <-)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app marked-with? b (app coord r c) (-> m <-)) (env (() () ())))\""
  79
  56
  22
  1
  56
  22
  78
  1
  1
  38
  #f
  39/7
  ((5/2 5/2 0) (5/2 5/2 0) (5/2 5/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match (-> (app blank? (app board-lookup co bo)) <-) (#f) _)\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app ormap f (-> rest-xs <-)) (env (())))\""
  16
  12
  4
  0
  12
  4
  16
  1
  1
  10
  #f
  65/12
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> h₀ <-) (horizon oc₀ sc₀)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match (app equal? co₀ co) (#f) (_ (-> (app marked ma) <-)))\n  (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match\n   (app full? bo)\n   ((#f)\n    (->\n     (app\n      horizon-add1\n      (app move-horizon (app some-v (app maximin bo that-mark this-mark))))\n     <-))\n   _)\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app marked-with? (-> b <-) (app coord r c) m) (env (() () ())))\""
  17
  12
  4
  1
  12
  4
  16
  1
  1
  12
  #t
  5
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval\n  (match (app blank? (app board-lookup co bo)) ((#f) (-> mm <-)) _)\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> oc₀ <-) (win) (draw) (lose)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (match (-> l <-) (nil) (cons x xs)) (env (())))\""
  16
  12
  4
  0
  12
  4
  16
  1
  1
  10
  #f
  65/12
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app and (-> (app equal? oc₀ oc₁) <-) (app < sc₀ sc₁)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord (-> rc <-) rc) (env (() ())))\""
  39
  27
  11
  1
  27
  11
  38
  1
  1
  23
  #f
  16/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app equal? co₀ (-> co <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (let (bo)\n    (->\n     (app min-maybe-move mm (app move co (match (app wins? bo this-mark) ...)))\n     <-))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (let (... () (bo (-> (app board-mark co this-mark bo) <-)) () ...) ...)\n  (env (() ())))\""
  5
  4
  0
  1
  4
  0
  4
  1
  1
  4
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app player (-> (app O) <-) human-action) (env (())))\""
  7
  6
  0
  1
  6
  0
  6
  1
  1
  6
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app equal? oc₀ (-> oc₁ <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app\n   or\n   (app ormap (λ (r) ...) is)\n   (-> (app ormap (λ (c) ...) is) <-)\n   (app andmap (λ (rc) ...) is)\n   (app andmap (λ (rc) ...) is))\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval\n  (app\n   min-maybe-move\n   (-> mm <-)\n   (app move co (match (app wins? bo this-mark) ...)))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord r (-> c <-)) (env (() () ())))\""
  39
  27
  11
  1
  27
  11
  38
  1
  1
  23
  #f
  16/3
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app minimax bo (-> that-mark <-) this-mark) (env (() ())))\""
  69
  45
  22
  2
  45
  22
  67
  1
  1
  35
  #f
  16/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match (app b co) ((blank) (-> (app #f) <-)) (marked m*)) (env (())))\""
  71
  47
  22
  2
  47
  22
  69
  1
  1
  37
  #t
  250/47
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (app move co (-> (match (app wins? bo this-mark) ...) <-))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app player (-> (app X) <-) human-action) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (let (... () (co (-> (app action bo) <-)) () ...) ...) (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app foldl (λ (r x) ...) (-> x <-) is) (env (())))\""
  8
  5
  3
  0
  5
  3
  8
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app and (app f x) (-> (app andmap f rest-xs) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match some-v-v ((some some-v-x) (-> some-v-x <-)) _) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app andmap (λ (rc) ...) (-> is <-)) (env (())))\""
  3
  3
  0
  0
  3
  0
  3
  1
  1
  3
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app\n   play-game\n   (app player (app X) (app make-ai-action (app X)))\n   (-> (app player (app O) (app make-ai-action (app O))) <-))\n  (env (())))\""
  5
  5
  0
  0
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (move-horizon-v) (-> (match move-horizon-v ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app play-turn bo (-> that-play <-) this-play) (env (())))\""
  23
  16
  7
  0
  16
  7
  23
  1
  1
  12
  #f
  47/8
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval\n  (match move-coord-v ((move move-coord-x _) (-> move-coord-x <-)) _)\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app some-v (-> (app minimax bo that-mark this-mark) <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-mark co (-> mark <-) bo) (env (())))\""
  37
  30
  7
  0
  30
  7
  37
  1
  1
  24
  #f
  17/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app foldl f (-> (app f x acc) <-) xs) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app cons (app Ze) (-> (app cons (app On) (app cons (app Tw) (app nil))) <-))\n  (env ()))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match (app equal? co₀ co) ((#f) (-> (app board-lookup co bo) <-)) _)\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (match (-> i <-) (Ze) (On) (Tw)) (env (())))\""
  42
  28
  13
  1
  28
  13
  41
  1
  1
  23
  #f
  151/28
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match\n   mmo\n   ((some mo₀)\n    (->\n     (app\n      some\n      (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...))\n     <-))\n   (none))\n  (env (())))\""
  44
  30
  13
  1
  30
  13
  43
  1
  1
  25
  #t
  161/30
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord (-> r <-) c) (env (() () ())))\""
  47
  32
  14
  1
  32
  14
  46
  1
  1
  26
  #f
  173/32
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app fold/coord (λ (co mm) ...) (-> (app none) <-)) (env (())))\""
  49
  34
  14
  1
  34
  14
  48
  1
  1
  28
  #t
  183/34
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> mmo <-) (some mo₀) (none)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app maximin (-> bo <-) ma (app mark⁻¹ ma)) (env (() ())))\""
  41
  18
  20
  3
  18
  20
  38
  1
  1
  16
  #f
  46/9
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval\n  (match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   ((#f) (-> mo₁ <-))\n   _)\n  (env (())))\""
  46
  21
  22
  3
  21
  22
  43
  1
  1
  19
  #t
  107/21
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app oc< (-> oc₀ <-) oc₁) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (λ (bo this-mark that-mark)\n    (-> (app fold/coord (λ (co mm) ...) (app none)) <-))\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app + (-> sc <-) 1) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app horizon< (app move-horizon mo₀) (-> (app move-horizon mo₁) <-))\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match oc₀ (win) ((draw) (-> (app equal? oc₁ (app win)) <-)) (lose))\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (mmo mo₁) (-> (match mmo ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  let
  "\"'(eval (match (app wins? bo mark) (#f) (_ (-> (let (_) ...) <-))) (env (())))\""
  3
  3
  0
  0
  3
  0
  3
  1
  1
  3
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-lookup co (-> bo <-)) (env (() ())))\""
  15
  11
  3
  1
  11
  3
  14
  1
  1
  10
  #f
  56/11
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app foldl (λ (r x) ...) x (-> is <-)) (env (())))\""
  18
  14
  3
  1
  14
  3
  17
  1
  1
  13
  #t
  71/14
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app bo (-> co <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (λ ()\n    (->\n     (app\n      play-game\n      (app player (app X) (app make-ai-action (app X)))\n      (app player (app O) (app make-ai-action (app O))))\n     <-))\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (a) (-> (match a ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (r) (-> (app andmap (λ (c) ...) is) <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> h <-) (horizon oc sc)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (λ (bo)\n    (-> (app move-coord (app some-v (app maximin bo ma (app mark⁻¹ ma)))) <-))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app blank? (-> (app board-lookup co bo) <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (match (-> (app wins? bo mark) <-) (#f) _) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app minimax bo that-mark (-> this-mark <-)) (env (() ())))\""
  18
  9
  9
  0
  9
  9
  18
  1
  1
  6
  #f
  16/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  let
  "\"'(eval (λ () (-> (let (co) ...) <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> some-v-v <-) (some some-v-x) _) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (let (bo)\n    (->\n     (app max-maybe-move mm (app move co (match (app wins? bo this-mark) ...)))\n     <-))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match (app b co) (blank) ((marked m*) (-> (app equal? m m*) <-)))\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app ormap (λ (c) ...) (-> is <-)) (env (())))\""
  3
  3
  0
  0
  3
  0
  3
  1
  1
  3
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app ormap (λ (r) ...) (-> is <-)) (env (())))\""
  4
  4
  0
  0
  4
  0
  4
  1
  1
  4
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-mark co mark (-> bo <-)) (env (())))\""
  16
  12
  3
  1
  12
  3
  15
  1
  1
  11
  #f
  61/12
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (f acc l) (-> (match l ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app or (-> (app f x) <-) (app ormap f rest-xs)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (move-coord-v) (-> (match move-coord-v ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app\n   or\n   (app ormap (λ (r) ...) is)\n   (app ormap (λ (c) ...) is)\n   (-> (app andmap (λ (rc) ...) is) <-)\n   (app andmap (λ (rc) ...) is))\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app marked-with? b (app coord r c) (-> m <-)) (env (() () ())))\""
  77
  54
  22
  1
  54
  22
  76
  1
  1
  36
  #f
  151/27
  ((2 2 0) (5/2 5/2 0) (5/2 5/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app full? (-> bo <-)) (env (())))\""
  83
  59
  22
  2
  59
  22
  81
  1
  1
  41
  #t
  327/59
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app board-lookup (-> co <-) bo) (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  let
  "\"'(eval\n  (match (app blank? (app board-lookup co bo)) (#f) (_ (-> (let (bo) ...) <-)))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app (-> f <-) x) (env (())))\""
  16
  8
  8
  0
  8
  8
  16
  1
  1
  6
  #f
  25/4
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (let (... () (_ (-> (app draw-board! bo) <-)) () ...) ...) (env (())))\""
  22
  13
  8
  1
  13
  8
  21
  1
  1
  11
  #t
  75/13
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app f (-> (app coord r c) <-) x) (env (() () ())))\""
  24
  15
  8
  1
  15
  8
  23
  1
  1
  13
  #t
  17/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app f x (-> acc <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app marked-with? b (app coord rc rc) (-> m <-)) (env (() ())))\""
  77
  54
  22
  1
  54
  22
  76
  1
  1
  36
  #f
  151/27
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app some (-> mo₁ <-)) (env (())))\""
  82
  57
  24
  1
  57
  24
  81
  1
  1
  39
  #t
  317/57
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord (-> r <-) c) (env (() () ())))\""
  113
  80
  31
  2
  80
  31
  111
  1
  1
  58
  #f
  441/80
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app\n   play-game\n   (-> (app player (app X) (app make-ai-action (app X))) <-)\n   (app player (app O) (app make-ai-action (app O))))\n  (env (())))\""
  113
  80
  31
  2
  80
  31
  111
  1
  1
  58
  #t
  441/80
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-mark co (-> this-mark <-) bo) (env (() ())))\""
  114
  81
  31
  2
  81
  31
  112
  1
  1
  58
  #f
  149/27
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match\n   some-v-v\n   (some some-v-x)\n   (_ (-> (app error \"invalid match for some-v\") <-)))\n  (env (())))\""
  116
  83
  31
  2
  83
  31
  114
  1
  1
  60
  #t
  457/83
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord r (-> c <-)) (env (() () ())))\""
  133
  92
  38
  3
  92
  38
  130
  1
  1
  65
  #f
  511/92
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval\n  (match (app blank? (app board-lookup co bo)) (#f) (_ (-> co <-)))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (c x) (-> (app f (app coord r c) x) <-)) (env (() () ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app move-horizon (-> mo₁ <-)) (env (())))\""
  5
  3
  2
  0
  3
  2
  5
  1
  1
  3
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app wins? (-> bo <-) this-mark) (env (() ())))\""
  11
  8
  2
  1
  8
  2
  10
  1
  1
  8
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord (-> rc <-) (app i⁻¹ rc)) (env (() ())))\""
  50
  35
  13
  2
  35
  13
  48
  1
  1
  31
  #f
  184/35
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app player (app O) (-> (app make-ai-action (app O)) <-)) (env (())))\""
  55
  39
  13
  3
  39
  13
  52
  1
  1
  35
  #t
  68/13
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match xs ((nil) (-> (app #t) <-)) (cons x rest-xs)) (env (())))\""
  57
  41
  13
  3
  41
  13
  54
  1
  1
  37
  #t
  214/41
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (match (-> (app equal? co₀ co) <-) (#f) _) (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-mark co (-> this-mark <-) bo) (env (() ())))\""
  19
  10
  9
  0
  10
  9
  19
  1
  1
  6
  #f
  27/5
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app blank? (-> (app board-lookup co bo) <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match i (Ze) ((On) (-> (app On) <-)) (Tw)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> a <-) (marked _) _) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match\n   (app full? bo)\n   ((#f) (-> (app play-turn bo that-play this-play) <-))\n   _)\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app action (-> bo <-)) (env (() ())))\""
  12
  8
  3
  1
  8
  3
  11
  1
  1
  7
  #f
  41/8
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match\n   h₁\n   ((horizon oc₁ sc₁)\n    (->\n     (app or (app oc< oc₀ oc₁) (app and (app equal? oc₀ oc₁) (app < sc₀ sc₁)))\n     <-)))\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app maximin bo (-> that-mark <-) this-mark) (env (() ())))\""
  18
  9
  9
  0
  9
  9
  18
  1
  1
  6
  #f
  16/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (app\n   some\n   (->\n    (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...)\n    <-))\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app move-horizon (-> (app some-v (app minimax bo that-mark this-mark)) <-))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  let
  "\"'(eval (match (app full? bo) (#f) (_ (-> (let (_) ...) <-))) (env (())))\""
  4
  4
  0
  0
  4
  0
  4
  1
  1
  3
  #t
  19/4
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (match (-> (app full? bo) <-) (#f) _) (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app horizon (-> oc <-) (app + sc 1)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app < (-> sc₀ <-) sc₁) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match l (nil) ((cons x xs) (-> (app foldl f (app f x acc) xs) <-)))\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (λ (bo this-mark that-mark)\n    (-> (app fold/coord (λ (co mm) ...) (app none)) <-))\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  match
  "\"'(eval (let (bo) (-> (match (app wins? bo mark) ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app wins? (-> bo <-) this-mark) (env (() ())))\""
  6
  5
  0
  1
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match xs ((nil) (-> (app #f) <-)) (cons x rest-xs)) (env (())))\""
  8
  7
  0
  1
  7
  0
  7
  1
  1
  7
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match\n   mmo\n   ((some mo₀)\n    (->\n     (app\n      some\n      (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...))\n     <-))\n   (none))\n  (env (())))\""
  10
  9
  0
  1
  9
  0
  9
  1
  1
  9
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app foldl f (app f x acc) (-> xs <-)) (env (())))\""
  26
  21
  4
  1
  21
  4
  25
  1
  1
  19
  #f
  110/21
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app equal? m (-> m* <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app play-turn empty-board player-one (-> player-two <-)) (env (())))\""
  11
  7
  4
  0
  7
  4
  11
  1
  1
  6
  #f
  37/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app (-> f <-) x) (env (())))\""
  19
  11
  8
  0
  11
  8
  19
  1
  1
  8
  #f
  59/11
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  match
  "\"'(eval (λ (i) (-> (match i ...) <-)) (env (())))\""
  68
  46
  21
  1
  46
  21
  67
  1
  1
  37
  #f
  247/46
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (f x) (-> (app foldl (λ (r x) ...) x is) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app full? (-> bo <-)) (env (() ())))\""
  6
  5
  0
  1
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app andmap (λ (c) ...) (-> is <-)) (env (() ())))\""
  9
  8
  0
  1
  8
  0
  8
  1
  1
  8
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (λ (co mm) (-> (match (app blank? (app board-lookup co bo)) ...) <-))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app draw-board! (-> bo <-)) (env (())))\""
  6
  5
  0
  1
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval\n  (match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   (#f)\n   (_ (-> mo₁ <-)))\n  (env (())))\""
  11
  8
  2
  1
  8
  2
  10
  1
  1
  8
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app make-ai-action (-> (app O) <-)) (env (())))\""
  13
  10
  2
  1
  10
  2
  12
  1
  1
  10
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app (-> f <-) x acc) (env (())))\""
  21
  14
  6
  1
  14
  6
  20
  1
  1
  12
  #f
  36/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app not (-> (app equal? oc₁ (app lose)) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app marked-with? b (-> (app coord r c) <-) m) (env (() () ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app\n   horizon-add1\n   (->\n    (app move-horizon (app some-v (app minimax bo that-mark this-mark)))\n    <-))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (match (-> (app wins? bo this-mark) <-) (#f) _) (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (let (_) (-> (app display \"Cat's game.\\n\") <-)) (env (())))\""
  3
  3
  0
  0
  3
  0
  3
  1
  1
  2
  #t
  14/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app andmap f (-> rest-xs <-)) (env (())))\""
  27
  19
  8
  0
  19
  8
  27
  1
  1
  16
  #f
  99/19
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app full? (-> bo <-)) (env (() ())))\""
  33
  24
  8
  1
  24
  8
  32
  1
  1
  21
  #t
  31/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app (-> f <-) (app coord r c) x) (env (() () ())))\""
  39
  27
  11
  1
  27
  11
  38
  1
  1
  23
  #f
  140/27
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app foldl (λ (c x) ...) x (-> is <-)) (env (() ())))\""
  40
  28
  11
  1
  28
  11
  39
  1
  1
  24
  #t
  145/28
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (match (-> (app full? bo) <-) (#f) _) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (match (-> (app b co) <-) (blank) (marked m*)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app cons (-> (app Ze) <-) (app cons (app On) (app cons (app Tw) (app nil))))\n  (env ()))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  let
  "\"'(eval (λ (bo this-play that-play) (-> (let (_) ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match\n   xs\n   (nil)\n   ((cons x rest-xs) (-> (app and (app f x) (app andmap f rest-xs)) <-)))\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app f (-> x <-)) (env (())))\""
  23
  19
  4
  0
  19
  4
  23
  1
  1
  16
  #f
  102/19
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (let (... () (bo (-> (app board-mark co mark bo) <-)) () ...) ...)\n  (env (())))\""
  28
  23
  4
  1
  23
  4
  27
  1
  1
  20
  #t
  122/23
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (match (-> ma <-) (X) (O)) (env (())))\""
  42
  31
  10
  1
  31
  10
  41
  1
  1
  26
  #f
  164/31
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval\n  (app marked-with? (-> b <-) (app coord rc (app i⁻¹ rc)) m)\n  (env (() ())))\""
  54
  39
  14
  1
  39
  14
  53
  1
  1
  34
  #t
  68/13
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match a ((marked _) (-> (app #t) <-)) _) (env (())))\""
  56
  41
  14
  1
  41
  14
  55
  1
  1
  36
  #t
  214/41
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app play-turn empty-board (-> player-one <-) player-two) (env (())))\""
  67
  48
  18
  1
  48
  18
  66
  1
  1
  42
  #f
  251/48
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app horizon< (app move-horizon mo₀) (-> (app move-horizon mo₁) <-))\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match (app wins? bo this-mark) (#f) (_ (-> (app horizon (app lose) 0) <-)))\n  (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app wins? (-> bo <-) mark) (env (())))\""
  8
  7
  0
  1
  7
  0
  7
  1
  1
  7
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-mark (-> co <-) this-mark bo) (env (() ())))\""
  16
  12
  2
  2
  12
  2
  14
  1
  1
  12
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (let (... () (bo (-> (app board-mark co this-mark bo) <-)) () ...) ...)\n  (env (() ())))\""
  18
  14
  2
  2
  14
  2
  16
  1
  1
  14
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (match (app wins? bo mark) ((#f) (-> (match (app full? bo) ...) <-)) _)\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app (-> b <-) co) (env (())))\""
  26
  16
  9
  1
  16
  9
  25
  1
  1
  16
  #t
  5
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> move-horizon-v <-) (move _ move-horizon-x) _) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app make-ai-action (-> (app X) <-)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app andmap (λ (r) ...) (-> is <-)) (env (())))\""
  5
  5
  0
  0
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (c) (-> (app marked-with? b (app coord r c) m) <-)) (env (() () ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (match (app wins? bo this-mark) ((#f) (-> (match (app full? bo) ...) <-)) _)\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app move-horizon (-> mo₀ <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match\n   (-> (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) <-)\n   (#f)\n   _)\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app i⁻¹ (-> rc <-)) (env (() ())))\""
  39
  27
  11
  1
  27
  11
  38
  1
  1
  23
  #f
  16/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (c) (-> (app marked? (app b (app coord r c))) <-)) (env (() () ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app oc< oc₀ (-> oc₁ <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (match (app wins? bo this-mark) ((#f) (-> (match (app full? bo) ...) <-)) _)\n  (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app\n   play-game\n   (app player (app X) human-action)\n   (-> (app player (app O) human-action) <-))\n  (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app marked (-> ma <-)) (env (() ())))\""
  77
  54
  22
  1
  54
  22
  76
  1
  1
  36
  #f
  151/27
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (oc₀ oc₁) (-> (match oc₀ ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app horizon (-> (app draw) <-) 0) (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app andmap (-> f <-) rest-xs) (env (())))\""
  17
  9
  8
  0
  9
  8
  17
  1
  1
  8
  #f
  50/9
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  match
  "\"'(eval (match h₀ ((horizon oc₀ sc₀) (-> (match h₁ ...) <-))) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app\n   or\n   (app ormap (λ (r) ...) is)\n   (app ormap (λ (c) ...) is)\n   (app andmap (λ (rc) ...) is)\n   (-> (app andmap (λ (rc) ...) is) <-))\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match a (marked _) (_ (-> (app #f) <-))) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app foldl (-> f <-) (app f x acc) xs) (env (())))\""
  9
  5
  4
  0
  5
  4
  9
  1
  1
  4
  #f
  26/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app some-v (-> (app maximin bo that-mark this-mark) <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match oc₀ ((win) (-> (app #f) <-)) (draw) (lose)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app move-horizon (-> mo₀ <-)) (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app player (app X) (-> (app make-ai-action (app X)) <-)) (env (())))\""
  5
  4
  0
  1
  4
  0
  4
  1
  1
  4
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord r (-> c <-)) (env (() () ())))\""
  44
  31
  11
  2
  31
  11
  42
  1
  1
  27
  #f
  164/31
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app\n   play-game\n   (-> (app player (app X) human-action) <-)\n   (app player (app O) (app make-ai-action (app O))))\n  (env (())))\""
  46
  33
  11
  2
  33
  11
  44
  1
  1
  29
  #t
  58/11
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app horizon< (-> (app move-horizon mo₀) <-) (app move-horizon mo₁))\n  (env (())))\""
  #f)
'(shuffled-cache
  0
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app play-turn bo that-play (-> this-play <-)) (env (())))\""
  23
  16
  7
  0
  16
  7
  23
  1
  1
  12
  #f
  47/8
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval\n  (match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   (#f)\n   (_ (-> mo₀ <-)))\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-lookup co (-> bo <-)) (env (() ())))\""
  12
  8
  3
  1
  8
  3
  11
  1
  1
  7
  #f
  41/8
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (match (-> xs <-) (nil) (cons x rest-xs)) (env (())))\""
  36
  24
  11
  1
  24
  11
  35
  1
  1
  21
  #f
  21/4
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (let (... () (_ (-> (app draw-board! bo) <-)) () ...) ...) (env (())))\""
  42
  29
  11
  2
  29
  11
  40
  1
  1
  26
  #t
  151/29
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (match (-> (app wins? bo mark) <-) (#f) _) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app i⁻¹ (-> rc <-)) (env (() ())))\""
  39
  27
  11
  1
  27
  11
  38
  1
  1
  23
  #f
  16/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app andmap (λ (r) ...) (-> is <-)) (env (())))\""
  39
  27
  11
  1
  27
  11
  38
  1
  1
  23
  #t
  16/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app (-> f <-) x) (env (())))\""
  47
  35
  11
  1
  35
  11
  46
  1
  1
  29
  #f
  194/35
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match (-> (app blank? (app board-lookup co bo)) <-) (#f) _)\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app board-lookup (-> co <-) bo) (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (mmo mo₁) (-> (match mmo ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-lookup co (-> bo <-)) (env (() ())))\""
  60
  28
  29
  3
  28
  29
  57
  1
  1
  23
  #f
  145/28
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord (-> rc <-) (app i⁻¹ rc)) (env (() ())))\""
  99
  55
  40
  4
  55
  40
  95
  1
  1
  46
  #f
  289/55
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app play-turn bo that-play (-> this-play <-)) (env (())))\""
  116
  68
  44
  4
  68
  44
  112
  1
  1
  55
  #f
  92/17
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app (-> b <-) (app coord r c)) (env (() () ())))\""
  124
  72
  48
  4
  72
  48
  120
  1
  1
  59
  #t
  97/18
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app cons (-> (app On) <-) (app cons (app Tw) (app nil))) (env ()))\""
  124
  72
  48
  4
  72
  48
  120
  1
  1
  59
  #t
  97/18
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (match (-> xs <-) (nil) (cons x rest-xs)) (env (())))\""
  132
  76
  52
  4
  76
  52
  128
  1
  1
  61
  #f
  413/76
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (let (... () (_ (-> (app draw-board! bo) <-)) () ...) ...) (env (())))\""
  138
  81
  52
  5
  81
  52
  133
  1
  1
  66
  #t
  146/27
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app ormap f (-> rest-xs <-)) (env (())))\""
  138
  81
  52
  5
  81
  52
  133
  1
  1
  66
  #f
  146/27
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match (app full? bo) (#f) (_ (-> (app horizon (app draw) 0) <-)))\n  (env (() ())))\""
  140
  83
  52
  5
  83
  52
  135
  1
  1
  68
  #t
  448/83
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match a (marked _) (_ (-> (app #f) <-))) (env (())))\""
  142
  85
  52
  5
  85
  52
  137
  1
  1
  70
  #t
  458/85
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app wins? (-> bo <-) this-mark) (env (() ())))\""
  143
  86
  52
  5
  86
  52
  138
  1
  1
  71
  #t
  463/86
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match oc₀ ((win) (-> (app #f) <-)) (draw) (lose)) (env (())))\""
  145
  88
  52
  5
  88
  52
  140
  1
  1
  73
  #t
  43/8
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app bo (-> co <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  let
  "\"'(eval\n  (match this-play ((player mark action) (-> (let (co) ...) <-)))\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app draw-board! (-> bo <-)) (env (())))\""
  6
  5
  0
  1
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (let (... () (bo (-> (app board-mark co this-mark bo) <-)) () ...) ...)\n  (env (() ())))\""
  8
  7
  0
  1
  7
  0
  7
  1
  1
  7
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (c) (-> (app marked? (app b (app coord r c))) <-)) (env (() () ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord r (-> c <-)) (env (() () ())))\""
  31
  23
  7
  1
  23
  7
  30
  1
  1
  19
  #f
  124/23
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app (-> f <-) (app coord r c) x) (env (() () ())))\""
  37
  26
  10
  1
  26
  10
  36
  1
  1
  21
  #f
  70/13
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  let
  "\"'(eval (λ () (-> (let (co) ...) <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app ormap (λ (c) ...) (-> is <-)) (env (())))\""
  3
  3
  0
  0
  3
  0
  3
  1
  1
  3
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app or (-> (app f x) <-) (app ormap f rest-xs)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord (-> r <-) c) (env (() () ())))\""
  39
  27
  11
  1
  27
  11
  38
  1
  1
  23
  #f
  16/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match\n   xs\n   (nil)\n   ((cons x rest-xs) (-> (app and (app f x) (app andmap f rest-xs)) <-)))\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord (-> r <-) c) (env (() () ())))\""
  31
  23
  7
  1
  23
  7
  30
  1
  1
  19
  #f
  124/23
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (let (bo)\n    (->\n     (app max-maybe-move mm (app move co (match (app wins? bo this-mark) ...)))\n     <-))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (r x) (-> (app foldl (λ (c x) ...) x is) <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app play-turn (-> bo <-) that-play this-play) (env (())))\""
  6
  5
  0
  1
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app andmap (λ (rc) ...) (-> is <-)) (env (())))\""
  9
  8
  0
  1
  8
  0
  8
  1
  1
  8
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app andmap (λ (c) ...) (-> is <-)) (env (() ())))\""
  10
  9
  0
  1
  9
  0
  9
  1
  1
  9
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app < (-> sc₀ <-) sc₁) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-mark co this-mark (-> bo <-)) (env (() ())))\""
  9
  6
  2
  1
  6
  2
  8
  1
  1
  6
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> h₀ <-) (horizon oc₀ sc₀)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  lettypes
  "\"'(eval ((top) lettypes (cons ... player) ...) (env ()))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app board-lookup (-> co <-) bo) (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match\n   (app full? bo)\n   ((#f)\n    (->\n     (app\n      horizon-add1\n      (app move-horizon (app some-v (app maximin bo that-mark this-mark))))\n     <-))\n   _)\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app\n   play-game\n   (-> (app player (app X) (app make-ai-action (app X))) <-)\n   (app player (app O) (app make-ai-action (app O))))\n  (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  letrec*
  "\"'(eval\n  (lettypes cons ... player (letrec* (some-v ... zero-player-game) ...))\n  (env ()))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (let (... () (co (-> (app action bo) <-)) () ...) ...) (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app coord rc (-> (app i⁻¹ rc) <-)) (env (() ())))\""
  53
  38
  13
  2
  38
  13
  51
  1
  1
  31
  #f
  205/38
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app foldl f (app f x acc) (-> xs <-)) (env (())))\""
  61
  42
  17
  2
  42
  17
  59
  1
  1
  33
  #f
  115/21
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app play-turn bo (-> that-play <-) this-play) (env (())))\""
  84
  58
  24
  2
  58
  24
  82
  1
  1
  45
  #f
  162/29
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match (app b co) ((blank) (-> (app #f) <-)) (marked m*)) (env (())))\""
  86
  60
  24
  2
  60
  24
  84
  1
  1
  47
  #t
  167/30
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app equal? oc₀ (-> oc₁ <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval\n  (match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   ((#f) (-> mo₀ <-))\n   _)\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app player (app O) (-> (app make-ai-action (app O)) <-)) (env (())))\""
  5
  4
  0
  1
  4
  0
  4
  1
  1
  4
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (mmo mo₁) (-> (match mmo ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app minimax bo that-mark (-> this-mark <-)) (env (() ())))\""
  18
  9
  9
  0
  9
  9
  18
  1
  1
  6
  #f
  16/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (λ (rc) (-> (app marked-with? b (app coord rc (app i⁻¹ rc)) m) <-))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app horizon< (app move-horizon mo₀) (-> (app move-horizon mo₁) <-))\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app some-v (-> (app maximin bo ma (app mark⁻¹ ma)) <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app full? (-> bo <-)) (env (() ())))\""
  6
  5
  0
  1
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app wins? bo (-> mark <-)) (env (())))\""
  43
  35
  7
  1
  35
  7
  42
  1
  1
  29
  #f
  39/7
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (co bo) (-> (app bo co) <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app foldl f (-> (app f x acc) <-) xs) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app fold/coord (λ (co mm) ...) (-> (app none) <-)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app marked-with? b (-> (app coord r c) <-) m) (env (() () ())))\""
  4
  4
  0
  0
  4
  0
  4
  1
  1
  4
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (r) (-> (app andmap (λ (c) ...) is) <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app equal? oc₁ (-> (app win) <-)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app blank? (-> (app board-lookup co bo) <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app horizon (-> (app draw) <-) 0) (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app andmap (λ (rc) ...) (-> is <-)) (env (())))\""
  5
  5
  0
  0
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app wins? bo (-> this-mark <-)) (env (() ())))\""
  24
  15
  9
  0
  15
  9
  24
  1
  1
  11
  #f
  79/15
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app\n   min-maybe-move\n   mm\n   (-> (app move co (match (app wins? bo this-mark) ...)) <-))\n  (env (() ())))\""
  26
  17
  9
  0
  17
  9
  26
  1
  1
  13
  #t
  89/17
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-mark co (-> this-mark <-) bo) (env (() ())))\""
  42
  30
  11
  1
  30
  11
  41
  1
  1
  19
  #f
  161/30
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval\n  (match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   (#f)\n   (_ (-> mo₁ <-)))\n  (env (())))\""
  47
  33
  13
  1
  33
  13
  46
  1
  1
  22
  #t
  16/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app wins? (-> bo <-) this-mark) (env (() ())))\""
  53
  38
  13
  2
  38
  13
  51
  1
  1
  27
  #t
  201/38
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (match (-> (app wins? bo this-mark) <-) (#f) _) (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (match (-> (app wins? bo this-mark) <-) (#f) _) (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-mark co mark (-> bo <-)) (env (())))\""
  12
  8
  3
  1
  8
  3
  11
  1
  1
  7
  #f
  41/8
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app equal? (-> oc₀ <-) oc₁) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app foldl (λ (r x) ...) (-> x <-) is) (env (())))\""
  8
  5
  3
  0
  5
  3
  8
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (match (app wins? bo this-mark) ((#f) (-> (match (app full? bo) ...) <-)) _)\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  let
  "\"'(eval\n  (match (app blank? (app board-lookup co bo)) (#f) (_ (-> (let (bo) ...) <-)))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (λ ()\n    (->\n     (app\n      play-game\n      (app player (app X) (app make-ai-action (app X)))\n      (app player (app O) (app make-ai-action (app O))))\n     <-))\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (rc) (-> (app marked-with? b (app coord rc rc) m) <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app (-> action <-) bo) (env (() ())))\""
  38
  30
  7
  1
  30
  7
  37
  1
  1
  24
  #f
  17/3
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app marked (-> ma <-)) (env (() ())))\""
  91
  67
  22
  2
  67
  22
  89
  1
  1
  48
  #f
  368/67
  ((3/2 3/2 0) (3/2 3/2 0) (3/2 3/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match i (Ze) (On) ((Tw) (-> (app Ze) <-))) (env (())))\""
  93
  69
  22
  2
  69
  22
  91
  1
  1
  50
  #t
  126/23
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval\n  (match move-horizon-v ((move _ move-horizon-x) (-> move-horizon-x <-)) _)\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app blank? (-> (app board-lookup co bo) <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (match (-> (app full? bo) <-) (#f) _) (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (let (bo)\n    (->\n     (app min-maybe-move mm (app move co (match (app wins? bo this-mark) ...)))\n     <-))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app\n   horizon-add1\n   (->\n    (app move-horizon (app some-v (app minimax bo that-mark this-mark)))\n    <-))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match\n   some-v-v\n   (some some-v-x)\n   (_ (-> (app error \"invalid match for some-v\") <-)))\n  (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app horizon oc (-> (app + sc 1) <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app marked-with? b (-> (app coord rc (app i⁻¹ rc)) <-) m)\n  (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app foldl (λ (r x) ...) x (-> is <-)) (env (())))\""
  5
  5
  0
  0
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app f x (-> acc <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (h) (-> (match h ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (some-v-v) (-> (match some-v-v ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app draw-board! (-> bo <-)) (env (())))\""
  12
  8
  3
  1
  8
  3
  11
  1
  1
  7
  #f
  41/8
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (move-coord-v) (-> (match move-coord-v ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (letrec*\n   (...\n    move-horizon\n    (is\n     (->\n      (app cons (app Ze) (app cons (app On) (app cons (app Tw) (app nil))))\n      <-))\n    mark⁻¹\n    ...)\n   ...)\n  (env ()))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match\n   (app full? bo)\n   ((#f)\n    (->\n     (app\n      horizon-add1\n      (app move-horizon (app some-v (app minimax bo that-mark this-mark))))\n     <-))\n   _)\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (letrec (loop) (-> (app loop) <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app mark⁻¹ (-> ma <-)) (env (() ())))\""
  11
  7
  4
  0
  7
  4
  11
  1
  1
  6
  #f
  36/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord rc (-> rc <-)) (env (() ())))\""
  50
  34
  15
  1
  34
  15
  49
  1
  1
  29
  #f
  90/17
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app not (-> (app equal? oc₁ (app lose)) <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (match (-> i <-) (Ze) (On) (Tw)) (env (())))\""
  42
  28
  13
  1
  28
  13
  41
  1
  1
  23
  #f
  151/28
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app ormap (λ (r) ...) (-> is <-)) (env (())))\""
  43
  29
  13
  1
  29
  13
  42
  1
  1
  24
  #t
  156/29
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app marked-with? b (-> (app coord rc rc) <-) m) (env (() ())))\""
  45
  31
  13
  1
  31
  13
  44
  1
  1
  26
  #t
  166/31
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (let (_) (-> (app display \"Cat's game.\\n\") <-)) (env (())))\""
  48
  34
  13
  1
  34
  13
  47
  1
  1
  28
  #t
  90/17
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app marked-with? (-> b <-) (app coord rc rc) m) (env (() ())))\""
  65
  46
  17
  2
  46
  17
  63
  1
  1
  40
  #t
  120/23
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app draw-board! (-> bo <-)) (env (())))\""
  66
  47
  17
  2
  47
  17
  64
  1
  1
  41
  #t
  245/47
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (c) (-> (app marked-with? b (app coord r c) m) <-)) (env (() () ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app andmap f (-> rest-xs <-)) (env (())))\""
  24
  16
  8
  0
  16
  8
  24
  1
  1
  14
  #f
  85/16
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app move-horizon (-> (app some-v (app minimax bo that-mark this-mark)) <-))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (oc₀ oc₁) (-> (match oc₀ ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app\n   play-game\n   (-> (app player (app X) human-action) <-)\n   (app player (app O) human-action))\n  (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app and (app equal? oc₀ oc₁) (-> (app < sc₀ sc₁) <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match\n   xs\n   (nil)\n   ((cons x rest-xs) (-> (app or (app f x) (app ormap f rest-xs)) <-)))\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app cons (app On) (-> (app cons (app Tw) (app nil)) <-)) (env ()))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match xs ((nil) (-> (app #t) <-)) (cons x rest-xs)) (env (())))\""
  4
  4
  0
  0
  4
  0
  4
  1
  1
  4
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  let
  "\"'(eval (match (app full? bo) (#f) (_ (-> (let (_) ...) <-))) (env (())))\""
  8
  8
  0
  0
  8
  0
  8
  1
  1
  7
  #t
  39/8
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app + (-> sc <-) 1) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match some-v-v ((some some-v-x) (-> some-v-x <-)) _) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  let
  "\"'(eval (let (co) (-> (let (bo) ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (c x) (-> (app f (app coord r c) x) <-)) (env (() () ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (let (_) (-> (app void) <-)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-mark (-> co <-) this-mark bo) (env (() ())))\""
  10
  7
  2
  1
  7
  2
  9
  1
  1
  7
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (match (-> (app full? bo) <-) (#f) _) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app marked? (-> (app b (app coord r c)) <-)) (env (() () ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> oc₀ <-) (win) (draw) (lose)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval\n  (match move-coord-v ((move move-coord-x _) (-> move-coord-x <-)) _)\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app maximin (-> bo <-) ma (app mark⁻¹ ma)) (env (() ())))\""
  41
  18
  20
  3
  18
  20
  38
  1
  1
  16
  #f
  46/9
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app\n   or\n   (-> (app ormap (λ (r) ...) is) <-)\n   (app ormap (λ (c) ...) is)\n   (app andmap (λ (rc) ...) is)\n   (app andmap (λ (rc) ...) is))\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match (app full? bo) (#f) (_ (-> (app horizon (app draw) 0) <-)))\n  (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-mark co (-> mark <-) bo) (env (())))\""
  39
  32
  7
  0
  32
  7
  39
  1
  1
  26
  #f
  45/8
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app (-> f <-) x acc) (env (())))\""
  47
  36
  11
  0
  36
  11
  47
  1
  1
  28
  #f
  101/18
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app andmap (-> f <-) rest-xs) (env (())))\""
  62
  43
  19
  0
  43
  19
  62
  1
  1
  34
  #f
  242/43
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (app move co (-> (match (app wins? bo this-mark) ...) <-))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match a (blank) (_ (-> (app #f) <-))) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app\n   or\n   (-> (app oc< oc₀ oc₁) <-)\n   (app and (app equal? oc₀ oc₁) (app < sc₀ sc₁)))\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match\n   mmo\n   ((some mo₀)\n    (->\n     (app\n      some\n      (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...))\n     <-))\n   (none))\n  (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (match (-> l <-) (nil) (cons x xs)) (env (())))\""
  18
  14
  4
  0
  14
  4
  18
  1
  1
  12
  #f
  75/14
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (r) (-> (app marked-with? b (app coord r c) m) <-)) (env (() () ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app marked-with? b (app coord r c) (-> m <-)) (env (() () ())))\""
  77
  54
  22
  1
  54
  22
  76
  1
  1
  36
  #f
  151/27
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app move-coord (-> (app some-v (app maximin bo ma (app mark⁻¹ ma))) <-))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app marked-with? b (app coord rc rc) (-> m <-)) (env (() ())))\""
  77
  54
  22
  1
  54
  22
  76
  1
  1
  36
  #f
  151/27
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match ma ((X) (-> (app O) <-)) (O)) (env (())))\""
  77
  54
  22
  1
  54
  22
  76
  1
  1
  36
  #t
  151/27
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app player (-> (app O) <-) human-action) (env (())))\""
  77
  54
  22
  1
  54
  22
  76
  1
  1
  36
  #t
  151/27
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app and (app f x) (-> (app andmap f rest-xs) <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app board-mark (-> co <-) mark bo) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app horizon< (-> (app move-horizon mo₀) <-) (app move-horizon mo₁))\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (app move co (-> (match (app wins? bo this-mark) ...) <-))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app move-horizon (-> mo₁ <-)) (env (())))\""
  5
  3
  2
  0
  3
  2
  5
  1
  1
  3
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval\n  (match (app blank? (app board-lookup co bo)) ((#f) (-> mm <-)) _)\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (app\n   some\n   (->\n    (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...)\n    <-))\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app horizon (-> (app draw) <-) 0) (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (λ (bo) (-> (app void) <-)) (env (())))\""
  4
  4
  0
  0
  4
  0
  4
  1
  1
  4
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (move-horizon-v) (-> (match move-horizon-v ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (match (app wins? bo this-mark) ((#f) (-> (match (app full? bo) ...) <-)) _)\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match\n   move-coord-v\n   (move move-coord-x _)\n   (_ (-> (app error \"invalid match for move-coord\") <-)))\n  (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> h₁ <-) (horizon oc₁ sc₁)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (λ (bo this-mark that-mark)\n    (-> (app fold/coord (λ (co mm) ...) (app none)) <-))\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (letrec* (some-v ... zero-player-game) (-> (app zero-player-game) <-))\n  (env ()))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app move-horizon (-> mo₁ <-)) (env (())))\""
  5
  3
  2
  0
  3
  2
  5
  1
  1
  3
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (λ (bo this-mark that-mark)\n    (-> (app fold/coord (λ (co mm) ...) (app none)) <-))\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app f (-> x <-)) (env (())))\""
  23
  19
  4
  0
  19
  4
  23
  1
  1
  16
  #f
  102/19
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (let (... () (_ (-> (app draw-board! bo) <-)) () ...) ...) (env (())))\""
  29
  24
  4
  1
  24
  4
  28
  1
  1
  21
  #t
  127/24
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app horizon< (-> (app move-horizon mo₀) <-) (app move-horizon mo₁))\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app horizon (-> oc <-) (app + sc 1)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  match
  "\"'(eval (λ (ma) (-> (match ma ...) <-)) (env (())))\""
  19
  13
  6
  0
  13
  6
  19
  1
  1
  10
  #f
  68/13
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval\n  (match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   ((#f) (-> mo₁ <-))\n   _)\n  (env (())))\""
  24
  16
  8
  0
  16
  8
  24
  1
  1
  13
  #t
  83/16
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app player (-> (app O) <-) (app make-ai-action (app O))) (env (())))\""
  26
  18
  8
  0
  18
  8
  26
  1
  1
  15
  #t
  31/6
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app marked-with? b (-> (app coord r c) <-) m) (env (() () ())))\""
  28
  20
  8
  0
  20
  8
  28
  1
  1
  17
  #t
  103/20
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app (-> f <-) x) (env (())))\""
  36
  24
  12
  0
  24
  12
  36
  1
  1
  19
  #f
  125/24
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (r) (-> (app andmap (λ (c) ...) is) <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app make-ai-action (-> (app O) <-)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app andmap (λ (r) ...) (-> is <-)) (env (() ())))\""
  5
  5
  0
  0
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-lookup (-> co <-) bo) (env (() ())))\""
  13
  10
  2
  1
  10
  2
  12
  1
  1
  10
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app some (-> mo₁ <-)) (env (())))\""
  18
  13
  4
  1
  13
  4
  17
  1
  1
  13
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app maximin bo (-> that-mark <-) this-mark) (env (() ())))\""
  34
  20
  13
  1
  20
  13
  33
  1
  1
  17
  #f
  103/20
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app cons (-> (app Tw) <-) (app nil)) (env ()))\""
  36
  22
  13
  1
  22
  13
  35
  1
  1
  19
  #t
  113/22
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  match
  "\"'(eval (λ (i) (-> (match i ...) <-)) (env (())))\""
  80
  52
  26
  2
  52
  26
  78
  1
  1
  43
  #f
  69/13
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> mmo <-) (some mo₀) (none)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match mmo (some mo₀) ((none) (-> (app some mo₁) <-))) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app equal? (-> co₀ <-) co) (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app full? (-> bo <-)) (env (() ())))\""
  6
  5
  0
  1
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> h <-) (horizon oc sc)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval\n  (app\n   max-maybe-move\n   (-> mm <-)\n   (app move co (match (app wins? bo this-mark) ...)))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app move-horizon (-> mo₀ <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app\n   max-maybe-move\n   mm\n   (-> (app move co (match (app wins? bo this-mark) ...)) <-))\n  (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app andmap (λ (c) ...) (-> is <-)) (env (() ())))\""
  5
  5
  0
  0
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match i (Ze) ((On) (-> (app On) <-)) (Tw)) (env (())))\""
  7
  7
  0
  0
  7
  0
  7
  1
  1
  7
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app equal? co₀ (-> co <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app full? (-> bo <-)) (env (())))\""
  6
  5
  0
  1
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (f xs) (-> (match xs ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match\n   (app full? bo)\n   ((#f) (-> (app play-turn bo that-play this-play) <-))\n   _)\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  match
  "\"'(eval (let (_) (-> (match this-play ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  match
  "\"'(eval (let (bo) (-> (match (app wins? bo mark) ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app\n   or\n   (app ormap (λ (r) ...) is)\n   (app ormap (λ (c) ...) is)\n   (-> (app andmap (λ (rc) ...) is) <-)\n   (app andmap (λ (rc) ...) is))\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app\n   or\n   (app oc< oc₀ oc₁)\n   (-> (app and (app equal? oc₀ oc₁) (app < sc₀ sc₁)) <-))\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval\n  (app\n   min-maybe-move\n   (-> mm <-)\n   (app move co (match (app wins? bo this-mark) ...)))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval\n  (match (app blank? (app board-lookup co bo)) (#f) (_ (-> co <-)))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval\n  (app move (-> co <-) (match (app wins? bo this-mark) ...))\n  (env (() ())))\""
  8
  5
  2
  1
  5
  2
  7
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app equal? (-> oc₁ <-) (app lose)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (let (co) (-> (match (app blank? (app board-lookup co bo)) ...) <-))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app marked-with? (-> b <-) (app coord r c) m) (env (() () ())))\""
  17
  12
  4
  1
  12
  4
  16
  1
  1
  12
  #t
  5
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match h ((horizon oc sc) (-> (app horizon oc (app + sc 1)) <-)))\n  (env (())))\""
  19
  14
  4
  1
  14
  4
  18
  1
  1
  14
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app equal? (-> m <-) m*) (env (())))\""
  101
  72
  27
  2
  72
  27
  99
  1
  1
  50
  #f
  11/2
  ((5/2 5/2 0) (5/2 5/2 0) (5/2 5/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app (-> b <-) co) (env (())))\""
  105
  76
  27
  2
  76
  27
  103
  1
  1
  54
  #t
  104/19
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app cons (-> (app Ze) <-) (app cons (app On) (app cons (app Tw) (app nil))))\n  (env ()))\""
  107
  78
  27
  2
  78
  27
  105
  1
  1
  56
  #t
  71/13
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app maximin bo ma (-> (app mark⁻¹ ma) <-)) (env (() ())))\""
  107
  78
  27
  2
  78
  27
  105
  1
  1
  56
  #f
  71/13
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  letrec
  "\"'(eval (let (... () (co (-> (letrec (loop) ...) <-)) () ...) ...) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match a ((blank) (-> (app #t) <-)) _) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  match
  "\"'(eval (match h₀ ((horizon oc₀ sc₀) (-> (match h₁ ...) <-))) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match (app blank? (app board-lookup co bo)) ((#f) (-> (app loop) <-)) _)\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app b (-> co <-)) (env (())))\""
  14
  9
  5
  0
  9
  5
  14
  1
  1
  8
  #f
  16/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app cons (app Ze) (-> (app cons (app On) (app cons (app Tw) (app nil))) <-))\n  (env ()))\""
  16
  11
  5
  0
  11
  5
  16
  1
  1
  10
  #t
  58/11
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  let
  "\"'(eval (λ (bo this-play that-play) (-> (let (_) ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (match (-> this-play <-) (player mark action)) (env (())))\""
  24
  17
  7
  0
  17
  7
  24
  1
  1
  12
  #f
  104/17
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app\n   horizon-add1\n   (->\n    (app move-horizon (app some-v (app maximin bo that-mark this-mark)))\n    <-))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match l ((nil) (-> acc <-)) (cons x xs)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord r (-> c <-)) (env (() () ())))\""
  39
  27
  11
  1
  27
  11
  38
  1
  1
  23
  #f
  16/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app b (-> (app coord r c) <-)) (env (() () ())))\""
  41
  29
  11
  1
  29
  11
  40
  1
  1
  25
  #t
  154/29
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match (app equal? co₀ co) (#f) (_ (-> (app marked ma) <-)))\n  (env (() ())))\""
  43
  31
  11
  1
  31
  11
  42
  1
  1
  27
  #t
  164/31
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match ma (X) ((O) (-> (app X) <-))) (env (())))\""
  45
  33
  11
  1
  33
  11
  44
  1
  1
  29
  #t
  58/11
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app move-horizon (-> mo₀ <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app minimax bo (-> that-mark <-) this-mark) (env (() ())))\""
  30
  18
  11
  1
  18
  11
  29
  1
  1
  12
  #f
  16/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (b co m) (-> (match (app b co) ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app wins? (-> bo <-) mark) (env (())))\""
  6
  5
  0
  1
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord r (-> c <-)) (env (() () ())))\""
  45
  32
  11
  2
  32
  11
  43
  1
  1
  28
  #f
  169/32
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (λ (co mm) (-> (match (app blank? (app board-lookup co bo)) ...) <-))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match\n   h₁\n   ((horizon oc₁ sc₁)\n    (->\n     (app or (app oc< oc₀ oc₁) (app and (app equal? oc₀ oc₁) (app < sc₀ sc₁)))\n     <-)))\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord (-> r <-) c) (env (() () ())))\""
  31
  23
  7
  1
  23
  7
  30
  1
  1
  19
  #f
  124/23
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> a <-) (marked _) _) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord r (-> c <-)) (env (() () ())))\""
  31
  23
  7
  1
  23
  7
  30
  1
  1
  19
  #f
  124/23
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app\n   play-game\n   (app player (app X) (app make-ai-action (app X)))\n   (-> (app player (app O) (app make-ai-action (app O))) <-))\n  (env (())))\""
  33
  25
  7
  1
  25
  7
  32
  1
  1
  21
  #t
  134/25
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app oc< oc₀ (-> oc₁ <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (app\n   some\n   (->\n    (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...)\n    <-))\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (h₀ h₁) (-> (match h₀ ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval\n  (match (app blank? (app board-lookup co bo)) ((#f) (-> mm <-)) _)\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (match (-> (app b co) <-) (blank) (marked m*)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> mmo <-) (some mo₀) (none)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app f (-> x <-)) (env (())))\""
  31
  23
  8
  0
  23
  8
  31
  1
  1
  20
  #f
  122/23
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval\n  (app marked-with? b (app coord rc (app i⁻¹ rc)) (-> m <-))\n  (env (() ())))\""
  108
  77
  30
  1
  77
  30
  107
  1
  1
  56
  #f
  424/77
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match a ((marked _) (-> (app #t) <-)) _) (env (())))\""
  110
  79
  30
  1
  79
  30
  109
  1
  1
  58
  #t
  434/79
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord (-> r <-) c) (env (() () ())))\""
  118
  83
  33
  2
  83
  33
  116
  1
  1
  61
  #f
  456/83
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app player (-> (app X) <-) (app make-ai-action (app X))) (env (())))\""
  118
  83
  33
  2
  83
  33
  116
  1
  1
  61
  #t
  456/83
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app\n   or\n   (app ormap (λ (r) ...) is)\n   (-> (app ormap (λ (c) ...) is) <-)\n   (app andmap (λ (rc) ...) is)\n   (app andmap (λ (rc) ...) is))\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app move-horizon (-> (app some-v (app maximin bo that-mark this-mark)) <-))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app oc< (-> oc₀ <-) oc₁) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app play-turn empty-board player-one (-> player-two <-)) (env (())))\""
  11
  7
  4
  0
  7
  4
  11
  1
  1
  6
  #f
  37/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app make-ai-action (-> (app X) <-)) (env (())))\""
  13
  9
  4
  0
  9
  4
  13
  1
  1
  8
  #t
  47/9
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app foldl (λ (c x) ...) (-> x <-) is) (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (match (-> (app equal? co₀ co) <-) (#f) _) (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app f (-> x <-) acc) (env (())))\""
  23
  19
  4
  0
  19
  4
  23
  1
  1
  16
  #f
  102/19
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app horizon< (app move-horizon mo₀) (-> (app move-horizon mo₁) <-))\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match\n   mmo\n   ((some mo₀)\n    (->\n     (app\n      some\n      (match (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) ...))\n     <-))\n   (none))\n  (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (match (-> (app full? bo) <-) (#f) _) (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval\n  (app move (-> co <-) (match (app wins? bo this-mark) ...))\n  (env (() ())))\""
  8
  5
  2
  1
  5
  2
  7
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> move-coord-v <-) (move move-coord-x _) _) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app marked-with? (-> b <-) (app coord r c) m) (env (() () ())))\""
  17
  12
  4
  1
  12
  4
  16
  1
  1
  12
  #t
  5
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app player (app X) (-> (app make-ai-action (app X)) <-)) (env (())))\""
  22
  16
  4
  2
  16
  4
  20
  1
  1
  16
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-lookup (-> co <-) bo) (env (() ())))\""
  30
  21
  6
  3
  21
  6
  27
  1
  1
  21
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app fold/coord (λ (co mm) ...) (-> (app none) <-)) (env (())))\""
  32
  23
  6
  3
  23
  6
  29
  1
  1
  23
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (f xs) (-> (match xs ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval\n  (app marked-with? (-> b <-) (app coord rc (app i⁻¹ rc)) m)\n  (env (() ())))\""
  17
  12
  4
  1
  12
  4
  16
  1
  1
  12
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval\n  (match\n   (app horizon< (app move-horizon mo₀) (app move-horizon mo₁))\n   (#f)\n   (_ (-> mo₀ <-)))\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app player (app O) (-> (app make-ai-action (app O)) <-)) (env (())))\""
  5
  4
  0
  1
  4
  0
  4
  1
  1
  4
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (λ (player-one player-two)\n    (-> (app play-turn empty-board player-one player-two) <-))\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match\n   (-> (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) <-)\n   (#f)\n   _)\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match (app wins? bo this-mark) (#f) (_ (-> (app horizon (app lose) 0) <-)))\n  (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (a) (-> (match a ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app horizon (-> (app lose) <-) 0) (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match\n   oc₀\n   (win)\n   (draw)\n   ((lose) (-> (app not (app equal? oc₁ (app lose))) <-)))\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app foldl (-> f <-) (app f x acc) xs) (env (())))\""
  7
  3
  4
  0
  3
  4
  7
  1
  1
  2
  #f
  16/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app\n   play-game\n   (app player (app X) human-action)\n   (-> (app player (app O) human-action) <-))\n  (env (())))\""
  9
  5
  4
  0
  5
  4
  9
  1
  1
  4
  #t
  26/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> some-v-v <-) (some some-v-x) _) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-mark (-> co <-) this-mark bo) (env (() ())))\""
  8
  5
  2
  1
  5
  2
  7
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app some-v (-> (app maximin bo that-mark this-mark) <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match (app wins? bo this-mark) (#f) (_ (-> (app horizon (app win) 0) <-)))\n  (env (() ())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app foldl (λ (c x) ...) x (-> is <-)) (env (() ())))\""
  5
  5
  0
  0
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app and (-> (app f x) <-) (app andmap f rest-xs)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match mmo (some mo₀) ((none) (-> (app some mo₁) <-))) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-lookup co (-> bo <-)) (env (() ())))\""
  50
  24
  23
  3
  24
  23
  47
  1
  1
  21
  #f
  41/8
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app horizon (-> (app win) <-) 0) (env (() ())))\""
  52
  26
  23
  3
  26
  23
  49
  1
  1
  23
  #t
  133/26
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match (app equal? co₀ co) ((#f) (-> (app board-lookup co bo) <-)) _)\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app ormap (-> f <-) rest-xs) (env (())))\""
  7
  3
  4
  0
  3
  4
  7
  1
  1
  2
  #f
  16/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app\n   play-game\n   (app player (app X) human-action)\n   (-> (app player (app O) (app make-ai-action (app O))) <-))\n  (env (())))\""
  9
  5
  4
  0
  5
  4
  9
  1
  1
  4
  #t
  26/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-lookup co (-> bo <-)) (env (() ())))\""
  18
  11
  6
  1
  11
  6
  17
  1
  1
  10
  #t
  56/11
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app maximin bo that-mark (-> this-mark <-)) (env (() ())))\""
  46
  29
  15
  2
  29
  15
  44
  1
  1
  22
  #f
  152/29
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app coord (-> rc <-) rc) (env (() ())))\""
  85
  56
  26
  3
  56
  26
  82
  1
  1
  45
  #f
  37/7
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (c) (-> (app andmap (λ (r) ...) is) <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (λ (bo)\n    (-> (app move-coord (app some-v (app maximin bo ma (app mark⁻¹ ma)))) <-))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app f (app coord r c) (-> x <-)) (env (() () ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app cons (app Tw) (-> (app nil) <-)) (env ()))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app player (-> (app X) <-) human-action) (env (())))\""
  4
  4
  0
  0
  4
  0
  4
  1
  1
  4
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> move-horizon-v <-) (move _ move-horizon-x) _) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app play-turn empty-board (-> player-one <-) player-two) (env (())))\""
  11
  7
  4
  0
  7
  4
  11
  1
  1
  6
  #f
  37/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app blank? (-> (app board-lookup co bo) <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app action (-> bo <-)) (env (() ())))\""
  12
  8
  3
  1
  8
  3
  11
  1
  1
  7
  #f
  41/8
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (match (app wins? bo mark) ((#f) (-> (match (app full? bo) ...) <-)) _)\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-mark co this-mark (-> bo <-)) (env (() ())))\""
  48
  22
  23
  3
  22
  23
  45
  1
  1
  19
  #f
  113/22
  ((1 1 0) (1 1 0) (1 1 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app player (-> (app X) <-) human-action) (env (())))\""
  50
  24
  23
  3
  24
  23
  47
  1
  1
  21
  #t
  41/8
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (match\n   move-horizon-v\n   (move _ move-horizon-x)\n   (_ (-> (app error \"invalid match for move-horizon\") <-)))\n  (env (())))\""
  52
  26
  23
  3
  26
  23
  49
  1
  1
  23
  #t
  133/26
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app some-v (-> (app minimax bo that-mark this-mark) <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app or (app f x) (-> (app ormap f rest-xs) <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app minimax (-> bo <-) that-mark this-mark) (env (() ())))\""
  6
  5
  0
  1
  5
  0
  5
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app make-ai-action (-> (app O) <-)) (env (())))\""
  8
  7
  0
  1
  7
  0
  7
  1
  1
  7
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (λ ()\n    (->\n     (app\n      play-game\n      (app player (app X) human-action)\n      (app player (app O) (app make-ai-action (app O))))\n     <-))\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (a) (-> (match a ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (λ (co) (-> (app blank) <-)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match i ((Ze) (-> (app Tw) <-)) (On) (Tw)) (env (())))\""
  4
  4
  0
  0
  4
  0
  4
  1
  1
  4
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (λ (b m)\n    (->\n     (app\n      or\n      (app ormap (λ (r) ...) is)\n      (app ormap (λ (c) ...) is)\n      (app andmap (λ (rc) ...) is)\n      (app andmap (λ (rc) ...) is))\n     <-))\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (app and (-> (app equal? oc₀ oc₁) <-) (app < sc₀ sc₁)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (match (-> ma <-) (X) (O)) (env (())))\""
  14
  8
  6
  0
  8
  6
  14
  1
  1
  6
  #f
  21/4
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match (-> (app blank? (app board-lookup co bo)) <-) (#f) _)\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app marked-with? b (app coord r c) (-> m <-)) (env (() () ())))\""
  77
  54
  22
  1
  54
  22
  76
  1
  1
  36
  #f
  151/27
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (b) (-> (app andmap (λ (r) ...) is) <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (match (-> a <-) (blank) _) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app equal? m (-> m* <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (app\n   play-game\n   (-> (app player (app X) human-action) <-)\n   (app player (app O) (app make-ai-action (app O))))\n  (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app some (-> mo₁ <-)) (env (())))\""
  7
  5
  2
  0
  5
  2
  7
  1
  1
  5
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (let (... () (bo (-> (app board-mark co this-mark bo) <-)) () ...) ...)\n  (env (() ())))\""
  12
  9
  2
  1
  9
  2
  11
  1
  1
  9
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app (-> bo <-) co) (env (())))\""
  76
  37
  36
  3
  37
  36
  73
  1
  1
  29
  #f
  193/37
  ((2 2 0) (2 2 0) (2 2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app equal? oc₁ (-> (app lose) <-)) (env (())))\""
  78
  39
  36
  3
  39
  36
  75
  1
  1
  31
  #t
  203/39
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (co) (-> (match (app equal? co₀ co) ...) <-)) (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (λ (bo) (-> (app error 'human-action \"not implemented\") <-)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app f (-> (app coord r c) <-) x) (env (() () ())))\""
  4
  4
  0
  0
  4
  0
  4
  1
  1
  4
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app wins? bo (-> this-mark <-)) (env (() ())))\""
  35
  23
  11
  1
  23
  11
  34
  1
  1
  16
  #f
  122/23
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  let
  "\"'(eval\n  (match (app blank? (app board-lookup co bo)) (#f) (_ (-> (let (bo) ...) <-)))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval (λ (f x) (-> (app foldl (λ (r x) ...) x is) <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match\n   (-> (app horizon< (app move-horizon mo₀) (app move-horizon mo₁)) <-)\n   (#f)\n   _)\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app < sc₀ (-> sc₁ <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app maximin bo (-> ma <-) (app mark⁻¹ ma)) (env (() ())))\""
  11
  7
  4
  0
  7
  4
  11
  1
  1
  6
  #f
  36/7
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match (app b co) (blank) ((marked m*) (-> (app equal? m m*) <-)))\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (match xs ((nil) (-> (app #f) <-)) (cons x rest-xs)) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app board-mark co (-> this-mark <-) bo) (env (() ())))\""
  21
  12
  9
  0
  12
  9
  21
  1
  1
  8
  #f
  16/3
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match l (nil) ((cons x xs) (-> (app foldl f (app f x acc) xs) <-)))\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval (app player (-> (app O) <-) (app make-ai-action (app O))) (env (())))\""
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  ref-or-constructor
  "\"'(eval (app maximin (-> bo <-) that-mark this-mark) (env (() ())))\""
  8
  7
  0
  1
  7
  0
  7
  1
  1
  7
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  let
  "\"'(eval (match (app wins? bo mark) (#f) (_ (-> (let (_) ...) <-))) (env (())))\""
  11
  10
  0
  1
  10
  0
  10
  1
  1
  10
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  ref-or-constructor
  "\"'(eval (app equal? (-> oc₁ <-) (app win)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (λ ()\n    (->\n     (app\n      play-game\n      (app player (app X) human-action)\n      (app player (app O) human-action))\n     <-))\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match (-> (app blank? (app board-lookup co bo)) <-) (#f) _)\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  match
  "\"'(eval (λ (f acc l) (-> (match l ...) <-)) (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  25
  353
  app
  "\"'(eval\n  (let (... () (bo (-> (app board-mark co mark bo) <-)) () ...) ...)\n  (env (())))\""
  5
  4
  0
  1
  4
  0
  4
  1
  1
  4
  #t
  5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  match
  "\"'(eval\n  (λ (co mm) (-> (match (app blank? (app board-lookup co bo)) ...) <-))\n  (env (() ())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (match oc₀ (win) ((draw) (-> (app equal? oc₁ (app win)) <-)) (lose))\n  (env (())))\""
  #f)
'(shuffled-cache
  1
  tic-tac-toe
  0
  353
  app
  "\"'(eval\n  (app\n   or\n   (app ormap (λ (r) ...) is)\n   (app ormap (λ (c) ...) is)\n   (app andmap (λ (rc) ...) is)\n   (-> (app andmap (λ (rc) ...) is) <-))\n  (env (())))\""
  #f)
