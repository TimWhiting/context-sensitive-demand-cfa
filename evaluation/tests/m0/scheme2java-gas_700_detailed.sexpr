'(clean-cache
  scheme2java
  0
  700
  1376
  lettypes
  "'(eval ((top) lettypes (cons ... error) ...) (env ()))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  letrec*
  "'(eval\n  (lettypes cons ... error (letrec* (car ... input-program) ...))\n  (env ()))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (letrec*\n   (...\n    java-compile-if\n    (input-program\n     (-> (app cons (app cons 'lambda (app cons ...)) (app nil)) <-))\n    ()\n    ...)\n   ...)\n  (env ()))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons 'lambda (app cons (app cons ...) (app cons ...)))\n   (-> (app nil) <-))\n  (env ()))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons 'lambda (app cons (app cons ...) (app cons ...))) <-)\n   (app nil))\n  (env ()))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   'lambda\n   (->\n    (app\n     cons\n     (app cons 'x (app nil ...))\n     (app cons (app cons ...) (app cons ...)))\n    <-))\n  (env ()))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons 'x (app nil))\n   (->\n    (app cons (app cons 'let (app cons ...)) (app cons 10 (app nil ...)))\n    <-))\n  (env ()))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons 'let (app cons (app cons ...) (app cons ...)))\n   (-> (app cons 10 (app nil)) <-))\n  (env ()))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cons 10 (-> (app nil) <-)) (env ()))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  number
  "'(eval (app cons (-> 10 <-) (app nil)) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cons <-) 10 (app nil)) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons 'let (app cons (app cons ...) (app cons ...))) <-)\n   (app cons 10 (app nil)))\n  (env ()))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   'let\n   (->\n    (app\n     cons\n     (app cons (app cons ...) (app nil ...))\n     (app cons (app cons ...) (app nil ...)))\n    <-))\n  (env ()))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons (app cons 'z (app cons ...)) (app nil))\n   (-> (app cons (app cons '+ (app cons ...)) (app nil)) <-))\n  (env ()))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app cons (app cons '+ (app cons 3 (app cons ...))) (-> (app nil) <-))\n  (env ()))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app cons (-> (app cons '+ (app cons 3 (app cons ...))) <-) (app nil))\n  (env ()))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app cons '+ (-> (app cons 3 (app cons 'x (app cons ...))) <-))\n  (env ()))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cons 3 (-> (app cons 'x (app cons 'z (app nil ...))) <-)) (env ()))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cons 'x (-> (app cons 'z (app nil)) <-)) (env ()))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cons 'z (-> (app nil) <-)) (env ()))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app cons (-> 'z <-) (app nil)) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cons <-) 'z (app nil)) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app cons (-> 'x <-) (app cons 'z (app nil))) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cons <-) 'x (app cons 'z (app nil))) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  number
  "'(eval (app cons (-> 3 <-) (app cons 'x (app cons 'z (app nil ...)))) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cons <-) 3 (app cons 'x (app cons 'z (app nil ...)))) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval\n  (app cons (-> '+ <-) (app cons 3 (app cons 'x (app cons ...))))\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app (-> cons <-) '+ (app cons 3 (app cons 'x (app cons ...))))\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app (-> cons <-) (app cons '+ (app cons 3 (app cons ...))) (app nil))\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons (app cons 'z (app cons ...)) (app nil)) <-)\n   (app cons (app cons '+ (app cons ...)) (app nil)))\n  (env ()))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons 'z (app cons (app cons ...) (app nil ...)))\n   (-> (app nil) <-))\n  (env ()))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons 'z (app cons (app cons ...) (app nil ...))) <-)\n   (app nil))\n  (env ()))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app cons 'z (-> (app cons (app cons '+ (app cons ...)) (app nil)) <-))\n  (env ()))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app cons (app cons '+ (app cons 3 (app cons ...))) (-> (app nil) <-))\n  (env ()))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app cons (-> (app cons '+ (app cons 3 (app cons ...))) <-) (app nil))\n  (env ()))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cons '+ (-> (app cons 3 (app cons 'x (app nil ...))) <-)) (env ()))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cons 3 (-> (app cons 'x (app nil)) <-)) (env ()))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cons 'x (-> (app nil) <-)) (env ()))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app cons (-> 'x <-) (app nil)) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cons <-) 'x (app nil)) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  number
  "'(eval (app cons (-> 3 <-) (app cons 'x (app nil))) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cons <-) 3 (app cons 'x (app nil))) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app cons (-> '+ <-) (app cons 3 (app cons 'x (app nil ...)))) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cons <-) '+ (app cons 3 (app cons 'x (app nil ...)))) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app (-> cons <-) (app cons '+ (app cons 3 (app cons ...))) (app nil))\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval\n  (app cons (-> 'z <-) (app cons (app cons '+ (app cons ...)) (app nil)))\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app (-> cons <-) 'z (app cons (app cons '+ (app cons ...)) (app nil)))\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons 'z (app cons (app cons ...) (app nil ...)))\n   (app nil))\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons (app cons 'z (app cons ...)) (app nil))\n   (app cons (app cons '+ (app cons ...)) (app nil)))\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval\n  (app\n   cons\n   (-> 'let <-)\n   (app\n    cons\n    (app cons (app cons ...) (app nil ...))\n    (app cons (app cons ...) (app nil ...))))\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   'let\n   (app\n    cons\n    (app cons (app cons ...) (app nil ...))\n    (app cons (app cons ...) (app nil ...))))\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons 'let (app cons (app cons ...) (app cons ...)))\n   (app cons 10 (app nil)))\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons 'x (app nil)) <-)\n   (app cons (app cons 'let (app cons ...)) (app cons 10 (app nil ...))))\n  (env ()))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cons 'x (-> (app nil) <-)) (env ()))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app cons (-> 'x <-) (app nil)) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cons <-) 'x (app nil)) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons 'x (app nil))\n   (app cons (app cons 'let (app cons ...)) (app cons 10 (app nil ...))))\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval\n  (app\n   cons\n   (-> 'lambda <-)\n   (app\n    cons\n    (app cons 'x (app nil ...))\n    (app cons (app cons ...) (app cons ...))))\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   'lambda\n   (app\n    cons\n    (app cons 'x (app nil ...))\n    (app cons (app cons ...) (app cons ...))))\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons 'lambda (app cons (app cons ...) (app cons ...)))\n   (app nil))\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec*\n   (...\n    java-compile-app\n    (java-compile-if (-> (λ (exp) ...) <-))\n    input-program\n    ...)\n   ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (λ (exp)\n    (->\n     (app\n      string-append\n      \"(\"\n      (app java-compile-exp (app if->condition ...))\n      \").toBoolean() ? (\"\n      (app java-compile-exp (app if->then ...))\n      \") : (\"\n      (app java-compile-exp (app if->else ...))\n      \")\")\n     <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app\n   string-append\n   \"(\"\n   (app java-compile-exp (app if->condition exp))\n   \").toBoolean() ? (\"\n   (app java-compile-exp (app if->then exp))\n   \") : (\"\n   (app java-compile-exp (app if->else exp))\n   (-> \")\" <-))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   string-append\n   \"(\"\n   (app java-compile-exp (app if->condition exp))\n   \").toBoolean() ? (\"\n   (app java-compile-exp (app if->then exp))\n   \") : (\"\n   (-> (app java-compile-exp (app if->else exp)) <-)\n   \")\")\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app java-compile-exp (-> (app if->else exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app if->else (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> if->else <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> java-compile-exp <-) (app if->else exp)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app\n   string-append\n   \"(\"\n   (app java-compile-exp (app if->condition exp))\n   \").toBoolean() ? (\"\n   (app java-compile-exp (app if->then exp))\n   (-> \") : (\" <-)\n   (app java-compile-exp (app if->else exp))\n   \")\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   string-append\n   \"(\"\n   (app java-compile-exp (app if->condition exp))\n   \").toBoolean() ? (\"\n   (-> (app java-compile-exp (app if->then exp)) <-)\n   \") : (\"\n   (app java-compile-exp (app if->else exp))\n   \")\")\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app java-compile-exp (-> (app if->then exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app if->then (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> if->then <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> java-compile-exp <-) (app if->then exp)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app\n   string-append\n   \"(\"\n   (app java-compile-exp (app if->condition exp))\n   (-> \").toBoolean() ? (\" <-)\n   (app java-compile-exp (app if->then exp))\n   \") : (\"\n   (app java-compile-exp (app if->else exp))\n   \")\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   string-append\n   \"(\"\n   (-> (app java-compile-exp (app if->condition exp)) <-)\n   \").toBoolean() ? (\"\n   (app java-compile-exp (app if->then exp))\n   \") : (\"\n   (app java-compile-exp (app if->else exp))\n   \")\")\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app java-compile-exp (-> (app if->condition exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app if->condition (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> if->condition <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> java-compile-exp <-) (app if->condition exp)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app\n   string-append\n   (-> \"(\" <-)\n   (app java-compile-exp (app if->condition exp))\n   \").toBoolean() ? (\"\n   (app java-compile-exp (app if->then exp))\n   \") : (\"\n   (app java-compile-exp (app if->else exp))\n   \")\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> string-append <-)\n   \"(\"\n   (app java-compile-exp (app if->condition exp))\n   \").toBoolean() ? (\"\n   (app java-compile-exp (app if->then exp))\n   \") : (\"\n   (app java-compile-exp (app if->else exp))\n   \")\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec*\n   (...\n    java-compile-set!\n    (java-compile-app (-> (λ (exp) ...) <-))\n    java-compile-if\n    ...)\n   ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  let*
  "'(eval (λ (exp) (-> (let* (args ... num-args) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (let* (... fun (num-args (-> (app length args) <-)) () ...) ...)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app length (-> args <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> length <-) args) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (let* (... args (fun (-> (app app->fun exp) <-)) num-args ...) ...)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app app->fun (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> app->fun <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (let* (... () (args (-> (app app->args exp) <-)) fun ...) ...)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app app->args (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> app->args <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (let* (args ... num-args)\n    (->\n     (app\n      string-append\n      \"((ProcValue\"\n      (app number->string num-args)\n      \")(\"\n      (app java-compile-exp fun)\n      \")).apply(\"\n      (app java-compile-args args)\n      \")\\n\")\n     <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app\n   string-append\n   \"((ProcValue\"\n   (app number->string num-args)\n   \")(\"\n   (app java-compile-exp fun)\n   \")).apply(\"\n   (app java-compile-args args)\n   (-> \")\\n\" <-))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   string-append\n   \"((ProcValue\"\n   (app number->string num-args)\n   \")(\"\n   (app java-compile-exp fun)\n   \")).apply(\"\n   (-> (app java-compile-args args) <-)\n   \")\\n\")\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app java-compile-args (-> args <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> java-compile-args <-) args) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app\n   string-append\n   \"((ProcValue\"\n   (app number->string num-args)\n   \")(\"\n   (app java-compile-exp fun)\n   (-> \")).apply(\" <-)\n   (app java-compile-args args)\n   \")\\n\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   string-append\n   \"((ProcValue\"\n   (app number->string num-args)\n   \")(\"\n   (-> (app java-compile-exp fun) <-)\n   \")).apply(\"\n   (app java-compile-args args)\n   \")\\n\")\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app java-compile-exp (-> fun <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> java-compile-exp <-) fun) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app\n   string-append\n   \"((ProcValue\"\n   (app number->string num-args)\n   (-> \")(\" <-)\n   (app java-compile-exp fun)\n   \")).apply(\"\n   (app java-compile-args args)\n   \")\\n\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   string-append\n   \"((ProcValue\"\n   (-> (app number->string num-args) <-)\n   \")(\"\n   (app java-compile-exp fun)\n   \")).apply(\"\n   (app java-compile-args args)\n   \")\\n\")\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app number->string (-> num-args <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> number->string <-) num-args) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app\n   string-append\n   (-> \"((ProcValue\" <-)\n   (app number->string num-args)\n   \")(\"\n   (app java-compile-exp fun)\n   \")).apply(\"\n   (app java-compile-args args)\n   \")\\n\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> string-append <-)\n   \"((ProcValue\"\n   (app number->string num-args)\n   \")(\"\n   (app java-compile-exp fun)\n   \")).apply(\"\n   (app java-compile-args args)\n   \")\\n\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec*\n   (...\n    java-compile-args\n    (java-compile-set! (-> (λ (exp) ...) <-))\n    java-compile-app\n    ...)\n   ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (λ (exp)\n    (->\n     (app\n      string-append\n      \"VoidValue.Void(m_\"\n      (app mangle (app set!-var ...))\n      \".value = \"\n      (app java-compile-exp (app set!-exp ...))\n      \")\")\n     <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app\n   string-append\n   \"VoidValue.Void(m_\"\n   (app mangle (app set!-var exp))\n   \".value = \"\n   (app java-compile-exp (app set!-exp exp))\n   (-> \")\" <-))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   string-append\n   \"VoidValue.Void(m_\"\n   (app mangle (app set!-var exp))\n   \".value = \"\n   (-> (app java-compile-exp (app set!-exp exp)) <-)\n   \")\")\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app java-compile-exp (-> (app set!-exp exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app set!-exp (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> set!-exp <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> java-compile-exp <-) (app set!-exp exp)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app\n   string-append\n   \"VoidValue.Void(m_\"\n   (app mangle (app set!-var exp))\n   (-> \".value = \" <-)\n   (app java-compile-exp (app set!-exp exp))\n   \")\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   string-append\n   \"VoidValue.Void(m_\"\n   (-> (app mangle (app set!-var exp)) <-)\n   \".value = \"\n   (app java-compile-exp (app set!-exp exp))\n   \")\")\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app mangle (-> (app set!-var exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app set!-var (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> set!-var <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> mangle <-) (app set!-var exp)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app\n   string-append\n   (-> \"VoidValue.Void(m_\" <-)\n   (app mangle (app set!-var exp))\n   \".value = \"\n   (app java-compile-exp (app set!-exp exp))\n   \")\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> string-append <-)\n   \"VoidValue.Void(m_\"\n   (app mangle (app set!-var exp))\n   \".value = \"\n   (app java-compile-exp (app set!-exp exp))\n   \")\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec*\n   (...\n    java-compile-lambda\n    (java-compile-args (-> (λ (args) ...) <-))\n    java-compile-set!\n    ...)\n   ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval (λ (args) (-> (match (app not (app pair? ...)) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval (match (app not (app pair? args)) (#f) (_ (-> \"\" <-))) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match\n   (app not (app pair? args))\n   ((#f)\n    (->\n     (app\n      string-append\n      (app java-compile-exp (app car ...))\n      (match (app pair? ...) ...))\n     <-))\n   _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (app\n   string-append\n   (app java-compile-exp (app car args))\n   (-> (match (app pair? (app cdr ...)) ...) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match\n   (app pair? (app cdr args))\n   (#f)\n   (_ (-> (app string-append \", \" (app java-compile-args (app cdr ...))) <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app string-append \", \" (-> (app java-compile-args (app cdr args)) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app java-compile-args (-> (app cdr args) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app cdr (-> args <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cdr <-) args) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> java-compile-args <-) (app cdr args)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app string-append (-> \", \" <-) (app java-compile-args (app cdr args)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app (-> string-append <-) \", \" (app java-compile-args (app cdr args)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval (match (app pair? (app cdr args)) ((#f) (-> \"\" <-)) _) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app pair? (app cdr args)) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app pair? (-> (app cdr args) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app cdr (-> args <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cdr <-) args) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> pair? <-) (app cdr args)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   string-append\n   (-> (app java-compile-exp (app car args)) <-)\n   (match (app pair? (app cdr ...)) ...))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app java-compile-exp (-> (app car args) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app car (-> args <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> car <-) args) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> java-compile-exp <-) (app car args)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> string-append <-)\n   (app java-compile-exp (app car args))\n   (match (app pair? (app cdr ...)) ...))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app not (app pair? args)) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app not (-> (app pair? args) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app pair? (-> args <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> pair? <-) args) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> not <-) (app pair? args)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec*\n   (...\n    java-compile-formals\n    (java-compile-lambda (-> (λ (exp) ...) <-))\n    java-compile-args\n    ...)\n   ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  letrec*
  "'(eval (λ (exp) (-> (letrec* (java-wrap-mutables) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec* (... () (java-wrap-mutables (-> (λ (vars) ...) <-)) () ...) ...)\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval (λ (vars) (-> (match (app not (app pair? ...)) ...) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval (match (app not (app pair? vars)) (#f) (_ (-> \"\" <-))) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match\n   (app not (app pair? vars))\n   ((#f)\n    (->\n     (app\n      string-append\n      (match (app is-mutable? ...) ...)\n      (app java-wrap-mutables (app cdr ...)))\n     <-))\n   _)\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   string-append\n   (match (app is-mutable? (app car ...)) ...)\n   (-> (app java-wrap-mutables (app cdr vars)) <-))\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app java-wrap-mutables (-> (app cdr vars) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app cdr (-> vars <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cdr <-) vars) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> java-wrap-mutables <-) (app cdr vars)) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (app\n   string-append\n   (-> (match (app is-mutable? (app car ...)) ...) <-)\n   (app java-wrap-mutables (app cdr vars)))\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match\n   (app is-mutable? (app car vars))\n   (#f)\n   (_\n    (->\n     (app\n      string-append\n      \" final ValueCell m_\"\n      (app mangle (app car ...))\n      \" = new ValueCell(\"\n      (app mangle (app car ...))\n      \");\\n\")\n     <-)))\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app\n   string-append\n   \" final ValueCell m_\"\n   (app mangle (app car vars))\n   \" = new ValueCell(\"\n   (app mangle (app car vars))\n   (-> \");\\n\" <-))\n  (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   string-append\n   \" final ValueCell m_\"\n   (app mangle (app car vars))\n   \" = new ValueCell(\"\n   (-> (app mangle (app car vars)) <-)\n   \");\\n\")\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app mangle (-> (app car vars) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app car (-> vars <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> car <-) vars) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> mangle <-) (app car vars)) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app\n   string-append\n   \" final ValueCell m_\"\n   (app mangle (app car vars))\n   (-> \" = new ValueCell(\" <-)\n   (app mangle (app car vars))\n   \");\\n\")\n  (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   string-append\n   \" final ValueCell m_\"\n   (-> (app mangle (app car vars)) <-)\n   \" = new ValueCell(\"\n   (app mangle (app car vars))\n   \");\\n\")\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app mangle (-> (app car vars) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app car (-> vars <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> car <-) vars) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> mangle <-) (app car vars)) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app\n   string-append\n   (-> \" final ValueCell m_\" <-)\n   (app mangle (app car vars))\n   \" = new ValueCell(\"\n   (app mangle (app car vars))\n   \");\\n\")\n  (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> string-append <-)\n   \" final ValueCell m_\"\n   (app mangle (app car vars))\n   \" = new ValueCell(\"\n   (app mangle (app car vars))\n   \");\\n\")\n  (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (match (app is-mutable? (app car vars)) ((#f) (-> \"\" <-)) _)\n  (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app is-mutable? (app car vars)) <-) (#f) _) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app is-mutable? (-> (app car vars) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app car (-> vars <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> car <-) vars) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> is-mutable? <-) (app car vars)) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> string-append <-)\n   (match (app is-mutable? (app car ...)) ...)\n   (app java-wrap-mutables (app cdr vars)))\n  (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app not (app pair? vars)) <-) (#f) _) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app not (-> (app pair? vars) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app pair? (-> vars <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> pair? <-) vars) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> not <-) (app pair? vars)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  let*
  "'(eval\n  (letrec* (java-wrap-mutables) (-> (let* (formals ... num-args) ...) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (let* (... formals (num-args (-> (app length formals) <-)) () ...) ...)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app length (-> formals <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> length <-) formals) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (let* (... () (formals (-> (app lambda->formals exp) <-)) num-args ...) ...)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app lambda->formals (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> lambda->formals <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (let* (formals ... num-args)\n    (->\n     (app\n      string-append\n      \"new NullProcValue\"\n      (app number->string num-args)\n      \" () {\\n\"\n      \" public Value apply(\"\n      (app java-compile-formals formals)\n      \") {\\n\"\n      (app java-wrap-mutables formals)\n      \"\\n\"\n      \"  return \"\n      (app java-compile-exp (app lambda->exp ...))\n      \" ;\\n\"\n      \"}}\\n\")\n     <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app\n   string-append\n   \"new NullProcValue\"\n   (app number->string num-args)\n   \" () {\\n\"\n   \" public Value apply(\"\n   (app java-compile-formals formals)\n   \") {\\n\"\n   (app java-wrap-mutables formals)\n   \"\\n\"\n   \"  return \"\n   (app java-compile-exp (app lambda->exp exp))\n   \" ;\\n\"\n   (-> \"}}\\n\" <-))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app\n   string-append\n   \"new NullProcValue\"\n   (app number->string num-args)\n   \" () {\\n\"\n   \" public Value apply(\"\n   (app java-compile-formals formals)\n   \") {\\n\"\n   (app java-wrap-mutables formals)\n   \"\\n\"\n   \"  return \"\n   (app java-compile-exp (app lambda->exp exp))\n   (-> \" ;\\n\" <-)\n   \"}}\\n\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   string-append\n   \"new NullProcValue\"\n   (app number->string num-args)\n   \" () {\\n\"\n   \" public Value apply(\"\n   (app java-compile-formals formals)\n   \") {\\n\"\n   (app java-wrap-mutables formals)\n   \"\\n\"\n   \"  return \"\n   (-> (app java-compile-exp (app lambda->exp exp)) <-)\n   \" ;\\n\"\n   \"}}\\n\")\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app java-compile-exp (-> (app lambda->exp exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app lambda->exp (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> lambda->exp <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> java-compile-exp <-) (app lambda->exp exp)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app\n   string-append\n   \"new NullProcValue\"\n   (app number->string num-args)\n   \" () {\\n\"\n   \" public Value apply(\"\n   (app java-compile-formals formals)\n   \") {\\n\"\n   (app java-wrap-mutables formals)\n   \"\\n\"\n   (-> \"  return \" <-)\n   (app java-compile-exp (app lambda->exp exp))\n   \" ;\\n\"\n   \"}}\\n\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app\n   string-append\n   \"new NullProcValue\"\n   (app number->string num-args)\n   \" () {\\n\"\n   \" public Value apply(\"\n   (app java-compile-formals formals)\n   \") {\\n\"\n   (app java-wrap-mutables formals)\n   (-> \"\\n\" <-)\n   \"  return \"\n   (app java-compile-exp (app lambda->exp exp))\n   \" ;\\n\"\n   \"}}\\n\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   string-append\n   \"new NullProcValue\"\n   (app number->string num-args)\n   \" () {\\n\"\n   \" public Value apply(\"\n   (app java-compile-formals formals)\n   \") {\\n\"\n   (-> (app java-wrap-mutables formals) <-)\n   \"\\n\"\n   \"  return \"\n   (app java-compile-exp (app lambda->exp exp))\n   \" ;\\n\"\n   \"}}\\n\")\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app java-wrap-mutables (-> formals <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> java-wrap-mutables <-) formals) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app\n   string-append\n   \"new NullProcValue\"\n   (app number->string num-args)\n   \" () {\\n\"\n   \" public Value apply(\"\n   (app java-compile-formals formals)\n   (-> \") {\\n\" <-)\n   (app java-wrap-mutables formals)\n   \"\\n\"\n   \"  return \"\n   (app java-compile-exp (app lambda->exp exp))\n   \" ;\\n\"\n   \"}}\\n\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   string-append\n   \"new NullProcValue\"\n   (app number->string num-args)\n   \" () {\\n\"\n   \" public Value apply(\"\n   (-> (app java-compile-formals formals) <-)\n   \") {\\n\"\n   (app java-wrap-mutables formals)\n   \"\\n\"\n   \"  return \"\n   (app java-compile-exp (app lambda->exp exp))\n   \" ;\\n\"\n   \"}}\\n\")\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app java-compile-formals (-> formals <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> java-compile-formals <-) formals) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app\n   string-append\n   \"new NullProcValue\"\n   (app number->string num-args)\n   \" () {\\n\"\n   (-> \" public Value apply(\" <-)\n   (app java-compile-formals formals)\n   \") {\\n\"\n   (app java-wrap-mutables formals)\n   \"\\n\"\n   \"  return \"\n   (app java-compile-exp (app lambda->exp exp))\n   \" ;\\n\"\n   \"}}\\n\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app\n   string-append\n   \"new NullProcValue\"\n   (app number->string num-args)\n   (-> \" () {\\n\" <-)\n   \" public Value apply(\"\n   (app java-compile-formals formals)\n   \") {\\n\"\n   (app java-wrap-mutables formals)\n   \"\\n\"\n   \"  return \"\n   (app java-compile-exp (app lambda->exp exp))\n   \" ;\\n\"\n   \"}}\\n\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   string-append\n   \"new NullProcValue\"\n   (-> (app number->string num-args) <-)\n   \" () {\\n\"\n   \" public Value apply(\"\n   (app java-compile-formals formals)\n   \") {\\n\"\n   (app java-wrap-mutables formals)\n   \"\\n\"\n   \"  return \"\n   (app java-compile-exp (app lambda->exp exp))\n   \" ;\\n\"\n   \"}}\\n\")\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app number->string (-> num-args <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> number->string <-) num-args) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app\n   string-append\n   (-> \"new NullProcValue\" <-)\n   (app number->string num-args)\n   \" () {\\n\"\n   \" public Value apply(\"\n   (app java-compile-formals formals)\n   \") {\\n\"\n   (app java-wrap-mutables formals)\n   \"\\n\"\n   \"  return \"\n   (app java-compile-exp (app lambda->exp exp))\n   \" ;\\n\"\n   \"}}\\n\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> string-append <-)\n   \"new NullProcValue\"\n   (app number->string num-args)\n   \" () {\\n\"\n   \" public Value apply(\"\n   (app java-compile-formals formals)\n   \") {\\n\"\n   (app java-wrap-mutables formals)\n   \"\\n\"\n   \"  return \"\n   (app java-compile-exp (app lambda->exp exp))\n   \" ;\\n\"\n   \"}}\\n\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec*\n   (...\n    java-compile-ref\n    (java-compile-formals (-> (λ (formals) ...) <-))\n    java-compile-lambda\n    ...)\n   ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval (λ (formals) (-> (match (app not (app pair? ...)) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval (match (app not (app pair? formals)) (#f) (_ (-> \"\" <-))) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match\n   (app not (app pair? formals))\n   ((#f)\n    (->\n     (app\n      string-append\n      \"final Value \"\n      (app mangle (app car ...))\n      (match (app pair? ...) ...))\n     <-))\n   _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (app\n   string-append\n   \"final Value \"\n   (app mangle (app car formals))\n   (-> (match (app pair? (app cdr ...)) ...) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match\n   (app pair? (app cdr formals))\n   (#f)\n   (_\n    (-> (app string-append \", \" (app java-compile-formals (app cdr ...))) <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app string-append \", \" (-> (app java-compile-formals (app cdr formals)) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app java-compile-formals (-> (app cdr formals) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app cdr (-> formals <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cdr <-) formals) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> java-compile-formals <-) (app cdr formals)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app string-append (-> \", \" <-) (app java-compile-formals (app cdr formals)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app (-> string-append <-) \", \" (app java-compile-formals (app cdr formals)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval (match (app pair? (app cdr formals)) ((#f) (-> \"\" <-)) _) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app pair? (app cdr formals)) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app pair? (-> (app cdr formals) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app cdr (-> formals <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cdr <-) formals) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> pair? <-) (app cdr formals)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   string-append\n   \"final Value \"\n   (-> (app mangle (app car formals)) <-)\n   (match (app pair? (app cdr ...)) ...))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app mangle (-> (app car formals) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app car (-> formals <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> car <-) formals) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> mangle <-) (app car formals)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app\n   string-append\n   (-> \"final Value \" <-)\n   (app mangle (app car formals))\n   (match (app pair? (app cdr ...)) ...))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> string-append <-)\n   \"final Value \"\n   (app mangle (app car formals))\n   (match (app pair? (app cdr ...)) ...))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app not (app pair? formals)) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app not (-> (app pair? formals) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app pair? (-> formals <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> pair? <-) formals) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> not <-) (app pair? formals)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec*\n   (...\n    java-compile-prim\n    (java-compile-ref (-> (λ (exp) ...) <-))\n    java-compile-formals\n    ...)\n   ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval (λ (exp) (-> (match (app is-mutable? exp) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match\n   (app is-mutable? exp)\n   (#f)\n   (_ (-> (app string-append \"m_\" (app mangle exp) \".value\") <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval (app string-append \"m_\" (app mangle exp) (-> \".value\" <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app string-append \"m_\" (-> (app mangle exp) <-) \".value\") (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app mangle (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> mangle <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval (app string-append (-> \"m_\" <-) (app mangle exp) \".value\") (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> string-append <-) \"m_\" (app mangle exp) \".value\") (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match (app is-mutable? exp) ((#f) (-> (app mangle exp) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app mangle (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> mangle <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app is-mutable? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app is-mutable? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> is-mutable? <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec*\n   (...\n    java-compile-const\n    (java-compile-prim (-> (λ (p) ...) <-))\n    java-compile-ref\n    ...)\n   ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval (λ (p) (-> (match (app eq? '+ p) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval (match (app eq? '+ p) (#f) (_ (-> \"sum\" <-))) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (app eq? '+ p) ((#f) (-> (match (app eq? '- p) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval (match (app eq? '- p) (#f) (_ (-> \"difference\" <-))) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (app eq? '- p) ((#f) (-> (match (app eq? '* p) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval (match (app eq? '* p) (#f) (_ (-> \"product\" <-))) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (app eq? '* p) ((#f) (-> (match (app eq? '= p) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval (match (app eq? '= p) (#f) (_ (-> \"numEqual\" <-))) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (app eq? '= p) ((#f) (-> (match (app eq? 'display p) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval (match (app eq? 'display p) (#f) (_ (-> \"display\" <-))) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match\n   (app eq? 'display p)\n   ((#f) (-> (app error \"unhandled primitive \" p) <-))\n   _)\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app error \"unhandled primitive \" (-> p <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval (app error (-> \"unhandled primitive \" <-) p) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> error <-) \"unhandled primitive \" p) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app eq? 'display p) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app eq? 'display (-> p <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app eq? (-> 'display <-) p) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> eq? <-) 'display p) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app eq? '= p) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app eq? '= (-> p <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app eq? (-> '= <-) p) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> eq? <-) '= p) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app eq? '* p) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app eq? '* (-> p <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app eq? (-> '* <-) p) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> eq? <-) '* p) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app eq? '- p) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app eq? '- (-> p <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app eq? (-> '- <-) p) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> eq? <-) '- p) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app eq? '+ p) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app eq? '+ (-> p <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app eq? (-> '+ <-) p) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> eq? <-) '+ p) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec*\n   (...\n    java-compile-exp\n    (java-compile-const (-> (λ (exp) ...) <-))\n    java-compile-prim\n    ...)\n   ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval (λ (exp) (-> (match (app integer? exp) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match\n   (app integer? exp)\n   (#f)\n   (_\n    (-> (app string-append \"new IntValue(\" (app number->string exp) \")\") <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app string-append \"new IntValue(\" (app number->string exp) (-> \")\" <-))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app string-append \"new IntValue(\" (-> (app number->string exp) <-) \")\")\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app number->string (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> number->string <-) exp) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app string-append (-> \"new IntValue(\" <-) (app number->string exp) \")\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app (-> string-append <-) \"new IntValue(\" (app number->string exp) \")\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match\n   (app integer? exp)\n   ((#f) (-> (app error \"unknown constant: \" exp) <-))\n   _)\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app error \"unknown constant: \" (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval (app error (-> \"unknown constant: \" <-) exp) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> error <-) \"unknown constant: \" exp) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app integer? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app integer? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> integer? <-) exp) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec*\n   (...\n    java-compile-program\n    (java-compile-exp (-> (λ (exp) ...) <-))\n    java-compile-const\n    ...)\n   ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval (λ (exp) (-> (match (app const? exp) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match (app const? exp) (#f) (_ (-> (app java-compile-const exp) <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app java-compile-const (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> java-compile-const <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (app const? exp) ((#f) (-> (match (app prim? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match (app prim? exp) (#f) (_ (-> (app java-compile-prim exp) <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app java-compile-prim (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> java-compile-prim <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (app prim? exp) ((#f) (-> (match (app ref? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match (app ref? exp) (#f) (_ (-> (app java-compile-ref exp) <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app java-compile-ref (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> java-compile-ref <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (app ref? exp) ((#f) (-> (match (app lambda? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match (app lambda? exp) (#f) (_ (-> (app java-compile-lambda exp) <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app java-compile-lambda (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> java-compile-lambda <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (app lambda? exp) ((#f) (-> (match (app if? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match (app if? exp) (#f) (_ (-> (app java-compile-if exp) <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app java-compile-if (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> java-compile-if <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (app if? exp) ((#f) (-> (match (app set!? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match (app set!? exp) (#f) (_ (-> (app java-compile-set! exp) <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app java-compile-set! (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> java-compile-set! <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (app set!? exp) ((#f) (-> (match (app let? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match\n   (app let? exp)\n   (#f)\n   (_ (-> (app java-compile-exp (app let=>lambda exp)) <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app java-compile-exp (-> (app let=>lambda exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app let=>lambda (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> let=>lambda <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> java-compile-exp <-) (app let=>lambda exp)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (app let? exp) ((#f) (-> (match (app letrec1? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match\n   (app letrec1? exp)\n   (#f)\n   (_ (-> (app java-compile-exp (app letrec1=>Y exp)) <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app java-compile-exp (-> (app letrec1=>Y exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app letrec1=>Y (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> letrec1=>Y <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> java-compile-exp <-) (app letrec1=>Y exp)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (app letrec1? exp) ((#f) (-> (match (app begin? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match\n   (app begin? exp)\n   (#f)\n   (_ (-> (app java-compile-exp (app begin=>let exp)) <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app java-compile-exp (-> (app begin=>let exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app begin=>let (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> begin=>let <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> java-compile-exp <-) (app begin=>let exp)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (app begin? exp) ((#f) (-> (match (app app? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match (app app? exp) (#f) (_ (-> (app java-compile-app exp) <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app java-compile-app (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> java-compile-app <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match (app app? exp) ((#f) (-> (app error \"no-match\") <-)) _)\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval (app error (-> \"no-match\" <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> error <-) \"no-match\") (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app app? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app app? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> app? <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app begin? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app begin? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> begin? <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app letrec1? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app letrec1? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> letrec1? <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app let? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app let? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> let? <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app set!? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app set!? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> set!? <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app if? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app if? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> if? <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app lambda? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app lambda? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> lambda? <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app ref? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app ref? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> ref? <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app prim? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app prim? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> prim? <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app const? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app const? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> const? <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec*\n   (...\n    mangle\n    (java-compile-program (-> (λ (exp) ...) <-))\n    java-compile-exp\n    ...)\n   ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (λ (exp)\n    (->\n     (app\n      string-append\n      \"public class BOut extends RuntimeEnvironment {\\n\"\n      \" public static void main (String[] args) {\\n\"\n      (app java-compile-exp exp)\n      \" ;\\n\"\n      \" }\\n\"\n      \"}\\n\")\n     <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app\n   string-append\n   \"public class BOut extends RuntimeEnvironment {\\n\"\n   \" public static void main (String[] args) {\\n\"\n   (app java-compile-exp exp)\n   \" ;\\n\"\n   \" }\\n\"\n   (-> \"}\\n\" <-))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app\n   string-append\n   \"public class BOut extends RuntimeEnvironment {\\n\"\n   \" public static void main (String[] args) {\\n\"\n   (app java-compile-exp exp)\n   \" ;\\n\"\n   (-> \" }\\n\" <-)\n   \"}\\n\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app\n   string-append\n   \"public class BOut extends RuntimeEnvironment {\\n\"\n   \" public static void main (String[] args) {\\n\"\n   (app java-compile-exp exp)\n   (-> \" ;\\n\" <-)\n   \" }\\n\"\n   \"}\\n\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   string-append\n   \"public class BOut extends RuntimeEnvironment {\\n\"\n   \" public static void main (String[] args) {\\n\"\n   (-> (app java-compile-exp exp) <-)\n   \" ;\\n\"\n   \" }\\n\"\n   \"}\\n\")\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app java-compile-exp (-> exp <-)) (env (())))"
  #f
  6
  4
  2
  0
  4
  2
  6
  1
  1
  4
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> java-compile-exp <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app\n   string-append\n   \"public class BOut extends RuntimeEnvironment {\\n\"\n   (-> \" public static void main (String[] args) {\\n\" <-)\n   (app java-compile-exp exp)\n   \" ;\\n\"\n   \" }\\n\"\n   \"}\\n\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval\n  (app\n   string-append\n   (-> \"public class BOut extends RuntimeEnvironment {\\n\" <-)\n   \" public static void main (String[] args) {\\n\"\n   (app java-compile-exp exp)\n   \" ;\\n\"\n   \" }\\n\"\n   \"}\\n\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> string-append <-)\n   \"public class BOut extends RuntimeEnvironment {\\n\"\n   \" public static void main (String[] args) {\\n\"\n   (app java-compile-exp exp)\n   \" ;\\n\"\n   \" }\\n\"\n   \"}\\n\")\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec*\n   (...\n    analyze-mutable-variables\n    (mangle (-> (λ (symbol) ...) <-))\n    java-compile-program\n    ...)\n   ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  letrec*
  "'(eval (λ (symbol) (-> (letrec* (m) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval (letrec* (... () (m (-> (λ (chars) ...) <-)) () ...) ...) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval (λ (chars) (-> (match (app null? chars) ...) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (app null? chars) (#f) (_ (-> (app nil) <-))) (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match\n   (app null? chars)\n   ((#f) (-> (match (match (match (...) ...) ...) ...) <-))\n   _)\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match\n   (match (match (app char-alphabetic? ...) ...) ...)\n   (#f)\n   (_ (-> (app cons (app car chars) (app m (app cdr ...))) <-)))\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app cons (app car chars) (-> (app m (app cdr chars)) <-))\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app m (-> (app cdr chars) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app cdr (-> chars <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cdr <-) chars) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> m <-) (app cdr chars)) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app cons (-> (app car chars) <-) (app m (app cdr chars)))\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app car (-> chars <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> car <-) chars) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app (-> cons <-) (app car chars) (app m (app cdr chars)))\n  (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match\n   (match (match (app char-alphabetic? ...) ...) ...)\n   ((#f)\n    (->\n     (app cons #\\_ (app append (app integer->char-list ...) (app m ...)))\n     <-))\n   _)\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   #\\_\n   (->\n    (app\n     append\n     (app integer->char-list (app char->natural ...))\n     (app m (app cdr ...)))\n    <-))\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   append\n   (app integer->char-list (app char->natural (app car ...)))\n   (-> (app m (app cdr chars)) <-))\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app m (-> (app cdr chars) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app cdr (-> chars <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cdr <-) chars) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> m <-) (app cdr chars)) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   append\n   (-> (app integer->char-list (app char->natural (app car ...))) <-)\n   (app m (app cdr chars)))\n  (env (() ())))"
  #f
  27
  21
  3
  3
  21
  3
  24
  1
  1
  12
  #f
  6/7
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app integer->char-list (-> (app char->natural (app car chars)) <-))\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app char->natural (-> (app car chars) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app car (-> chars <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> car <-) chars) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> char->natural <-) (app car chars)) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app (-> integer->char-list <-) (app char->natural (app car chars)))\n  (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> append <-)\n   (app integer->char-list (app char->natural (app car ...)))\n   (app m (app cdr chars)))\n  (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  char
  "'(eval\n  (app\n   cons\n   (-> #\\_ <-)\n   (app\n    append\n    (app integer->char-list (app char->natural ...))\n    (app m (app cdr ...))))\n  (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   #\\_\n   (app\n    append\n    (app integer->char-list (app char->natural ...))\n    (app m (app cdr ...))))\n  (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (-> (match (match (app char-alphabetic? ...) ...) ...) <-) (#f) _)\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match\n   (match (app char-alphabetic? (app car ...)) ...)\n   (#f)\n   (_ (-> (app #t) <-)))\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  constructor
  "'(eval (app (-> #t <-)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match\n   (match (app char-alphabetic? (app car ...)) ...)\n   ((#f) (-> (match (app char-numeric? (app car ...)) ...) <-))\n   _)\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match (app char-numeric? (app car chars)) (#f) (_ (-> (app #t) <-)))\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  constructor
  "'(eval (app (-> #t <-)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match (app char-numeric? (app car chars)) ((#f) (-> (app #f) <-)) _)\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  constructor
  "'(eval (app (-> #f <-)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match (-> (app char-numeric? (app car chars)) <-) (#f) _)\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app char-numeric? (-> (app car chars) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app car (-> chars <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> car <-) chars) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> char-numeric? <-) (app car chars)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (-> (match (app char-alphabetic? (app car ...)) ...) <-) (#f) _)\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match\n   (app char-alphabetic? (app car chars))\n   (#f)\n   (_ (-> (match (app not (app char=? ...)) ...) <-)))\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match (app not (app char=? (app car ...) #\\_)) (#f) (_ (-> (app #t) <-)))\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  constructor
  "'(eval (app (-> #t <-)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match (app not (app char=? (app car ...) #\\_)) ((#f) (-> (app #f) <-)) _)\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  constructor
  "'(eval (app (-> #f <-)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match (-> (app not (app char=? (app car ...) #\\_)) <-) (#f) _)\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app not (-> (app char=? (app car chars) #\\_) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  char
  "'(eval (app char=? (app car chars) (-> #\\_ <-)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app char=? (-> (app car chars) <-) #\\_) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app car (-> chars <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> car <-) chars) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> char=? <-) (app car chars) #\\_) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> not <-) (app char=? (app car chars) #\\_)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match (app char-alphabetic? (app car chars)) ((#f) (-> (app #f) <-)) _)\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  constructor
  "'(eval (app (-> #f <-)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match (-> (app char-alphabetic? (app car chars)) <-) (#f) _)\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app char-alphabetic? (-> (app car chars) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app car (-> chars <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> car <-) chars) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> char-alphabetic? <-) (app car chars)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app null? chars) <-) (#f) _) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app null? (-> chars <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> null? <-) chars) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (letrec* (m) (-> (app list->string (app m (app string->list ...))) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   list->string\n   (-> (app m (app string->list (app symbol->string ...))) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app m (-> (app string->list (app symbol->string symbol)) <-))\n  (env (())))"
  #f
  23
  18
  3
  2
  18
  3
  21
  1
  1
  10
  #f
  8/9
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app string->list (-> (app symbol->string symbol) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app symbol->string (-> symbol <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> symbol->string <-) symbol) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> string->list <-) (app symbol->string symbol)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app (-> m <-) (app string->list (app symbol->string symbol)))\n  (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> list->string <-)\n   (app m (app string->list (app symbol->string ...))))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec*\n   (...\n    is-mutable?\n    (analyze-mutable-variables (-> (λ (exp) ...) <-))\n    mangle\n    ...)\n   ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval (λ (exp) (-> (match (app const? exp) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (app const? exp) (#f) (_ (-> (app void) <-))) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> void <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (app const? exp) ((#f) (-> (match (app ref? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (app ref? exp) (#f) (_ (-> (app void) <-))) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> void <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (app ref? exp) ((#f) (-> (match (app prim? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (app prim? exp) (#f) (_ (-> (app void) <-))) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> void <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (app prim? exp) ((#f) (-> (match (app lambda? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match\n   (app lambda? exp)\n   (#f)\n   (_ (-> (app analyze-mutable-variables (app lambda->exp exp)) <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app analyze-mutable-variables (-> (app lambda->exp exp) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app lambda->exp (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> lambda->exp <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app (-> analyze-mutable-variables <-) (app lambda->exp exp))\n  (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (app lambda? exp) ((#f) (-> (match (app let? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  let
  "'(eval (match (app let? exp) (#f) (_ (-> (let (_) ...) <-))) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (let (...\n        ()\n        (_\n         (->\n          (app\n           map\n           analyze-mutable-variables\n           (app map cadr (app let->bindings ...)))\n          <-))\n        ()\n        ...)\n    ...)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   map\n   analyze-mutable-variables\n   (-> (app map cadr (app let->bindings exp)) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app map cadr (-> (app let->bindings exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app let->bindings (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> let->bindings <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app map (-> cadr <-) (app let->bindings exp)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> map <-) cadr (app let->bindings exp)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   map\n   (-> analyze-mutable-variables <-)\n   (app map cadr (app let->bindings exp)))\n  (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> map <-)\n   analyze-mutable-variables\n   (app map cadr (app let->bindings exp)))\n  (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (let (_) (-> (app analyze-mutable-variables (app let->exp exp)) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app analyze-mutable-variables (-> (app let->exp exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app let->exp (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> let->exp <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> analyze-mutable-variables <-) (app let->exp exp)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (app let? exp) ((#f) (-> (match (app letrec1? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  let
  "'(eval (match (app letrec1? exp) (#f) (_ (-> (let (_) ...) <-))) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (let (...\n        ()\n        (_\n         (->\n          (app analyze-mutable-variables (app cadr (app letrec1->binding ...)))\n          <-))\n        ()\n        ...)\n    ...)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app analyze-mutable-variables (-> (app cadr (app letrec1->binding exp)) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cadr (-> (app letrec1->binding exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app letrec1->binding (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> letrec1->binding <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cadr <-) (app letrec1->binding exp)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app (-> analyze-mutable-variables <-) (app cadr (app letrec1->binding exp)))\n  (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (let (_) (-> (app analyze-mutable-variables (app letrec1->exp exp)) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app analyze-mutable-variables (-> (app letrec1->exp exp) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app letrec1->exp (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> letrec1->exp <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app (-> analyze-mutable-variables <-) (app letrec1->exp exp))\n  (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (app letrec1? exp) ((#f) (-> (match (app set!? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match\n   (app set!? exp)\n   (#f)\n   (_ (-> (app mark-mutable (app set!-var exp)) <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app mark-mutable (-> (app set!-var exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app set!-var (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> set!-var <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> mark-mutable <-) (app set!-var exp)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (app set!? exp) ((#f) (-> (match (app if? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  let
  "'(eval (match (app if? exp) (#f) (_ (-> (let (_) ...) <-))) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (let (...\n        ()\n        (_ (-> (app analyze-mutable-variables (app if->condition exp)) <-))\n        ()\n        ...)\n    ...)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app analyze-mutable-variables (-> (app if->condition exp) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app if->condition (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> if->condition <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app (-> analyze-mutable-variables <-) (app if->condition exp))\n  (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  let
  "'(eval (let (_) (-> (let (_) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (let (...\n        ()\n        (_ (-> (app analyze-mutable-variables (app if->then exp)) <-))\n        ()\n        ...)\n    ...)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app analyze-mutable-variables (-> (app if->then exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app if->then (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> if->then <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> analyze-mutable-variables <-) (app if->then exp)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (let (_) (-> (app analyze-mutable-variables (app if->else exp)) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app analyze-mutable-variables (-> (app if->else exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app if->else (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> if->else <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> analyze-mutable-variables <-) (app if->else exp)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (app if? exp) ((#f) (-> (match (app begin? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  let
  "'(eval (match (app begin? exp) (#f) (_ (-> (let (_) ...) <-))) (env (())))"
  #f
  3
  3
  0
  0
  3
  0
  3
  1
  1
  3
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (let (...\n        ()\n        (_ (-> (app map analyze-mutable-variables (app begin->exps exp)) <-))\n        ()\n        ...)\n    ...)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app map analyze-mutable-variables (-> (app begin->exps exp) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app begin->exps (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> begin->exps <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app map (-> analyze-mutable-variables <-) (app begin->exps exp))\n  (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app (-> map <-) analyze-mutable-variables (app begin->exps exp))\n  (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (let (_) (-> (app void) <-)) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> void <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (app begin? exp) ((#f) (-> (match (app app? exp) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  let
  "'(eval (match (app app? exp) (#f) (_ (-> (let (_) ...) <-))) (env (())))"
  #f
  3
  3
  0
  0
  3
  0
  3
  1
  1
  3
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (let (... () (_ (-> (app map analyze-mutable-variables exp) <-)) () ...) ...)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app map analyze-mutable-variables (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app map (-> analyze-mutable-variables <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> map <-) analyze-mutable-variables exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (let (_) (-> (app void) <-)) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> void <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match\n   (app app? exp)\n   ((#f) (-> (app error \"unknown expression type: \" exp) <-))\n   _)\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app error \"unknown expression type: \" (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval (app error (-> \"unknown expression type: \" <-) exp) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> error <-) \"unknown expression type: \" exp) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app app? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app app? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> app? <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app begin? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app begin? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> begin? <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app if? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app if? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> if? <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app set!? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app set!? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> set!? <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app letrec1? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app letrec1? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> letrec1? <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app let? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app let? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> let? <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app lambda? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app lambda? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> lambda? <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app prim? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app prim? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> prim? <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app ref? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app ref? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> ref? <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app const? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app const? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> const? <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec*\n   (...\n    mark-mutable\n    (is-mutable? (-> (λ (symbol) ...) <-))\n    analyze-mutable-variables\n    ...)\n   ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  letrec*
  "'(eval (λ (symbol) (-> (letrec* (is-in?) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval (letrec* (... () (is-in? (-> (λ (S) ...) <-)) () ...) ...) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval (λ (S) (-> (match (app not (app pair? ...)) ...) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (app not (app pair? S)) (#f) (_ (-> (app #f) <-))) (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  constructor
  "'(eval (app (-> #f <-)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match\n   (app not (app pair? S))\n   ((#f) (-> (match (app eq? (app car ...) symbol) ...) <-))\n   _)\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match (app eq? (app car S) symbol) (#f) (_ (-> (app #t) <-)))\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  constructor
  "'(eval (app (-> #t <-)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match\n   (app eq? (app car S) symbol)\n   ((#f) (-> (app is-in? (app cdr S)) <-))\n   _)\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app is-in? (-> (app cdr S) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app cdr (-> S <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cdr <-) S) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> is-in? <-) (app cdr S)) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app eq? (app car S) symbol) <-) (#f) _) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app eq? (app car S) (-> symbol <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app eq? (-> (app car S) <-) symbol) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app car (-> S <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> car <-) S) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> eq? <-) (app car S) symbol) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app not (app pair? S)) <-) (#f) _) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app not (-> (app pair? S) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app pair? (-> S <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> pair? <-) S) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> not <-) (app pair? S)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (letrec* (is-in?) (-> (app is-in? mutable-variables) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app is-in? (-> mutable-variables <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> is-in? <-) mutable-variables) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec*\n   (...\n    mutable-variables\n    (mark-mutable (-> (λ (symbol) ...) <-))\n    is-mutable?\n    ...)\n   ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (λ (symbol)\n    (-> (app set! mutable-variables (app cons symbol mutable-variables)) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app set! mutable-variables (-> (app cons symbol mutable-variables) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app cons symbol (-> mutable-variables <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app cons (-> symbol <-) mutable-variables) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cons <-) symbol mutable-variables) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app set! (-> mutable-variables <-) (app cons symbol mutable-variables))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app (-> set! <-) mutable-variables (app cons symbol mutable-variables))\n  (env (())))"
  #t
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (letrec*\n   (... begin=>let (mutable-variables (-> (app nil) <-)) mark-mutable ...)\n   ...)\n  (env ()))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec*\n   (... letrec1=>Y (begin=>let (-> (λ (exp) ...) <-)) mutable-variables ...)\n   ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  letrec*
  "'(eval (λ (exp) (-> (letrec* (singlet? ... dummy-bind) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec* (... singlet? (dummy-bind (-> (λ (exps) ...) <-)) () ...) ...)\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval (λ (exps) (-> (match (app singlet? exps) ...) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match (app singlet? exps) (#f) (_ (-> (app car exps) <-)))\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app car (-> exps <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> car <-) exps) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (app singlet? exps) ((#f) (-> (match (app pair? exps) ...) <-)) _)\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match\n   (app pair? exps)\n   (#f)\n   (_ (-> (app cons (app cons 'let (app cons ...)) (app nil)) <-)))\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons 'let (app cons (app cons ...) (app cons ...)))\n   (-> (app nil) <-))\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons 'let (app cons (app cons ...) (app cons ...))) <-)\n   (app nil))\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   'let\n   (->\n    (app\n     cons\n     (app cons (app cons ...) (app nil ...))\n     (app cons (app dummy-bind ...) (app nil ...)))\n    <-))\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons (app cons '$_ (app cons ...)) (app nil))\n   (-> (app cons (app dummy-bind (app cdr ...)) (app nil)) <-))\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app cons (app dummy-bind (app cdr exps)) (-> (app nil) <-))\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app cons (-> (app dummy-bind (app cdr exps)) <-) (app nil))\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app dummy-bind (-> (app cdr exps) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app cdr (-> exps <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cdr <-) exps) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> dummy-bind <-) (app cdr exps)) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app (-> cons <-) (app dummy-bind (app cdr exps)) (app nil))\n  (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons (app cons '$_ (app cons ...)) (app nil)) <-)\n   (app cons (app dummy-bind (app cdr ...)) (app nil)))\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons '$_ (app cons (app car ...) (app nil ...)))\n   (-> (app nil) <-))\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons '$_ (app cons (app car ...) (app nil ...))) <-)\n   (app nil))\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app cons '$_ (-> (app cons (app car exps) (app nil)) <-))\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cons (app car exps) (-> (app nil) <-)) (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cons (-> (app car exps) <-) (app nil)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app car (-> exps <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> car <-) exps) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cons <-) (app car exps) (app nil)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval\n  (app cons (-> '$_ <-) (app cons (app car exps) (app nil)))\n  (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app (-> cons <-) '$_ (app cons (app car exps) (app nil)))\n  (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons '$_ (app cons (app car ...) (app nil ...)))\n   (app nil))\n  (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons (app cons '$_ (app cons ...)) (app nil))\n   (app cons (app dummy-bind (app cdr ...)) (app nil)))\n  (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval\n  (app\n   cons\n   (-> 'let <-)\n   (app\n    cons\n    (app cons (app cons ...) (app nil ...))\n    (app cons (app dummy-bind ...) (app nil ...))))\n  (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   'let\n   (app\n    cons\n    (app cons (app cons ...) (app nil ...))\n    (app cons (app dummy-bind ...) (app nil ...))))\n  (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons 'let (app cons (app cons ...) (app cons ...)))\n   (app nil))\n  (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match (app pair? exps) ((#f) (-> (app error \"no-match\") <-)) _)\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval (app error (-> \"no-match\" <-)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> error <-) \"no-match\") (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app pair? exps) <-) (#f) _) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app pair? (-> exps <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> pair? <-) exps) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app singlet? exps) <-) (#f) _) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app singlet? (-> exps <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> singlet? <-) exps) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec* (... () (singlet? (-> (λ (l) ...) <-)) dummy-bind ...) ...)\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval (λ (l) (-> (match (app list? l) ...) <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (app list? l) (#f) (_ (-> (match (app = (app length ...) 1) ...) <-)))\n  (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match (app = (app length l) 1) (#f) (_ (-> (app #t) <-)))\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  constructor
  "'(eval (app (-> #t <-)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match (app = (app length l) 1) ((#f) (-> (app #f) <-)) _)\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  constructor
  "'(eval (app (-> #f <-)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app = (app length l) 1) <-) (#f) _) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  number
  "'(eval (app = (app length l) (-> 1 <-)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app = (-> (app length l) <-) 1) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app length (-> l <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> length <-) l) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> = <-) (app length l) 1) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (app list? l) ((#f) (-> (app #f) <-)) _) (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  constructor
  "'(eval (app (-> #f <-)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app list? l) <-) (#f) _) (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app list? (-> l <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> list? <-) l) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (letrec*\n   (singlet? ... dummy-bind)\n   (-> (app dummy-bind (app begin->exps exp)) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app dummy-bind (-> (app begin->exps exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app begin->exps (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> begin->exps <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> dummy-bind <-) (app begin->exps exp)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec* (... Yn (letrec1=>Y (-> (λ (exp) ...) <-)) begin=>let ...) ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval (λ (exp) (-> (match (app letrec1? exp) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  let*
  "'(eval\n  (match (app letrec1? exp) (#f) (_ (-> (let* (binding ... num-args) ...) <-)))\n  (env (())))"
  #f
  3
  3
  0
  0
  3
  0
  3
  1
  1
  3
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (let* (... arg (num-args (-> (app arity arg) <-)) () ...) ...)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app arity (-> arg <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> arity <-) arg) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (let* (... name (arg (-> (app cadr binding) <-)) num-args ...) ...)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app cadr (-> binding <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cadr <-) binding) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (let* (... binding (name (-> (app car binding) <-)) arg ...) ...)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app car (-> binding <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> car <-) binding) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (let* (... () (binding (-> (app letrec1->binding exp) <-)) name ...) ...)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app letrec1->binding (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> letrec1->binding <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (let* (binding ... num-args)\n    (-> (app cons (app cons 'let (app cons ...)) (app nil)) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons 'let (app cons (app cons ...) (app cons ...)))\n   (-> (app nil) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons 'let (app cons (app cons ...) (app cons ...))) <-)\n   (app nil))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   'let\n   (->\n    (app\n     cons\n     (app cons (app cons ...) (app nil ...))\n     (app cons (app letrec1->exp ...) (app nil ...)))\n    <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons (app cons name (app cons ...)) (app nil))\n   (-> (app cons (app letrec1->exp exp) (app nil)) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cons (app letrec1->exp exp) (-> (app nil) <-)) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cons (-> (app letrec1->exp exp) <-) (app nil)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app letrec1->exp (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> letrec1->exp <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cons <-) (app letrec1->exp exp) (app nil)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons (app cons name (app cons ...)) (app nil)) <-)\n   (app cons (app letrec1->exp exp) (app nil)))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons name (app cons (app cons ...) (app nil ...)))\n   (-> (app nil) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons name (app cons (app cons ...) (app nil ...))) <-)\n   (app nil))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   name\n   (-> (app cons (app cons (app Yn ...) (app cons ...)) (app nil)) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons (app Yn num-args) (app cons (app cons ...) (app nil ...)))\n   (-> (app nil) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons (app Yn num-args) (app cons (app cons ...) (app nil ...))) <-)\n   (app nil))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app Yn num-args)\n   (-> (app cons (app cons 'lambda (app cons ...)) (app nil)) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons 'lambda (app cons (app cons ...) (app cons ...)))\n   (-> (app nil) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons 'lambda (app cons (app cons ...) (app cons ...))) <-)\n   (app nil))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   'lambda\n   (->\n    (app cons (app cons name (app nil ...)) (app cons arg (app nil ...)))\n    <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app cons (app cons name (app nil)) (-> (app cons arg (app nil)) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cons arg (-> (app nil) <-)) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app cons (-> arg <-) (app nil)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cons <-) arg (app nil)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app cons (-> (app cons name (app nil)) <-) (app cons arg (app nil)))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cons name (-> (app nil) <-)) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app cons (-> name <-) (app nil)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cons <-) name (app nil)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app (-> cons <-) (app cons name (app nil)) (app cons arg (app nil)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval\n  (app\n   cons\n   (-> 'lambda <-)\n   (app cons (app cons name (app nil ...)) (app cons arg (app nil ...))))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   'lambda\n   (app cons (app cons name (app nil ...)) (app cons arg (app nil ...))))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons 'lambda (app cons (app cons ...) (app cons ...)))\n   (app nil))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app Yn num-args) <-)\n   (app cons (app cons 'lambda (app cons ...)) (app nil)))\n  (env (())))"
  #f
  6
  5
  0
  1
  5
  0
  5
  1
  1
  5
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app Yn (-> num-args <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> Yn <-) num-args) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app Yn num-args)\n   (app cons (app cons 'lambda (app cons ...)) (app nil)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons (app Yn num-args) (app cons (app cons ...) (app nil ...)))\n   (app nil))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   cons\n   (-> name <-)\n   (app cons (app cons (app Yn ...) (app cons ...)) (app nil)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   name\n   (app cons (app cons (app Yn ...) (app cons ...)) (app nil)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons name (app cons (app cons ...) (app nil ...)))\n   (app nil))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons (app cons name (app cons ...)) (app nil))\n   (app cons (app letrec1->exp exp) (app nil)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval\n  (app\n   cons\n   (-> 'let <-)\n   (app\n    cons\n    (app cons (app cons ...) (app nil ...))\n    (app cons (app letrec1->exp ...) (app nil ...))))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   'let\n   (app\n    cons\n    (app cons (app cons ...) (app nil ...))\n    (app cons (app letrec1->exp ...) (app nil ...))))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons 'let (app cons (app cons ...) (app cons ...)))\n   (app nil))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (match (app letrec1? exp) ((#f) (-> exp <-)) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app letrec1? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app letrec1? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> letrec1? <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec* (... xargs (Yn (-> (λ (n) ...) <-)) letrec1=>Y ...) ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (λ (n) (-> (app cons (app cons (app cons ...) (app cons ...)) (app nil)) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app\n    cons\n    (app cons 'lambda (app cons ...))\n    (app cons (app cons ...) (app nil ...)))\n   (-> (app nil) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (->\n    (app\n     cons\n     (app cons 'lambda (app cons ...))\n     (app cons (app cons ...) (app nil ...)))\n    <-)\n   (app nil))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons 'lambda (app cons (app cons ...) (app cons ...)))\n   (-> (app cons (app cons 'lambda (app cons ...)) (app nil)) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons 'lambda (app cons (app cons ...) (app cons ...)))\n   (-> (app nil) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons 'lambda (app cons (app cons ...) (app cons ...))) <-)\n   (app nil))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   'lambda\n   (->\n    (app\n     cons\n     (app cons 'h (app nil ...))\n     (app cons (app cons ...) (app nil ...)))\n    <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons 'h (app nil))\n   (-> (app cons (app cons 'lambda (app cons ...)) (app nil)) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons 'lambda (app cons (app cons ...) (app cons ...)))\n   (-> (app nil) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons 'lambda (app cons (app cons ...) (app cons ...))) <-)\n   (app nil))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   'lambda\n   (->\n    (app\n     cons\n     (app cons 'F (app nil ...))\n     (app cons (app cons ...) (app nil ...)))\n    <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons 'F (app nil))\n   (-> (app cons (app cons 'F (app cons ...)) (app nil)) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons 'F (app cons (app cons ...) (app nil ...)))\n   (-> (app nil) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons 'F (app cons (app cons ...) (app nil ...))) <-)\n   (app nil))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app cons 'F (-> (app cons (app cons 'lambda (app cons ...)) (app nil)) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons 'lambda (app cons (app append ...) (app cons ...)))\n   (-> (app nil) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons 'lambda (app cons (app append ...) (app cons ...))) <-)\n   (app nil))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   'lambda\n   (->\n    (app\n     cons\n     (app append (app xargs ...) (app nil ...))\n     (app cons (app cons ...) (app nil ...)))\n    <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app append (app xargs n) (app nil))\n   (-> (app cons (app cons (app cons ...) (app append ...)) (app nil)) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app\n    cons\n    (app cons (app cons ...) (app cons ...))\n    (app append (app xargs ...) (app nil ...)))\n   (-> (app nil) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (->\n    (app\n     cons\n     (app cons (app cons ...) (app cons ...))\n     (app append (app xargs ...) (app nil ...)))\n    <-)\n   (app nil))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons (app cons 'h (app cons ...)) (app cons 'F (app nil ...)))\n   (-> (app append (app xargs n) (app nil)) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app append (app xargs n) (-> (app nil) <-)) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app append (-> (app xargs n) <-) (app nil)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app xargs (-> n <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> xargs <-) n) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> append <-) (app xargs n) (app nil)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons (app cons 'h (app cons ...)) (app cons 'F (app nil ...))) <-)\n   (app append (app xargs n) (app nil)))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons 'h (app cons 'h (app nil ...)))\n   (-> (app cons 'F (app nil)) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cons 'F (-> (app nil) <-)) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app cons (-> 'F <-) (app nil)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cons <-) 'F (app nil)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons 'h (app cons 'h (app nil ...))) <-)\n   (app cons 'F (app nil)))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cons 'h (-> (app cons 'h (app nil)) <-)) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cons 'h (-> (app nil) <-)) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app cons (-> 'h <-) (app nil)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cons <-) 'h (app nil)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app cons (-> 'h <-) (app cons 'h (app nil))) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cons <-) 'h (app cons 'h (app nil))) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons 'h (app cons 'h (app nil ...)))\n   (app cons 'F (app nil)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons (app cons 'h (app cons ...)) (app cons 'F (app nil ...)))\n   (app append (app xargs n) (app nil)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app\n    cons\n    (app cons (app cons ...) (app cons ...))\n    (app append (app xargs ...) (app nil ...)))\n   (app nil))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app append (app xargs n) (app nil)) <-)\n   (app cons (app cons (app cons ...) (app append ...)) (app nil)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app append (app xargs n) (-> (app nil) <-)) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app append (-> (app xargs n) <-) (app nil)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app xargs (-> n <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> xargs <-) n) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> append <-) (app xargs n) (app nil)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app append (app xargs n) (app nil))\n   (app cons (app cons (app cons ...) (app append ...)) (app nil)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval\n  (app\n   cons\n   (-> 'lambda <-)\n   (app\n    cons\n    (app append (app xargs ...) (app nil ...))\n    (app cons (app cons ...) (app nil ...))))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   'lambda\n   (app\n    cons\n    (app append (app xargs ...) (app nil ...))\n    (app cons (app cons ...) (app nil ...))))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons 'lambda (app cons (app append ...) (app cons ...)))\n   (app nil))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval\n  (app cons (-> 'F <-) (app cons (app cons 'lambda (app cons ...)) (app nil)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app (-> cons <-) 'F (app cons (app cons 'lambda (app cons ...)) (app nil)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons 'F (app cons (app cons ...) (app nil ...)))\n   (app nil))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons 'F (app nil)) <-)\n   (app cons (app cons 'F (app cons ...)) (app nil)))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cons 'F (-> (app nil) <-)) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app cons (-> 'F <-) (app nil)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cons <-) 'F (app nil)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons 'F (app nil))\n   (app cons (app cons 'F (app cons ...)) (app nil)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval\n  (app\n   cons\n   (-> 'lambda <-)\n   (app\n    cons\n    (app cons 'F (app nil ...))\n    (app cons (app cons ...) (app nil ...))))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   'lambda\n   (app\n    cons\n    (app cons 'F (app nil ...))\n    (app cons (app cons ...) (app nil ...))))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons 'lambda (app cons (app cons ...) (app cons ...)))\n   (app nil))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons 'h (app nil)) <-)\n   (app cons (app cons 'lambda (app cons ...)) (app nil)))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cons 'h (-> (app nil) <-)) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app cons (-> 'h <-) (app nil)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cons <-) 'h (app nil)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons 'h (app nil))\n   (app cons (app cons 'lambda (app cons ...)) (app nil)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval\n  (app\n   cons\n   (-> 'lambda <-)\n   (app\n    cons\n    (app cons 'h (app nil ...))\n    (app cons (app cons ...) (app nil ...))))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   'lambda\n   (app\n    cons\n    (app cons 'h (app nil ...))\n    (app cons (app cons ...) (app nil ...))))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons 'lambda (app cons (app cons ...) (app cons ...)))\n   (app nil))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons 'lambda (app cons (app cons ...) (app cons ...))) <-)\n   (app cons (app cons 'lambda (app cons ...)) (app nil)))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   'lambda\n   (->\n    (app\n     cons\n     (app cons 'h (app nil ...))\n     (app cons (app cons ...) (app nil ...)))\n    <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons 'h (app nil))\n   (-> (app cons (app cons 'lambda (app cons ...)) (app nil)) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons 'lambda (app cons (app cons ...) (app cons ...)))\n   (-> (app nil) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons 'lambda (app cons (app cons ...) (app cons ...))) <-)\n   (app nil))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   'lambda\n   (->\n    (app\n     cons\n     (app cons 'F (app nil ...))\n     (app cons (app cons ...) (app nil ...)))\n    <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons 'F (app nil))\n   (-> (app cons (app cons 'F (app cons ...)) (app nil)) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons 'F (app cons (app cons ...) (app nil ...)))\n   (-> (app nil) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons 'F (app cons (app cons ...) (app nil ...))) <-)\n   (app nil))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app cons 'F (-> (app cons (app cons 'lambda (app cons ...)) (app nil)) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons 'lambda (app cons (app append ...) (app cons ...)))\n   (-> (app nil) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons 'lambda (app cons (app append ...) (app cons ...))) <-)\n   (app nil))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   'lambda\n   (->\n    (app\n     cons\n     (app append (app xargs ...) (app nil ...))\n     (app cons (app cons ...) (app nil ...)))\n    <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app append (app xargs n) (app nil))\n   (-> (app cons (app cons (app cons ...) (app append ...)) (app nil)) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app\n    cons\n    (app cons (app cons ...) (app cons ...))\n    (app append (app xargs ...) (app nil ...)))\n   (-> (app nil) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (->\n    (app\n     cons\n     (app cons (app cons ...) (app cons ...))\n     (app append (app xargs ...) (app nil ...)))\n    <-)\n   (app nil))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons (app cons 'h (app cons ...)) (app cons 'F (app nil ...)))\n   (-> (app append (app xargs n) (app nil)) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app append (app xargs n) (-> (app nil) <-)) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app append (-> (app xargs n) <-) (app nil)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app xargs (-> n <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> xargs <-) n) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> append <-) (app xargs n) (app nil)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons (app cons 'h (app cons ...)) (app cons 'F (app nil ...))) <-)\n   (app append (app xargs n) (app nil)))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons 'h (app cons 'h (app nil ...)))\n   (-> (app cons 'F (app nil)) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cons 'F (-> (app nil) <-)) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app cons (-> 'F <-) (app nil)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cons <-) 'F (app nil)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons 'h (app cons 'h (app nil ...))) <-)\n   (app cons 'F (app nil)))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cons 'h (-> (app cons 'h (app nil)) <-)) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cons 'h (-> (app nil) <-)) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app cons (-> 'h <-) (app nil)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cons <-) 'h (app nil)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app cons (-> 'h <-) (app cons 'h (app nil))) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cons <-) 'h (app cons 'h (app nil))) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons 'h (app cons 'h (app nil ...)))\n   (app cons 'F (app nil)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons (app cons 'h (app cons ...)) (app cons 'F (app nil ...)))\n   (app append (app xargs n) (app nil)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app\n    cons\n    (app cons (app cons ...) (app cons ...))\n    (app append (app xargs ...) (app nil ...)))\n   (app nil))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app append (app xargs n) (app nil)) <-)\n   (app cons (app cons (app cons ...) (app append ...)) (app nil)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app append (app xargs n) (-> (app nil) <-)) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app append (-> (app xargs n) <-) (app nil)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app xargs (-> n <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> xargs <-) n) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> append <-) (app xargs n) (app nil)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app append (app xargs n) (app nil))\n   (app cons (app cons (app cons ...) (app append ...)) (app nil)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval\n  (app\n   cons\n   (-> 'lambda <-)\n   (app\n    cons\n    (app append (app xargs ...) (app nil ...))\n    (app cons (app cons ...) (app nil ...))))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   'lambda\n   (app\n    cons\n    (app append (app xargs ...) (app nil ...))\n    (app cons (app cons ...) (app nil ...))))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons 'lambda (app cons (app append ...) (app cons ...)))\n   (app nil))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval\n  (app cons (-> 'F <-) (app cons (app cons 'lambda (app cons ...)) (app nil)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app (-> cons <-) 'F (app cons (app cons 'lambda (app cons ...)) (app nil)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons 'F (app cons (app cons ...) (app nil ...)))\n   (app nil))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons 'F (app nil)) <-)\n   (app cons (app cons 'F (app cons ...)) (app nil)))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cons 'F (-> (app nil) <-)) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app cons (-> 'F <-) (app nil)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cons <-) 'F (app nil)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons 'F (app nil))\n   (app cons (app cons 'F (app cons ...)) (app nil)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval\n  (app\n   cons\n   (-> 'lambda <-)\n   (app\n    cons\n    (app cons 'F (app nil ...))\n    (app cons (app cons ...) (app nil ...))))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   'lambda\n   (app\n    cons\n    (app cons 'F (app nil ...))\n    (app cons (app cons ...) (app nil ...))))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons 'lambda (app cons (app cons ...) (app cons ...)))\n   (app nil))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons 'h (app nil)) <-)\n   (app cons (app cons 'lambda (app cons ...)) (app nil)))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cons 'h (-> (app nil) <-)) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app cons (-> 'h <-) (app nil)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cons <-) 'h (app nil)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons 'h (app nil))\n   (app cons (app cons 'lambda (app cons ...)) (app nil)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval\n  (app\n   cons\n   (-> 'lambda <-)\n   (app\n    cons\n    (app cons 'h (app nil ...))\n    (app cons (app cons ...) (app nil ...))))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   'lambda\n   (app\n    cons\n    (app cons 'h (app nil ...))\n    (app cons (app cons ...) (app nil ...))))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons 'lambda (app cons (app cons ...) (app cons ...)))\n   (app cons (app cons 'lambda (app cons ...)) (app nil)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app\n    cons\n    (app cons 'lambda (app cons ...))\n    (app cons (app cons ...) (app nil ...)))\n   (app nil))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval (letrec* (... arity (xargs (-> (λ (n) ...) <-)) Yn ...) ...) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval (λ (n) (-> (match (app <= n 0) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (app <= n 0) (#f) (_ (-> (app nil) <-))) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match\n   (app <= n 0)\n   ((#f)\n    (->\n     (app\n      cons\n      (app string->symbol (app string-append ...))\n      (app xargs (app - ...)))\n     <-))\n   _)\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app string->symbol (app string-append \"x\" (app number->string ...)))\n   (-> (app xargs (app - n 1)) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app xargs (-> (app - n 1) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  number
  "'(eval (app - n (-> 1 <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app - (-> n <-) 1) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> - <-) n 1) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> xargs <-) (app - n 1)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (->\n    (app string->symbol (app string-append \"x\" (app number->string ...)))\n    <-)\n   (app xargs (app - n 1)))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app string->symbol (-> (app string-append \"x\" (app number->string n)) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app string-append \"x\" (-> (app number->string n) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app number->string (-> n <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> number->string <-) n) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  string
  "'(eval (app string-append (-> \"x\" <-) (app number->string n)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> string-append <-) \"x\" (app number->string n)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app (-> string->symbol <-) (app string-append \"x\" (app number->string n)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app string->symbol (app string-append \"x\" (app number->string ...)))\n   (app xargs (app - n 1)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app <= n 0) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  number
  "'(eval (app <= n (-> 0 <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app <= (-> n <-) 0) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> <= <-) n 0) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec* (... let=>lambda (arity (-> (λ (lam) ...) <-)) xargs ...) ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (λ (lam) (-> (app length (app lambda->formals lam)) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app length (-> (app lambda->formals lam) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app lambda->formals (-> lam <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> lambda->formals <-) lam) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> length <-) (app lambda->formals lam)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec* (... set!-exp (let=>lambda (-> (λ (exp) ...) <-)) arity ...) ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval (λ (exp) (-> (match (app let? exp) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  let
  "'(eval\n  (match (app let? exp) (#f) (_ (-> (let (vars ... args) ...) <-)))\n  (env (())))"
  #f
  3
  3
  0
  0
  3
  0
  3
  1
  1
  3
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (let (... vars (args (-> (app map cadr (app let->bindings exp)) <-)) () ...)\n    ...)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app map cadr (-> (app let->bindings exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app let->bindings (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> let->bindings <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app map (-> cadr <-) (app let->bindings exp)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> map <-) cadr (app let->bindings exp)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (let (... () (vars (-> (app map car (app let->bindings exp)) <-)) args ...)\n    ...)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app map car (-> (app let->bindings exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app let->bindings (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> let->bindings <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app map (-> car <-) (app let->bindings exp)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> map <-) car (app let->bindings exp)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (let (vars ... args)\n    (-> (app cons (app cons (app cons ...) (app append ...)) (app nil)) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons (app cons 'lambda (app cons ...)) (app append args (app nil ...)))\n   (-> (app nil) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (->\n    (app\n     cons\n     (app cons 'lambda (app cons ...))\n     (app append args (app nil ...)))\n    <-)\n   (app nil))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app cons 'lambda (app cons (app append ...) (app cons ...)))\n   (-> (app append args (app nil)) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app append args (-> (app nil) <-)) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app append (-> args <-) (app nil)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> append <-) args (app nil)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app cons 'lambda (app cons (app append ...) (app cons ...))) <-)\n   (app append args (app nil)))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   'lambda\n   (->\n    (app\n     cons\n     (app append vars (app nil ...))\n     (app cons (app let->exp ...) (app nil ...)))\n    <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (app append vars (app nil))\n   (-> (app cons (app let->exp exp) (app nil)) <-))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cons (app let->exp exp) (-> (app nil) <-)) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cons (-> (app let->exp exp) <-) (app nil)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app let->exp (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> let->exp <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cons <-) (app let->exp exp) (app nil)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app\n   cons\n   (-> (app append vars (app nil)) <-)\n   (app cons (app let->exp exp) (app nil)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app append vars (-> (app nil) <-)) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app append (-> vars <-) (app nil)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> append <-) vars (app nil)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app append vars (app nil))\n   (app cons (app let->exp exp) (app nil)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval\n  (app\n   cons\n   (-> 'lambda <-)\n   (app\n    cons\n    (app append vars (app nil ...))\n    (app cons (app let->exp ...) (app nil ...))))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   'lambda\n   (app\n    cons\n    (app append vars (app nil ...))\n    (app cons (app let->exp ...) (app nil ...))))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons 'lambda (app cons (app append ...) (app cons ...)))\n   (app append args (app nil)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app\n   (-> cons <-)\n   (app cons (app cons 'lambda (app cons ...)) (app append args (app nil ...)))\n   (app nil))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (match (app let? exp) ((#f) (-> exp <-)) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app let? exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app let? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> let? <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec* (... set!-var (set!-exp (-> (λ (exp) ...) <-)) let=>lambda ...) ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (λ (exp) (-> (app caddr exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app caddr (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> caddr <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec* (... set!? (set!-var (-> (λ (exp) ...) <-)) set!-exp ...) ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (λ (exp) (-> (app cadr exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app cadr (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cadr <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec* (... begin->exps (set!? (-> (λ (exp) ...) <-)) set!-var ...) ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (λ (exp) (-> (app tagged-list? 'set! exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app tagged-list? 'set! (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app tagged-list? (-> 'set! <-) exp) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> tagged-list? <-) 'set! exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec* (... begin? (begin->exps (-> (λ (exp) ...) <-)) set!? ...) ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (λ (exp) (-> (app cdr exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app cdr (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cdr <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec* (... prim? (begin? (-> (λ (exp) ...) <-)) begin->exps ...) ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (λ (exp) (-> (app tagged-list? 'begin exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app tagged-list? 'begin (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app tagged-list? (-> 'begin <-) exp) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> tagged-list? <-) 'begin exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec* (... app->args (prim? (-> (λ (exp) ...) <-)) begin? ...) ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval (λ (exp) (-> (match (app eq? exp '+) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (app eq? exp '+) (#f) (_ (-> (app #t) <-))) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  constructor
  "'(eval (app (-> #t <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (app eq? exp '+) ((#f) (-> (match (app eq? exp '-) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (app eq? exp '-) (#f) (_ (-> (app #t) <-))) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  constructor
  "'(eval (app (-> #t <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (app eq? exp '-) ((#f) (-> (match (app eq? exp '*) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (app eq? exp '*) (#f) (_ (-> (app #t) <-))) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  constructor
  "'(eval (app (-> #t <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (app eq? exp '*) ((#f) (-> (match (app eq? exp '=) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (app eq? exp '=) (#f) (_ (-> (app #t) <-))) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  constructor
  "'(eval (app (-> #t <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match (app eq? exp '=) ((#f) (-> (match (app eq? exp 'display) ...) <-)) _)\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (app eq? exp 'display) (#f) (_ (-> (app #t) <-))) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  constructor
  "'(eval (app (-> #t <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (app eq? exp 'display) ((#f) (-> (app #f) <-)) _) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  constructor
  "'(eval (app (-> #f <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app eq? exp 'display) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app eq? exp (-> 'display <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app eq? (-> exp <-) 'display) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> eq? <-) exp 'display) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app eq? exp '=) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app eq? exp (-> '= <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app eq? (-> exp <-) '=) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> eq? <-) exp '=) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app eq? exp '*) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app eq? exp (-> '* <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app eq? (-> exp <-) '*) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> eq? <-) exp '*) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app eq? exp '-) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app eq? exp (-> '- <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app eq? (-> exp <-) '-) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> eq? <-) exp '-) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app eq? exp '+) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app eq? exp (-> '+ <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app eq? (-> exp <-) '+) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> eq? <-) exp '+) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec* (... app->fun (app->args (-> (λ (exp) ...) <-)) prim? ...) ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (λ (exp) (-> (app cdr exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app cdr (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cdr <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec* (... app? (app->fun (-> (λ (exp) ...) <-)) app->args ...) ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (λ (exp) (-> (app car exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app car (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> car <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec* (... if->else (app? (-> (λ (exp) ...) <-)) app->fun ...) ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (λ (exp) (-> (app pair? exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app pair? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> pair? <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec* (... if->then (if->else (-> (λ (exp) ...) <-)) app? ...) ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (λ (exp) (-> (app cadddr exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app cadddr (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cadddr <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec*\n   (... if->condition (if->then (-> (λ (exp) ...) <-)) if->else ...)\n   ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (λ (exp) (-> (app caddr exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app caddr (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> caddr <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec* (... if? (if->condition (-> (λ (exp) ...) <-)) if->then ...) ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (λ (exp) (-> (app cadr exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app cadr (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cadr <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec* (... lambda->exp (if? (-> (λ (exp) ...) <-)) if->condition ...) ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (λ (exp) (-> (app tagged-list? 'if exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app tagged-list? 'if (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app tagged-list? (-> 'if <-) exp) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> tagged-list? <-) 'if exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec*\n   (... lambda->formals (lambda->exp (-> (λ (exp) ...) <-)) if? ...)\n   ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (λ (exp) (-> (app caddr exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app caddr (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> caddr <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec*\n   (... lambda? (lambda->formals (-> (λ (exp) ...) <-)) lambda->exp ...)\n   ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (λ (exp) (-> (app cadr exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app cadr (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cadr <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec*\n   (... letrec1->exp (lambda? (-> (λ (exp) ...) <-)) lambda->formals ...)\n   ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (λ (exp) (-> (app tagged-list? 'lambda exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app tagged-list? 'lambda (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app tagged-list? (-> 'lambda <-) exp) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> tagged-list? <-) 'lambda exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec*\n   (... letrec1->binding (letrec1->exp (-> (λ (exp) ...) <-)) lambda? ...)\n   ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (λ (exp) (-> (app caddr exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app caddr (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> caddr <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec*\n   (... letrec1? (letrec1->binding (-> (λ (exp) ...) <-)) letrec1->exp ...)\n   ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (λ (exp) (-> (app caadr exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app caadr (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> caadr <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec*\n   (... let->exp (letrec1? (-> (λ (exp) ...) <-)) letrec1->binding ...)\n   ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval (λ (exp) (-> (match (app tagged-list? 'letrec exp) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match\n   (app tagged-list? 'letrec exp)\n   (#f)\n   (_ (-> (match (app = (app length ...) 1) ...) <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match (app = (app length (app cadr ...)) 1) (#f) (_ (-> (app #t) <-)))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  constructor
  "'(eval (app (-> #t <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match (app = (app length (app cadr ...)) 1) ((#f) (-> (app #f) <-)) _)\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  constructor
  "'(eval (app (-> #f <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app = (app length (app cadr ...)) 1) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  number
  "'(eval (app = (app length (app cadr exp)) (-> 1 <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app = (-> (app length (app cadr exp)) <-) 1) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app length (-> (app cadr exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app cadr (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cadr <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> length <-) (app cadr exp)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> = <-) (app length (app cadr exp)) 1) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match (app tagged-list? 'letrec exp) ((#f) (-> (app #f) <-)) _)\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  constructor
  "'(eval (app (-> #f <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app tagged-list? 'letrec exp) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app tagged-list? 'letrec (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app tagged-list? (-> 'letrec <-) exp) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> tagged-list? <-) 'letrec exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec*\n   (... let->bindings (let->exp (-> (λ (exp) ...) <-)) letrec1? ...)\n   ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (λ (exp) (-> (app caddr exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app caddr (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> caddr <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec* (... let? (let->bindings (-> (λ (exp) ...) <-)) let->exp ...) ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (λ (exp) (-> (app cadr exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app cadr (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cadr <-) exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec* (... ref? (let? (-> (λ (exp) ...) <-)) let->bindings ...) ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (λ (exp) (-> (app tagged-list? 'let exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app tagged-list? 'let (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  quoted
  "'(eval (app tagged-list? (-> 'let <-) exp) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> tagged-list? <-) 'let exp) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec* (... const? (ref? (-> (λ (exp) ...) <-)) let? ...) ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (λ (exp) (-> (app symbol? exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app symbol? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> symbol? <-) exp) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec*\n   (... integer->char-list (const? (-> (λ (exp) ...) <-)) ref? ...)\n   ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (λ (exp) (-> (app integer? exp) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app integer? (-> exp <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> integer? <-) exp) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec*\n   (... char->natural (integer->char-list (-> (λ (n) ...) <-)) const? ...)\n   ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (λ (n) (-> (app string->list (app number->string n)) <-)) (env (())))"
  #f
  23
  18
  3
  2
  18
  3
  21
  1
  1
  10
  #f
  8/9
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app string->list (-> (app number->string n) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app number->string (-> n <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> number->string <-) n) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> string->list <-) (app number->string n)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec*\n   (...\n    tagged-list?\n    (char->natural (-> (λ (c) ...) <-))\n    integer->char-list\n    ...)\n   ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  let
  "'(eval (λ (c) (-> (let (i) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (let (... () (i (-> (app char->integer c) <-)) () ...) ...) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app char->integer (-> c <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> char->integer <-) c) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval (let (i) (-> (match (app < i 0) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (app < i 0) (#f) (_ (-> (app * -2 i) <-))) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app * -2 (-> i <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  number
  "'(eval (app * (-> -2 <-) i) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> * <-) -2 i) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (app < i 0) ((#f) (-> (app + (app * 2 i) 1) <-)) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  number
  "'(eval (app + (app * 2 i) (-> 1 <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app + (-> (app * 2 i) <-) 1) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app * 2 (-> i <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  number
  "'(eval (app * (-> 2 <-) i) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> * <-) 2 i) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> + <-) (app * 2 i) 1) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app < i 0) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  number
  "'(eval (app < i (-> 0 <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app < (-> i <-) 0) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> < <-) i 0) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec*\n   (... string->list (tagged-list? (-> (λ (tag l) ...) <-)) char->natural ...)\n   ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval (λ (tag l) (-> (match (app pair? l) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (match\n   (app pair? l)\n   (#f)\n   (_ (-> (match (app eq? tag (app car ...)) ...) <-)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (app eq? tag (app car l)) (#f) (_ (-> (app #t) <-))) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  constructor
  "'(eval (app (-> #t <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (app eq? tag (app car l)) ((#f) (-> (app #f) <-)) _) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  constructor
  "'(eval (app (-> #f <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app eq? tag (app car l)) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app eq? tag (-> (app car l) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app car (-> l <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> car <-) l) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app eq? (-> tag <-) (app car l)) (env (())))"
  #f
  14
  7
  7
  0
  7
  7
  14
  1
  1
  6
  #f
  8/7
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> eq? <-) tag (app car l)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (app pair? l) ((#f) (-> (app #f) <-)) _) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  constructor
  "'(eval (app (-> #f <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app pair? l) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app pair? (-> l <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> pair? <-) l) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec*\n   (... append (string->list (-> (λ (s) ...) <-)) tagged-list? ...)\n   ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  letrec*
  "'(eval (λ (s) (-> (letrec* (f) ...) <-)) (env (())))"
  #f
  19
  15
  3
  1
  15
  3
  18
  1
  1
  8
  #f
  14/15
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval (letrec* (... () (f (-> (λ (i) ...) <-)) () ...) ...) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (λ (i) (-> (match (app < i (app string-length ...)) ...) <-))\n  (env (() ())))"
  #f
  14
  11
  3
  0
  11
  3
  14
  1
  1
  6
  #f
  12/11
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match\n   (app < i (app string-length s))\n   (#f)\n   (_ (-> (app cons (app string-ref s i) (app f (app + ...))) <-)))\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app cons (app string-ref s i) (-> (app f (app + i 1)) <-))\n  (env (() ())))"
  #f
  18
  14
  3
  1
  14
  3
  17
  1
  1
  8
  #f
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app f (-> (app + i 1) <-)) (env (() ())))"
  #f
  8
  5
  3
  0
  5
  3
  8
  1
  1
  3
  #f
  7/5
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  number
  "'(eval (app + i (-> 1 <-)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app + (-> i <-) 1) (env (() ())))"
  #f
  8
  5
  3
  0
  5
  3
  8
  1
  1
  3
  #f
  7/5
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> + <-) i 1) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> f <-) (app + i 1)) (env (() ())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app cons (-> (app string-ref s i) <-) (app f (app + i 1)))\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app string-ref s (-> i <-)) (env (() ())))"
  #f
  9
  6
  3
  0
  6
  3
  9
  1
  1
  3
  #f
  3/2
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app string-ref (-> s <-) i) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> string-ref <-) s i) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app (-> cons <-) (app string-ref s i) (app f (app + i 1)))\n  (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match (app < i (app string-length s)) ((#f) (-> (app nil) <-)) _)\n  (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app < i (app string-length s)) <-) (#f) _) (env (() ())))"
  #f
  13
  10
  3
  0
  10
  3
  13
  1
  1
  6
  #f
  6/5
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app < i (-> (app string-length s) <-)) (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app string-length (-> s <-)) (env (() ())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> string-length <-) s) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app < (-> i <-) (app string-length s)) (env (() ())))"
  #f
  9
  6
  3
  0
  6
  3
  9
  1
  1
  3
  #f
  3/2
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> < <-) i (app string-length s)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (letrec* (f) (-> (app f 0) <-)) (env (())))"
  #f
  18
  14
  3
  1
  14
  3
  17
  1
  1
  8
  #f
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  number
  "'(eval (app f (-> 0 <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> f <-) 0) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec* (... map (append (-> (λ (lst1 lst2) ...) <-)) string->list ...) ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval\n  (λ (lst1 lst2) (-> (match (app not (app pair? ...)) ...) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (match (app not (app pair? lst1)) (#f) (_ (-> lst2 <-))) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match\n   (app not (app pair? lst1))\n   ((#f) (-> (app cons (app car lst1) (app append (app cdr ...) lst2)) <-))\n   _)\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app cons (app car lst1) (-> (app append (app cdr lst1) lst2) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app append (app cdr lst1) (-> lst2 <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app append (-> (app cdr lst1) <-) lst2) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app cdr (-> lst1 <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cdr <-) lst1) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> append <-) (app cdr lst1) lst2) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app cons (-> (app car lst1) <-) (app append (app cdr lst1) lst2))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app car (-> lst1 <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> car <-) lst1) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app (-> cons <-) (app car lst1) (app append (app cdr lst1) lst2))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app not (app pair? lst1)) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app not (-> (app pair? lst1) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app pair? (-> lst1 <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> pair? <-) lst1) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> not <-) (app pair? lst1)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec* (... cadddr (map (-> (λ (f lst) ...) <-)) append ...) ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval (λ (f lst) (-> (match (app pair? lst) ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match\n   (app pair? lst)\n   (#f)\n   (_ (-> (app cons (app f (app car ...)) (app map f (app cdr ...))) <-)))\n  (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app cons (app f (app car lst)) (-> (app map f (app cdr lst)) <-))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app map f (-> (app cdr lst) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app cdr (-> lst <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cdr <-) lst) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app map (-> f <-) (app cdr lst)) (env (())))"
  #f
  18
  10
  8
  0
  10
  8
  18
  1
  1
  9
  #f
  6/5
  (1 1 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> map <-) f (app cdr lst)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (app cons (-> (app f (app car lst)) <-) (app map f (app cdr lst)))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app f (-> (app car lst) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app car (-> lst <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> car <-) lst) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> f <-) (app car lst)) (env (())))"
  #f
  19
  11
  8
  0
  11
  8
  19
  1
  1
  9
  #f
  15/11
  (1 1 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval\n  (app (-> cons <-) (app f (app car lst)) (app map f (app cdr lst)))\n  (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (app pair? lst) ((#f) (-> (app nil) <-)) _) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> nil <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match (-> (app pair? lst) <-) (#f) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app pair? (-> lst <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> pair? <-) lst) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval (letrec* (... caddr (cadddr (-> (λ (p) ...) <-)) map ...) ...) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (λ (p) (-> (app car (app cdr (app cdr ...))) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app car (-> (app cdr (app cdr (app cdr ...))) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cdr (-> (app cdr (app cdr p)) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cdr (-> (app cdr p) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app cdr (-> p <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cdr <-) p) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cdr <-) (app cdr p)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cdr <-) (app cdr (app cdr p))) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> car <-) (app cdr (app cdr (app cdr ...)))) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec* (... caadr (caddr (-> (λ (p) ...) <-)) cadddr ...) ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (λ (p) (-> (app car (app cdr (app cdr ...))) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app car (-> (app cdr (app cdr p)) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app cdr (-> (app cdr p) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app cdr (-> p <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cdr <-) p) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cdr <-) (app cdr p)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> car <-) (app cdr (app cdr p))) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval (letrec* (... cadr (caadr (-> (λ (p) ...) <-)) caddr ...) ...) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (λ (p) (-> (app car (app car (app cdr ...))) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app car (-> (app car (app cdr p)) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app car (-> (app cdr p) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app cdr (-> p <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cdr <-) p) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> car <-) (app cdr p)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> car <-) (app car (app cdr p))) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval (letrec* (... null? (cadr (-> (λ (p) ...) <-)) caadr ...) ...) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (λ (p) (-> (app car (app cdr p)) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app car (-> (app cdr p) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app cdr (-> p <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> cdr <-) p) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> car <-) (app cdr p)) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec* (... pair? (null? (-> (λ (null?-v) ...) <-)) cadr ...) ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval (λ (null?-v) (-> (match null?-v ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match null?-v (nil) (_ (-> (app #f) <-))) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  constructor
  "'(eval (app (-> #f <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match null?-v ((nil) (-> (app #t) <-)) _) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  constructor
  "'(eval (app (-> #t <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (match (-> null?-v <-) (nil) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec* (... length (pair? (-> (λ (pair?-v) ...) <-)) null? ...) ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval (λ (pair?-v) (-> (match pair?-v ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match pair?-v (cons pair?-c pair?-d) (_ (-> (app #f) <-))) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  constructor
  "'(eval (app (-> #f <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (match pair?-v ((cons pair?-c pair?-d) (-> (app #t) <-)) _) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  constructor
  "'(eval (app (-> #t <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (match (-> pair?-v <-) (cons pair?-c pair?-d) _) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec* (... cdr (length (-> (λ (length-l) ...) <-)) pair? ...) ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval (λ (length-l) (-> (match length-l ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  number
  "'(eval (match length-l (cons length-c length-d) ((nil) (-> 0 <-))) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (match\n   length-l\n   ((cons length-c length-d) (-> (app + 1 (app length length-d)) <-))\n   (nil))\n  (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app + 1 (-> (app length length-d) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app length (-> length-d <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> length <-) length-d) (env (())))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  number
  "'(eval (app + (-> 1 <-) (app length length-d)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> + <-) 1 (app length length-d)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (match (-> length-l <-) (cons length-c length-d) (nil)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval\n  (letrec* (... car (cdr (-> (λ (cdr-v) ...) <-)) length ...) ...)\n  (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval (λ (cdr-v) (-> (match cdr-v ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (match cdr-v ((cons cdr-c cdr-d) (-> cdr-d <-))) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (match (-> cdr-v <-) (cons cdr-c cdr-d)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  lambda
  "'(eval (letrec* (... () (car (-> (λ (car-v) ...) <-)) cdr ...) ...) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  match
  "'(eval (λ (car-v) (-> (match car-v ...) <-)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (match car-v ((cons car-c car-d) (-> car-c <-))) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (match (-> car-v <-) (cons car-c car-d)) (env (())))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  let
  "'(eval (letrec* (car ... input-program) (-> (let (_) ...) <-)) (env ()))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (let (...\n        ()\n        (_ (-> (app analyze-mutable-variables input-program) <-))\n        ()\n        ...)\n    ...)\n  (env ()))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app analyze-mutable-variables (-> input-program <-)) (env ()))"
  #f
  3
  3
  0
  0
  3
  0
  3
  1
  1
  3
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> analyze-mutable-variables <-) input-program) (env ()))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval\n  (let (_) (-> (app display (app java-compile-program input-program)) <-))\n  (env ()))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  app
  "'(eval (app display (-> (app java-compile-program input-program) <-)) (env ()))"
  #f
  #f)
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app java-compile-program (-> input-program <-)) (env ()))"
  #f
  3
  3
  0
  0
  3
  0
  3
  1
  1
  3
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> java-compile-program <-) input-program) (env ()))"
  #t
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  (0 0 0))
'(clean-cache
  scheme2java
  0
  700
  1376
  ref-or-constructor
  "'(eval (app (-> display <-) (app java-compile-program input-program)) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  (0 0 0))
