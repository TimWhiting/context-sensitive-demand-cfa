'(clean-cache
  facehugger
  0
  5
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  63
  47
  12
  4
  47
  12
  59
  1
  1
  24
  #f
  70/47
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  0
  5
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env (())))\""
  31
  20
  9
  2
  20
  9
  29
  1
  1
  12
  #f
  7/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  0
  5
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env (())))\""
  31
  20
  9
  2
  20
  9
  29
  1
  1
  12
  #f
  7/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  0
  5
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env (())))\""
  31
  20
  9
  2
  20
  9
  29
  1
  1
  12
  #f
  7/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  0
  5
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env (())))\""
  18
  8
  9
  1
  8
  9
  17
  1
  1
  6
  #f
  5/4
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  0
  5
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env (())))\""
  18
  8
  9
  1
  8
  9
  17
  1
  1
  6
  #f
  5/4
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  0
  5
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env (())))\""
  19
  9
  9
  1
  9
  9
  18
  1
  1
  6
  #f
  4/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  0
  5
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env (())))\""
  22
  12
  9
  1
  12
  9
  21
  1
  1
  8
  #f
  4/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  0
  5
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env (())))\""
  19
  9
  9
  1
  9
  9
  18
  1
  1
  6
  #f
  4/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  0
  5
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env (())))\""
  31
  20
  9
  2
  20
  9
  29
  1
  1
  12
  #f
  7/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  0
  5
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env (())))\""
  31
  20
  9
  2
  20
  9
  29
  1
  1
  12
  #f
  7/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  0
  5
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env (())))\""
  31
  20
  9
  2
  20
  9
  29
  1
  1
  12
  #f
  7/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  0
  5
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env (())))\""
  18
  8
  9
  1
  8
  9
  17
  1
  1
  6
  #f
  5/4
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  0
  5
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env (())))\""
  18
  8
  9
  1
  8
  9
  17
  1
  1
  6
  #f
  5/4
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  0
  5
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env (())))\""
  19
  9
  9
  1
  9
  9
  18
  1
  1
  6
  #f
  4/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  0
  5
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env (())))\""
  22
  12
  9
  1
  12
  9
  21
  1
  1
  8
  #f
  4/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  0
  5
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env (())))\""
  19
  9
  9
  1
  9
  9
  18
  1
  1
  6
  #f
  4/3
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  0
  5
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env (())))\""
  8
  5
  3
  0
  5
  3
  8
  1
  1
  4
  #f
  6/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  0
  5
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  62
  46
  12
  4
  46
  12
  58
  1
  1
  24
  #f
  34/23
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  0
  5
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  58
  42
  12
  4
  42
  12
  54
  1
  1
  23
  #f
  61/42
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  0
  5
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  12
  8
  3
  1
  8
  3
  11
  1
  1
  6
  #f
  5/4
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  facehugger
  0
  5
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  58
  42
  12
  4
  42
  12
  54
  1
  1
  23
  #f
  61/42
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  facehugger
  0
  5
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  12
  8
  3
  1
  8
  3
  11
  1
  1
  6
  #f
  5/4
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  0
  5
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env (())))\""
  18
  8
  9
  1
  8
  9
  17
  1
  1
  6
  #f
  5/4
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  0
  5
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env (())))\""
  18
  8
  9
  1
  8
  9
  17
  1
  1
  6
  #f
  5/4
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  0
  5
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env (())))\""
  26
  13
  12
  1
  13
  12
  25
  1
  1
  9
  #f
  17/13
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  0
  5
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env (())))\""
  31
  18
  12
  1
  18
  12
  30
  1
  1
  13
  #f
  23/18
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  0
  5
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  33
  19
  12
  2
  19
  12
  31
  1
  1
  13
  #f
  25/19
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  0
  5
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env (())))\""
  34
  20
  12
  2
  20
  12
  32
  1
  1
  13
  #f
  27/20
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  0
  5
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env (())))\""
  37
  23
  12
  2
  23
  12
  35
  1
  1
  15
  #f
  31/23
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  0
  5
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  58
  42
  12
  4
  42
  12
  54
  1
  1
  23
  #f
  61/42
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  0
  5
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env (())))\""
  58
  42
  12
  4
  42
  12
  54
  1
  1
  23
  #f
  61/42
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  0
  5
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env (())))\""
  58
  42
  12
  4
  42
  12
  54
  1
  1
  23
  #f
  61/42
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  0
  5
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env (())))\""
  58
  42
  12
  4
  42
  12
  54
  1
  1
  23
  #f
  61/42
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  0
  5
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  60
  44
  12
  4
  44
  12
  56
  1
  1
  23
  #f
  65/44
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  0
  5
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  63
  47
  12
  4
  47
  12
  59
  1
  1
  24
  #f
  70/47
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  0
  5
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env (())))\""
  63
  47
  12
  4
  47
  12
  59
  1
  1
  24
  #f
  70/47
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  0
  5
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  63
  47
  12
  4
  47
  12
  59
  1
  1
  24
  #f
  70/47
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  0
  5
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env (())))\""
  63
  47
  12
  4
  47
  12
  59
  1
  1
  24
  #f
  70/47
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  0
  5
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env (())))\""
  63
  47
  12
  4
  47
  12
  59
  1
  1
  24
  #f
  70/47
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  0
  5
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env (())))\""
  63
  47
  12
  4
  47
  12
  59
  1
  1
  24
  #f
  70/47
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  0
  5
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env (())))\""
  63
  47
  12
  4
  47
  12
  59
  1
  1
  24
  #f
  70/47
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  0
  5
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env (())))\""
  63
  47
  12
  4
  47
  12
  59
  1
  1
  24
  #f
  70/47
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  0
  5
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env (())))\""
  63
  47
  12
  4
  47
  12
  59
  1
  1
  24
  #f
  70/47
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  0
  5
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  63
  47
  12
  4
  47
  12
  59
  1
  1
  24
  #f
  70/47
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  facehugger
  0
  5
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env (())))\""
  63
  47
  12
  4
  47
  12
  59
  1
  1
  24
  #f
  70/47
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  0
  5
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app f (app - n 1))) <-)) _)\n  (env (())))\""
  31
  20
  9
  2
  20
  9
  29
  1
  1
  12
  #f
  7/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  0
  5
  23
  app
  "\"'(eval (app + (app (app id f) 3) (-> (app (app id g) 4) <-)) (env ()))\""
  58
  42
  12
  4
  42
  12
  54
  1
  1
  23
  #f
  61/42
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  0
  5
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env (())))\""
  58
  42
  12
  4
  42
  12
  54
  1
  1
  23
  #f
  61/42
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  0
  5
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env (())))\""
  58
  42
  12
  4
  42
  12
  54
  1
  1
  23
  #f
  61/42
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  0
  5
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env (())))\""
  58
  42
  12
  4
  42
  12
  54
  1
  1
  23
  #f
  61/42
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  0
  5
  23
  app
  "\"'(eval (match (-> (app <= n 1) <-) (#f) _) (env (())))\""
  58
  42
  12
  4
  42
  12
  54
  1
  1
  23
  #f
  61/42
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  0
  5
  23
  app
  "\"'(eval\n  (match (app <= n 1) ((#f) (-> (app * n (app g (app - n 1))) <-)) _)\n  (env (())))\""
  58
  42
  12
  4
  42
  12
  54
  1
  1
  23
  #f
  61/42
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  0
  5
  23
  ref-or-constructor
  "\"'(eval (app - (-> n <-) 1) (env (())))\""
  58
  42
  12
  4
  42
  12
  54
  1
  1
  23
  #f
  61/42
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  0
  5
  23
  app
  "\"'(eval (app + (-> (app (app id f) 3) <-) (app (app id g) 4)) (env ()))\""
  60
  44
  12
  4
  44
  12
  56
  1
  1
  23
  #f
  65/44
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  0
  5
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app f (app - n 1))) (env (())))\""
  60
  44
  12
  4
  44
  12
  56
  1
  1
  23
  #f
  65/44
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  0
  5
  23
  match
  "\"'(eval (λ (n) (-> (match (app <= n 1) ...) <-)) (env (())))\""
  60
  44
  12
  4
  44
  12
  56
  1
  1
  23
  #f
  65/44
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  0
  5
  23
  app
  "\"'(eval (app g (-> (app - n 1) <-)) (env (())))\""
  60
  44
  12
  4
  44
  12
  56
  1
  1
  23
  #f
  65/44
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  0
  5
  23
  ref-or-constructor
  "\"'(eval (app * (-> n <-) (app g (app - n 1))) (env (())))\""
  60
  44
  12
  4
  44
  12
  56
  1
  1
  23
  #f
  65/44
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  0
  5
  23
  app
  "\"'(eval (app (-> (app id f) <-) 3) (env ()))\""
  60
  44
  12
  4
  44
  12
  56
  1
  1
  23
  #f
  65/44
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  0
  5
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env (())))\""
  60
  44
  12
  4
  44
  12
  56
  1
  1
  23
  #f
  65/44
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  0
  5
  23
  ref-or-constructor
  "\"'(eval (app <= (-> n <-) 1) (env (())))\""
  60
  44
  12
  4
  44
  12
  56
  1
  1
  23
  #f
  65/44
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  0
  5
  23
  app
  "\"'(eval\n  (letrec* (id ... g) (-> (app + (app (app id f) 3) (app (app id g) 4)) <-))\n  (env ()))\""
  62
  46
  12
  4
  46
  12
  58
  1
  1
  24
  #f
  34/23
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  0
  5
  23
  app
  "\"'(eval (app f (-> (app - n 1) <-)) (env (())))\""
  62
  46
  12
  4
  46
  12
  58
  1
  1
  24
  #f
  34/23
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  0
  5
  23
  ref-or-constructor
  "\"'(eval (λ (x) (-> x <-)) (env (())))\""
  62
  46
  12
  4
  46
  12
  58
  1
  1
  24
  #f
  34/23
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  0
  5
  23
  app
  "\"'(eval (app * n (-> (app g (app - n 1)) <-)) (env (())))\""
  62
  46
  12
  4
  46
  12
  58
  1
  1
  24
  #f
  34/23
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  0
  5
  23
  letrec*
  "\"'(eval ((top) letrec* (id ... g) ...) (env ()))\""
  63
  47
  12
  4
  47
  12
  59
  1
  1
  24
  #f
  70/47
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  0
  5
  23
  app
  "\"'(eval (app * n (-> (app f (app - n 1)) <-)) (env (())))\""
  63
  47
  12
  4
  47
  12
  59
  1
  1
  24
  #f
  70/47
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  facehugger
  0
  5
  23
  app
  "\"'(eval (app (-> (app id g) <-) 4) (env ()))\""
  63
  47
  12
  4
  47
  12
  59
  1
  1
  24
  #f
  70/47
  ((0 0 0) (0 0 0) (0 0 0)))
