'(expression: (let ((x (λ (y) y))) (app x 1)))
(list 'query: '(λ (y) (-> y <-)) (flatenv '()))
'(clos/con: ⊥)
'(literals: (1 ⊥ ⊥ ⊥))
(list 'query: '(let (x) (-> (app x 1) <-)) (flatenv '()))
'(clos/con: ⊥)
'(literals: (1 ⊥ ⊥ ⊥))
(list 'query: '(app x (-> 1 <-)) (flatenv '()))
'(clos/con: ⊥)
'(literals: (1 ⊥ ⊥ ⊥))
(list 'query: '(app (-> x <-) 1) (flatenv '()))
'(clos/con: ((λ (y) y)))
'(literals: (⊥ ⊥ ⊥ ⊥))
(list 'query: '(top) (flatenv '()))
'(clos/con: ⊥)
'(literals: (1 ⊥ ⊥ ⊥))
(list 'query: '(let ((-> x = (λ (y) y) <-)) bod) (flatenv '()))
'(clos/con: ((λ (y) y)))
'(literals: (⊥ ⊥ ⊥ ⊥))
