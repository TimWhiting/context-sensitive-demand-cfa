'(clean-cache
  loop2-1
  0
  25
  26
  letrec
  "\"'(eval ((top) letrec (lp1) ...) (env ()))\""
  58
  45
  9
  4
  45
  9
  54
  1
  1
  21
  #f
  23/15
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  loop2-1
  0
  25
  26
  match
  "\"'(eval (λ (i x) (-> (match (app = 0 i) ...) <-)) (env (())))\""
  55
  42
  9
  4
  42
  9
  51
  1
  1
  20
  #f
  32/21
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (match (app = 0 i) (#f) (_ (-> x <-))) (env (())))\""
  32
  21
  9
  2
  21
  9
  30
  1
  1
  11
  #f
  31/21
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  loop2-1
  0
  25
  26
  letrec
  "\"'(eval (match (app = 0 i) ((#f) (-> (letrec (lp2) ...) <-)) _) (env (())))\""
  55
  42
  9
  4
  42
  9
  51
  1
  1
  20
  #f
  32/21
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  loop2-1
  0
  25
  26
  match
  "\"'(eval (λ (j f y) (-> (match (app = 0 j) ...) <-)) (env (() ())))\""
  55
  42
  9
  4
  42
  9
  51
  1
  1
  20
  #f
  32/21
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  loop2-1
  0
  25
  26
  app
  "\"'(eval\n  (match (app = 0 j) (#f) (_ (-> (app lp1 (app - i 1) y) <-)))\n  (env (() ())))\""
  55
  42
  9
  4
  42
  9
  51
  1
  1
  20
  #f
  32/21
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app lp1 (app - i 1) (-> y <-)) (env (() ())))\""
  31
  20
  9
  2
  20
  9
  29
  1
  1
  11
  #f
  29/20
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  loop2-1
  0
  25
  26
  app
  "\"'(eval (app lp1 (-> (app - i 1) <-) y) (env (() ())))\""
  8
  5
  3
  0
  5
  3
  8
  1
  1
  3
  #f
  7/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app - (-> i <-) 1) (env (() ())))\""
  8
  5
  3
  0
  5
  3
  8
  1
  1
  3
  #f
  7/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  loop2-1
  0
  25
  26
  app
  "\"'(eval\n  (match (app = 0 j) ((#f) (-> (app lp2 (app - j 1) f (app f y)) <-)) _)\n  (env (() ())))\""
  55
  42
  9
  4
  42
  9
  51
  1
  1
  20
  #f
  32/21
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  loop2-1
  0
  25
  26
  app
  "\"'(eval (app lp2 (app - j 1) f (-> (app f y) <-)) (env (() ())))\""
  31
  20
  9
  2
  20
  9
  29
  1
  1
  11
  #f
  29/20
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app f (-> y <-)) (env (() ())))\""
  31
  20
  9
  2
  20
  9
  29
  1
  1
  11
  #f
  29/20
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app (-> f <-) y) (env (() ())))\""
  6
  3
  3
  0
  3
  3
  6
  1
  1
  3
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app lp2 (app - j 1) (-> f <-) (app f y)) (env (() ())))\""
  5
  2
  3
  0
  2
  3
  5
  1
  1
  2
  #t
  1
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  loop2-1
  0
  25
  26
  app
  "\"'(eval (app lp2 (-> (app - j 1) <-) f (app f y)) (env (() ())))\""
  8
  5
  3
  0
  5
  3
  8
  1
  1
  3
  #f
  7/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app - (-> j <-) 1) (env (() ())))\""
  8
  5
  3
  0
  5
  3
  8
  1
  1
  3
  #f
  7/5
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  loop2-1
  0
  25
  26
  app
  "\"'(eval (match (-> (app = 0 j) <-) (#f) _) (env (() ())))\""
  12
  9
  3
  0
  9
  3
  12
  1
  1
  5
  #f
  13/9
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app = 0 (-> j <-)) (env (() ())))\""
  9
  6
  3
  0
  6
  3
  9
  1
  1
  3
  #f
  3/2
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  loop2-1
  0
  25
  26
  app
  "\"'(eval (letrec (lp2) (-> (app lp2 10 (λ (n) ...) x) <-)) (env (())))\""
  55
  42
  9
  4
  42
  9
  51
  1
  1
  20
  #f
  32/21
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app lp2 10 (λ (n) ...) (-> x <-)) (env (())))\""
  31
  20
  9
  2
  20
  9
  29
  1
  1
  11
  #f
  29/20
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  loop2-1
  0
  25
  26
  app
  "\"'(eval (λ (n) (-> (app + n i) <-)) (env (() ())))\""
  31
  20
  9
  2
  20
  9
  29
  1
  1
  11
  #f
  29/20
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app + n (-> i <-)) (env (() ())))\""
  9
  6
  3
  0
  6
  3
  9
  1
  1
  3
  #f
  3/2
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app + (-> n <-) i) (env (() ())))\""
  31
  20
  9
  2
  20
  9
  29
  1
  1
  11
  #f
  29/20
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(clean-cache
  loop2-1
  0
  25
  26
  app
  "\"'(eval (match (-> (app = 0 i) <-) (#f) _) (env (())))\""
  12
  9
  3
  0
  9
  3
  12
  1
  1
  5
  #f
  13/9
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app = 0 (-> i <-)) (env (())))\""
  9
  6
  3
  0
  6
  3
  9
  1
  1
  3
  #f
  3/2
  ((0 0 0) (0 0 0) (0 0 0)))
'(clean-cache
  loop2-1
  0
  25
  26
  app
  "\"'(eval (letrec (lp1) (-> (app lp1 10 0) <-)) (env ()))\""
  57
  44
  9
  4
  44
  9
  53
  1
  1
  21
  #f
  67/44
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  loop2-1
  0
  25
  26
  app
  "\"'(eval (app lp2 (app - j 1) f (-> (app f y) <-)) (env (() ())))\""
  31
  20
  9
  2
  20
  9
  29
  1
  1
  11
  #f
  29/20
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  0
  loop2-1
  0
  25
  26
  app
  "\"'(eval (app lp2 (-> (app - j 1) <-) f (app f y)) (env (() ())))\""
  36
  25
  9
  2
  25
  9
  34
  1
  1
  14
  #f
  36/25
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  loop2-1
  0
  25
  26
  app
  "\"'(eval (app lp1 (-> (app - i 1) <-) y) (env (() ())))\""
  36
  25
  9
  2
  25
  9
  34
  1
  1
  14
  #f
  36/25
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  loop2-1
  0
  25
  26
  letrec
  "\"'(eval ((top) letrec (lp1) ...) (env ()))\""
  58
  45
  9
  4
  45
  9
  54
  1
  1
  21
  #f
  23/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app f (-> y <-)) (env (() ())))\""
  58
  45
  9
  4
  45
  9
  54
  1
  1
  21
  #f
  23/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  loop2-1
  0
  25
  26
  letrec
  "\"'(eval (match (app = 0 i) ((#f) (-> (letrec (lp2) ...) <-)) _) (env (())))\""
  58
  45
  9
  4
  45
  9
  54
  1
  1
  21
  #f
  23/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app lp1 (app - i 1) (-> y <-)) (env (() ())))\""
  58
  45
  9
  4
  45
  9
  54
  1
  1
  21
  #f
  23/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  loop2-1
  0
  25
  26
  app
  "\"'(eval\n  (match (app = 0 j) (#f) (_ (-> (app lp1 (app - i 1) y) <-)))\n  (env (() ())))\""
  58
  45
  9
  4
  45
  9
  54
  1
  1
  21
  #f
  23/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app - (-> j <-) 1) (env (() ())))\""
  58
  45
  9
  4
  45
  9
  54
  1
  1
  21
  #f
  23/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  loop2-1
  0
  25
  26
  app
  "\"'(eval (letrec (lp1) (-> (app lp1 10 0) <-)) (env ()))\""
  58
  45
  9
  4
  45
  9
  54
  1
  1
  21
  #f
  23/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app - (-> i <-) 1) (env (() ())))\""
  58
  45
  9
  4
  45
  9
  54
  1
  1
  21
  #f
  23/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  loop2-1
  0
  25
  26
  app
  "\"'(eval (letrec (lp2) (-> (app lp2 10 (λ (n) ...) x) <-)) (env (())))\""
  58
  45
  9
  4
  45
  9
  54
  1
  1
  21
  #f
  23/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app = 0 (-> j <-)) (env (() ())))\""
  58
  45
  9
  4
  45
  9
  54
  1
  1
  21
  #f
  23/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app = 0 (-> i <-)) (env (())))\""
  58
  45
  9
  4
  45
  9
  54
  1
  1
  21
  #f
  23/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (match (app = 0 i) (#f) (_ (-> x <-))) (env (())))\""
  58
  45
  9
  4
  45
  9
  54
  1
  1
  21
  #f
  23/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  loop2-1
  0
  25
  26
  app
  "\"'(eval (match (-> (app = 0 j) <-) (#f) _) (env (() ())))\""
  58
  45
  9
  4
  45
  9
  54
  1
  1
  21
  #f
  23/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app + (-> n <-) i) (env (() ())))\""
  58
  45
  9
  4
  45
  9
  54
  1
  1
  21
  #f
  23/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app lp2 (app - j 1) (-> f <-) (app f y)) (env (() ())))\""
  58
  45
  9
  4
  45
  9
  54
  1
  1
  21
  #t
  23/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  loop2-1
  0
  25
  26
  match
  "\"'(eval (λ (j f y) (-> (match (app = 0 j) ...) <-)) (env (() ())))\""
  58
  45
  9
  4
  45
  9
  54
  1
  1
  21
  #f
  23/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app lp2 10 (λ (n) ...) (-> x <-)) (env (())))\""
  58
  45
  9
  4
  45
  9
  54
  1
  1
  21
  #f
  23/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  loop2-1
  0
  25
  26
  app
  "\"'(eval\n  (match (app = 0 j) ((#f) (-> (app lp2 (app - j 1) f (app f y)) <-)) _)\n  (env (() ())))\""
  58
  45
  9
  4
  45
  9
  54
  1
  1
  21
  #f
  23/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  loop2-1
  0
  25
  26
  match
  "\"'(eval (λ (i x) (-> (match (app = 0 i) ...) <-)) (env (())))\""
  58
  45
  9
  4
  45
  9
  54
  1
  1
  21
  #f
  23/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app (-> f <-) y) (env (() ())))\""
  58
  45
  9
  4
  45
  9
  54
  1
  1
  21
  #t
  23/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  loop2-1
  0
  25
  26
  app
  "\"'(eval (match (-> (app = 0 i) <-) (#f) _) (env (())))\""
  58
  45
  9
  4
  45
  9
  54
  1
  1
  21
  #f
  23/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  loop2-1
  0
  25
  26
  app
  "\"'(eval (λ (n) (-> (app + n i) <-)) (env (() ())))\""
  58
  45
  9
  4
  45
  9
  54
  1
  1
  21
  #f
  23/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  0
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app + n (-> i <-)) (env (() ())))\""
  58
  45
  9
  4
  45
  9
  54
  1
  1
  21
  #f
  23/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app lp1 (app - i 1) (-> y <-)) (env (() ())))\""
  31
  20
  9
  2
  20
  9
  29
  1
  1
  11
  #f
  29/20
  ((1/2 1/2 0) (1/2 1/2 0) (1/2 1/2 0)))
'(shuffled-cache
  1
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app (-> f <-) y) (env (() ())))\""
  31
  20
  9
  2
  20
  9
  29
  1
  1
  11
  #t
  29/20
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (match (app = 0 i) (#f) (_ (-> x <-))) (env (())))\""
  32
  21
  9
  2
  21
  9
  30
  1
  1
  11
  #f
  31/21
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  loop2-1
  0
  25
  26
  app
  "\"'(eval (letrec (lp2) (-> (app lp2 10 (λ (n) ...) x) <-)) (env (())))\""
  55
  42
  9
  4
  42
  9
  51
  1
  1
  20
  #f
  32/21
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  loop2-1
  0
  25
  26
  app
  "\"'(eval (app lp2 (-> (app - j 1) <-) f (app f y)) (env (() ())))\""
  55
  42
  9
  4
  42
  9
  51
  1
  1
  20
  #f
  32/21
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app - (-> i <-) 1) (env (() ())))\""
  55
  42
  9
  4
  42
  9
  51
  1
  1
  20
  #f
  32/21
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  loop2-1
  0
  25
  26
  letrec
  "\"'(eval (match (app = 0 i) ((#f) (-> (letrec (lp2) ...) <-)) _) (env (())))\""
  55
  42
  9
  4
  42
  9
  51
  1
  1
  20
  #f
  32/21
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app lp2 10 (λ (n) ...) (-> x <-)) (env (())))\""
  55
  42
  9
  4
  42
  9
  51
  1
  1
  20
  #f
  32/21
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  loop2-1
  0
  25
  26
  app
  "\"'(eval\n  (match (app = 0 j) (#f) (_ (-> (app lp1 (app - i 1) y) <-)))\n  (env (() ())))\""
  55
  42
  9
  4
  42
  9
  51
  1
  1
  20
  #f
  32/21
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app = 0 (-> j <-)) (env (() ())))\""
  55
  42
  9
  4
  42
  9
  51
  1
  1
  20
  #f
  32/21
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  loop2-1
  0
  25
  26
  app
  "\"'(eval\n  (match (app = 0 j) ((#f) (-> (app lp2 (app - j 1) f (app f y)) <-)) _)\n  (env (() ())))\""
  55
  42
  9
  4
  42
  9
  51
  1
  1
  20
  #f
  32/21
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app f (-> y <-)) (env (() ())))\""
  55
  42
  9
  4
  42
  9
  51
  1
  1
  20
  #f
  32/21
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app = 0 (-> i <-)) (env (())))\""
  55
  42
  9
  4
  42
  9
  51
  1
  1
  20
  #f
  32/21
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  loop2-1
  0
  25
  26
  app
  "\"'(eval (λ (n) (-> (app + n i) <-)) (env (() ())))\""
  55
  42
  9
  4
  42
  9
  51
  1
  1
  20
  #f
  32/21
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  loop2-1
  0
  25
  26
  app
  "\"'(eval (app lp2 (app - j 1) f (-> (app f y) <-)) (env (() ())))\""
  55
  42
  9
  4
  42
  9
  51
  1
  1
  20
  #f
  32/21
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app + (-> n <-) i) (env (() ())))\""
  55
  42
  9
  4
  42
  9
  51
  1
  1
  20
  #f
  32/21
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app - (-> j <-) 1) (env (() ())))\""
  55
  42
  9
  4
  42
  9
  51
  1
  1
  20
  #f
  32/21
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app + n (-> i <-)) (env (() ())))\""
  55
  42
  9
  4
  42
  9
  51
  1
  1
  20
  #f
  32/21
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  loop2-1
  0
  25
  26
  app
  "\"'(eval (letrec (lp1) (-> (app lp1 10 0) <-)) (env ()))\""
  57
  44
  9
  4
  44
  9
  53
  1
  1
  21
  #f
  67/44
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  loop2-1
  0
  25
  26
  app
  "\"'(eval (match (-> (app = 0 j) <-) (#f) _) (env (() ())))\""
  57
  44
  9
  4
  44
  9
  53
  1
  1
  21
  #f
  67/44
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  loop2-1
  0
  25
  26
  app
  "\"'(eval (match (-> (app = 0 i) <-) (#f) _) (env (())))\""
  57
  44
  9
  4
  44
  9
  53
  1
  1
  21
  #f
  67/44
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  loop2-1
  0
  25
  26
  match
  "\"'(eval (λ (j f y) (-> (match (app = 0 j) ...) <-)) (env (() ())))\""
  57
  44
  9
  4
  44
  9
  53
  1
  1
  21
  #f
  67/44
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  loop2-1
  0
  25
  26
  app
  "\"'(eval (app lp1 (-> (app - i 1) <-) y) (env (() ())))\""
  57
  44
  9
  4
  44
  9
  53
  1
  1
  21
  #f
  67/44
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  loop2-1
  0
  25
  26
  letrec
  "\"'(eval ((top) letrec (lp1) ...) (env ()))\""
  58
  45
  9
  4
  45
  9
  54
  1
  1
  21
  #f
  23/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  loop2-1
  0
  25
  26
  ref-or-constructor
  "\"'(eval (app lp2 (app - j 1) (-> f <-) (app f y)) (env (() ())))\""
  58
  45
  9
  4
  45
  9
  54
  1
  1
  21
  #t
  23/15
  ((0 0 0) (0 0 0) (0 0 0)))
'(shuffled-cache
  1
  loop2-1
  0
  25
  26
  match
  "\"'(eval (λ (i x) (-> (match (app = 0 i) ...) <-)) (env (())))\""
  58
  45
  9
  4
  45
  9
  54
  1
  1
  21
  #f
  23/15
  ((0 0 0) (0 0 0) (0 0 0)))
