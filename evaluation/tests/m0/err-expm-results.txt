'(expression: (app (λ (x) (app x x)) 2))
(list 'query: '(app (-> x <-) x) (expenv '(())))
'(clos/con: ⊥)
'(literals: (2 ⊥ ⊥ ⊥))
(list 'query: '(app (λ (x) (app x x)) (-> 2 <-)) (expenv '()))
'(clos/con: ⊥)
'(literals: (2 ⊥ ⊥ ⊥))
(list 'query: '(top) (expenv '()))
'(clos/con: ⊥)
'(literals: (⊥ ⊥ ⊥ ⊥))
(list 'query: '(app (-> (λ (x) (app x x)) <-) 2) (expenv '()))
(list 'clos/con: (list (list '(λ (x) (app x x)) (expenv '()))))
'(literals: (⊥ ⊥ ⊥ ⊥))
(list 'query: '(λ (x) (-> (app x x) <-)) (expenv '(())))
'(clos/con: ⊥)
'(literals: (⊥ ⊥ ⊥ ⊥))
