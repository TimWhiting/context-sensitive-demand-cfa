'(expression: (app (λ (x) (app x x)) (λ (y) (app y y))))
(list 'query: '(top) (lenv '()))
'(clos/con: ⊥)
'(literals: (⊥ ⊥ ⊥ ⊥))
(list 'query: '(app (λ (x) (app x x)) (-> (λ (y) (app y y)) <-)) (lenv '()))
'(clos/con: ((λ (y) (app y y))))
'(literals: (⊥ ⊥ ⊥ ⊥))
(list 'query: '(λ (y) (-> (app y y) <-)) (lenv '(())))
'(clos/con: ⊥)
'(literals: (⊥ ⊥ ⊥ ⊥))
(list 'query: '(app y (-> y <-)) (lenv '(())))
'(clos/con: ((λ (y) (app y y))))
'(literals: (⊥ ⊥ ⊥ ⊥))
(list 'query: '(app (-> y <-) y) (lenv '(())))
'(clos/con: ((λ (y) (app y y))))
'(literals: (⊥ ⊥ ⊥ ⊥))
(list 'query: '(app (-> (λ (x) (app x x)) <-) (λ (y) (app y y))) (lenv '()))
'(clos/con: ((λ (x) (app x x))))
'(literals: (⊥ ⊥ ⊥ ⊥))
(list 'query: '(λ (x) (-> (app x x) <-)) (lenv '(())))
'(clos/con: ⊥)
'(literals: (⊥ ⊥ ⊥ ⊥))
(list 'query: '(app x (-> x <-)) (lenv '(())))
'(clos/con: ((λ (y) (app y y))))
'(literals: (⊥ ⊥ ⊥ ⊥))
(list 'query: '(app (-> x <-) x) (lenv '(())))
'(clos/con: ((λ (y) (app y y))))
'(literals: (⊥ ⊥ ⊥ ⊥))
