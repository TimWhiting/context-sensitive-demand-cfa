'(clean-cache
  kcfa-2
  0
  15
  32
  app
  "'(eval ((top) app (λ (f1) ...) (λ (x1) ...)) (env ()))"
  #f
  39
  23
  8
  8
  23
  8
  31
  1
  1
  13
  #f
  33/23
  ((1 1 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  lambda
  "'(eval (app (λ (f1) ...) (-> (λ (x1) ...) <-)) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  app
  "'(eval (λ (x1) (-> (app (λ (f2) ...) (λ (x2) ...)) <-)) (env (())))"
  #f
  31
  18
  7
  6
  18
  7
  25
  1
  1
  11
  #f
  25/18
  ((1 1 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  lambda
  "'(eval (app (λ (f2) ...) (-> (λ (x2) ...) <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  app
  "'(eval (λ (x2) (-> (app (λ (z) ...) (λ (y1 y2) ...)) <-)) (env (() ())))"
  #f
  22
  12
  6
  4
  12
  6
  18
  1
  1
  8
  #f
  4/3
  ((0 0 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  lambda
  "'(eval (app (λ (z) ...) (-> (λ (y1 y2) ...) <-)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  ref-or-constructor
  "'(eval (λ (y1 y2) (-> y1 <-)) (env (() () ())))"
  #f
  15
  8
  5
  2
  8
  5
  13
  1
  1
  6
  #f
  5/4
  ((0 0 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  lambda
  "'(eval (app (-> (λ (z) ...) <-) (λ (y1 y2) ...)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  app
  "'(eval (λ (z) (-> (app z x1 x2) <-)) (env (() () ())))"
  #f
  20
  11
  6
  3
  11
  6
  17
  1
  1
  8
  #f
  14/11
  ((0 0 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  ref-or-constructor
  "'(eval (app z x1 (-> x2 <-)) (env (() () ())))"
  #f
  10
  6
  3
  1
  6
  3
  9
  1
  1
  5
  #f
  7/6
  ((0 0 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  ref-or-constructor
  "'(eval (app z (-> x1 <-) x2) (env (() () ())))"
  #f
  10
  6
  3
  1
  6
  3
  9
  1
  1
  5
  #f
  7/6
  ((0 0 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  ref-or-constructor
  "'(eval (app (-> z <-) x1 x2) (env (() () ())))"
  #f
  3
  2
  1
  0
  2
  1
  3
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  lambda
  "'(eval (app (-> (λ (f2) ...) <-) (λ (x2) ...)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  let
  "'(eval (λ (f2) (-> (let (_) ...) <-)) (env (() ())))"
  #f
  28
  16
  7
  5
  16
  7
  23
  1
  1
  10
  #f
  11/8
  ((0 0 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  app
  "'(eval (let (... () (_ (-> (app f2 (app #t)) <-)) () ...) ...) (env (() ())))"
  #f
  27
  15
  7
  5
  15
  7
  22
  1
  1
  10
  #f
  4/3
  ((0 0 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  app
  "'(eval (app f2 (-> (app #t) <-)) (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  constructor
  "'(eval (app (-> #t <-)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  ref-or-constructor
  "'(eval (app (-> f2 <-) (app #t)) (env (() ())))"
  #f
  3
  2
  1
  0
  2
  1
  3
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  app
  "'(eval (let (_) (-> (app f2 (app #f)) <-)) (env (() ())))"
  #f
  27
  15
  7
  5
  15
  7
  22
  1
  1
  10
  #f
  4/3
  ((0 0 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  app
  "'(eval (app f2 (-> (app #f) <-)) (env (() ())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  constructor
  "'(eval (app (-> #f <-)) (env (() ())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  ref-or-constructor
  "'(eval (app (-> f2 <-) (app #f)) (env (() ())))"
  #f
  3
  2
  1
  0
  2
  1
  3
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  lambda
  "'(eval (app (-> (λ (f1) ...) <-) (λ (x1) ...)) (env ()))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  let
  "'(eval (λ (f1) (-> (let (_) ...) <-)) (env (())))"
  #f
  37
  22
  8
  7
  22
  8
  30
  1
  1
  13
  #f
  31/22
  ((0 0 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  app
  "'(eval (let (... () (_ (-> (app f1 (app #t)) <-)) () ...) ...) (env (())))"
  #f
  36
  21
  8
  7
  21
  8
  29
  1
  1
  13
  #f
  29/21
  ((1 1 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  app
  "'(eval (app f1 (-> (app #t) <-)) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  constructor
  "'(eval (app (-> #t <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  ref-or-constructor
  "'(eval (app (-> f1 <-) (app #t)) (env (())))"
  #f
  3
  2
  1
  0
  2
  1
  3
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  app
  "'(eval (let (_) (-> (app f1 (app #f)) <-)) (env (())))"
  #f
  36
  21
  8
  7
  21
  8
  29
  1
  1
  13
  #f
  29/21
  ((0 0 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  app
  "'(eval (app f1 (-> (app #f) <-)) (env (())))"
  #f
  2
  2
  0
  0
  2
  0
  2
  1
  1
  2
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  constructor
  "'(eval (app (-> #f <-)) (env (())))"
  #t
  1
  1
  0
  0
  1
  0
  1
  1
  1
  1
  #t
  1
  ((0 0 0)))
'(clean-cache
  kcfa-2
  0
  15
  32
  ref-or-constructor
  "'(eval (app (-> f1 <-) (app #f)) (env (())))"
  #f
  3
  2
  1
  0
  2
  1
  3
  1
  1
  2
  #t
  1
  ((0 0 0)))
